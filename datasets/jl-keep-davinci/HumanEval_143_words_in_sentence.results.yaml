name: HumanEval_143_words_in_sentence
language: julia
results:
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    prime_words = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(prime_words,\
    \ word)\n        end\n    end\n    return join(prime_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptvd0_a4i.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n\
    \   [2] top-level scope at /tmp/tmptvd0_a4i.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n\
    \   [2] top-level scope at /tmp/tmptvd0_a4i.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n\
    \   [2] top-level scope at /tmp/tmptvd0_a4i.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n\
    \   [2] top-level scope at /tmp/tmptvd0_a4i.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n   [2] top-level\
    \ scope at /tmp/tmptvd0_a4i.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmptvd0_a4i.jl:24\n   [2] top-level scope at /tmp/tmptvd0_a4i.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptvd0_a4i.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmptvd0_a4i.jl:24\n   [2] top-level\
    \ scope at /tmp/tmptvd0_a4i.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptvd0_a4i.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptvd0_a4i.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoftt43of.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n\
    \   [2] top-level scope at /tmp/tmpoftt43of.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n\
    \   [2] top-level scope at /tmp/tmpoftt43of.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n\
    \   [2] top-level scope at /tmp/tmpoftt43of.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n\
    \   [2] top-level scope at /tmp/tmpoftt43of.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpoftt43of.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpoftt43of.jl:24\n   [2] top-level scope at /tmp/tmpoftt43of.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoftt43of.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpoftt43of.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpoftt43of.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoftt43of.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoftt43of.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprunq07s4.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n\
    \   [2] top-level scope at /tmp/tmprunq07s4.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n\
    \   [2] top-level scope at /tmp/tmprunq07s4.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n\
    \   [2] top-level scope at /tmp/tmprunq07s4.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n\
    \   [2] top-level scope at /tmp/tmprunq07s4.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprunq07s4.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmprunq07s4.jl:24\n   [2] top-level scope at /tmp/tmprunq07s4.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprunq07s4.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmprunq07s4.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprunq07s4.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprunq07s4.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprunq07s4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmper20748l.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n\
    \   [2] top-level scope at /tmp/tmper20748l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n\
    \   [2] top-level scope at /tmp/tmper20748l.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n\
    \   [2] top-level scope at /tmp/tmper20748l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n\
    \   [2] top-level scope at /tmp/tmper20748l.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmper20748l.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmper20748l.jl:24\n   [2] top-level scope at /tmp/tmper20748l.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmper20748l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmper20748l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmper20748l.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper20748l.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmper20748l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    words_prime = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(words_prime, word)\n        end\n    end\n    join(words_prime,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbhc62vds.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n\
    \   [2] top-level scope at /tmp/tmpbhc62vds.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n\
    \   [2] top-level scope at /tmp/tmpbhc62vds.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n\
    \   [2] top-level scope at /tmp/tmpbhc62vds.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n\
    \   [2] top-level scope at /tmp/tmpbhc62vds.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpbhc62vds.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpbhc62vds.jl:24\n   [2] top-level scope at /tmp/tmpbhc62vds.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbhc62vds.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpbhc62vds.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpbhc62vds.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbhc62vds.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhc62vds.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjjw1p797.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjjw1p797.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjjw1p797.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjjw1p797.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjjw1p797.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjjw1p797.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpjjw1p797.jl:24\n   [2] top-level scope at /tmp/tmpjjw1p797.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjjw1p797.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpjjw1p797.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjjw1p797.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjjw1p797.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjw1p797.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkcbw5byl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n\
    \   [2] top-level scope at /tmp/tmpkcbw5byl.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n\
    \   [2] top-level scope at /tmp/tmpkcbw5byl.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n\
    \   [2] top-level scope at /tmp/tmpkcbw5byl.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n\
    \   [2] top-level scope at /tmp/tmpkcbw5byl.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpkcbw5byl.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpkcbw5byl.jl:24\n   [2] top-level scope at /tmp/tmpkcbw5byl.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpkcbw5byl.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpkcbw5byl.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpkcbw5byl.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkcbw5byl.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkcbw5byl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    # your code here\n\
    \    return \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6kr2su8g.jl:29\n  Expression: candidate(\"\
    This is a test\") == \"is\"\n   Evaluated: \"\" == \"is\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6kr2su8g.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\ntest set: Test Failed at /tmp/tmp6kr2su8g.jl:30\n\
    \  Expression: candidate(\"lets go for swimming\") == \"go for\"\n   Evaluated:\
    \ \"\" == \"go for\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6kr2su8g.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\ntest set: Test Failed at /tmp/tmp6kr2su8g.jl:31\n\
    \  Expression: candidate(\"there is no place available here\") == \"there is no\
    \ place\"\n   Evaluated: \"\" == \"there is no place\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6kr2su8g.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\ntest set: Test Failed at /tmp/tmp6kr2su8g.jl:32\n\
    \  Expression: candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\n   Evaluated:\
    \ \"\" == \"Hi am Hussein\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6kr2su8g.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\ntest set: Test Failed at /tmp/tmp6kr2su8g.jl:33\n\
    \  Expression: candidate(\"go for it\") == \"go for it\"\n   Evaluated: \"\" ==\
    \ \"go for it\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6kr2su8g.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\ntest set: Test Failed at /tmp/tmp6kr2su8g.jl:35\n\
    \  Expression: candidate(\"here is\") == \"is\"\n   Evaluated: \"\" == \"is\"\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6kr2su8g.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6kr2su8g.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6kr2su8g.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5ml0hgqt.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5ml0hgqt.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5ml0hgqt.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5ml0hgqt.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5ml0hgqt.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5ml0hgqt.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp5ml0hgqt.jl:24\n   [2] top-level scope at /tmp/tmp5ml0hgqt.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ml0hgqt.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp5ml0hgqt.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5ml0hgqt.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ml0hgqt.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ml0hgqt.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8xkfka_u.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8xkfka_u.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8xkfka_u.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8xkfka_u.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8xkfka_u.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8xkfka_u.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp8xkfka_u.jl:24\n   [2] top-level scope at /tmp/tmp8xkfka_u.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xkfka_u.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp8xkfka_u.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8xkfka_u.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xkfka_u.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8xkfka_u.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    prime_words = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(prime_words,\
    \ word)\n        end\n    end\n    return join(prime_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppn_huk0f.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n\
    \   [2] top-level scope at /tmp/tmppn_huk0f.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n\
    \   [2] top-level scope at /tmp/tmppn_huk0f.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n\
    \   [2] top-level scope at /tmp/tmppn_huk0f.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n\
    \   [2] top-level scope at /tmp/tmppn_huk0f.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppn_huk0f.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmppn_huk0f.jl:24\n   [2] top-level scope at /tmp/tmppn_huk0f.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppn_huk0f.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmppn_huk0f.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppn_huk0f.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppn_huk0f.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppn_huk0f.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    words_prime = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(words_prime, word)\n        end\n    end\n    return join(words_prime,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4jnlvqiz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4jnlvqiz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4jnlvqiz.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4jnlvqiz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4jnlvqiz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp4jnlvqiz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp4jnlvqiz.jl:24\n   [2] top-level scope at /tmp/tmp4jnlvqiz.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jnlvqiz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp4jnlvqiz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp4jnlvqiz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jnlvqiz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4jnlvqiz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdybibd1v.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdybibd1v.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdybibd1v.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdybibd1v.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdybibd1v.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpdybibd1v.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpdybibd1v.jl:24\n   [2] top-level scope at /tmp/tmpdybibd1v.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdybibd1v.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpdybibd1v.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpdybibd1v.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdybibd1v.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdybibd1v.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcw8u09l9.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpcw8u09l9.jl:24\\n   [2] top-level scope at /tmp/tmpcw8u09l9.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpcw8u09l9.jl:24\\\
    n   [2] top-level scope at /tmp/tmpcw8u09l9.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpcw8u09l9.jl:24\\n   [2] top-level scope at /tmp/tmpcw8u09l9.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpcw8u09l9.jl:24\\\
    n   [2] top-level scope at /tmp/tmpcw8u09l9.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpcw8u09l9.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpcw8u09l9.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpcw8u09l9.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpcw8u09l9.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw8u09l9.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpcw8u09l9.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpcw8u09l9.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw8u09l9.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu2st7x9d.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpu2st7x9d.jl:24\\n   [2] top-level scope at /tmp/tmpu2st7x9d.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpu2st7x9d.jl:24\\\
    n   [2] top-level scope at /tmp/tmpu2st7x9d.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpu2st7x9d.jl:24\\n   [2] top-level scope at /tmp/tmpu2st7x9d.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpu2st7x9d.jl:24\\\
    n   [2] top-level scope at /tmp/tmpu2st7x9d.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpu2st7x9d.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpu2st7x9d.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpu2st7x9d.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpu2st7x9d.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpu2st7x9d.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpu2st7x9d.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpu2st7x9d.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpu2st7x9d.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpidn2y6gy.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpidn2y6gy.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpidn2y6gy.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpidn2y6gy.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpidn2y6gy.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpidn2y6gy.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpidn2y6gy.jl:24\n   [2] top-level scope at /tmp/tmpidn2y6gy.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpidn2y6gy.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpidn2y6gy.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpidn2y6gy.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpidn2y6gy.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpidn2y6gy.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn87m7z8l.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn87m7z8l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn87m7z8l.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn87m7z8l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn87m7z8l.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn87m7z8l.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpn87m7z8l.jl:24\n   [2] top-level scope at /tmp/tmpn87m7z8l.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn87m7z8l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpn87m7z8l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn87m7z8l.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn87m7z8l.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn87m7z8l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0jscosac.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp0jscosac.jl:24\\n   [2] top-level scope at /tmp/tmp0jscosac.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp0jscosac.jl:24\\\
    n   [2] top-level scope at /tmp/tmp0jscosac.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp0jscosac.jl:24\\n   [2] top-level scope at /tmp/tmp0jscosac.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp0jscosac.jl:24\\\
    n   [2] top-level scope at /tmp/tmp0jscosac.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp0jscosac.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp0jscosac.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmp0jscosac.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmp0jscosac.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0jscosac.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp0jscosac.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp0jscosac.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0jscosac.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps682slr9.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmps682slr9.jl:24\\n   [2] top-level scope at /tmp/tmps682slr9.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmps682slr9.jl:24\\\
    n   [2] top-level scope at /tmp/tmps682slr9.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmps682slr9.jl:24\\n   [2] top-level scope at /tmp/tmps682slr9.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmps682slr9.jl:24\\\
    n   [2] top-level scope at /tmp/tmps682slr9.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmps682slr9.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmps682slr9.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmps682slr9.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmps682slr9.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps682slr9.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmps682slr9.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmps682slr9.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps682slr9.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    new_sentence = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(new_sentence,\
    \ word)\n        end\n    end\n    return join(new_sentence, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn2xl4hms.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn2xl4hms.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn2xl4hms.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn2xl4hms.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn2xl4hms.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn2xl4hms.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpn2xl4hms.jl:24\n   [2] top-level scope at /tmp/tmpn2xl4hms.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn2xl4hms.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpn2xl4hms.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn2xl4hms.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn2xl4hms.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn2xl4hms.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazmrxb90.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazmrxb90.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazmrxb90.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazmrxb90.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazmrxb90.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpazmrxb90.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpazmrxb90.jl:24\n   [2] top-level scope at /tmp/tmpazmrxb90.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazmrxb90.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpazmrxb90.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpazmrxb90.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazmrxb90.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazmrxb90.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu3epm729.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu3epm729.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu3epm729.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu3epm729.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu3epm729.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpu3epm729.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpu3epm729.jl:24\n   [2] top-level scope at /tmp/tmpu3epm729.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3epm729.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpu3epm729.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpu3epm729.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3epm729.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3epm729.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr53uzhwv.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpr53uzhwv.jl:24\\n   [2] top-level scope at /tmp/tmpr53uzhwv.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpr53uzhwv.jl:24\\\
    n   [2] top-level scope at /tmp/tmpr53uzhwv.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpr53uzhwv.jl:24\\n   [2] top-level scope at /tmp/tmpr53uzhwv.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpr53uzhwv.jl:24\\\
    n   [2] top-level scope at /tmp/tmpr53uzhwv.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpr53uzhwv.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpr53uzhwv.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpr53uzhwv.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpr53uzhwv.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr53uzhwv.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpr53uzhwv.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpr53uzhwv.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr53uzhwv.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcgyivind.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcgyivind.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcgyivind.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcgyivind.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcgyivind.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpcgyivind.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpcgyivind.jl:24\n   [2] top-level scope at /tmp/tmpcgyivind.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcgyivind.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpcgyivind.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpcgyivind.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcgyivind.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcgyivind.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    new_words = []\n    for word in\
    \ words\n        if length(word) in primes\n            push!(new_words, word)\n\
    \        end\n    end\n    join(new_words, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"This is a test\"\
    ) == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpodwc2x3j.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n\
    \   [2] top-level scope at /tmp/tmpodwc2x3j.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n\
    \   [2] top-level scope at /tmp/tmpodwc2x3j.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n\
    \   [2] top-level scope at /tmp/tmpodwc2x3j.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n\
    \   [2] top-level scope at /tmp/tmpodwc2x3j.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpodwc2x3j.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpodwc2x3j.jl:24\n   [2] top-level scope at /tmp/tmpodwc2x3j.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpodwc2x3j.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpodwc2x3j.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpodwc2x3j.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpodwc2x3j.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpodwc2x3j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9lpj37gs.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9lpj37gs.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9lpj37gs.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9lpj37gs.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9lpj37gs.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9lpj37gs.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp9lpj37gs.jl:24\n   [2] top-level scope at /tmp/tmp9lpj37gs.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lpj37gs.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp9lpj37gs.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9lpj37gs.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lpj37gs.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9lpj37gs.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazjyc3pb.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazjyc3pb.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazjyc3pb.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazjyc3pb.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpazjyc3pb.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpazjyc3pb.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpazjyc3pb.jl:24\n   [2] top-level scope at /tmp/tmpazjyc3pb.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjyc3pb.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpazjyc3pb.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpazjyc3pb.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjyc3pb.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazjyc3pb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp87drft44.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp87drft44.jl:24\\n   [2] top-level scope at /tmp/tmp87drft44.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp87drft44.jl:24\\\
    n   [2] top-level scope at /tmp/tmp87drft44.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp87drft44.jl:24\\n   [2] top-level scope at /tmp/tmp87drft44.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp87drft44.jl:24\\\
    n   [2] top-level scope at /tmp/tmp87drft44.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp87drft44.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp87drft44.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmp87drft44.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmp87drft44.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp87drft44.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp87drft44.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp87drft44.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp87drft44.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    new_sentence = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(new_sentence, word)\n        end\n    end\n    return join(new_sentence,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpndl3o6ap.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n\
    \   [2] top-level scope at /tmp/tmpndl3o6ap.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n\
    \   [2] top-level scope at /tmp/tmpndl3o6ap.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n\
    \   [2] top-level scope at /tmp/tmpndl3o6ap.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n\
    \   [2] top-level scope at /tmp/tmpndl3o6ap.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpndl3o6ap.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpndl3o6ap.jl:24\n   [2] top-level scope at /tmp/tmpndl3o6ap.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpndl3o6ap.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpndl3o6ap.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpndl3o6ap.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpndl3o6ap.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpndl3o6ap.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    new_sentence = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(new_sentence, word)\n        end\n    end\n    return join(new_sentence,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn_i1yovv.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn_i1yovv.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn_i1yovv.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn_i1yovv.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n\
    \   [2] top-level scope at /tmp/tmpn_i1yovv.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn_i1yovv.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpn_i1yovv.jl:24\n   [2] top-level scope at /tmp/tmpn_i1yovv.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpn_i1yovv.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpn_i1yovv.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpn_i1yovv.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn_i1yovv.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_i1yovv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd885hbne.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd885hbne.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd885hbne.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd885hbne.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd885hbne.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpd885hbne.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpd885hbne.jl:24\n   [2] top-level scope at /tmp/tmpd885hbne.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd885hbne.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpd885hbne.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpd885hbne.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd885hbne.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd885hbne.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh16jm5q.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvh16jm5q.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvh16jm5q.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvh16jm5q.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvh16jm5q.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpvh16jm5q.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpvh16jm5q.jl:24\n   [2] top-level scope at /tmp/tmpvh16jm5q.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh16jm5q.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpvh16jm5q.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpvh16jm5q.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh16jm5q.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh16jm5q.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprmwy19l1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n\
    \   [2] top-level scope at /tmp/tmprmwy19l1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n\
    \   [2] top-level scope at /tmp/tmprmwy19l1.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n\
    \   [2] top-level scope at /tmp/tmprmwy19l1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n\
    \   [2] top-level scope at /tmp/tmprmwy19l1.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprmwy19l1.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmprmwy19l1.jl:24\n   [2] top-level scope at /tmp/tmprmwy19l1.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprmwy19l1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmprmwy19l1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprmwy19l1.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmwy19l1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmwy19l1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpouiyytnt.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpouiyytnt.jl:24\\n   [2] top-level scope at /tmp/tmpouiyytnt.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpouiyytnt.jl:24\\\
    n   [2] top-level scope at /tmp/tmpouiyytnt.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpouiyytnt.jl:24\\n   [2] top-level scope at /tmp/tmpouiyytnt.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpouiyytnt.jl:24\\\
    n   [2] top-level scope at /tmp/tmpouiyytnt.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpouiyytnt.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpouiyytnt.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpouiyytnt.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpouiyytnt.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpouiyytnt.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpouiyytnt.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpouiyytnt.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpouiyytnt.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd7xld7o5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd7xld7o5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd7xld7o5.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd7xld7o5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n\
    \   [2] top-level scope at /tmp/tmpd7xld7o5.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpd7xld7o5.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpd7xld7o5.jl:24\n   [2] top-level scope at /tmp/tmpd7xld7o5.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpd7xld7o5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpd7xld7o5.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpd7xld7o5.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd7xld7o5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd7xld7o5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5hkum302.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5hkum302.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5hkum302.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5hkum302.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5hkum302.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5hkum302.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp5hkum302.jl:24\n   [2] top-level scope at /tmp/tmp5hkum302.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hkum302.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp5hkum302.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5hkum302.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hkum302.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hkum302.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqx6icxsd.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqx6icxsd.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqx6icxsd.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqx6icxsd.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqx6icxsd.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpqx6icxsd.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpqx6icxsd.jl:24\n   [2] top-level scope at /tmp/tmpqx6icxsd.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqx6icxsd.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpqx6icxsd.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpqx6icxsd.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqx6icxsd.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqx6icxsd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1n6jfqu_.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1n6jfqu_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1n6jfqu_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1n6jfqu_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1n6jfqu_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1n6jfqu_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp1n6jfqu_.jl:24\n   [2] top-level scope at /tmp/tmp1n6jfqu_.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1n6jfqu_.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp1n6jfqu_.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1n6jfqu_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1n6jfqu_.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1n6jfqu_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppvwiea5c.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n\
    \   [2] top-level scope at /tmp/tmppvwiea5c.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n\
    \   [2] top-level scope at /tmp/tmppvwiea5c.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n\
    \   [2] top-level scope at /tmp/tmppvwiea5c.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n\
    \   [2] top-level scope at /tmp/tmppvwiea5c.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppvwiea5c.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmppvwiea5c.jl:24\n   [2] top-level scope at /tmp/tmppvwiea5c.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvwiea5c.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmppvwiea5c.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppvwiea5c.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvwiea5c.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppvwiea5c.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    primes_words = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(primes_words,\
    \ word)\n        end\n    end\n    join(primes_words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"This is\
    \ a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"go for\"\
    )\n\t@test(candidate(\"there is no place available here\") == \"there is no place\"\
    )\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"\
    go for it\") == \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"\
    here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    new_sentence = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(new_sentence,\
    \ word)\n        end\n    end\n    join(new_sentence, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"This is\
    \ a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"go for\"\
    )\n\t@test(candidate(\"there is no place available here\") == \"there is no place\"\
    )\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"\
    go for it\") == \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"\
    here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    prime_words = []\n    for word\
    \ in words\n        if length(word) in primes\n            push!(prime_words,\
    \ word)\n        end\n    end\n    return join(prime_words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    join(result, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4joafm2v.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4joafm2v.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4joafm2v.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4joafm2v.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n\
    \   [2] top-level scope at /tmp/tmp4joafm2v.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp4joafm2v.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp4joafm2v.jl:24\n   [2] top-level scope at /tmp/tmp4joafm2v.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp4joafm2v.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp4joafm2v.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp4joafm2v.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4joafm2v.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4joafm2v.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg730cmxo.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n\
    \   [2] top-level scope at /tmp/tmpg730cmxo.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n\
    \   [2] top-level scope at /tmp/tmpg730cmxo.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n\
    \   [2] top-level scope at /tmp/tmpg730cmxo.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n\
    \   [2] top-level scope at /tmp/tmpg730cmxo.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpg730cmxo.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpg730cmxo.jl:24\n   [2] top-level scope at /tmp/tmpg730cmxo.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpg730cmxo.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpg730cmxo.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpg730cmxo.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg730cmxo.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg730cmxo.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw0gjx7jx.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpw0gjx7jx.jl:24\\n   [2] top-level scope at /tmp/tmpw0gjx7jx.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpw0gjx7jx.jl:24\\\
    n   [2] top-level scope at /tmp/tmpw0gjx7jx.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpw0gjx7jx.jl:24\\n   [2] top-level scope at /tmp/tmpw0gjx7jx.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpw0gjx7jx.jl:24\\\
    n   [2] top-level scope at /tmp/tmpw0gjx7jx.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpw0gjx7jx.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpw0gjx7jx.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpw0gjx7jx.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpw0gjx7jx.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpw0gjx7jx.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpw0gjx7jx.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpw0gjx7jx.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpw0gjx7jx.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1qm7ov1c.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp1qm7ov1c.jl:24\\n   [2] top-level scope at /tmp/tmp1qm7ov1c.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp1qm7ov1c.jl:24\\\
    n   [2] top-level scope at /tmp/tmp1qm7ov1c.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp1qm7ov1c.jl:24\\n   [2] top-level scope at /tmp/tmp1qm7ov1c.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp1qm7ov1c.jl:24\\\
    n   [2] top-level scope at /tmp/tmp1qm7ov1c.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp1qm7ov1c.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp1qm7ov1c.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmp1qm7ov1c.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmp1qm7ov1c.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1qm7ov1c.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp1qm7ov1c.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp1qm7ov1c.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1qm7ov1c.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8iuhcham.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8iuhcham.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8iuhcham.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8iuhcham.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8iuhcham.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8iuhcham.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp8iuhcham.jl:24\n   [2] top-level scope at /tmp/tmp8iuhcham.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8iuhcham.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp8iuhcham.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8iuhcham.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8iuhcham.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8iuhcham.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzj_rf_40.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpzj_rf_40.jl:24\\n   [2] top-level scope at /tmp/tmpzj_rf_40.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpzj_rf_40.jl:24\\\
    n   [2] top-level scope at /tmp/tmpzj_rf_40.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpzj_rf_40.jl:24\\n   [2] top-level scope at /tmp/tmpzj_rf_40.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpzj_rf_40.jl:24\\\
    n   [2] top-level scope at /tmp/tmpzj_rf_40.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpzj_rf_40.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpzj_rf_40.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpzj_rf_40.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpzj_rf_40.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzj_rf_40.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpzj_rf_40.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpzj_rf_40.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzj_rf_40.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpisdbvet2.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n\
    \   [2] top-level scope at /tmp/tmpisdbvet2.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n\
    \   [2] top-level scope at /tmp/tmpisdbvet2.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n\
    \   [2] top-level scope at /tmp/tmpisdbvet2.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n\
    \   [2] top-level scope at /tmp/tmpisdbvet2.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpisdbvet2.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpisdbvet2.jl:24\n   [2] top-level scope at /tmp/tmpisdbvet2.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpisdbvet2.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpisdbvet2.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpisdbvet2.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpisdbvet2.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpisdbvet2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1hl4k0ku.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1hl4k0ku.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1hl4k0ku.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1hl4k0ku.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1hl4k0ku.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1hl4k0ku.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp1hl4k0ku.jl:24\n   [2] top-level scope at /tmp/tmp1hl4k0ku.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hl4k0ku.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp1hl4k0ku.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1hl4k0ku.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hl4k0ku.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1hl4k0ku.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    join(result, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqutuywb1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqutuywb1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqutuywb1.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqutuywb1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpqutuywb1.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpqutuywb1.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpqutuywb1.jl:24\n   [2] top-level scope at /tmp/tmpqutuywb1.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqutuywb1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpqutuywb1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpqutuywb1.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqutuywb1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqutuywb1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprxkzdptl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n\
    \   [2] top-level scope at /tmp/tmprxkzdptl.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n\
    \   [2] top-level scope at /tmp/tmprxkzdptl.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n\
    \   [2] top-level scope at /tmp/tmprxkzdptl.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n\
    \   [2] top-level scope at /tmp/tmprxkzdptl.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprxkzdptl.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmprxkzdptl.jl:24\n   [2] top-level scope at /tmp/tmprxkzdptl.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprxkzdptl.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmprxkzdptl.jl:24\n   [2] top-level\
    \ scope at /tmp/tmprxkzdptl.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprxkzdptl.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprxkzdptl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2chekxz6.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2chekxz6.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2chekxz6.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2chekxz6.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2chekxz6.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp2chekxz6.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp2chekxz6.jl:24\n   [2] top-level scope at /tmp/tmp2chekxz6.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2chekxz6.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp2chekxz6.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp2chekxz6.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2chekxz6.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2chekxz6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1x93eloj.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1x93eloj.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1x93eloj.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1x93eloj.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n\
    \   [2] top-level scope at /tmp/tmp1x93eloj.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1x93eloj.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp1x93eloj.jl:24\n   [2] top-level scope at /tmp/tmp1x93eloj.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1x93eloj.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp1x93eloj.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp1x93eloj.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1x93eloj.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1x93eloj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxued7nut.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxued7nut.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxued7nut.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxued7nut.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxued7nut.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxued7nut.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpxued7nut.jl:24\n   [2] top-level scope at /tmp/tmpxued7nut.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxued7nut.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpxued7nut.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxued7nut.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxued7nut.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxued7nut.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp18ta3kaq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n\
    \   [2] top-level scope at /tmp/tmp18ta3kaq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n\
    \   [2] top-level scope at /tmp/tmp18ta3kaq.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n\
    \   [2] top-level scope at /tmp/tmp18ta3kaq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n\
    \   [2] top-level scope at /tmp/tmp18ta3kaq.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp18ta3kaq.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp18ta3kaq.jl:24\n   [2] top-level scope at /tmp/tmp18ta3kaq.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp18ta3kaq.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp18ta3kaq.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp18ta3kaq.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp18ta3kaq.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18ta3kaq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphe9su5ub.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n\
    \   [2] top-level scope at /tmp/tmphe9su5ub.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n\
    \   [2] top-level scope at /tmp/tmphe9su5ub.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n\
    \   [2] top-level scope at /tmp/tmphe9su5ub.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n\
    \   [2] top-level scope at /tmp/tmphe9su5ub.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphe9su5ub.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmphe9su5ub.jl:24\n   [2] top-level scope at /tmp/tmphe9su5ub.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphe9su5ub.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmphe9su5ub.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphe9su5ub.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe9su5ub.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphe9su5ub.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxve3s50f.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxve3s50f.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxve3s50f.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxve3s50f.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxve3s50f.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxve3s50f.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpxve3s50f.jl:24\n   [2] top-level scope at /tmp/tmpxve3s50f.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxve3s50f.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpxve3s50f.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxve3s50f.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxve3s50f.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxve3s50f.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    new_sentence = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(new_sentence, word)\n        end\n    end\n    return join(new_sentence,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpodjtvgcg.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpodjtvgcg.jl:24\\n   [2] top-level scope at /tmp/tmpodjtvgcg.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpodjtvgcg.jl:24\\\
    n   [2] top-level scope at /tmp/tmpodjtvgcg.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpodjtvgcg.jl:24\\n   [2] top-level scope at /tmp/tmpodjtvgcg.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpodjtvgcg.jl:24\\\
    n   [2] top-level scope at /tmp/tmpodjtvgcg.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpodjtvgcg.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpodjtvgcg.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpodjtvgcg.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpodjtvgcg.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpodjtvgcg.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpodjtvgcg.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpodjtvgcg.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpodjtvgcg.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppjy1xbut.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n\
    \   [2] top-level scope at /tmp/tmppjy1xbut.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n\
    \   [2] top-level scope at /tmp/tmppjy1xbut.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n\
    \   [2] top-level scope at /tmp/tmppjy1xbut.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n\
    \   [2] top-level scope at /tmp/tmppjy1xbut.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppjy1xbut.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmppjy1xbut.jl:24\n   [2] top-level scope at /tmp/tmppjy1xbut.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppjy1xbut.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmppjy1xbut.jl:24\n   [2] top-level\
    \ scope at /tmp/tmppjy1xbut.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppjy1xbut.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjy1xbut.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps_bk9ts7.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmps_bk9ts7.jl:24\\n   [2] top-level scope at /tmp/tmps_bk9ts7.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmps_bk9ts7.jl:24\\\
    n   [2] top-level scope at /tmp/tmps_bk9ts7.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmps_bk9ts7.jl:24\\n   [2] top-level scope at /tmp/tmps_bk9ts7.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmps_bk9ts7.jl:24\\\
    n   [2] top-level scope at /tmp/tmps_bk9ts7.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmps_bk9ts7.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmps_bk9ts7.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmps_bk9ts7.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmps_bk9ts7.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps_bk9ts7.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmps_bk9ts7.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmps_bk9ts7.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps_bk9ts7.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjrehytf1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjrehytf1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjrehytf1.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjrehytf1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjrehytf1.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjrehytf1.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpjrehytf1.jl:24\n   [2] top-level scope at /tmp/tmpjrehytf1.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjrehytf1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpjrehytf1.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjrehytf1.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjrehytf1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrehytf1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    new_words = []\n    for word in\
    \ words\n        if length(word) in primes\n            push!(new_words, word)\n\
    \        end\n    end\n    return join(new_words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"This is\
    \ a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"go for\"\
    )\n\t@test(candidate(\"there is no place available here\") == \"there is no place\"\
    )\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"\
    go for it\") == \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"\
    here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw2733yri.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n\
    \   [2] top-level scope at /tmp/tmpw2733yri.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n\
    \   [2] top-level scope at /tmp/tmpw2733yri.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n\
    \   [2] top-level scope at /tmp/tmpw2733yri.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n\
    \   [2] top-level scope at /tmp/tmpw2733yri.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpw2733yri.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpw2733yri.jl:24\n   [2] top-level scope at /tmp/tmpw2733yri.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw2733yri.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpw2733yri.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpw2733yri.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw2733yri.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2733yri.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphvbqee7d.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n\
    \   [2] top-level scope at /tmp/tmphvbqee7d.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n\
    \   [2] top-level scope at /tmp/tmphvbqee7d.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n\
    \   [2] top-level scope at /tmp/tmphvbqee7d.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n\
    \   [2] top-level scope at /tmp/tmphvbqee7d.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphvbqee7d.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmphvbqee7d.jl:24\n   [2] top-level scope at /tmp/tmphvbqee7d.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphvbqee7d.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmphvbqee7d.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphvbqee7d.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphvbqee7d.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphvbqee7d.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_l6_2l8g.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_l6_2l8g.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_l6_2l8g.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_l6_2l8g.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_l6_2l8g.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp_l6_2l8g.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp_l6_2l8g.jl:24\n   [2] top-level scope at /tmp/tmp_l6_2l8g.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_l6_2l8g.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp_l6_2l8g.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp_l6_2l8g.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_l6_2l8g.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_l6_2l8g.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6z5r3f_x.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6z5r3f_x.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6z5r3f_x.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6z5r3f_x.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6z5r3f_x.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp6z5r3f_x.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp6z5r3f_x.jl:24\n   [2] top-level scope at /tmp/tmp6z5r3f_x.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z5r3f_x.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp6z5r3f_x.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp6z5r3f_x.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z5r3f_x.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6z5r3f_x.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu0c02fuz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu0c02fuz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu0c02fuz.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu0c02fuz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpu0c02fuz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpu0c02fuz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpu0c02fuz.jl:24\n   [2] top-level scope at /tmp/tmpu0c02fuz.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpu0c02fuz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpu0c02fuz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpu0c02fuz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu0c02fuz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu0c02fuz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    is_prime(x) = x > 1 && all(x % i != 0 for i in 2:x-1)\n    primes\
    \ = [word for word in words if is_prime(length(word))]\n    join(primes, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\t@test(candidate(\"\
    This is a test\") == \"is\")\n\t@test(candidate(\"lets go for swimming\") == \"\
    go for\")\n\t@test(candidate(\"there is no place available here\") == \"there\
    \ is no place\")\n\t@test(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\"\
    )\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"here\"\
    ) == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp97l_ovuk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp97l_ovuk.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp97l_ovuk.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp97l_ovuk.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp97l_ovuk.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97l_ovuk.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5n53mhyh.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5n53mhyh.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5n53mhyh.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5n53mhyh.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n\
    \   [2] top-level scope at /tmp/tmp5n53mhyh.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5n53mhyh.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp5n53mhyh.jl:24\n   [2] top-level scope at /tmp/tmp5n53mhyh.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp5n53mhyh.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp5n53mhyh.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp5n53mhyh.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5n53mhyh.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5n53mhyh.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    res = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(res, word)\n        end\n\
    \    end\n    return join(res, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpphrptmir.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n\
    \   [2] top-level scope at /tmp/tmpphrptmir.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n\
    \   [2] top-level scope at /tmp/tmpphrptmir.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n\
    \   [2] top-level scope at /tmp/tmpphrptmir.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n\
    \   [2] top-level scope at /tmp/tmpphrptmir.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpphrptmir.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpphrptmir.jl:24\n   [2] top-level scope at /tmp/tmpphrptmir.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpphrptmir.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpphrptmir.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpphrptmir.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphrptmir.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphrptmir.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk88no8uc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk88no8uc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk88no8uc.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk88no8uc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk88no8uc.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpk88no8uc.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpk88no8uc.jl:24\n   [2] top-level scope at /tmp/tmpk88no8uc.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk88no8uc.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpk88no8uc.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpk88no8uc.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk88no8uc.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk88no8uc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = [word for word in words if isprime(length(word))]\n\
    \    return join(prime_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmprhm_opqe.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n\
    \   [2] iterate at ./iterators.jl:430 [inlined]\n   [3] iterate at ./generator.jl:44\
    \ [inlined]\n   [4] grow_to!(::Array{SubString{String},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #3#4\",Array{SubString{String},1}},typeof(identity)}) at ./array.jl:726\n   [5]\
    \ collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String) at /tmp/tmprhm_opqe.jl:22\n\
    \   [7] top-level scope at /tmp/tmprhm_opqe.jl:30\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2]\
    \ iterate at ./iterators.jl:430 [inlined]\n   [3] iterate at ./generator.jl:44\
    \ [inlined]\n   [4] grow_to!(::Array{SubString{String},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #3#4\",Array{SubString{String},1}},typeof(identity)}) at ./array.jl:726\n   [5]\
    \ collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String) at /tmp/tmprhm_opqe.jl:22\n\
    \   [7] top-level scope at /tmp/tmprhm_opqe.jl:31\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String})\
    \ at ./none:0\n   [2] iterate at ./iterators.jl:430 [inlined]\n   [3] iterate\
    \ at ./generator.jl:44 [inlined]\n   [4] grow_to!(::Array{SubString{String},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#3#4\",Array{SubString{String},1}},typeof(identity)})\
    \ at ./array.jl:726\n   [5] collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String)\
    \ at /tmp/tmprhm_opqe.jl:22\n   [7] top-level scope at /tmp/tmprhm_opqe.jl:32\n\
    \   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2]\
    \ iterate at ./iterators.jl:430 [inlined]\n   [3] iterate at ./generator.jl:44\
    \ [inlined]\n   [4] grow_to!(::Array{SubString{String},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #3#4\",Array{SubString{String},1}},typeof(identity)}) at ./array.jl:726\n   [5]\
    \ collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String) at /tmp/tmprhm_opqe.jl:22\n\
    \   [7] top-level scope at /tmp/tmprhm_opqe.jl:33\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./iterators.jl:430\
    \ [inlined]\n   [3] iterate at ./generator.jl:44 [inlined]\n   [4] grow_to!(::Array{SubString{String},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#3#4\",Array{SubString{String},1}},typeof(identity)})\
    \ at ./array.jl:726\n   [5] collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String)\
    \ at /tmp/tmprhm_opqe.jl:22\n   [7] top-level scope at /tmp/tmprhm_opqe.jl:34\n\
    \   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] (::var\"\
    #3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./iterators.jl:430\
    \ [inlined]\n   [3] iterate at ./generator.jl:44 [inlined]\n   [4] grow_to!(::Array{SubString{String},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#3#4\",Array{SubString{String},1}},typeof(identity)})\
    \ at ./array.jl:726\n   [5] collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String)\
    \ at /tmp/tmprhm_opqe.jl:22\n   [7] top-level scope at /tmp/tmprhm_opqe.jl:35\n\
    \   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhm_opqe.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./iterators.jl:430\
    \ [inlined]\n   [3] iterate at ./generator.jl:44 [inlined]\n   [4] grow_to!(::Array{SubString{String},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#3#4\",Array{SubString{String},1}},typeof(identity)})\
    \ at ./array.jl:726\n   [5] collect at ./array.jl:663 [inlined]\n   [6] words_in_sentence(::String)\
    \ at /tmp/tmprhm_opqe.jl:22\n   [7] top-level scope at /tmp/tmprhm_opqe.jl:36\n\
    \   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmprhm_opqe.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhm_opqe.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph7tr17m8.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n\
    \   [2] top-level scope at /tmp/tmph7tr17m8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n\
    \   [2] top-level scope at /tmp/tmph7tr17m8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n\
    \   [2] top-level scope at /tmp/tmph7tr17m8.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n\
    \   [2] top-level scope at /tmp/tmph7tr17m8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmph7tr17m8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmph7tr17m8.jl:24\n   [2] top-level scope at /tmp/tmph7tr17m8.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmph7tr17m8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmph7tr17m8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmph7tr17m8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph7tr17m8.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7tr17m8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpempn12i8.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n\
    \   [2] top-level scope at /tmp/tmpempn12i8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n\
    \   [2] top-level scope at /tmp/tmpempn12i8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n\
    \   [2] top-level scope at /tmp/tmpempn12i8.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n\
    \   [2] top-level scope at /tmp/tmpempn12i8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpempn12i8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpempn12i8.jl:24\n   [2] top-level scope at /tmp/tmpempn12i8.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpempn12i8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpempn12i8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpempn12i8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpempn12i8.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpempn12i8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2rmkv1r8.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2rmkv1r8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2rmkv1r8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2rmkv1r8.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n\
    \   [2] top-level scope at /tmp/tmp2rmkv1r8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp2rmkv1r8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp2rmkv1r8.jl:24\n   [2] top-level scope at /tmp/tmp2rmkv1r8.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2rmkv1r8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp2rmkv1r8.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp2rmkv1r8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2rmkv1r8.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2rmkv1r8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn0zzgg2j.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpn0zzgg2j.jl:24\\n   [2] top-level scope at /tmp/tmpn0zzgg2j.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpn0zzgg2j.jl:24\\\
    n   [2] top-level scope at /tmp/tmpn0zzgg2j.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpn0zzgg2j.jl:24\\n   [2] top-level scope at /tmp/tmpn0zzgg2j.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpn0zzgg2j.jl:24\\\
    n   [2] top-level scope at /tmp/tmpn0zzgg2j.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpn0zzgg2j.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpn0zzgg2j.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpn0zzgg2j.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpn0zzgg2j.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn0zzgg2j.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpn0zzgg2j.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpn0zzgg2j.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn0zzgg2j.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7vrk0glz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp7vrk0glz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp7vrk0glz.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp7vrk0glz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n\
    \   [2] top-level scope at /tmp/tmp7vrk0glz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp7vrk0glz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp7vrk0glz.jl:24\n   [2] top-level scope at /tmp/tmp7vrk0glz.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7vrk0glz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp7vrk0glz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp7vrk0glz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7vrk0glz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7vrk0glz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphxq2v_go.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n\
    \   [2] top-level scope at /tmp/tmphxq2v_go.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n\
    \   [2] top-level scope at /tmp/tmphxq2v_go.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n\
    \   [2] top-level scope at /tmp/tmphxq2v_go.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n\
    \   [2] top-level scope at /tmp/tmphxq2v_go.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphxq2v_go.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmphxq2v_go.jl:24\n   [2] top-level scope at /tmp/tmphxq2v_go.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphxq2v_go.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmphxq2v_go.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphxq2v_go.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphxq2v_go.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxq2v_go.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphaq5a2ft.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n\
    \   [2] top-level scope at /tmp/tmphaq5a2ft.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n\
    \   [2] top-level scope at /tmp/tmphaq5a2ft.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n\
    \   [2] top-level scope at /tmp/tmphaq5a2ft.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n\
    \   [2] top-level scope at /tmp/tmphaq5a2ft.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphaq5a2ft.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmphaq5a2ft.jl:24\n   [2] top-level scope at /tmp/tmphaq5a2ft.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmphaq5a2ft.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmphaq5a2ft.jl:24\n   [2] top-level\
    \ scope at /tmp/tmphaq5a2ft.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphaq5a2ft.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphaq5a2ft.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplz00z982.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n\
    \   [2] top-level scope at /tmp/tmplz00z982.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n\
    \   [2] top-level scope at /tmp/tmplz00z982.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n\
    \   [2] top-level scope at /tmp/tmplz00z982.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n\
    \   [2] top-level scope at /tmp/tmplz00z982.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n   [2] top-level\
    \ scope at /tmp/tmplz00z982.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmplz00z982.jl:24\n   [2] top-level scope at /tmp/tmplz00z982.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplz00z982.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmplz00z982.jl:24\n   [2] top-level\
    \ scope at /tmp/tmplz00z982.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplz00z982.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplz00z982.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfq1v5utu.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpfq1v5utu.jl:24\\n   [2] top-level scope at /tmp/tmpfq1v5utu.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpfq1v5utu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpfq1v5utu.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmpfq1v5utu.jl:24\\n   [2] top-level scope at /tmp/tmpfq1v5utu.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmpfq1v5utu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpfq1v5utu.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpfq1v5utu.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpfq1v5utu.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmpfq1v5utu.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmpfq1v5utu.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfq1v5utu.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmpfq1v5utu.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmpfq1v5utu.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfq1v5utu.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjhp7pntr.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjhp7pntr.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjhp7pntr.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjhp7pntr.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n\
    \   [2] top-level scope at /tmp/tmpjhp7pntr.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjhp7pntr.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpjhp7pntr.jl:24\n   [2] top-level scope at /tmp/tmpjhp7pntr.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhp7pntr.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpjhp7pntr.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpjhp7pntr.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhp7pntr.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhp7pntr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    new_sentence = \"\"\n    for word in words\n        if isprime(length(word))\n\
    \            new_sentence = new_sentence * word * \" \"\n        end\n    end\n\
    \    return rstrip(new_sentence)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpsv3ekx6l.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsv3ekx6l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsv3ekx6l.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsv3ekx6l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsv3ekx6l.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpsv3ekx6l.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpsv3ekx6l.jl:24\n   [2] top-level scope at /tmp/tmpsv3ekx6l.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv3ekx6l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpsv3ekx6l.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpsv3ekx6l.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv3ekx6l.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv3ekx6l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzb7s7nkq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzb7s7nkq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzb7s7nkq.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzb7s7nkq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzb7s7nkq.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpzb7s7nkq.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpzb7s7nkq.jl:24\n   [2] top-level scope at /tmp/tmpzb7s7nkq.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzb7s7nkq.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpzb7s7nkq.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpzb7s7nkq.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzb7s7nkq.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb7s7nkq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8uo2u0fr.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8uo2u0fr.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8uo2u0fr.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8uo2u0fr.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n\
    \   [2] top-level scope at /tmp/tmp8uo2u0fr.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8uo2u0fr.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp8uo2u0fr.jl:24\n   [2] top-level scope at /tmp/tmp8uo2u0fr.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8uo2u0fr.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp8uo2u0fr.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp8uo2u0fr.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8uo2u0fr.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8uo2u0fr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = primes_up_to(maximum(map(length, words)))\n    return join(filter(w\
    \ -> length(w) in primes, words), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp75djo3ce.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: primes_up_to\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n\
    \   [2] top-level scope at /tmp/tmp75djo3ce.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: primes_up_to not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n\
    \   [2] top-level scope at /tmp/tmp75djo3ce.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ primes_up_to not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp75djo3ce.jl:22\n   [2] top-level scope at /tmp/tmp75djo3ce.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: primes_up_to not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n\
    \   [2] top-level scope at /tmp/tmp75djo3ce.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: primes_up_to not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp75djo3ce.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: primes_up_to not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp75djo3ce.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75djo3ce.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: primes_up_to not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp75djo3ce.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp75djo3ce.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75djo3ce.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75djo3ce.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdb9tg5qp.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdb9tg5qp.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdb9tg5qp.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdb9tg5qp.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpdb9tg5qp.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpdb9tg5qp.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpdb9tg5qp.jl:24\n   [2] top-level scope at /tmp/tmpdb9tg5qp.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdb9tg5qp.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpdb9tg5qp.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpdb9tg5qp.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdb9tg5qp.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdb9tg5qp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmevqazoy.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpmevqazoy.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpmevqazoy.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpmevqazoy.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n\
    \   [2] top-level scope at /tmp/tmpmevqazoy.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpmevqazoy.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpmevqazoy.jl:24\n   [2] top-level scope at /tmp/tmpmevqazoy.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmevqazoy.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpmevqazoy.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpmevqazoy.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmevqazoy.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmevqazoy.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuqwk44ml.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n\
    \   [2] top-level scope at /tmp/tmpuqwk44ml.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n\
    \   [2] top-level scope at /tmp/tmpuqwk44ml.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n\
    \   [2] top-level scope at /tmp/tmpuqwk44ml.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n\
    \   [2] top-level scope at /tmp/tmpuqwk44ml.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpuqwk44ml.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpuqwk44ml.jl:24\n   [2] top-level scope at /tmp/tmpuqwk44ml.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpuqwk44ml.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpuqwk44ml.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpuqwk44ml.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuqwk44ml.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuqwk44ml.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8o08u1_j.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"This is a test\") == \"is\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp8o08u1_j.jl:24\\n   [2] top-level scope at /tmp/tmp8o08u1_j.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp8o08u1_j.jl:24\\\
    n   [2] top-level scope at /tmp/tmp8o08u1_j.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] words_in_sentence(::String) at\
    \ /tmp/tmp8o08u1_j.jl:24\\n   [2] top-level scope at /tmp/tmp8o08u1_j.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\\n  UndefVarError: isprime not defined\\\
    n  Stacktrace:\\n   [1] words_in_sentence(::String) at /tmp/tmp8o08u1_j.jl:24\\\
    n   [2] top-level scope at /tmp/tmp8o08u1_j.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp8o08u1_j.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp8o08u1_j.jl:39\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    here\") == \"\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\n   [1]\
    \ words_in_sentence(::String) at /tmp/tmp8o08u1_j.jl:24\\n   [2] top-level scope\
    \ at /tmp/tmp8o08u1_j.jl:40\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8o08u1_j.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    here is\") == \"is\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] words_in_sentence(::String) at /tmp/tmp8o08u1_j.jl:24\\n   [2] top-level\
    \ scope at /tmp/tmp8o08u1_j.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8o08u1_j.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe1qm4yyb.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpe1qm4yyb.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpe1qm4yyb.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpe1qm4yyb.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n\
    \   [2] top-level scope at /tmp/tmpe1qm4yyb.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpe1qm4yyb.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpe1qm4yyb.jl:24\n   [2] top-level scope at /tmp/tmpe1qm4yyb.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1qm4yyb.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpe1qm4yyb.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpe1qm4yyb.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1qm4yyb.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1qm4yyb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    result = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(result, word)\n        end\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_k1l5fik.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_k1l5fik.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_k1l5fik.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_k1l5fik.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n\
    \   [2] top-level scope at /tmp/tmp_k1l5fik.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp_k1l5fik.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp_k1l5fik.jl:24\n   [2] top-level scope at /tmp/tmp_k1l5fik.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_k1l5fik.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp_k1l5fik.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp_k1l5fik.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_k1l5fik.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_k1l5fik.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsext__w7.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsext__w7.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsext__w7.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsext__w7.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n\
    \   [2] top-level scope at /tmp/tmpsext__w7.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpsext__w7.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpsext__w7.jl:24\n   [2] top-level scope at /tmp/tmpsext__w7.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsext__w7.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpsext__w7.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpsext__w7.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsext__w7.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsext__w7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    join(result, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"\
    lets go for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place\
    \ available here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\"\
    ) == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t\
    @test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk0g4e_wp.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk0g4e_wp.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk0g4e_wp.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk0g4e_wp.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n\
    \   [2] top-level scope at /tmp/tmpk0g4e_wp.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpk0g4e_wp.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpk0g4e_wp.jl:24\n   [2] top-level scope at /tmp/tmpk0g4e_wp.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk0g4e_wp.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpk0g4e_wp.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpk0g4e_wp.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk0g4e_wp.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0g4e_wp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9zlh1w6n.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9zlh1w6n.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9zlh1w6n.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9zlh1w6n.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9zlh1w6n.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9zlh1w6n.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp9zlh1w6n.jl:24\n   [2] top-level scope at /tmp/tmp9zlh1w6n.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9zlh1w6n.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp9zlh1w6n.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9zlh1w6n.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9zlh1w6n.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zlh1w6n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpocom52c_.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n\
    \   [2] top-level scope at /tmp/tmpocom52c_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n\
    \   [2] top-level scope at /tmp/tmpocom52c_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n\
    \   [2] top-level scope at /tmp/tmpocom52c_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n\
    \   [2] top-level scope at /tmp/tmpocom52c_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpocom52c_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpocom52c_.jl:24\n   [2] top-level scope at /tmp/tmpocom52c_.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocom52c_.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpocom52c_.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpocom52c_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocom52c_.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocom52c_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxakahcf6.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxakahcf6.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxakahcf6.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxakahcf6.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n\
    \   [2] top-level scope at /tmp/tmpxakahcf6.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxakahcf6.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpxakahcf6.jl:24\n   [2] top-level scope at /tmp/tmpxakahcf6.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxakahcf6.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpxakahcf6.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpxakahcf6.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxakahcf6.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxakahcf6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcksaa46s.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcksaa46s.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcksaa46s.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcksaa46s.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n\
    \   [2] top-level scope at /tmp/tmpcksaa46s.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpcksaa46s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpcksaa46s.jl:24\n   [2] top-level scope at /tmp/tmpcksaa46s.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcksaa46s.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpcksaa46s.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpcksaa46s.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcksaa46s.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcksaa46s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp37wbxyx5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n\
    \   [2] top-level scope at /tmp/tmp37wbxyx5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n\
    \   [2] top-level scope at /tmp/tmp37wbxyx5.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n\
    \   [2] top-level scope at /tmp/tmp37wbxyx5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n\
    \   [2] top-level scope at /tmp/tmp37wbxyx5.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp37wbxyx5.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp37wbxyx5.jl:24\n   [2] top-level scope at /tmp/tmp37wbxyx5.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp37wbxyx5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp37wbxyx5.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp37wbxyx5.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37wbxyx5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37wbxyx5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [isprime(length(word)) for word in words]\n    return join(words[primes],\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsovsp0yt.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n\
    \   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:30\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:31\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String})\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:33\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:34\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] (::var\"\
    #3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:35\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsovsp0yt.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] (::var\"#3#4\")(::SubString{String}) at ./none:0\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\n   [3] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] words_in_sentence(::String) at /tmp/tmpsovsp0yt.jl:22\n\
    \   [5] top-level scope at /tmp/tmpsovsp0yt.jl:36\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpsovsp0yt.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsovsp0yt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = filter(word -> isprime(length(word)), words)\n   \
    \ join(prime_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7tsphw4i.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n\
    \   [2] filter(::var\"#3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n\
    \   [3] words_in_sentence(::String) at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level\
    \ scope at /tmp/tmp7tsphw4i.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n\
    \   [2] filter(::var\"#3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n\
    \   [3] words_in_sentence(::String) at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level\
    \ scope at /tmp/tmp7tsphw4i.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String})\
    \ at /tmp/tmp7tsphw4i.jl:22\n   [2] filter(::var\"#3#4\", ::Array{SubString{String},1})\
    \ at ./array.jl:2375\n   [3] words_in_sentence(::String) at /tmp/tmp7tsphw4i.jl:22\n\
    \   [4] top-level scope at /tmp/tmp7tsphw4i.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n\
    \   [2] filter(::var\"#3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n\
    \   [3] words_in_sentence(::String) at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level\
    \ scope at /tmp/tmp7tsphw4i.jl:33\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] (::var\"#3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n   [2]\
    \ filter(::var\"#3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n   [3]\
    \ words_in_sentence(::String) at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level scope\
    \ at /tmp/tmp7tsphw4i.jl:34\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] (::var\"\
    #3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n   [2] filter(::var\"\
    #3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n   [3] words_in_sentence(::String)\
    \ at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level scope at /tmp/tmp7tsphw4i.jl:35\n\
    \   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tsphw4i.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] (::var\"#3#4\")(::SubString{String}) at /tmp/tmp7tsphw4i.jl:22\n   [2] filter(::var\"\
    #3#4\", ::Array{SubString{String},1}) at ./array.jl:2375\n   [3] words_in_sentence(::String)\
    \ at /tmp/tmp7tsphw4i.jl:22\n   [4] top-level scope at /tmp/tmp7tsphw4i.jl:36\n\
    \   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp7tsphw4i.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tsphw4i.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9wv10amv.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9wv10amv.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9wv10amv.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9wv10amv.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n\
    \   [2] top-level scope at /tmp/tmp9wv10amv.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9wv10amv.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp9wv10amv.jl:24\n   [2] top-level scope at /tmp/tmp9wv10amv.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9wv10amv.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp9wv10amv.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp9wv10amv.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9wv10amv.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wv10amv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfafhh937.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n\
    \   [2] top-level scope at /tmp/tmpfafhh937.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n\
    \   [2] top-level scope at /tmp/tmpfafhh937.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n\
    \   [2] top-level scope at /tmp/tmpfafhh937.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n\
    \   [2] top-level scope at /tmp/tmpfafhh937.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpfafhh937.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpfafhh937.jl:24\n   [2] top-level scope at /tmp/tmpfafhh937.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfafhh937.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpfafhh937.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpfafhh937.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfafhh937.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfafhh937.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ih4eihn.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6ih4eihn.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6ih4eihn.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6ih4eihn.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n\
    \   [2] top-level scope at /tmp/tmp6ih4eihn.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp6ih4eihn.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmp6ih4eihn.jl:24\n   [2] top-level scope at /tmp/tmp6ih4eihn.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6ih4eihn.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmp6ih4eihn.jl:24\n   [2] top-level\
    \ scope at /tmp/tmp6ih4eihn.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6ih4eihn.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ih4eihn.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwmqyyw7u.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n\
    \   [2] top-level scope at /tmp/tmpwmqyyw7u.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n\
    \   [2] top-level scope at /tmp/tmpwmqyyw7u.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n\
    \   [2] top-level scope at /tmp/tmpwmqyyw7u.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n\
    \   [2] top-level scope at /tmp/tmpwmqyyw7u.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpwmqyyw7u.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpwmqyyw7u.jl:24\n   [2] top-level scope at /tmp/tmpwmqyyw7u.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpwmqyyw7u.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpwmqyyw7u.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpwmqyyw7u.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwmqyyw7u.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwmqyyw7u.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    prime_words = []\n    for word in words\n        if isprime(length(word))\n\
    \            push!(prime_words, word)\n        end\n    end\n    return join(prime_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = words_in_sentence;\n\
    \t@test(candidate(\"This is a test\") == \"is\")\n\t@test(candidate(\"lets go\
    \ for swimming\") == \"go for\")\n\t@test(candidate(\"there is no place available\
    \ here\") == \"there is no place\")\n\t@test(candidate(\"Hi I am Hussein\") ==\
    \ \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") == \"go for it\")\n\t@test(candidate(\"\
    here\") == \"\")\n\t@test(candidate(\"here is\") == \"is\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpre_ohngz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"This is a test\") == \"is\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpre_ohngz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    lets go for swimming\") == \"go for\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpre_ohngz.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    there is no place available here\") == \"there is no place\"\n  UndefVarError:\
    \ isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpre_ohngz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\"\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n\
    \   [2] top-level scope at /tmp/tmpre_ohngz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    go for it\") == \"go for it\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpre_ohngz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    here\") == \"\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n   [1] words_in_sentence(::String)\
    \ at /tmp/tmpre_ohngz.jl:24\n   [2] top-level scope at /tmp/tmpre_ohngz.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpre_ohngz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    here is\") == \"is\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n  \
    \ [1] words_in_sentence(::String) at /tmp/tmpre_ohngz.jl:24\n   [2] top-level\
    \ scope at /tmp/tmpre_ohngz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpre_ohngz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpre_ohngz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    You are given a string representing a sentence,\n    the sentence\
    \ contains some words separated by a space,\n    and you have to return a string\
    \ that contains the words from the original sentence,\n    whose lengths are prime\
    \ numbers,\n    the order of the words in the new string should be the same as\
    \ the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\
    \n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go\
    \ for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1\
    \ <= len(sentence) <= 100\n        * sentence contains only letters\n    \"\"\"\
    \nfunction words_in_sentence(sentence::String)::String \n    words = split(sentence,\
    \ \" \")\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    result = []\n    for word in words\n\
    \        if length(word) in primes\n            push!(result, word)\n        end\n\
    \    end\n    return join(result, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = words_in_sentence;\n\t@test(candidate(\"This is a test\") == \"is\"\
    )\n\t@test(candidate(\"lets go for swimming\") == \"go for\")\n\t@test(candidate(\"\
    there is no place available here\") == \"there is no place\")\n\t@test(candidate(\"\
    Hi I am Hussein\") == \"Hi am Hussein\")\n\t@test(candidate(\"go for it\") ==\
    \ \"go for it\")\n\t@test(candidate(\"here\") == \"\")\n\t@test(candidate(\"here\
    \ is\") == \"is\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK

name: HumanEval_85_add
language: julia
results:
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv6l6vwh1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpv6l6vwh1.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv6l6vwh1.jl:20\ntest set: Test Failed at /tmp/tmpv6l6vwh1.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv6l6vwh1.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv6l6vwh1.jl:20\ntest set: Test Failed at /tmp/tmpv6l6vwh1.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv6l6vwh1.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv6l6vwh1.jl:20\ntest set: Test Failed at /tmp/tmpv6l6vwh1.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv6l6vwh1.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv6l6vwh1.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv6l6vwh1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4ufpkqk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpr4ufpkqk.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4ufpkqk.jl:20\ntest set: Test Failed at /tmp/tmpr4ufpkqk.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr4ufpkqk.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4ufpkqk.jl:20\ntest set: Test Failed at /tmp/tmpr4ufpkqk.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr4ufpkqk.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4ufpkqk.jl:20\ntest set: Test Failed at /tmp/tmpr4ufpkqk.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr4ufpkqk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4ufpkqk.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4ufpkqk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpm5g69bxh.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm5g69bxh.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm5g69bxh.jl:20\\ntest set: Test Failed at /tmp/tmpm5g69bxh.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpm5g69bxh.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm5g69bxh.jl:20\\ntest set: Test Failed at /tmp/tmpm5g69bxh.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpm5g69bxh.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm5g69bxh.jl:20\\ntest set: Test Failed at /tmp/tmpm5g69bxh.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpm5g69bxh.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm5g69bxh.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqnesmv2m.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqnesmv2m.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqnesmv2m.jl:20\ntest set: Test Failed at /tmp/tmpqnesmv2m.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqnesmv2m.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqnesmv2m.jl:20\ntest set: Test Failed at /tmp/tmpqnesmv2m.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqnesmv2m.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqnesmv2m.jl:20\ntest set: Test Failed at /tmp/tmpqnesmv2m.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqnesmv2m.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqnesmv2m.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqnesmv2m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd5v7x8xs.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd5v7x8xs.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd5v7x8xs.jl:14\ntest set: Test Failed at /tmp/tmpd5v7x8xs.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd5v7x8xs.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd5v7x8xs.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd5v7x8xs.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgw6wg7uu.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpgw6wg7uu.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw6wg7uu.jl:20\ntest set: Test Failed at /tmp/tmpgw6wg7uu.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgw6wg7uu.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw6wg7uu.jl:20\ntest set: Test Failed at /tmp/tmpgw6wg7uu.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgw6wg7uu.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw6wg7uu.jl:20\ntest set: Test Failed at /tmp/tmpgw6wg7uu.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgw6wg7uu.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw6wg7uu.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgw6wg7uu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp079mbust.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp079mbust.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp079mbust.jl:20\ntest set: Test Failed at /tmp/tmp079mbust.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp079mbust.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp079mbust.jl:20\ntest set: Test Failed at /tmp/tmp079mbust.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp079mbust.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp079mbust.jl:20\ntest set: Test Failed at /tmp/tmp079mbust.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp079mbust.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp079mbust.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp079mbust.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyl9l3cvk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpyl9l3cvk.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyl9l3cvk.jl:20\ntest set: Test Failed at /tmp/tmpyl9l3cvk.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyl9l3cvk.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyl9l3cvk.jl:20\ntest set: Test Failed at /tmp/tmpyl9l3cvk.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyl9l3cvk.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyl9l3cvk.jl:20\ntest set: Test Failed at /tmp/tmpyl9l3cvk.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyl9l3cvk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyl9l3cvk.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyl9l3cvk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6qh6ryhq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp6qh6ryhq.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6qh6ryhq.jl:20\ntest set: Test Failed at /tmp/tmp6qh6ryhq.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6qh6ryhq.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6qh6ryhq.jl:20\ntest set: Test Failed at /tmp/tmp6qh6ryhq.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6qh6ryhq.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6qh6ryhq.jl:20\ntest set: Test Failed at /tmp/tmp6qh6ryhq.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6qh6ryhq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6qh6ryhq.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qh6ryhq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnhza6swb.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnhza6swb.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnhza6swb.jl:20\\ntest set: Test Failed at /tmp/tmpnhza6swb.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpnhza6swb.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnhza6swb.jl:20\\ntest set: Test Failed at /tmp/tmpnhza6swb.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnhza6swb.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnhza6swb.jl:20\\ntest set: Test Failed at /tmp/tmpnhza6swb.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnhza6swb.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnhza6swb.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ibk1li9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0ibk1li9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ibk1li9.jl:20\ntest set: Test Failed at /tmp/tmp0ibk1li9.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0ibk1li9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ibk1li9.jl:20\ntest set: Test Failed at /tmp/tmp0ibk1li9.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ibk1li9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ibk1li9.jl:20\ntest set: Test Failed at /tmp/tmp0ibk1li9.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ibk1li9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ibk1li9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ibk1li9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkc_n3pt1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpkc_n3pt1.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc_n3pt1.jl:20\ntest set: Test Failed at /tmp/tmpkc_n3pt1.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkc_n3pt1.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc_n3pt1.jl:20\ntest set: Test Failed at /tmp/tmpkc_n3pt1.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkc_n3pt1.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc_n3pt1.jl:20\ntest set: Test Failed at /tmp/tmpkc_n3pt1.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkc_n3pt1.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkc_n3pt1.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkc_n3pt1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkd4r8gya.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpkd4r8gya.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd4r8gya.jl:20\ntest set: Test Failed at /tmp/tmpkd4r8gya.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkd4r8gya.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd4r8gya.jl:20\ntest set: Test Failed at /tmp/tmpkd4r8gya.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkd4r8gya.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd4r8gya.jl:20\ntest set: Test Failed at /tmp/tmpkd4r8gya.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkd4r8gya.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd4r8gya.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd4r8gya.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnksb_c_7.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpnksb_c_7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnksb_c_7.jl:20\ntest set: Test Failed at /tmp/tmpnksb_c_7.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnksb_c_7.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnksb_c_7.jl:20\ntest set: Test Failed at /tmp/tmpnksb_c_7.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnksb_c_7.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnksb_c_7.jl:20\ntest set: Test Failed at /tmp/tmpnksb_c_7.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnksb_c_7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnksb_c_7.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnksb_c_7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7l5l1ndl.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7l5l1ndl.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7l5l1ndl.jl:14\ntest set: Test Failed at /tmp/tmp7l5l1ndl.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7l5l1ndl.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7l5l1ndl.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7l5l1ndl.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphe64qu6z.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmphe64qu6z.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphe64qu6z.jl:20\ntest set: Test Failed at /tmp/tmphe64qu6z.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphe64qu6z.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphe64qu6z.jl:20\ntest set: Test Failed at /tmp/tmphe64qu6z.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphe64qu6z.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphe64qu6z.jl:20\ntest set: Test Failed at /tmp/tmphe64qu6z.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphe64qu6z.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphe64qu6z.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphe64qu6z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjfheerwe.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpjfheerwe.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjfheerwe.jl:20\ntest set: Test Failed at /tmp/tmpjfheerwe.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjfheerwe.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjfheerwe.jl:20\ntest set: Test Failed at /tmp/tmpjfheerwe.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjfheerwe.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjfheerwe.jl:20\ntest set: Test Failed at /tmp/tmpjfheerwe.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjfheerwe.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjfheerwe.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjfheerwe.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvt3m_e1g.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpvt3m_e1g.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvt3m_e1g.jl:20\ntest set: Test Failed at /tmp/tmpvt3m_e1g.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvt3m_e1g.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvt3m_e1g.jl:20\ntest set: Test Failed at /tmp/tmpvt3m_e1g.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvt3m_e1g.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvt3m_e1g.jl:20\ntest set: Test Failed at /tmp/tmpvt3m_e1g.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvt3m_e1g.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvt3m_e1g.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvt3m_e1g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3mkd00a0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp3mkd00a0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mkd00a0.jl:20\ntest set: Test Failed at /tmp/tmp3mkd00a0.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3mkd00a0.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mkd00a0.jl:20\ntest set: Test Failed at /tmp/tmp3mkd00a0.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3mkd00a0.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mkd00a0.jl:20\ntest set: Test Failed at /tmp/tmp3mkd00a0.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3mkd00a0.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mkd00a0.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3mkd00a0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpta1ahd81.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpta1ahd81.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpta1ahd81.jl:20\ntest set: Test Failed at /tmp/tmpta1ahd81.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpta1ahd81.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpta1ahd81.jl:20\ntest set: Test Failed at /tmp/tmpta1ahd81.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpta1ahd81.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpta1ahd81.jl:20\ntest set: Test Failed at /tmp/tmpta1ahd81.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpta1ahd81.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpta1ahd81.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpta1ahd81.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8orzcy5k.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8orzcy5k.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8orzcy5k.jl:14\ntest set: Test Failed at /tmp/tmp8orzcy5k.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8orzcy5k.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8orzcy5k.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8orzcy5k.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv562k2ix.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpv562k2ix.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv562k2ix.jl:20\ntest set: Test Failed at /tmp/tmpv562k2ix.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv562k2ix.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv562k2ix.jl:20\ntest set: Test Failed at /tmp/tmpv562k2ix.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv562k2ix.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv562k2ix.jl:20\ntest set: Test Failed at /tmp/tmpv562k2ix.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv562k2ix.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv562k2ix.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv562k2ix.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8t8i__o4.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp8t8i__o4.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8t8i__o4.jl:20\ntest set: Test Failed at /tmp/tmp8t8i__o4.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8t8i__o4.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8t8i__o4.jl:20\ntest set: Test Failed at /tmp/tmp8t8i__o4.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8t8i__o4.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8t8i__o4.jl:20\ntest set: Test Failed at /tmp/tmp8t8i__o4.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8t8i__o4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8t8i__o4.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8t8i__o4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprp4h0g2_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmprp4h0g2_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprp4h0g2_.jl:20\ntest set: Test Failed at /tmp/tmprp4h0g2_.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprp4h0g2_.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprp4h0g2_.jl:20\ntest set: Test Failed at /tmp/tmprp4h0g2_.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprp4h0g2_.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprp4h0g2_.jl:20\ntest set: Test Failed at /tmp/tmprp4h0g2_.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprp4h0g2_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprp4h0g2_.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprp4h0g2_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmiocug30.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpmiocug30.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmiocug30.jl:20\ntest set: Test Failed at /tmp/tmpmiocug30.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmiocug30.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmiocug30.jl:20\ntest set: Test Failed at /tmp/tmpmiocug30.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmiocug30.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmiocug30.jl:20\ntest set: Test Failed at /tmp/tmpmiocug30.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmiocug30.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmiocug30.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmiocug30.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqllwtegw.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqllwtegw.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqllwtegw.jl:20\\ntest set: Test Failed at /tmp/tmpqllwtegw.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqllwtegw.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqllwtegw.jl:20\\ntest set: Test Failed at /tmp/tmpqllwtegw.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqllwtegw.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqllwtegw.jl:20\\ntest set: Test Failed at /tmp/tmpqllwtegw.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqllwtegw.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqllwtegw.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpqllwtegw.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzeiv0c42.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzeiv0c42.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzeiv0c42.jl:20\\ntest set: Test Failed at /tmp/tmpzeiv0c42.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzeiv0c42.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzeiv0c42.jl:20\\ntest set: Test Failed at /tmp/tmpzeiv0c42.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzeiv0c42.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzeiv0c42.jl:20\\ntest set: Test Failed at /tmp/tmpzeiv0c42.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzeiv0c42.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzeiv0c42.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8d3ox4zs.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp8d3ox4zs.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8d3ox4zs.jl:20\ntest set: Test Failed at /tmp/tmp8d3ox4zs.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8d3ox4zs.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8d3ox4zs.jl:20\ntest set: Test Failed at /tmp/tmp8d3ox4zs.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8d3ox4zs.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8d3ox4zs.jl:20\ntest set: Test Failed at /tmp/tmp8d3ox4zs.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8d3ox4zs.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8d3ox4zs.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8d3ox4zs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbuz6iy3z.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpbuz6iy3z.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbuz6iy3z.jl:20\ntest set: Test Failed at /tmp/tmpbuz6iy3z.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbuz6iy3z.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbuz6iy3z.jl:20\ntest set: Test Failed at /tmp/tmpbuz6iy3z.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbuz6iy3z.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbuz6iy3z.jl:20\ntest set: Test Failed at /tmp/tmpbuz6iy3z.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbuz6iy3z.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbuz6iy3z.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbuz6iy3z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppvlbocyj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmppvlbocyj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppvlbocyj.jl:20\ntest set: Test Failed at /tmp/tmppvlbocyj.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppvlbocyj.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppvlbocyj.jl:20\ntest set: Test Failed at /tmp/tmppvlbocyj.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppvlbocyj.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppvlbocyj.jl:20\ntest set: Test Failed at /tmp/tmppvlbocyj.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppvlbocyj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppvlbocyj.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppvlbocyj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxuooasa1.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxuooasa1.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxuooasa1.jl:20\\ntest set: Test Failed at /tmp/tmpxuooasa1.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpxuooasa1.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxuooasa1.jl:20\\ntest set: Test Failed at /tmp/tmpxuooasa1.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxuooasa1.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxuooasa1.jl:20\\ntest set: Test Failed at /tmp/tmpxuooasa1.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxuooasa1.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxuooasa1.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph843hbdq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmph843hbdq.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph843hbdq.jl:20\ntest set: Test Failed at /tmp/tmph843hbdq.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph843hbdq.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph843hbdq.jl:20\ntest set: Test Failed at /tmp/tmph843hbdq.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph843hbdq.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph843hbdq.jl:20\ntest set: Test Failed at /tmp/tmph843hbdq.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph843hbdq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph843hbdq.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph843hbdq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp488r8fuk.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp488r8fuk.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp488r8fuk.jl:20\\ntest set: Test Failed at /tmp/tmp488r8fuk.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp488r8fuk.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp488r8fuk.jl:20\\ntest set: Test Failed at /tmp/tmp488r8fuk.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp488r8fuk.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp488r8fuk.jl:20\\ntest set: Test Failed at /tmp/tmp488r8fuk.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp488r8fuk.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp488r8fuk.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsalmxtj2.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpsalmxtj2.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsalmxtj2.jl:20\ntest set: Test Failed at /tmp/tmpsalmxtj2.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsalmxtj2.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsalmxtj2.jl:20\ntest set: Test Failed at /tmp/tmpsalmxtj2.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsalmxtj2.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsalmxtj2.jl:20\ntest set: Test Failed at /tmp/tmpsalmxtj2.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsalmxtj2.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsalmxtj2.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsalmxtj2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc7uah70d.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpc7uah70d.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7uah70d.jl:20\ntest set: Test Failed at /tmp/tmpc7uah70d.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7uah70d.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7uah70d.jl:20\ntest set: Test Failed at /tmp/tmpc7uah70d.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc7uah70d.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7uah70d.jl:20\ntest set: Test Failed at /tmp/tmpc7uah70d.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc7uah70d.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7uah70d.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc7uah70d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps7z5fmik.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmps7z5fmik.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7z5fmik.jl:20\ntest set: Test Failed at /tmp/tmps7z5fmik.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps7z5fmik.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7z5fmik.jl:20\ntest set: Test Failed at /tmp/tmps7z5fmik.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7z5fmik.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7z5fmik.jl:20\ntest set: Test Failed at /tmp/tmps7z5fmik.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7z5fmik.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7z5fmik.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7z5fmik.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6hjh7q9k.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp6hjh7q9k.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hjh7q9k.jl:20\ntest set: Test Failed at /tmp/tmp6hjh7q9k.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6hjh7q9k.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hjh7q9k.jl:20\ntest set: Test Failed at /tmp/tmp6hjh7q9k.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6hjh7q9k.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hjh7q9k.jl:20\ntest set: Test Failed at /tmp/tmp6hjh7q9k.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6hjh7q9k.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hjh7q9k.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hjh7q9k.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzs9v1zkn.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpzs9v1zkn.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzs9v1zkn.jl:20\ntest set: Test Failed at /tmp/tmpzs9v1zkn.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzs9v1zkn.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzs9v1zkn.jl:20\ntest set: Test Failed at /tmp/tmpzs9v1zkn.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzs9v1zkn.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzs9v1zkn.jl:20\ntest set: Test Failed at /tmp/tmpzs9v1zkn.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzs9v1zkn.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzs9v1zkn.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzs9v1zkn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp0215dxc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpp0215dxc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp0215dxc.jl:20\ntest set: Test Failed at /tmp/tmpp0215dxc.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp0215dxc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp0215dxc.jl:20\ntest set: Test Failed at /tmp/tmpp0215dxc.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp0215dxc.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp0215dxc.jl:20\ntest set: Test Failed at /tmp/tmpp0215dxc.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp0215dxc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp0215dxc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0215dxc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgwaunghb.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpgwaunghb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgwaunghb.jl:20\ntest set: Test Failed at /tmp/tmpgwaunghb.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgwaunghb.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgwaunghb.jl:20\ntest set: Test Failed at /tmp/tmpgwaunghb.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgwaunghb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgwaunghb.jl:20\ntest set: Test Failed at /tmp/tmpgwaunghb.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgwaunghb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgwaunghb.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgwaunghb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7mbyt4p8.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7mbyt4p8.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7mbyt4p8.jl:20\\ntest set: Test Failed at /tmp/tmp7mbyt4p8.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp7mbyt4p8.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7mbyt4p8.jl:20\\ntest set: Test Failed at /tmp/tmp7mbyt4p8.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7mbyt4p8.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7mbyt4p8.jl:20\\ntest set: Test Failed at /tmp/tmp7mbyt4p8.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7mbyt4p8.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7mbyt4p8.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp7mbyt4p8.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw9hyhgb3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpw9hyhgb3.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9hyhgb3.jl:20\ntest set: Test Failed at /tmp/tmpw9hyhgb3.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw9hyhgb3.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9hyhgb3.jl:20\ntest set: Test Failed at /tmp/tmpw9hyhgb3.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw9hyhgb3.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9hyhgb3.jl:20\ntest set: Test Failed at /tmp/tmpw9hyhgb3.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw9hyhgb3.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9hyhgb3.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9hyhgb3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ktsd10e.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp6ktsd10e.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ktsd10e.jl:20\ntest set: Test Failed at /tmp/tmp6ktsd10e.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6ktsd10e.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ktsd10e.jl:20\ntest set: Test Failed at /tmp/tmp6ktsd10e.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ktsd10e.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ktsd10e.jl:20\ntest set: Test Failed at /tmp/tmp6ktsd10e.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ktsd10e.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ktsd10e.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ktsd10e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg4kr2zi9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpg4kr2zi9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4kr2zi9.jl:20\ntest set: Test Failed at /tmp/tmpg4kr2zi9.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg4kr2zi9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4kr2zi9.jl:20\ntest set: Test Failed at /tmp/tmpg4kr2zi9.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg4kr2zi9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4kr2zi9.jl:20\ntest set: Test Failed at /tmp/tmpg4kr2zi9.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg4kr2zi9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg4kr2zi9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg4kr2zi9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_1k24hqs.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_1k24hqs.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1k24hqs.jl:20\\ntest set: Test Failed at /tmp/tmp_1k24hqs.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_1k24hqs.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1k24hqs.jl:20\\ntest set: Test Failed at /tmp/tmp_1k24hqs.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_1k24hqs.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1k24hqs.jl:20\\ntest set: Test Failed at /tmp/tmp_1k24hqs.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_1k24hqs.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1k24hqs.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg9ynvd40.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpg9ynvd40.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9ynvd40.jl:20\ntest set: Test Failed at /tmp/tmpg9ynvd40.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg9ynvd40.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9ynvd40.jl:20\ntest set: Test Failed at /tmp/tmpg9ynvd40.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg9ynvd40.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9ynvd40.jl:20\ntest set: Test Failed at /tmp/tmpg9ynvd40.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg9ynvd40.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg9ynvd40.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg9ynvd40.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmmkzi3xc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpmmkzi3xc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmmkzi3xc.jl:20\ntest set: Test Failed at /tmp/tmpmmkzi3xc.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmmkzi3xc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmmkzi3xc.jl:20\ntest set: Test Failed at /tmp/tmpmmkzi3xc.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmmkzi3xc.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmmkzi3xc.jl:20\ntest set: Test Failed at /tmp/tmpmmkzi3xc.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmmkzi3xc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmmkzi3xc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmkzi3xc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcj7dbdyh.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcj7dbdyh.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcj7dbdyh.jl:14\ntest set: Test Failed at /tmp/tmpcj7dbdyh.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcj7dbdyh.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcj7dbdyh.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcj7dbdyh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7it_t0ep.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp7it_t0ep.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7it_t0ep.jl:20\ntest set: Test Failed at /tmp/tmp7it_t0ep.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7it_t0ep.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7it_t0ep.jl:20\ntest set: Test Failed at /tmp/tmp7it_t0ep.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7it_t0ep.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7it_t0ep.jl:20\ntest set: Test Failed at /tmp/tmp7it_t0ep.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7it_t0ep.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7it_t0ep.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7it_t0ep.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcpvs_pph.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpcpvs_pph.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcpvs_pph.jl:20\ntest set: Test Failed at /tmp/tmpcpvs_pph.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcpvs_pph.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcpvs_pph.jl:20\ntest set: Test Failed at /tmp/tmpcpvs_pph.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcpvs_pph.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcpvs_pph.jl:20\ntest set: Test Failed at /tmp/tmpcpvs_pph.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcpvs_pph.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcpvs_pph.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcpvs_pph.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnmqh6q6e.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpnmqh6q6e.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnmqh6q6e.jl:20\ntest set: Test Failed at /tmp/tmpnmqh6q6e.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnmqh6q6e.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnmqh6q6e.jl:20\ntest set: Test Failed at /tmp/tmpnmqh6q6e.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnmqh6q6e.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnmqh6q6e.jl:20\ntest set: Test Failed at /tmp/tmpnmqh6q6e.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnmqh6q6e.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnmqh6q6e.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmqh6q6e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmg77g4xa.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpmg77g4xa.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmg77g4xa.jl:20\ntest set: Test Failed at /tmp/tmpmg77g4xa.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmg77g4xa.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmg77g4xa.jl:20\ntest set: Test Failed at /tmp/tmpmg77g4xa.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmg77g4xa.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmg77g4xa.jl:20\ntest set: Test Failed at /tmp/tmpmg77g4xa.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmg77g4xa.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmg77g4xa.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmg77g4xa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw7zhq1dh.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpw7zhq1dh.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw7zhq1dh.jl:20\ntest set: Test Failed at /tmp/tmpw7zhq1dh.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw7zhq1dh.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw7zhq1dh.jl:20\ntest set: Test Failed at /tmp/tmpw7zhq1dh.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw7zhq1dh.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw7zhq1dh.jl:20\ntest set: Test Failed at /tmp/tmpw7zhq1dh.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw7zhq1dh.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw7zhq1dh.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7zhq1dh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ = 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n \
    \       end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5aejl3ix.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5aejl3ix.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5aejl3ix.jl:20\\ntest set: Test Failed at /tmp/tmp5aejl3ix.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp5aejl3ix.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5aejl3ix.jl:20\\ntest set: Test Failed at /tmp/tmp5aejl3ix.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5aejl3ix.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5aejl3ix.jl:20\\ntest set: Test Failed at /tmp/tmp5aejl3ix.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp5aejl3ix.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5aejl3ix.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    \    sum = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8khk3jp.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_8khk3jp.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8khk3jp.jl:21\ntest set: Test Failed at /tmp/tmp_8khk3jp.jl:23\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_8khk3jp.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8khk3jp.jl:21\ntest set: Test Failed at /tmp/tmp_8khk3jp.jl:24\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_8khk3jp.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8khk3jp.jl:21\ntest set: Test Failed at /tmp/tmp_8khk3jp.jl:25\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_8khk3jp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_8khk3jp.jl:21\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8khk3jp.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjn3psm25.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpjn3psm25.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjn3psm25.jl:20\ntest set: Test Failed at /tmp/tmpjn3psm25.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjn3psm25.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjn3psm25.jl:20\ntest set: Test Failed at /tmp/tmpjn3psm25.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjn3psm25.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjn3psm25.jl:20\ntest set: Test Failed at /tmp/tmpjn3psm25.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjn3psm25.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjn3psm25.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjn3psm25.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4410s0w.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpr4410s0w.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4410s0w.jl:20\ntest set: Test Failed at /tmp/tmpr4410s0w.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr4410s0w.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4410s0w.jl:20\ntest set: Test Failed at /tmp/tmpr4410s0w.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr4410s0w.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4410s0w.jl:20\ntest set: Test Failed at /tmp/tmpr4410s0w.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr4410s0w.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr4410s0w.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4410s0w.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1qbczskn.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp1qbczskn.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qbczskn.jl:20\ntest set: Test Failed at /tmp/tmp1qbczskn.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1qbczskn.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qbczskn.jl:20\ntest set: Test Failed at /tmp/tmp1qbczskn.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1qbczskn.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qbczskn.jl:20\ntest set: Test Failed at /tmp/tmp1qbczskn.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1qbczskn.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1qbczskn.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1qbczskn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm7u0xsbm.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpm7u0xsbm.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7u0xsbm.jl:20\ntest set: Test Failed at /tmp/tmpm7u0xsbm.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm7u0xsbm.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7u0xsbm.jl:20\ntest set: Test Failed at /tmp/tmpm7u0xsbm.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm7u0xsbm.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7u0xsbm.jl:20\ntest set: Test Failed at /tmp/tmpm7u0xsbm.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm7u0xsbm.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7u0xsbm.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7u0xsbm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0yt3xu98.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0yt3xu98.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0yt3xu98.jl:20\ntest set: Test Failed at /tmp/tmp0yt3xu98.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0yt3xu98.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0yt3xu98.jl:20\ntest set: Test Failed at /tmp/tmp0yt3xu98.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0yt3xu98.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0yt3xu98.jl:20\ntest set: Test Failed at /tmp/tmp0yt3xu98.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0yt3xu98.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0yt3xu98.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0yt3xu98.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqsu7puf4.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqsu7puf4.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsu7puf4.jl:20\ntest set: Test Failed at /tmp/tmpqsu7puf4.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqsu7puf4.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsu7puf4.jl:20\ntest set: Test Failed at /tmp/tmpqsu7puf4.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqsu7puf4.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsu7puf4.jl:20\ntest set: Test Failed at /tmp/tmpqsu7puf4.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqsu7puf4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsu7puf4.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsu7puf4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqw6yzhhr.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqw6yzhhr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqw6yzhhr.jl:20\ntest set: Test Failed at /tmp/tmpqw6yzhhr.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqw6yzhhr.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqw6yzhhr.jl:20\ntest set: Test Failed at /tmp/tmpqw6yzhhr.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqw6yzhhr.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqw6yzhhr.jl:20\ntest set: Test Failed at /tmp/tmpqw6yzhhr.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqw6yzhhr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqw6yzhhr.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqw6yzhhr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxyip3phn.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxyip3phn.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxyip3phn.jl:20\\ntest set: Test Failed at /tmp/tmpxyip3phn.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpxyip3phn.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxyip3phn.jl:20\\ntest set: Test Failed at /tmp/tmpxyip3phn.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxyip3phn.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxyip3phn.jl:20\\ntest set: Test Failed at /tmp/tmpxyip3phn.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxyip3phn.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxyip3phn.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpc64z77hb.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc64z77hb.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc64z77hb.jl:20\\ntest set: Test Failed at /tmp/tmpc64z77hb.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc64z77hb.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc64z77hb.jl:20\\ntest set: Test Failed at /tmp/tmpc64z77hb.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpc64z77hb.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc64z77hb.jl:20\\ntest set: Test Failed at /tmp/tmpc64z77hb.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpc64z77hb.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc64z77hb.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcstlcfeb.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpcstlcfeb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcstlcfeb.jl:20\ntest set: Test Failed at /tmp/tmpcstlcfeb.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcstlcfeb.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcstlcfeb.jl:20\ntest set: Test Failed at /tmp/tmpcstlcfeb.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcstlcfeb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcstlcfeb.jl:20\ntest set: Test Failed at /tmp/tmpcstlcfeb.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcstlcfeb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcstlcfeb.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcstlcfeb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_id9bb4n.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_id9bb4n.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_id9bb4n.jl:20\ntest set: Test Failed at /tmp/tmp_id9bb4n.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_id9bb4n.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_id9bb4n.jl:20\ntest set: Test Failed at /tmp/tmp_id9bb4n.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_id9bb4n.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_id9bb4n.jl:20\ntest set: Test Failed at /tmp/tmp_id9bb4n.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_id9bb4n.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_id9bb4n.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_id9bb4n.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4_fpulbb.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp4_fpulbb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_fpulbb.jl:20\ntest set: Test Failed at /tmp/tmp4_fpulbb.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4_fpulbb.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_fpulbb.jl:20\ntest set: Test Failed at /tmp/tmp4_fpulbb.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_fpulbb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_fpulbb.jl:20\ntest set: Test Failed at /tmp/tmp4_fpulbb.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4_fpulbb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4_fpulbb.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_fpulbb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7l38i_w9.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7l38i_w9.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7l38i_w9.jl:14\ntest set: Test Failed at /tmp/tmp7l38i_w9.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7l38i_w9.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7l38i_w9.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7l38i_w9.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf734ijvy.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpf734ijvy.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf734ijvy.jl:20\ntest set: Test Failed at /tmp/tmpf734ijvy.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf734ijvy.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf734ijvy.jl:20\ntest set: Test Failed at /tmp/tmpf734ijvy.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf734ijvy.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf734ijvy.jl:20\ntest set: Test Failed at /tmp/tmpf734ijvy.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf734ijvy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf734ijvy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf734ijvy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyzgoyqc9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpyzgoyqc9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzgoyqc9.jl:20\ntest set: Test Failed at /tmp/tmpyzgoyqc9.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyzgoyqc9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzgoyqc9.jl:20\ntest set: Test Failed at /tmp/tmpyzgoyqc9.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyzgoyqc9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzgoyqc9.jl:20\ntest set: Test Failed at /tmp/tmpyzgoyqc9.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyzgoyqc9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzgoyqc9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzgoyqc9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps10a13yr.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmps10a13yr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps10a13yr.jl:20\ntest set: Test Failed at /tmp/tmps10a13yr.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps10a13yr.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps10a13yr.jl:20\ntest set: Test Failed at /tmp/tmps10a13yr.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps10a13yr.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps10a13yr.jl:20\ntest set: Test Failed at /tmp/tmps10a13yr.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps10a13yr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps10a13yr.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps10a13yr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp026hhjae.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp026hhjae.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp026hhjae.jl:20\ntest set: Test Failed at /tmp/tmp026hhjae.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp026hhjae.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp026hhjae.jl:20\ntest set: Test Failed at /tmp/tmp026hhjae.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp026hhjae.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp026hhjae.jl:20\ntest set: Test Failed at /tmp/tmp026hhjae.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp026hhjae.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp026hhjae.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp026hhjae.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4fwxl870.jl:16\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 134 == 122\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp4fwxl870.jl:16\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4fwxl870.jl:14\\ntest set: Test Failed at /tmp/tmp4fwxl870.jl:17\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 7 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp4fwxl870.jl:17\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4fwxl870.jl:14\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     2      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp4fwxl870.jl:12\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdjdnsoyd.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdjdnsoyd.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdjdnsoyd.jl:14\ntest set: Test Failed at /tmp/tmpdjdnsoyd.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdjdnsoyd.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdjdnsoyd.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdjdnsoyd.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq5j10ggc.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq5j10ggc.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5j10ggc.jl:20\\ntest set: Test Failed at /tmp/tmpq5j10ggc.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpq5j10ggc.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5j10ggc.jl:20\\ntest set: Test Failed at /tmp/tmpq5j10ggc.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq5j10ggc.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5j10ggc.jl:20\\ntest set: Test Failed at /tmp/tmpq5j10ggc.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq5j10ggc.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5j10ggc.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3shz0z7f.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3shz0z7f.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3shz0z7f.jl:20\\ntest set: Test Failed at /tmp/tmp3shz0z7f.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3shz0z7f.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3shz0z7f.jl:20\\ntest set: Test Failed at /tmp/tmp3shz0z7f.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3shz0z7f.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3shz0z7f.jl:20\\ntest set: Test Failed at /tmp/tmp3shz0z7f.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3shz0z7f.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3shz0z7f.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsvnn4uv7.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsvnn4uv7.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsvnn4uv7.jl:14\ntest set: Test Failed at /tmp/tmpsvnn4uv7.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsvnn4uv7.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsvnn4uv7.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsvnn4uv7.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0xtag90s.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0xtag90s.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0xtag90s.jl:20\ntest set: Test Failed at /tmp/tmp0xtag90s.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0xtag90s.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0xtag90s.jl:20\ntest set: Test Failed at /tmp/tmp0xtag90s.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0xtag90s.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0xtag90s.jl:20\ntest set: Test Failed at /tmp/tmp0xtag90s.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0xtag90s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0xtag90s.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xtag90s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt5vtwy7_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpt5vtwy7_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt5vtwy7_.jl:20\ntest set: Test Failed at /tmp/tmpt5vtwy7_.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt5vtwy7_.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt5vtwy7_.jl:20\ntest set: Test Failed at /tmp/tmpt5vtwy7_.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt5vtwy7_.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt5vtwy7_.jl:20\ntest set: Test Failed at /tmp/tmpt5vtwy7_.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt5vtwy7_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt5vtwy7_.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt5vtwy7_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiairj2vt.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpiairj2vt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiairj2vt.jl:20\ntest set: Test Failed at /tmp/tmpiairj2vt.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpiairj2vt.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiairj2vt.jl:20\ntest set: Test Failed at /tmp/tmpiairj2vt.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiairj2vt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiairj2vt.jl:20\ntest set: Test Failed at /tmp/tmpiairj2vt.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiairj2vt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiairj2vt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiairj2vt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsnu47w9a.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpsnu47w9a.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnu47w9a.jl:20\\ntest set: Test Failed at /tmp/tmpsnu47w9a.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpsnu47w9a.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnu47w9a.jl:20\\ntest set: Test Failed at /tmp/tmpsnu47w9a.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpsnu47w9a.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnu47w9a.jl:20\\ntest set: Test Failed at /tmp/tmpsnu47w9a.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpsnu47w9a.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnu47w9a.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5iuwjoc.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps5iuwjoc.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps5iuwjoc.jl:14\ntest set: Test Failed at /tmp/tmps5iuwjoc.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps5iuwjoc.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps5iuwjoc.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5iuwjoc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpg91oanhf.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpg91oanhf.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg91oanhf.jl:20\\ntest set: Test Failed at /tmp/tmpg91oanhf.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpg91oanhf.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg91oanhf.jl:20\\ntest set: Test Failed at /tmp/tmpg91oanhf.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpg91oanhf.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg91oanhf.jl:20\\ntest set: Test Failed at /tmp/tmpg91oanhf.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpg91oanhf.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg91oanhf.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp196xxz1o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp196xxz1o.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp196xxz1o.jl:20\ntest set: Test Failed at /tmp/tmp196xxz1o.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp196xxz1o.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp196xxz1o.jl:20\ntest set: Test Failed at /tmp/tmp196xxz1o.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp196xxz1o.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp196xxz1o.jl:20\ntest set: Test Failed at /tmp/tmp196xxz1o.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp196xxz1o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp196xxz1o.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp196xxz1o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuvg52226.jl:16\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 134 == 122\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpuvg52226.jl:16\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuvg52226.jl:14\\ntest set: Test Failed at /tmp/tmpuvg52226.jl:17\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 7 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpuvg52226.jl:17\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuvg52226.jl:14\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp92weofx3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp92weofx3.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp92weofx3.jl:20\ntest set: Test Failed at /tmp/tmp92weofx3.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp92weofx3.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp92weofx3.jl:20\ntest set: Test Failed at /tmp/tmp92weofx3.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp92weofx3.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp92weofx3.jl:20\ntest set: Test Failed at /tmp/tmp92weofx3.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp92weofx3.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp92weofx3.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp92weofx3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_dqzqzw.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpj_dqzqzw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_dqzqzw.jl:20\ntest set: Test Failed at /tmp/tmpj_dqzqzw.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj_dqzqzw.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_dqzqzw.jl:20\ntest set: Test Failed at /tmp/tmpj_dqzqzw.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_dqzqzw.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_dqzqzw.jl:20\ntest set: Test Failed at /tmp/tmpj_dqzqzw.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_dqzqzw.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_dqzqzw.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_dqzqzw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_70e_3wg.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_70e_3wg.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_70e_3wg.jl:20\\ntest set: Test Failed at /tmp/tmp_70e_3wg.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_70e_3wg.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_70e_3wg.jl:20\\ntest set: Test Failed at /tmp/tmp_70e_3wg.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_70e_3wg.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_70e_3wg.jl:20\\ntest set: Test Failed at /tmp/tmp_70e_3wg.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_70e_3wg.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_70e_3wg.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8lxe6yty.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp8lxe6yty.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lxe6yty.jl:20\ntest set: Test Failed at /tmp/tmp8lxe6yty.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8lxe6yty.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lxe6yty.jl:20\ntest set: Test Failed at /tmp/tmp8lxe6yty.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8lxe6yty.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lxe6yty.jl:20\ntest set: Test Failed at /tmp/tmp8lxe6yty.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8lxe6yty.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lxe6yty.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lxe6yty.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqbwhu3kt.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqbwhu3kt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbwhu3kt.jl:20\ntest set: Test Failed at /tmp/tmpqbwhu3kt.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbwhu3kt.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbwhu3kt.jl:20\ntest set: Test Failed at /tmp/tmpqbwhu3kt.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqbwhu3kt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbwhu3kt.jl:20\ntest set: Test Failed at /tmp/tmpqbwhu3kt.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqbwhu3kt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbwhu3kt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbwhu3kt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqu1clrjx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqu1clrjx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu1clrjx.jl:20\ntest set: Test Failed at /tmp/tmpqu1clrjx.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqu1clrjx.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu1clrjx.jl:20\ntest set: Test Failed at /tmp/tmpqu1clrjx.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqu1clrjx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu1clrjx.jl:20\ntest set: Test Failed at /tmp/tmpqu1clrjx.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqu1clrjx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu1clrjx.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu1clrjx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7valxyvv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp7valxyvv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7valxyvv.jl:20\ntest set: Test Failed at /tmp/tmp7valxyvv.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7valxyvv.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7valxyvv.jl:20\ntest set: Test Failed at /tmp/tmp7valxyvv.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7valxyvv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7valxyvv.jl:20\ntest set: Test Failed at /tmp/tmp7valxyvv.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7valxyvv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7valxyvv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7valxyvv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppat9wawr.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmppat9wawr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppat9wawr.jl:20\ntest set: Test Failed at /tmp/tmppat9wawr.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppat9wawr.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppat9wawr.jl:20\ntest set: Test Failed at /tmp/tmppat9wawr.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppat9wawr.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppat9wawr.jl:20\ntest set: Test Failed at /tmp/tmppat9wawr.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppat9wawr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppat9wawr.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppat9wawr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyyu8lvpm.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyyu8lvpm.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyyu8lvpm.jl:14\ntest set: Test Failed at /tmp/tmpyyu8lvpm.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyyu8lvpm.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyyu8lvpm.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyyu8lvpm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpk1e4wk.jl:15\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpbpk1e4wk.jl:15\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpk1e4wk.jl:14\ntest set: Test Failed at /tmp/tmpbpk1e4wk.jl:16\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbpk1e4wk.jl:16\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpk1e4wk.jl:14\ntest set: Test Failed at /tmp/tmpbpk1e4wk.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbpk1e4wk.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpk1e4wk.jl:14\ntest set: Test Failed at /tmp/tmpbpk1e4wk.jl:18\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbpk1e4wk.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpk1e4wk.jl:14\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpk1e4wk.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptjan0ljv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmptjan0ljv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjan0ljv.jl:20\ntest set: Test Failed at /tmp/tmptjan0ljv.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptjan0ljv.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjan0ljv.jl:20\ntest set: Test Failed at /tmp/tmptjan0ljv.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptjan0ljv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjan0ljv.jl:20\ntest set: Test Failed at /tmp/tmptjan0ljv.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptjan0ljv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjan0ljv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptjan0ljv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpai71y_ov.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpai71y_ov.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpai71y_ov.jl:20\\ntest set: Test Failed at /tmp/tmpai71y_ov.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpai71y_ov.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpai71y_ov.jl:20\\ntest set: Test Failed at /tmp/tmpai71y_ov.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpai71y_ov.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpai71y_ov.jl:20\\ntest set: Test Failed at /tmp/tmpai71y_ov.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpai71y_ov.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpai71y_ov.jl:20\\nTest Summary: | Fail  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphpsnmng_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmphpsnmng_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpsnmng_.jl:20\ntest set: Test Failed at /tmp/tmphpsnmng_.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphpsnmng_.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpsnmng_.jl:20\ntest set: Test Failed at /tmp/tmphpsnmng_.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphpsnmng_.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpsnmng_.jl:20\ntest set: Test Failed at /tmp/tmphpsnmng_.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphpsnmng_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpsnmng_.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpsnmng_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp76h06yku.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp76h06yku.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp76h06yku.jl:20\ntest set: Test Failed at /tmp/tmp76h06yku.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp76h06yku.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp76h06yku.jl:20\ntest set: Test Failed at /tmp/tmp76h06yku.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp76h06yku.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp76h06yku.jl:20\ntest set: Test Failed at /tmp/tmp76h06yku.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp76h06yku.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp76h06yku.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp76h06yku.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86o2wm9r.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp86o2wm9r.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86o2wm9r.jl:20\ntest set: Test Failed at /tmp/tmp86o2wm9r.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp86o2wm9r.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86o2wm9r.jl:20\ntest set: Test Failed at /tmp/tmp86o2wm9r.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp86o2wm9r.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86o2wm9r.jl:20\ntest set: Test Failed at /tmp/tmp86o2wm9r.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp86o2wm9r.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86o2wm9r.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86o2wm9r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1z9wmafp.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1z9wmafp.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1z9wmafp.jl:20\\ntest set: Test Failed at /tmp/tmp1z9wmafp.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1z9wmafp.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1z9wmafp.jl:20\\ntest set: Test Failed at /tmp/tmp1z9wmafp.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1z9wmafp.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1z9wmafp.jl:20\\ntest set: Test Failed at /tmp/tmp1z9wmafp.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1z9wmafp.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1z9wmafp.jl:20\\nTest Summary: | Fail  Total\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnbig_edh.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnbig_edh.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnbig_edh.jl:20\\ntest set: Test Failed at /tmp/tmpnbig_edh.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpnbig_edh.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnbig_edh.jl:20\\ntest set: Test Failed at /tmp/tmpnbig_edh.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnbig_edh.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnbig_edh.jl:20\\ntest set: Test Failed at /tmp/tmpnbig_edh.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnbig_edh.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnbig_edh.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpokvwiy0s.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpokvwiy0s.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpokvwiy0s.jl:20\ntest set: Test Failed at /tmp/tmpokvwiy0s.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpokvwiy0s.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpokvwiy0s.jl:20\ntest set: Test Failed at /tmp/tmpokvwiy0s.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpokvwiy0s.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpokvwiy0s.jl:20\ntest set: Test Failed at /tmp/tmpokvwiy0s.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpokvwiy0s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpokvwiy0s.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpokvwiy0s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuj77li1h.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpuj77li1h.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj77li1h.jl:20\ntest set: Test Failed at /tmp/tmpuj77li1h.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuj77li1h.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj77li1h.jl:20\ntest set: Test Failed at /tmp/tmpuj77li1h.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuj77li1h.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj77li1h.jl:20\ntest set: Test Failed at /tmp/tmpuj77li1h.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuj77li1h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj77li1h.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuj77li1h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx9euhkwz.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpx9euhkwz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9euhkwz.jl:20\ntest set: Test Failed at /tmp/tmpx9euhkwz.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx9euhkwz.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9euhkwz.jl:20\ntest set: Test Failed at /tmp/tmpx9euhkwz.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9euhkwz.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9euhkwz.jl:20\ntest set: Test Failed at /tmp/tmpx9euhkwz.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9euhkwz.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9euhkwz.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9euhkwz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxsxatq7o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpxsxatq7o.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsxatq7o.jl:20\ntest set: Test Failed at /tmp/tmpxsxatq7o.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxsxatq7o.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsxatq7o.jl:20\ntest set: Test Failed at /tmp/tmpxsxatq7o.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxsxatq7o.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsxatq7o.jl:20\ntest set: Test Failed at /tmp/tmpxsxatq7o.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxsxatq7o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsxatq7o.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxsxatq7o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpag0t_tm7.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpag0t_tm7.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag0t_tm7.jl:20\\ntest set: Test Failed at /tmp/tmpag0t_tm7.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpag0t_tm7.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag0t_tm7.jl:20\\ntest set: Test Failed at /tmp/tmpag0t_tm7.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpag0t_tm7.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag0t_tm7.jl:20\\ntest set: Test Failed at /tmp/tmpag0t_tm7.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpag0t_tm7.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag0t_tm7.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa582hl2g.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpa582hl2g.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa582hl2g.jl:20\ntest set: Test Failed at /tmp/tmpa582hl2g.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa582hl2g.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa582hl2g.jl:20\ntest set: Test Failed at /tmp/tmpa582hl2g.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa582hl2g.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa582hl2g.jl:20\ntest set: Test Failed at /tmp/tmpa582hl2g.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa582hl2g.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa582hl2g.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa582hl2g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpoi52akyk.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpoi52akyk.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoi52akyk.jl:20\\ntest set: Test Failed at /tmp/tmpoi52akyk.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpoi52akyk.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoi52akyk.jl:20\\ntest set: Test Failed at /tmp/tmpoi52akyk.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpoi52akyk.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoi52akyk.jl:20\\ntest set: Test Failed at /tmp/tmpoi52akyk.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpoi52akyk.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoi52akyk.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzavfni9w.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzavfni9w.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzavfni9w.jl:20\\ntest set: Test Failed at /tmp/tmpzavfni9w.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzavfni9w.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzavfni9w.jl:20\\ntest set: Test Failed at /tmp/tmpzavfni9w.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzavfni9w.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzavfni9w.jl:20\\ntest set: Test Failed at /tmp/tmpzavfni9w.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzavfni9w.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzavfni9w.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpoz_3rkht.jl:16\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 134 == 122\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpoz_3rkht.jl:16\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoz_3rkht.jl:14\\ntest set: Test Failed at /tmp/tmpoz_3rkht.jl:17\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 7 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpoz_3rkht.jl:17\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoz_3rkht.jl:14\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     2      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0zmu5qpx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0zmu5qpx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zmu5qpx.jl:20\ntest set: Test Failed at /tmp/tmp0zmu5qpx.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0zmu5qpx.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zmu5qpx.jl:20\ntest set: Test Failed at /tmp/tmp0zmu5qpx.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0zmu5qpx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zmu5qpx.jl:20\ntest set: Test Failed at /tmp/tmp0zmu5qpx.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0zmu5qpx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zmu5qpx.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0zmu5qpx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplh1gsidk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmplh1gsidk.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplh1gsidk.jl:20\ntest set: Test Failed at /tmp/tmplh1gsidk.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplh1gsidk.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplh1gsidk.jl:20\ntest set: Test Failed at /tmp/tmplh1gsidk.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplh1gsidk.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplh1gsidk.jl:20\ntest set: Test Failed at /tmp/tmplh1gsidk.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplh1gsidk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplh1gsidk.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplh1gsidk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi6traoju.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpi6traoju.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6traoju.jl:20\ntest set: Test Failed at /tmp/tmpi6traoju.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi6traoju.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6traoju.jl:20\ntest set: Test Failed at /tmp/tmpi6traoju.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi6traoju.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6traoju.jl:20\ntest set: Test Failed at /tmp/tmpi6traoju.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi6traoju.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6traoju.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi6traoju.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykdbz283.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpykdbz283.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykdbz283.jl:20\ntest set: Test Failed at /tmp/tmpykdbz283.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpykdbz283.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykdbz283.jl:20\ntest set: Test Failed at /tmp/tmpykdbz283.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpykdbz283.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykdbz283.jl:20\ntest set: Test Failed at /tmp/tmpykdbz283.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpykdbz283.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykdbz283.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykdbz283.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpswjsfvxl.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpswjsfvxl.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpswjsfvxl.jl:20\ntest set: Test Failed at /tmp/tmpswjsfvxl.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpswjsfvxl.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpswjsfvxl.jl:20\ntest set: Test Failed at /tmp/tmpswjsfvxl.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpswjsfvxl.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpswjsfvxl.jl:20\ntest set: Test Failed at /tmp/tmpswjsfvxl.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpswjsfvxl.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpswjsfvxl.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswjsfvxl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppocmpk1s.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmppocmpk1s.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppocmpk1s.jl:20\\ntest set: Test Failed at /tmp/tmppocmpk1s.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmppocmpk1s.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppocmpk1s.jl:20\\ntest set: Test Failed at /tmp/tmppocmpk1s.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmppocmpk1s.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppocmpk1s.jl:20\\ntest set: Test Failed at /tmp/tmppocmpk1s.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmppocmpk1s.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppocmpk1s.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph9o0h1cg.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmph9o0h1cg.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph9o0h1cg.jl:20\ntest set: Test Failed at /tmp/tmph9o0h1cg.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph9o0h1cg.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph9o0h1cg.jl:20\ntest set: Test Failed at /tmp/tmph9o0h1cg.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph9o0h1cg.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph9o0h1cg.jl:20\ntest set: Test Failed at /tmp/tmph9o0h1cg.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph9o0h1cg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph9o0h1cg.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph9o0h1cg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf08twcd8.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpf08twcd8.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf08twcd8.jl:20\ntest set: Test Failed at /tmp/tmpf08twcd8.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf08twcd8.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf08twcd8.jl:20\ntest set: Test Failed at /tmp/tmpf08twcd8.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf08twcd8.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf08twcd8.jl:20\ntest set: Test Failed at /tmp/tmpf08twcd8.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf08twcd8.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf08twcd8.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf08twcd8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsim0zte7.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpsim0zte7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsim0zte7.jl:20\ntest set: Test Failed at /tmp/tmpsim0zte7.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsim0zte7.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsim0zte7.jl:20\ntest set: Test Failed at /tmp/tmpsim0zte7.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsim0zte7.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsim0zte7.jl:20\ntest set: Test Failed at /tmp/tmpsim0zte7.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsim0zte7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsim0zte7.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsim0zte7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1kpin4zy.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp1kpin4zy.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kpin4zy.jl:20\ntest set: Test Failed at /tmp/tmp1kpin4zy.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1kpin4zy.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kpin4zy.jl:20\ntest set: Test Failed at /tmp/tmp1kpin4zy.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1kpin4zy.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kpin4zy.jl:20\ntest set: Test Failed at /tmp/tmp1kpin4zy.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1kpin4zy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1kpin4zy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1kpin4zy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3blwbck7.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp3blwbck7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3blwbck7.jl:20\ntest set: Test Failed at /tmp/tmp3blwbck7.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3blwbck7.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3blwbck7.jl:20\ntest set: Test Failed at /tmp/tmp3blwbck7.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3blwbck7.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3blwbck7.jl:20\ntest set: Test Failed at /tmp/tmp3blwbck7.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3blwbck7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3blwbck7.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3blwbck7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphxdq_ndn.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmphxdq_ndn.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphxdq_ndn.jl:20\ntest set: Test Failed at /tmp/tmphxdq_ndn.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphxdq_ndn.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphxdq_ndn.jl:20\ntest set: Test Failed at /tmp/tmphxdq_ndn.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphxdq_ndn.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphxdq_ndn.jl:20\ntest set: Test Failed at /tmp/tmphxdq_ndn.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphxdq_ndn.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphxdq_ndn.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxdq_ndn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpo8us2fhq.jl:20\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 134 == 122\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpo8us2fhq.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo8us2fhq.jl:18\\ntest set: Test Failed at /tmp/tmpo8us2fhq.jl:21\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 7 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpo8us2fhq.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo8us2fhq.jl:18\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59pqr380.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp59pqr380.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59pqr380.jl:20\ntest set: Test Failed at /tmp/tmp59pqr380.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp59pqr380.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59pqr380.jl:20\ntest set: Test Failed at /tmp/tmp59pqr380.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp59pqr380.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59pqr380.jl:20\ntest set: Test Failed at /tmp/tmp59pqr380.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp59pqr380.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59pqr380.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59pqr380.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz02p76l9.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpz02p76l9.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz02p76l9.jl:14\ntest set: Test Failed at /tmp/tmpz02p76l9.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz02p76l9.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz02p76l9.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz02p76l9.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpscz0i4hy.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpscz0i4hy.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpscz0i4hy.jl:20\ntest set: Test Failed at /tmp/tmpscz0i4hy.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpscz0i4hy.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpscz0i4hy.jl:20\ntest set: Test Failed at /tmp/tmpscz0i4hy.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpscz0i4hy.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpscz0i4hy.jl:20\ntest set: Test Failed at /tmp/tmpscz0i4hy.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpscz0i4hy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpscz0i4hy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpscz0i4hy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcjz94pvj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpcjz94pvj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcjz94pvj.jl:20\ntest set: Test Failed at /tmp/tmpcjz94pvj.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcjz94pvj.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcjz94pvj.jl:20\ntest set: Test Failed at /tmp/tmpcjz94pvj.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcjz94pvj.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcjz94pvj.jl:20\ntest set: Test Failed at /tmp/tmpcjz94pvj.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcjz94pvj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcjz94pvj.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcjz94pvj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_swcmwvy.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_swcmwvy.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_swcmwvy.jl:20\ntest set: Test Failed at /tmp/tmp_swcmwvy.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_swcmwvy.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_swcmwvy.jl:20\ntest set: Test Failed at /tmp/tmp_swcmwvy.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_swcmwvy.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_swcmwvy.jl:20\ntest set: Test Failed at /tmp/tmp_swcmwvy.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_swcmwvy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_swcmwvy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_swcmwvy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2hc24j2b.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp2hc24j2b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hc24j2b.jl:20\ntest set: Test Failed at /tmp/tmp2hc24j2b.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2hc24j2b.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hc24j2b.jl:20\ntest set: Test Failed at /tmp/tmp2hc24j2b.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2hc24j2b.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hc24j2b.jl:20\ntest set: Test Failed at /tmp/tmp2hc24j2b.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2hc24j2b.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hc24j2b.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hc24j2b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23l130hl.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp23l130hl.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23l130hl.jl:20\ntest set: Test Failed at /tmp/tmp23l130hl.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp23l130hl.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23l130hl.jl:20\ntest set: Test Failed at /tmp/tmp23l130hl.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp23l130hl.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23l130hl.jl:20\ntest set: Test Failed at /tmp/tmp23l130hl.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp23l130hl.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23l130hl.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23l130hl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3pd1r5b5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp3pd1r5b5.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3pd1r5b5.jl:20\ntest set: Test Failed at /tmp/tmp3pd1r5b5.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3pd1r5b5.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3pd1r5b5.jl:20\ntest set: Test Failed at /tmp/tmp3pd1r5b5.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3pd1r5b5.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3pd1r5b5.jl:20\ntest set: Test Failed at /tmp/tmp3pd1r5b5.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3pd1r5b5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3pd1r5b5.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3pd1r5b5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph9nkcdgx.jl:15\n  Test threw exception\n\
    \  Expression: candidate([4, 88]) == 88\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] add(::Array{Int64,1})\
    \ at /tmp/tmph9nkcdgx.jl:9\n   [2] top-level scope at /tmp/tmph9nkcdgx.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph9nkcdgx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmph9nkcdgx.jl:16\n  Test threw exception\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] add(::Array{Int64,1})\
    \ at /tmp/tmph9nkcdgx.jl:9\n   [2] top-level scope at /tmp/tmph9nkcdgx.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph9nkcdgx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmph9nkcdgx.jl:17\n  Test threw exception\n  Expression: candidate([4,\
    \ 0, 6, 7]) == 0\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] add(::Array{Int64,1}) at /tmp/tmph9nkcdgx.jl:9\n\
    \   [2] top-level scope at /tmp/tmph9nkcdgx.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph9nkcdgx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmph9nkcdgx.jl:18\n  Test threw exception\n  Expression: candidate([4,\
    \ 4, 6, 8]) == 12\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] add(::Array{Int64,1}) at /tmp/tmph9nkcdgx.jl:9\n\
    \   [2] top-level scope at /tmp/tmph9nkcdgx.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph9nkcdgx.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph9nkcdgx.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpem9ssccj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpem9ssccj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpem9ssccj.jl:20\ntest set: Test Failed at /tmp/tmpem9ssccj.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpem9ssccj.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpem9ssccj.jl:20\ntest set: Test Failed at /tmp/tmpem9ssccj.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpem9ssccj.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpem9ssccj.jl:20\ntest set: Test Failed at /tmp/tmpem9ssccj.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpem9ssccj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpem9ssccj.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpem9ssccj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpx2eust6b.jl:16\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 134 == 122\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpx2eust6b.jl:16\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx2eust6b.jl:14\\ntest set: Test Failed at /tmp/tmpx2eust6b.jl:17\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 7 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpx2eust6b.jl:17\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx2eust6b.jl:14\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     2      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknc5vxff.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpknc5vxff.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknc5vxff.jl:20\ntest set: Test Failed at /tmp/tmpknc5vxff.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpknc5vxff.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknc5vxff.jl:20\ntest set: Test Failed at /tmp/tmpknc5vxff.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpknc5vxff.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknc5vxff.jl:20\ntest set: Test Failed at /tmp/tmpknc5vxff.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpknc5vxff.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknc5vxff.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknc5vxff.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpso62msrv.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpso62msrv.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpso62msrv.jl:20\\ntest set: Test Failed at /tmp/tmpso62msrv.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpso62msrv.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpso62msrv.jl:20\\ntest set: Test Failed at /tmp/tmpso62msrv.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpso62msrv.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpso62msrv.jl:20\\ntest set: Test Failed at /tmp/tmpso62msrv.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpso62msrv.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpso62msrv.jl:20\\nTest Summary: | Fail  Total\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiwvyqnlt.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpiwvyqnlt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwvyqnlt.jl:20\ntest set: Test Failed at /tmp/tmpiwvyqnlt.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpiwvyqnlt.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwvyqnlt.jl:20\ntest set: Test Failed at /tmp/tmpiwvyqnlt.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiwvyqnlt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwvyqnlt.jl:20\ntest set: Test Failed at /tmp/tmpiwvyqnlt.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiwvyqnlt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiwvyqnlt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwvyqnlt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1gufrils.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp1gufrils.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gufrils.jl:20\ntest set: Test Failed at /tmp/tmp1gufrils.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1gufrils.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gufrils.jl:20\ntest set: Test Failed at /tmp/tmp1gufrils.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gufrils.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gufrils.jl:20\ntest set: Test Failed at /tmp/tmp1gufrils.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1gufrils.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1gufrils.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1gufrils.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp871_ae4s.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp871_ae4s.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp871_ae4s.jl:20\ntest set: Test Failed at /tmp/tmp871_ae4s.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp871_ae4s.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp871_ae4s.jl:20\ntest set: Test Failed at /tmp/tmp871_ae4s.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp871_ae4s.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp871_ae4s.jl:20\ntest set: Test Failed at /tmp/tmp871_ae4s.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp871_ae4s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp871_ae4s.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp871_ae4s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqelr5g02.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpqelr5g02.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqelr5g02.jl:20\ntest set: Test Failed at /tmp/tmpqelr5g02.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqelr5g02.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqelr5g02.jl:20\ntest set: Test Failed at /tmp/tmpqelr5g02.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqelr5g02.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqelr5g02.jl:20\ntest set: Test Failed at /tmp/tmpqelr5g02.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqelr5g02.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqelr5g02.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqelr5g02.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn28zggv1.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn28zggv1.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn28zggv1.jl:14\ntest set: Test Failed at /tmp/tmpn28zggv1.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn28zggv1.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn28zggv1.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn28zggv1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpib74ebkc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpib74ebkc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpib74ebkc.jl:20\ntest set: Test Failed at /tmp/tmpib74ebkc.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpib74ebkc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpib74ebkc.jl:20\ntest set: Test Failed at /tmp/tmpib74ebkc.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpib74ebkc.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpib74ebkc.jl:20\ntest set: Test Failed at /tmp/tmpib74ebkc.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpib74ebkc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpib74ebkc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpib74ebkc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7toox8gw.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7toox8gw.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7toox8gw.jl:14\ntest set: Test Failed at /tmp/tmp7toox8gw.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7toox8gw.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7toox8gw.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7toox8gw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvjnh_2di.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpvjnh_2di.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjnh_2di.jl:20\ntest set: Test Failed at /tmp/tmpvjnh_2di.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvjnh_2di.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjnh_2di.jl:20\ntest set: Test Failed at /tmp/tmpvjnh_2di.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvjnh_2di.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjnh_2di.jl:20\ntest set: Test Failed at /tmp/tmpvjnh_2di.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvjnh_2di.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjnh_2di.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjnh_2di.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp151vusb5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp151vusb5.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp151vusb5.jl:20\ntest set: Test Failed at /tmp/tmp151vusb5.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp151vusb5.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp151vusb5.jl:20\ntest set: Test Failed at /tmp/tmp151vusb5.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp151vusb5.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp151vusb5.jl:20\ntest set: Test Failed at /tmp/tmp151vusb5.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp151vusb5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp151vusb5.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp151vusb5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpr778b7qx.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpr778b7qx.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr778b7qx.jl:20\\ntest set: Test Failed at /tmp/tmpr778b7qx.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpr778b7qx.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr778b7qx.jl:20\\ntest set: Test Failed at /tmp/tmpr778b7qx.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpr778b7qx.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr778b7qx.jl:20\\ntest set: Test Failed at /tmp/tmpr778b7qx.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpr778b7qx.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr778b7qx.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprpqpg09c.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmprpqpg09c.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpqpg09c.jl:20\ntest set: Test Failed at /tmp/tmprpqpg09c.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprpqpg09c.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpqpg09c.jl:20\ntest set: Test Failed at /tmp/tmprpqpg09c.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprpqpg09c.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpqpg09c.jl:20\ntest set: Test Failed at /tmp/tmprpqpg09c.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprpqpg09c.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpqpg09c.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprpqpg09c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx8q_afcd.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpx8q_afcd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8q_afcd.jl:20\ntest set: Test Failed at /tmp/tmpx8q_afcd.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx8q_afcd.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8q_afcd.jl:20\ntest set: Test Failed at /tmp/tmpx8q_afcd.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx8q_afcd.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8q_afcd.jl:20\ntest set: Test Failed at /tmp/tmpx8q_afcd.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx8q_afcd.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8q_afcd.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx8q_afcd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi8uxjs7o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpi8uxjs7o.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8uxjs7o.jl:20\ntest set: Test Failed at /tmp/tmpi8uxjs7o.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi8uxjs7o.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8uxjs7o.jl:20\ntest set: Test Failed at /tmp/tmpi8uxjs7o.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi8uxjs7o.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8uxjs7o.jl:20\ntest set: Test Failed at /tmp/tmpi8uxjs7o.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi8uxjs7o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi8uxjs7o.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi8uxjs7o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi2vp0skz.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpi2vp0skz.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2vp0skz.jl:20\\ntest set: Test Failed at /tmp/tmpi2vp0skz.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi2vp0skz.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2vp0skz.jl:20\\ntest set: Test Failed at /tmp/tmpi2vp0skz.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi2vp0skz.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2vp0skz.jl:20\\ntest set: Test Failed at /tmp/tmpi2vp0skz.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpi2vp0skz.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2vp0skz.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcy_o9anh.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcy_o9anh.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcy_o9anh.jl:20\\ntest set: Test Failed at /tmp/tmpcy_o9anh.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcy_o9anh.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcy_o9anh.jl:20\\ntest set: Test Failed at /tmp/tmpcy_o9anh.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcy_o9anh.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcy_o9anh.jl:20\\ntest set: Test Failed at /tmp/tmpcy_o9anh.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcy_o9anh.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcy_o9anh.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3qpflsx9.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([4, 88]) == 88\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] add(::Array{Int64,1}) at /tmp/tmp3qpflsx9.jl:9\\n   [2]\
    \ top-level scope at /tmp/tmp3qpflsx9.jl:15\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3qpflsx9.jl:14\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qpflsx9.jl:16\\n  Test threw exception\\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] add(::Array{Int64,1})\
    \ at /tmp/tmp3qpflsx9.jl:9\\n   [2] top-level scope at /tmp/tmp3qpflsx9.jl:16\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3qpflsx9.jl:14\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qpflsx9.jl:17\\n  Test threw exception\\n  Expression: candidate([4,\
    \ 0, 6, 7]) == 0\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] add(::Array{Int64,1})\
    \ at /tmp/tmp3qpflsx9.jl:9\\n   [2] top-level scope at /tmp/tmp3qpflsx9.jl:17\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3qpflsx9.jl:14\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3qpflsx9.jl:18\\n  Test threw exception\\n  Expression: candidate([4,\
    \ 4, 6, 8]) == 12\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] add(::Array{Int64,1})\
    \ at /tmp/tmp3qpflsx9.jl:9\\n   [2] top-level scope at /tmp/tmp3qpflsx9.jl:18\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3qpflsx9.jl:14\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu56zr8my.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpu56zr8my.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu56zr8my.jl:20\ntest set: Test Failed at /tmp/tmpu56zr8my.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu56zr8my.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu56zr8my.jl:20\ntest set: Test Failed at /tmp/tmpu56zr8my.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu56zr8my.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu56zr8my.jl:20\ntest set: Test Failed at /tmp/tmpu56zr8my.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu56zr8my.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu56zr8my.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu56zr8my.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgl6ywaww.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgl6ywaww.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgl6ywaww.jl:14\ntest set: Test Failed at /tmp/tmpgl6ywaww.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgl6ywaww.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgl6ywaww.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgl6ywaww.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp437y24xi.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp437y24xi.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp437y24xi.jl:22\ntest set: Test Failed at /tmp/tmp437y24xi.jl:24\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp437y24xi.jl:24\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp437y24xi.jl:22\ntest set: Test Failed at /tmp/tmp437y24xi.jl:25\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp437y24xi.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp437y24xi.jl:22\ntest set: Test Failed at /tmp/tmp437y24xi.jl:26\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp437y24xi.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp437y24xi.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp437y24xi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmza9t7uz.jl:15\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpmza9t7uz.jl:15\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmza9t7uz.jl:14\ntest set: Test Failed at /tmp/tmpmza9t7uz.jl:16\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmza9t7uz.jl:16\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmza9t7uz.jl:14\ntest set: Test Failed at /tmp/tmpmza9t7uz.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmza9t7uz.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmza9t7uz.jl:14\ntest set: Test Failed at /tmp/tmpmza9t7uz.jl:18\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmza9t7uz.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmza9t7uz.jl:14\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmza9t7uz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpci2_x1a9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpci2_x1a9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpci2_x1a9.jl:20\ntest set: Test Failed at /tmp/tmpci2_x1a9.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpci2_x1a9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpci2_x1a9.jl:20\ntest set: Test Failed at /tmp/tmpci2_x1a9.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpci2_x1a9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpci2_x1a9.jl:20\ntest set: Test Failed at /tmp/tmpci2_x1a9.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpci2_x1a9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpci2_x1a9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpci2_x1a9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp80fol5xg.jl:15\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp80fol5xg.jl:15\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp80fol5xg.jl:14\\ntest set: Test Failed at /tmp/tmp80fol5xg.jl:16\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp80fol5xg.jl:16\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp80fol5xg.jl:14\\ntest set: Test Failed at /tmp/tmp80fol5xg.jl:17\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp80fol5xg.jl:17\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp80fol5xg.jl:14\\ntest set: Test Failed at /tmp/tmp80fol5xg.jl:18\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp80fol5xg.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp80fol5xg.jl:14\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0e3n3uuq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0e3n3uuq.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0e3n3uuq.jl:20\ntest set: Test Failed at /tmp/tmp0e3n3uuq.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0e3n3uuq.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0e3n3uuq.jl:20\ntest set: Test Failed at /tmp/tmp0e3n3uuq.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0e3n3uuq.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0e3n3uuq.jl:20\ntest set: Test Failed at /tmp/tmp0e3n3uuq.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0e3n3uuq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0e3n3uuq.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0e3n3uuq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5gltcimc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp5gltcimc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gltcimc.jl:20\ntest set: Test Failed at /tmp/tmp5gltcimc.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5gltcimc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gltcimc.jl:20\ntest set: Test Failed at /tmp/tmp5gltcimc.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5gltcimc.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gltcimc.jl:20\ntest set: Test Failed at /tmp/tmp5gltcimc.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5gltcimc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gltcimc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gltcimc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_urjk2sj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_urjk2sj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_urjk2sj.jl:20\ntest set: Test Failed at /tmp/tmp_urjk2sj.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_urjk2sj.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_urjk2sj.jl:20\ntest set: Test Failed at /tmp/tmp_urjk2sj.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_urjk2sj.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_urjk2sj.jl:20\ntest set: Test Failed at /tmp/tmp_urjk2sj.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_urjk2sj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_urjk2sj.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_urjk2sj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9d57cg4b.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp9d57cg4b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9d57cg4b.jl:20\ntest set: Test Failed at /tmp/tmp9d57cg4b.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9d57cg4b.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9d57cg4b.jl:20\ntest set: Test Failed at /tmp/tmp9d57cg4b.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9d57cg4b.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9d57cg4b.jl:20\ntest set: Test Failed at /tmp/tmp9d57cg4b.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9d57cg4b.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9d57cg4b.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d57cg4b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpob7xtkln.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpob7xtkln.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpob7xtkln.jl:20\ntest set: Test Failed at /tmp/tmpob7xtkln.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpob7xtkln.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpob7xtkln.jl:20\ntest set: Test Failed at /tmp/tmpob7xtkln.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpob7xtkln.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpob7xtkln.jl:20\ntest set: Test Failed at /tmp/tmpob7xtkln.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpob7xtkln.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpob7xtkln.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpob7xtkln.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjnsb8vsa.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpjnsb8vsa.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnsb8vsa.jl:20\ntest set: Test Failed at /tmp/tmpjnsb8vsa.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjnsb8vsa.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnsb8vsa.jl:20\ntest set: Test Failed at /tmp/tmpjnsb8vsa.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjnsb8vsa.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnsb8vsa.jl:20\ntest set: Test Failed at /tmp/tmpjnsb8vsa.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjnsb8vsa.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjnsb8vsa.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnsb8vsa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp10tx4k_k.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp10tx4k_k.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp10tx4k_k.jl:20\\ntest set: Test Failed at /tmp/tmp10tx4k_k.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp10tx4k_k.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp10tx4k_k.jl:20\\ntest set: Test Failed at /tmp/tmp10tx4k_k.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp10tx4k_k.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp10tx4k_k.jl:20\\ntest set: Test Failed at /tmp/tmp10tx4k_k.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp10tx4k_k.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp10tx4k_k.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp10tx4k_k.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3eb0ayyf.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3eb0ayyf.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3eb0ayyf.jl:20\\ntest set: Test Failed at /tmp/tmp3eb0ayyf.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3eb0ayyf.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3eb0ayyf.jl:20\\ntest set: Test Failed at /tmp/tmp3eb0ayyf.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3eb0ayyf.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3eb0ayyf.jl:20\\ntest set: Test Failed at /tmp/tmp3eb0ayyf.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3eb0ayyf.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3eb0ayyf.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzngrkijv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpzngrkijv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzngrkijv.jl:20\ntest set: Test Failed at /tmp/tmpzngrkijv.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzngrkijv.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzngrkijv.jl:20\ntest set: Test Failed at /tmp/tmpzngrkijv.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzngrkijv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzngrkijv.jl:20\ntest set: Test Failed at /tmp/tmpzngrkijv.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzngrkijv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzngrkijv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzngrkijv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsbp653c5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpsbp653c5.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsbp653c5.jl:20\ntest set: Test Failed at /tmp/tmpsbp653c5.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsbp653c5.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsbp653c5.jl:20\ntest set: Test Failed at /tmp/tmpsbp653c5.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsbp653c5.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsbp653c5.jl:20\ntest set: Test Failed at /tmp/tmpsbp653c5.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsbp653c5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsbp653c5.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsbp653c5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwucqg__n.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpwucqg__n.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwucqg__n.jl:20\ntest set: Test Failed at /tmp/tmpwucqg__n.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwucqg__n.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwucqg__n.jl:20\ntest set: Test Failed at /tmp/tmpwucqg__n.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwucqg__n.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwucqg__n.jl:20\ntest set: Test Failed at /tmp/tmpwucqg__n.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwucqg__n.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwucqg__n.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwucqg__n.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ka_4n6z.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_ka_4n6z.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ka_4n6z.jl:20\ntest set: Test Failed at /tmp/tmp_ka_4n6z.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_ka_4n6z.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ka_4n6z.jl:20\ntest set: Test Failed at /tmp/tmp_ka_4n6z.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_ka_4n6z.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ka_4n6z.jl:20\ntest set: Test Failed at /tmp/tmp_ka_4n6z.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_ka_4n6z.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ka_4n6z.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ka_4n6z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpa9lnpjo_.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpa9lnpjo_.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa9lnpjo_.jl:20\\ntest set: Test Failed at /tmp/tmpa9lnpjo_.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa9lnpjo_.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa9lnpjo_.jl:20\\ntest set: Test Failed at /tmp/tmpa9lnpjo_.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpa9lnpjo_.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa9lnpjo_.jl:20\\ntest set: Test Failed at /tmp/tmpa9lnpjo_.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpa9lnpjo_.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa9lnpjo_.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpoifvr7pu.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpoifvr7pu.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoifvr7pu.jl:20\\ntest set: Test Failed at /tmp/tmpoifvr7pu.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpoifvr7pu.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoifvr7pu.jl:20\\ntest set: Test Failed at /tmp/tmpoifvr7pu.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpoifvr7pu.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoifvr7pu.jl:20\\ntest set: Test Failed at /tmp/tmpoifvr7pu.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpoifvr7pu.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoifvr7pu.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnvduka3l.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpnvduka3l.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvduka3l.jl:20\ntest set: Test Failed at /tmp/tmpnvduka3l.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnvduka3l.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvduka3l.jl:20\ntest set: Test Failed at /tmp/tmpnvduka3l.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnvduka3l.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvduka3l.jl:20\ntest set: Test Failed at /tmp/tmpnvduka3l.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnvduka3l.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvduka3l.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvduka3l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpssvbipjz.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpssvbipjz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpssvbipjz.jl:20\ntest set: Test Failed at /tmp/tmpssvbipjz.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpssvbipjz.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpssvbipjz.jl:20\ntest set: Test Failed at /tmp/tmpssvbipjz.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpssvbipjz.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpssvbipjz.jl:20\ntest set: Test Failed at /tmp/tmpssvbipjz.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpssvbipjz.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpssvbipjz.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpssvbipjz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxt6bc6rc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpxt6bc6rc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt6bc6rc.jl:20\ntest set: Test Failed at /tmp/tmpxt6bc6rc.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxt6bc6rc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt6bc6rc.jl:20\ntest set: Test Failed at /tmp/tmpxt6bc6rc.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxt6bc6rc.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt6bc6rc.jl:20\ntest set: Test Failed at /tmp/tmpxt6bc6rc.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxt6bc6rc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxt6bc6rc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt6bc6rc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm71bvnop.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpm71bvnop.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm71bvnop.jl:20\ntest set: Test Failed at /tmp/tmpm71bvnop.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm71bvnop.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm71bvnop.jl:20\ntest set: Test Failed at /tmp/tmpm71bvnop.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm71bvnop.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm71bvnop.jl:20\ntest set: Test Failed at /tmp/tmpm71bvnop.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm71bvnop.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm71bvnop.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm71bvnop.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpahe6b719.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpahe6b719.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpahe6b719.jl:20\\ntest set: Test Failed at /tmp/tmpahe6b719.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpahe6b719.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpahe6b719.jl:20\\ntest set: Test Failed at /tmp/tmpahe6b719.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpahe6b719.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpahe6b719.jl:20\\ntest set: Test Failed at /tmp/tmpahe6b719.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpahe6b719.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpahe6b719.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8toter5d.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp8toter5d.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8toter5d.jl:20\ntest set: Test Failed at /tmp/tmp8toter5d.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8toter5d.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8toter5d.jl:20\ntest set: Test Failed at /tmp/tmp8toter5d.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8toter5d.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8toter5d.jl:20\ntest set: Test Failed at /tmp/tmp8toter5d.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8toter5d.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8toter5d.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8toter5d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ffgq8xe.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp4ffgq8xe.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ffgq8xe.jl:20\ntest set: Test Failed at /tmp/tmp4ffgq8xe.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4ffgq8xe.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ffgq8xe.jl:20\ntest set: Test Failed at /tmp/tmp4ffgq8xe.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ffgq8xe.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ffgq8xe.jl:20\ntest set: Test Failed at /tmp/tmp4ffgq8xe.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ffgq8xe.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ffgq8xe.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ffgq8xe.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_odd_sum = 0\n\
    \    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            even_odd_sum\
    \ += lst[i]\n        end\n    end\n    return even_odd_sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqn95ynmp.jl:21\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 4 == 88\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqn95ynmp.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqn95ynmp.jl:20\\ntest set: Test Failed at /tmp/tmpqn95ynmp.jl:22\\\
    n  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\\n   Evaluated: 12 == 122\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqn95ynmp.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqn95ynmp.jl:20\\ntest set: Test Failed at /tmp/tmpqn95ynmp.jl:23\\\
    n  Expression: candidate([4, 0, 6, 7]) == 0\\n   Evaluated: 10 == 0\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqn95ynmp.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqn95ynmp.jl:20\\ntest set: Test Failed at /tmp/tmpqn95ynmp.jl:24\\\
    n  Expression: candidate([4, 4, 6, 8]) == 12\\n   Evaluated: 10 == 12\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqn95ynmp.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqn95ynmp.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_sus000h.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp_sus000h.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_sus000h.jl:20\ntest set: Test Failed at /tmp/tmp_sus000h.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_sus000h.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_sus000h.jl:20\ntest set: Test Failed at /tmp/tmp_sus000h.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_sus000h.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_sus000h.jl:20\ntest set: Test Failed at /tmp/tmp_sus000h.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_sus000h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_sus000h.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_sus000h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbtw7ro9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmphbtw7ro9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbtw7ro9.jl:20\ntest set: Test Failed at /tmp/tmphbtw7ro9.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphbtw7ro9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbtw7ro9.jl:20\ntest set: Test Failed at /tmp/tmphbtw7ro9.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphbtw7ro9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbtw7ro9.jl:20\ntest set: Test Failed at /tmp/tmphbtw7ro9.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphbtw7ro9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbtw7ro9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbtw7ro9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    \    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyapekimb.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpyapekimb.jl:16\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyapekimb.jl:15\ntest set: Test Failed at /tmp/tmpyapekimb.jl:17\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 0 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyapekimb.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyapekimb.jl:15\ntest set: Test Failed at /tmp/tmpyapekimb.jl:19\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 0 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyapekimb.jl:19\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyapekimb.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyapekimb.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppl9ntsot.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppl9ntsot.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9ntsot.jl:14\ntest set: Test Failed at /tmp/tmppl9ntsot.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppl9ntsot.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9ntsot.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppl9ntsot.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0sathzyg.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp0sathzyg.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0sathzyg.jl:20\ntest set: Test Failed at /tmp/tmp0sathzyg.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0sathzyg.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0sathzyg.jl:20\ntest set: Test Failed at /tmp/tmp0sathzyg.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0sathzyg.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0sathzyg.jl:20\ntest set: Test Failed at /tmp/tmp0sathzyg.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0sathzyg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0sathzyg.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0sathzyg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3cnun_7j.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp3cnun_7j.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cnun_7j.jl:20\ntest set: Test Failed at /tmp/tmp3cnun_7j.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3cnun_7j.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cnun_7j.jl:20\ntest set: Test Failed at /tmp/tmp3cnun_7j.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3cnun_7j.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cnun_7j.jl:20\ntest set: Test Failed at /tmp/tmp3cnun_7j.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3cnun_7j.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cnun_7j.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cnun_7j.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc54suay1.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc54suay1.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc54suay1.jl:14\ntest set: Test Failed at /tmp/tmpc54suay1.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc54suay1.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc54suay1.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc54suay1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(x ->\
    \ x % 2 == 0, lst)\n    odds = filter(x -> x % 2 != 0, lst)\n    return sum(evens[odds])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmum16wj5.jl:17\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpmum16wj5.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmum16wj5.jl:16\ntest set: Error During Test at\
    \ /tmp/tmpmum16wj5.jl:18\n  Test threw exception\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n  BoundsError: attempt to access 4-element Array{Int64,1}\
    \ at index [[5, 7]]\n  Stacktrace:\n   [1] throw_boundserror(::Array{Int64,1},\
    \ ::Tuple{Array{Int64,1}}) at ./abstractarray.jl:537\n   [2] checkbounds at ./abstractarray.jl:502\
    \ [inlined]\n   [3] _getindex at ./multidimensional.jl:726 [inlined]\n   [4] getindex\
    \ at ./abstractarray.jl:980 [inlined]\n   [5] add(::Array{Int64,1}) at /tmp/tmpmum16wj5.jl:10\n\
    \   [6] top-level scope at /tmp/tmpmum16wj5.jl:18\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmum16wj5.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpmum16wj5.jl:19\n  Test threw exception\n  Expression: candidate([4,\
    \ 0, 6, 7]) == 0\n  BoundsError: attempt to access 3-element Array{Int64,1} at\
    \ index [[7]]\n  Stacktrace:\n   [1] throw_boundserror(::Array{Int64,1}, ::Tuple{Array{Int64,1}})\
    \ at ./abstractarray.jl:537\n   [2] checkbounds at ./abstractarray.jl:502 [inlined]\n\
    \   [3] _getindex at ./multidimensional.jl:726 [inlined]\n   [4] getindex at ./abstractarray.jl:980\
    \ [inlined]\n   [5] add(::Array{Int64,1}) at /tmp/tmpmum16wj5.jl:10\n   [6] top-level\
    \ scope at /tmp/tmpmum16wj5.jl:19\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmum16wj5.jl:16\n  \ntest set: Test Failed at\
    \ /tmp/tmpmum16wj5.jl:20\n  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated:\
    \ 0 == 12\nStacktrace:\n [1] top-level scope at /tmp/tmpmum16wj5.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmum16wj5.jl:16\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    2      2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmum16wj5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1nspjsuu.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1nspjsuu.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1nspjsuu.jl:14\ntest set: Test Failed at /tmp/tmp1nspjsuu.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1nspjsuu.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1nspjsuu.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1nspjsuu.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpey4ph485.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpey4ph485.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpey4ph485.jl:20\ntest set: Test Failed at /tmp/tmpey4ph485.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpey4ph485.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpey4ph485.jl:20\ntest set: Test Failed at /tmp/tmpey4ph485.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpey4ph485.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpey4ph485.jl:20\ntest set: Test Failed at /tmp/tmpey4ph485.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpey4ph485.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpey4ph485.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpey4ph485.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3u828_tx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp3u828_tx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u828_tx.jl:20\ntest set: Test Failed at /tmp/tmp3u828_tx.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3u828_tx.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u828_tx.jl:20\ntest set: Test Failed at /tmp/tmp3u828_tx.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3u828_tx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u828_tx.jl:20\ntest set: Test Failed at /tmp/tmp3u828_tx.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3u828_tx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u828_tx.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3u828_tx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbqh9ng5l.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpbqh9ng5l.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqh9ng5l.jl:20\ntest set: Test Failed at /tmp/tmpbqh9ng5l.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbqh9ng5l.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqh9ng5l.jl:20\ntest set: Test Failed at /tmp/tmpbqh9ng5l.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbqh9ng5l.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqh9ng5l.jl:20\ntest set: Test Failed at /tmp/tmpbqh9ng5l.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbqh9ng5l.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqh9ng5l.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbqh9ng5l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqdrh2az_.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqdrh2az_.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqdrh2az_.jl:14\ntest set: Test Failed at /tmp/tmpqdrh2az_.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqdrh2az_.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqdrh2az_.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqdrh2az_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx5cyew60.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmpx5cyew60.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5cyew60.jl:20\ntest set: Test Failed at /tmp/tmpx5cyew60.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx5cyew60.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5cyew60.jl:20\ntest set: Test Failed at /tmp/tmpx5cyew60.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx5cyew60.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5cyew60.jl:20\ntest set: Test Failed at /tmp/tmpx5cyew60.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx5cyew60.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5cyew60.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5cyew60.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptjgdrcgf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmptjgdrcgf.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjgdrcgf.jl:20\ntest set: Test Failed at /tmp/tmptjgdrcgf.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptjgdrcgf.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjgdrcgf.jl:20\ntest set: Test Failed at /tmp/tmptjgdrcgf.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptjgdrcgf.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjgdrcgf.jl:20\ntest set: Test Failed at /tmp/tmptjgdrcgf.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptjgdrcgf.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptjgdrcgf.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptjgdrcgf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6papf7yx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp6papf7yx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6papf7yx.jl:20\ntest set: Test Failed at /tmp/tmp6papf7yx.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6papf7yx.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6papf7yx.jl:20\ntest set: Test Failed at /tmp/tmp6papf7yx.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6papf7yx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6papf7yx.jl:20\ntest set: Test Failed at /tmp/tmp6papf7yx.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6papf7yx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6papf7yx.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6papf7yx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp48udjkaq.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp48udjkaq.jl:16\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp48udjkaq.jl:14\ntest set: Test Failed at /tmp/tmp48udjkaq.jl:17\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 7 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp48udjkaq.jl:17\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp48udjkaq.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp48udjkaq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphmtqroht.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmphmtqroht.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphmtqroht.jl:20\ntest set: Test Failed at /tmp/tmphmtqroht.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphmtqroht.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphmtqroht.jl:20\ntest set: Test Failed at /tmp/tmphmtqroht.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphmtqroht.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphmtqroht.jl:20\ntest set: Test Failed at /tmp/tmphmtqroht.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphmtqroht.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphmtqroht.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphmtqroht.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2apng0ua.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] top-level scope at /tmp/tmp2apng0ua.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2apng0ua.jl:20\ntest set: Test Failed at /tmp/tmp2apng0ua.jl:22\n\
    \  Expression: candidate([4, 5, 6, 7, 2, 122]) == 122\n   Evaluated: 12 == 122\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2apng0ua.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2apng0ua.jl:20\ntest set: Test Failed at /tmp/tmp2apng0ua.jl:23\n\
    \  Expression: candidate([4, 0, 6, 7]) == 0\n   Evaluated: 10 == 0\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2apng0ua.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2apng0ua.jl:20\ntest set: Test Failed at /tmp/tmp2apng0ua.jl:24\n\
    \  Expression: candidate([4, 4, 6, 8]) == 12\n   Evaluated: 10 == 12\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2apng0ua.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2apng0ua.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2apng0ua.jl:18\n"
  exit_code: 1
  status: SyntaxError

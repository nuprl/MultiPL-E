name: HumanEval_86_anti_shuffle
language: julia
results:
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4y6wmxqp.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp4y6wmxqp.jl:16\n   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp4y6wmxqp.jl:16\n\
    \   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp4y6wmxqp.jl:16\n\
    \   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp4y6wmxqp.jl:16\n\
    \   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp4y6wmxqp.jl:16\n   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp4y6wmxqp.jl:16\n\
    \   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp4y6wmxqp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp4y6wmxqp.jl:16\n\
    \   [3] top-level scope at /tmp/tmp4y6wmxqp.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4y6wmxqp.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4y6wmxqp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdz93na0n.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpdz93na0n.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpdz93na0n.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdz93na0n.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpdz93na0n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpdz93na0n.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdz93na0n.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpdz93na0n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpdz93na0n.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdz93na0n.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpdz93na0n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpdz93na0n.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdz93na0n.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpdz93na0n.jl:16\\n   [3] top-level scope at /tmp/tmpdz93na0n.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdz93na0n.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpdz93na0n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpdz93na0n.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpdz93na0n.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # YOUR CODE HERE\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp891uj54a.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp891uj54a.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp891uj54a.jl:21\ntest set: Test Failed at /tmp/tmp891uj54a.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp891uj54a.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp891uj54a.jl:21\ntest set: Test Failed at /tmp/tmp891uj54a.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp891uj54a.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp891uj54a.jl:21\ntest set: Test Failed at /tmp/tmp891uj54a.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp891uj54a.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp891uj54a.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp891uj54a.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        word =\
    \ words[i]\n        word_chars = collect(word)\n        sort!(word_chars)\n  \
    \      words[i] = join(word_chars)\n    end\n    return join(words, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       push!(new_words, join(sort(collect(word))))\n    end\n    return join(new_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm1scd28n.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpm1scd28n.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpm1scd28n.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm1scd28n.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm1scd28n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm1scd28n.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm1scd28n.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm1scd28n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm1scd28n.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm1scd28n.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm1scd28n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm1scd28n.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm1scd28n.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpm1scd28n.jl:16\\n   [3] top-level scope at /tmp/tmpm1scd28n.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm1scd28n.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm1scd28n.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm1scd28n.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm1scd28n.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpen5ttjte.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpen5ttjte.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpen5ttjte.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpen5ttjte.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpen5ttjte.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpen5ttjte.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpen5ttjte.jl:16\n\
    \   [2] top-level scope at /tmp/tmpen5ttjte.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpen5ttjte.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpen5ttjte.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(words[i])\n    end\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp81zi0vr0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp81zi0vr0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp81zi0vr0.jl:16\n\
    \   [2] top-level scope at /tmp/tmp81zi0vr0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81zi0vr0.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81zi0vr0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0c2dj00a.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp0c2dj00a.jl:16\n   [3] top-level scope at /tmp/tmp0c2dj00a.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0c2dj00a.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0c2dj00a.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0c2dj00a.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0c2dj00a.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0c2dj00a.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0c2dj00a.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp0c2dj00a.jl:16\n   [3] top-level scope at /tmp/tmp0c2dj00a.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0c2dj00a.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0c2dj00a.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0c2dj00a.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0c2dj00a.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0c2dj00a.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0c2dj00a.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0c2dj00a.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr9o05snj.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9o05snj.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9o05snj.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9o05snj.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9o05snj.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9o05snj.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpr9o05snj.jl:16\n\
    \   [2] top-level scope at /tmp/tmpr9o05snj.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9o05snj.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9o05snj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz37flwl3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpz37flwl3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpz37flwl3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpz37flwl3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpz37flwl3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpz37flwl3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz37flwl3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz37flwl3.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz37flwl3.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz37flwl3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp02p6wlof.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s)\n    # create a new\
    \ array of strings\n    new_words = []\n    # loop through each word\n    for\
    \ word in words\n        # sort the characters in the word\n        sorted_word\
    \ = sort(collect(word))\n        # join the characters back into a word\n    \
    \    new_word = join(sorted_word)\n        # add the new word to the array\n \
    \       push!(new_words, new_word)\n    end\n    # join the words back into a\
    \ sentence\n    new_sentence = join(new_words)\n    # return the new sentence\n\
    \    return new_sentence\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp94hawltt.jl:41\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvht3pjs2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpvht3pjs2.jl:16\n   [3] top-level scope at /tmp/tmpvht3pjs2.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvht3pjs2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvht3pjs2.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvht3pjs2.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvht3pjs2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvht3pjs2.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvht3pjs2.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvht3pjs2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvht3pjs2.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvht3pjs2.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvht3pjs2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpvht3pjs2.jl:16\n   [3] top-level scope at /tmp/tmpvht3pjs2.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvht3pjs2.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvht3pjs2.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvht3pjs2.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvht3pjs2.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvht3pjs2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s)\n    # sort each word\n\
    \    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n  \
    \  # join words back into string\n    return join(words)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpimtuv7q2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtuv7q2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtuv7q2.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtuv7q2.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtuv7q2.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtuv7q2.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpimtuv7q2.jl:18\n\
    \   [2] top-level scope at /tmp/tmpimtuv7q2.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtuv7q2.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimtuv7q2.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    s_split = split(s, \" \")\n    s_split_anti = []\n    for word in s_split\n\
    \        push!(s_split_anti, sort(collect(word)))\n    end\n    return join(s_split_anti,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbqm70vu1.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"[\\'H\\', \\'i\\']\" == \"Hi\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbqm70vu1.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"[\\'e\\', \\\
    'h\\', \\'l\\', \\'l\\', \\'o\\']\" == \"ehllo\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbqm70vu1.jl:27\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"[\\'b\\',\
    \ \\'e\\', \\'m\\', \\'n\\', \\'r\\', \\'u\\']\" == \"bemnru\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbqm70vu1.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"[\\'a\\', \\\
    'b\\', \\'c\\', \\'d\\']\" == \"abcd\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpbqm70vu1.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"[\\'H\\', \\'e\\', \\'l\\', \\'l\\', \\'o\\'] [\\'!\\', \\'!\\', \\'!\\',\
    \ \\'W\\', \\'d\\', \\'l\\', \\'o\\', \\'r\\']\" == \"Hello !!!Wdlor\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbqm70vu1.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:31\\\
    n  Expression: candidate(\"\") == \"\"\\n   Evaluated: \"Char[]\" == \"\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbqm70vu1.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\ntest set: Test Failed at /tmp/tmpbqm70vu1.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"[\\'.\\', \\'H\\\
    ', \\'i\\'] [\\'M\\', \\'y\\'] [\\'a\\', \\'e\\', \\'m\\', \\'n\\'] [\\'i\\',\
    \ \\'s\\'] [\\'M\\', \\'e\\', \\'i\\', \\'r\\', \\'s\\', \\'t\\'] [\\'.\\', \\\
    'R\\', \\'b\\', \\'o\\', \\'o\\', \\'t\\'] [\\'H\\', \\'o\\', \\'w\\'] [\\'a\\\
    ', \\'e\\', \\'r\\'] [\\'?\\', \\'o\\', \\'u\\', \\'y\\']\" == \".Hi My aemn is\
    \ Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbqm70vu1.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbqm70vu1.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgd0ptoe3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpgd0ptoe3.jl:16\n   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgd0ptoe3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgd0ptoe3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgd0ptoe3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgd0ptoe3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgd0ptoe3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgd0ptoe3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgd0ptoe3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpgd0ptoe3.jl:16\n   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgd0ptoe3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgd0ptoe3.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgd0ptoe3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgd0ptoe3.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgd0ptoe3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpievncbez.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpievncbez.jl:16\n   [3] top-level scope at /tmp/tmpievncbez.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpievncbez.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpievncbez.jl:16\n\
    \   [3] top-level scope at /tmp/tmpievncbez.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpievncbez.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpievncbez.jl:16\n\
    \   [3] top-level scope at /tmp/tmpievncbez.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpievncbez.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpievncbez.jl:16\n\
    \   [3] top-level scope at /tmp/tmpievncbez.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpievncbez.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpievncbez.jl:16\n   [3] top-level scope at /tmp/tmpievncbez.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpievncbez.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpievncbez.jl:16\n\
    \   [3] top-level scope at /tmp/tmpievncbez.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpievncbez.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpievncbez.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       push!(new_words, sort(collect(word)))\n    end\n    return join(new_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk31wncyp.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpk31wncyp.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"['e', 'h', 'l',\
    \ 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk31wncyp.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"['b', 'e',\
    \ 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk31wncyp.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"['a', 'b', 'c',\
    \ 'd']\" == \"abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk31wncyp.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"['H', 'e', 'l', 'l', 'o'] ['!', '!', '!', 'W', 'd', 'l', 'o', 'r']\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk31wncyp.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:31\n\
    \  Expression: candidate(\"\") == \"\"\n   Evaluated: \"Char[]\" == \"\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk31wncyp.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\ntest set: Test Failed at /tmp/tmpk31wncyp.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"['.', 'H', 'i'] ['M',\
    \ 'y'] ['a', 'e', 'm', 'n'] ['i', 's'] ['M', 'e', 'i', 'r', 's', 't'] ['.', 'R',\
    \ 'b', 'o', 'o', 't'] ['H', 'o', 'w'] ['a', 'e', 'r'] ['?', 'o', 'u', 'y']\" ==\
    \ \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpk31wncyp.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk31wncyp.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk31wncyp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mso1xl9.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5mso1xl9.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\ntest set: Test Failed at /tmp/tmp5mso1xl9.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5mso1xl9.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\ntest set: Test Failed at /tmp/tmp5mso1xl9.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5mso1xl9.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\ntest set: Test Failed at /tmp/tmp5mso1xl9.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5mso1xl9.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\ntest set: Test Failed at /tmp/tmp5mso1xl9.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5mso1xl9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\ntest set: Test Failed at /tmp/tmp5mso1xl9.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5mso1xl9.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mso1xl9.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mso1xl9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkxvpqmut.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkxvpqmut.jl:16\n   [3] top-level scope at /tmp/tmpkxvpqmut.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkxvpqmut.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkxvpqmut.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkxvpqmut.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkxvpqmut.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkxvpqmut.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkxvpqmut.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkxvpqmut.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkxvpqmut.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkxvpqmut.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkxvpqmut.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkxvpqmut.jl:16\n   [3] top-level scope at /tmp/tmpkxvpqmut.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkxvpqmut.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkxvpqmut.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkxvpqmut.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkxvpqmut.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkxvpqmut.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgo02d7zd.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpgo02d7zd.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpgo02d7zd.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpgo02d7zd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgo02d7zd.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpgo02d7zd.jl:16\\\
    n   [3] top-level scope at /tmp/tmpgo02d7zd.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpgo02d7zd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgo02d7zd.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpgo02d7zd.jl:16\\\
    n   [3] top-level scope at /tmp/tmpgo02d7zd.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpgo02d7zd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgo02d7zd.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpgo02d7zd.jl:16\\\
    n   [3] top-level scope at /tmp/tmpgo02d7zd.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpgo02d7zd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgo02d7zd.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpgo02d7zd.jl:16\\n   [3] top-level scope at /tmp/tmpgo02d7zd.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpgo02d7zd.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    s_split = split(s)\n    for i in 1:length(s_split)\n        s_split[i]\
    \ = sort(s_split[i])\n    end\n    return join(s_split)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7h6t9lhq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7h6t9lhq.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7h6t9lhq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7h6t9lhq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7h6t9lhq.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7h6t9lhq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp7h6t9lhq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7h6t9lhq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7h6t9lhq.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7h6t9lhq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_vfqjf43.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp_vfqjf43.jl:16\n   [3] top-level scope at /tmp/tmp_vfqjf43.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vfqjf43.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp_vfqjf43.jl:16\n\
    \   [3] top-level scope at /tmp/tmp_vfqjf43.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vfqjf43.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp_vfqjf43.jl:16\n\
    \   [3] top-level scope at /tmp/tmp_vfqjf43.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vfqjf43.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp_vfqjf43.jl:16\n\
    \   [3] top-level scope at /tmp/tmp_vfqjf43.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vfqjf43.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp_vfqjf43.jl:16\n   [3] top-level scope at /tmp/tmp_vfqjf43.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vfqjf43.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp_vfqjf43.jl:16\n\
    \   [3] top-level scope at /tmp/tmp_vfqjf43.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_vfqjf43.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_vfqjf43.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3npwobsu.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3npwobsu.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3npwobsu.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3npwobsu.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3npwobsu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3npwobsu.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp3npwobsu.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3npwobsu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3npwobsu.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3npwobsu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbmns1z_b.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpbmns1z_b.jl:16\n   [3] top-level scope at /tmp/tmpbmns1z_b.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpbmns1z_b.jl:16\n\
    \   [3] top-level scope at /tmp/tmpbmns1z_b.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpbmns1z_b.jl:16\n\
    \   [3] top-level scope at /tmp/tmpbmns1z_b.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpbmns1z_b.jl:16\n\
    \   [3] top-level scope at /tmp/tmpbmns1z_b.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpbmns1z_b.jl:16\n   [3] top-level scope at /tmp/tmpbmns1z_b.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpbmns1z_b.jl:16\n\
    \   [3] top-level scope at /tmp/tmpbmns1z_b.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmns1z_b.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpbmns1z_b.jl:16\n\
    \   [3] top-level scope at /tmp/tmpbmns1z_b.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbmns1z_b.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbmns1z_b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Sort\
    \ the characters in each word\n    sorted_words = [sort(w) for w in words]\n \
    \   # Join the words back together\n    return join(sorted_words, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbin12a2r.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpbin12a2r.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpbin12a2r.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpbin12a2r.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpbin12a2r.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbin12a2r.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw1jrdw7i.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw1jrdw7i.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\ntest set: Test Failed at /tmp/tmpw1jrdw7i.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw1jrdw7i.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\ntest set: Test Failed at /tmp/tmpw1jrdw7i.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw1jrdw7i.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\ntest set: Test Failed at /tmp/tmpw1jrdw7i.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw1jrdw7i.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\ntest set: Test Failed at /tmp/tmpw1jrdw7i.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw1jrdw7i.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\ntest set: Test Failed at /tmp/tmpw1jrdw7i.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw1jrdw7i.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1jrdw7i.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1jrdw7i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpujxg666t.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpujxg666t.jl:16\n   [3] top-level scope at /tmp/tmpujxg666t.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpujxg666t.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpujxg666t.jl:16\n\
    \   [3] top-level scope at /tmp/tmpujxg666t.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpujxg666t.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpujxg666t.jl:16\n\
    \   [3] top-level scope at /tmp/tmpujxg666t.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpujxg666t.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpujxg666t.jl:16\n\
    \   [3] top-level scope at /tmp/tmpujxg666t.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpujxg666t.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpujxg666t.jl:16\n   [3] top-level scope at /tmp/tmpujxg666t.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpujxg666t.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpujxg666t.jl:16\n\
    \   [3] top-level scope at /tmp/tmpujxg666t.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpujxg666t.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpujxg666t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptu2gi5dd.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmptu2gi5dd.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmptu2gi5dd.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptu2gi5dd.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmptu2gi5dd.jl:16\\\
    n   [3] top-level scope at /tmp/tmptu2gi5dd.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptu2gi5dd.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmptu2gi5dd.jl:16\\\
    n   [3] top-level scope at /tmp/tmptu2gi5dd.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptu2gi5dd.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmptu2gi5dd.jl:16\\\
    n   [3] top-level scope at /tmp/tmptu2gi5dd.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptu2gi5dd.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmptu2gi5dd.jl:16\\n   [3] top-level scope at /tmp/tmptu2gi5dd.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptu2gi5dd.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmptu2gi5dd.jl:16\\\
    n   [3] top-level scope at /tmp/tmptu2gi5dd.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmptu2gi5dd.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpthsobvyq.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpthsobvyq.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthsobvyq.jl:21\ntest set: Test Failed at /tmp/tmpthsobvyq.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpthsobvyq.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthsobvyq.jl:21\ntest set: Test Failed at /tmp/tmpthsobvyq.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpthsobvyq.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthsobvyq.jl:21\ntest set: Test Failed at /tmp/tmpthsobvyq.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpthsobvyq.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthsobvyq.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpthsobvyq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphsyk2li8.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmphsyk2li8.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsyk2li8.jl:21\ntest set: Test Failed at /tmp/tmphsyk2li8.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmphsyk2li8.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsyk2li8.jl:21\ntest set: Test Failed at /tmp/tmphsyk2li8.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmphsyk2li8.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsyk2li8.jl:21\ntest set: Test Failed at /tmp/tmphsyk2li8.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphsyk2li8.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsyk2li8.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphsyk2li8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Create\
    \ an empty string\n    new_string = \"\"\n    # Loop through the words\n    for\
    \ word in words\n        # Sort the characters in each word\n        sorted_word\
    \ = sort(collect(word))\n        # Add the sorted word to the new string\n   \
    \     new_string = new_string * join(sorted_word) * \" \"\n    end\n    # Remove\
    \ the last space\n    new_string = new_string[1:end-1]\n    # Return the new string\n\
    \    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = push!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprjczmnjv.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"[\\'H\\', \\'i\\']\" == \"Hi\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprjczmnjv.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"[\\'e\\', \\\
    'h\\', \\'l\\', \\'l\\', \\'o\\']\" == \"ehllo\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmprjczmnjv.jl:27\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"[\\'b\\',\
    \ \\'e\\', \\'m\\', \\'n\\', \\'r\\', \\'u\\']\" == \"bemnru\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprjczmnjv.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"[\\'a\\', \\\
    'b\\', \\'c\\', \\'d\\']\" == \"abcd\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmprjczmnjv.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"[\\'H\\', \\'e\\', \\'l\\', \\'l\\', \\'o\\'] [\\'!\\', \\'!\\', \\'!\\',\
    \ \\'W\\', \\'d\\', \\'l\\', \\'o\\', \\'r\\']\" == \"Hello !!!Wdlor\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprjczmnjv.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:31\\\
    n  Expression: candidate(\"\") == \"\"\\n   Evaluated: \"Char[]\" == \"\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmprjczmnjv.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\ntest set: Test Failed at /tmp/tmprjczmnjv.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"[\\'.\\', \\'H\\\
    ', \\'i\\'] [\\'M\\', \\'y\\'] [\\'a\\', \\'e\\', \\'m\\', \\'n\\'] [\\'i\\',\
    \ \\'s\\'] [\\'M\\', \\'e\\', \\'i\\', \\'r\\', \\'s\\', \\'t\\'] [\\'.\\', \\\
    'R\\', \\'b\\', \\'o\\', \\'o\\', \\'t\\'] [\\'H\\', \\'o\\', \\'w\\'] [\\'a\\\
    ', \\'e\\', \\'r\\'] [\\'?\\', \\'o\\', \\'u\\', \\'y\\']\" == \".Hi My aemn is\
    \ Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmprjczmnjv.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprjczmnjv.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # YOUR CODE HERE\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpukcriddk.jl:23\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n   Evaluated: \"hello\" == \"ehllo\"\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpukcriddk.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpukcriddk.jl:21\\ntest set: Test Failed at /tmp/tmpukcriddk.jl:24\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"number\"\
    \ == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpukcriddk.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpukcriddk.jl:21\\ntest set: Test Failed at /tmp/tmpukcriddk.jl:26\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpukcriddk.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpukcriddk.jl:21\\ntest set: Test Failed at /tmp/tmpukcriddk.jl:28\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpukcriddk.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpukcriddk.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     4      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(words[i])\n    end\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpam3gaq5y.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: no method matching sort(::SubString{String})\\n \
    \ Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpam3gaq5y.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpam3gaq5y.jl:16\\\
    n   [2] top-level scope at /tmp/tmpam3gaq5y.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpam3gaq5y.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1udzjb7.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] anti_shuffle(::String) at\
    \ /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope at /tmp/tmpm1udzjb7.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1udzjb7.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmpm1udzjb7.jl:15\n   [2] top-level scope\
    \ at /tmp/tmpm1udzjb7.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1udzjb7.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1udzjb7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s)\n    # sort each word\n\
    \    sorted_words = [sort(word) for word in words]\n    # join the words back\
    \ together\n    return join(sorted_words)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpucbin7ji.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:26\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpucbin7ji.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:27\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpucbin7ji.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:28\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpucbin7ji.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:29\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpucbin7ji.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:30\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpucbin7ji.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpucbin7ji.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpucbin7ji.jl:32\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpucbin7ji.jl:25\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(words[i])\n    end\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnj6tzpdy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpnj6tzpdy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnj6tzpdy.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnj6tzpdy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnj6tzpdy.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnj6tzpdy.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # join words back into string\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxnkiirbb.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxnkiirbb.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxnkiirbb.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxnkiirbb.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxnkiirbb.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxnkiirbb.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoutl_vpb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpoutl_vpb.jl:16\n   [3] top-level scope at /tmp/tmpoutl_vpb.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpoutl_vpb.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpoutl_vpb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpoutl_vpb.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpoutl_vpb.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpoutl_vpb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpoutl_vpb.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpoutl_vpb.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpoutl_vpb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpoutl_vpb.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpoutl_vpb.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpoutl_vpb.jl:16\n   [3] top-level scope at /tmp/tmpoutl_vpb.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpoutl_vpb.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpoutl_vpb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpoutl_vpb.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpoutl_vpb.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoutl_vpb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplpx53rto.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplpx53rto.jl:16\n   [3] top-level scope at /tmp/tmplpx53rto.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpx53rto.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplpx53rto.jl:16\n\
    \   [3] top-level scope at /tmp/tmplpx53rto.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpx53rto.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplpx53rto.jl:16\n\
    \   [3] top-level scope at /tmp/tmplpx53rto.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpx53rto.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplpx53rto.jl:16\n\
    \   [3] top-level scope at /tmp/tmplpx53rto.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpx53rto.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplpx53rto.jl:16\n   [3] top-level scope at /tmp/tmplpx53rto.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpx53rto.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplpx53rto.jl:16\n\
    \   [3] top-level scope at /tmp/tmplpx53rto.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplpx53rto.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplpx53rto.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4a4vu9vo.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] anti_shuffle(::String) at\
    \ /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope at /tmp/tmp4a4vu9vo.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp4a4vu9vo.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp4a4vu9vo.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp4a4vu9vo.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4a4vu9vo.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4a4vu9vo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcwr7va2i.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpcwr7va2i.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpcwr7va2i.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwr7va2i.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpcwr7va2i.jl:16\\\
    n   [3] top-level scope at /tmp/tmpcwr7va2i.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwr7va2i.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpcwr7va2i.jl:16\\\
    n   [3] top-level scope at /tmp/tmpcwr7va2i.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwr7va2i.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpcwr7va2i.jl:16\\\
    n   [3] top-level scope at /tmp/tmpcwr7va2i.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwr7va2i.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpcwr7va2i.jl:16\\n   [3] top-level scope at /tmp/tmpcwr7va2i.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwr7va2i.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpcwr7va2i.jl:16\\\
    n   [3] top-level scope at /tmp/tmpcwr7va2i.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpcwr7va2i.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    new_words = []\n    for word in words\n        new_words\
    \ = append!(new_words, sort(word))\n    end\n    return join(new_words)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt5tka130.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpt5tka130.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpt5tka130.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpt5tka130.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpt5tka130.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpt5tka130.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt5tka130.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt5tka130.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt5tka130.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt5tka130.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpez4feezb.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpez4feezb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpez4feezb.jl:21\ntest set: Test Failed at /tmp/tmpez4feezb.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpez4feezb.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpez4feezb.jl:21\ntest set: Test Failed at /tmp/tmpez4feezb.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpez4feezb.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpez4feezb.jl:21\ntest set: Test Failed at /tmp/tmpez4feezb.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpez4feezb.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpez4feezb.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpez4feezb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp78l50sai.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp78l50sai.jl:16\n   [3] top-level scope at /tmp/tmp78l50sai.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp78l50sai.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp78l50sai.jl:16\n\
    \   [3] top-level scope at /tmp/tmp78l50sai.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp78l50sai.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp78l50sai.jl:16\n\
    \   [3] top-level scope at /tmp/tmp78l50sai.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp78l50sai.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp78l50sai.jl:16\n\
    \   [3] top-level scope at /tmp/tmp78l50sai.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp78l50sai.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp78l50sai.jl:16\n   [3] top-level scope at /tmp/tmp78l50sai.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp78l50sai.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp78l50sai.jl:16\n\
    \   [3] top-level scope at /tmp/tmp78l50sai.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp78l50sai.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78l50sai.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, \" \")\n    # sort\
    \ each word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    # join the words back together\n    return join(words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt2vifyxo.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt2vifyxo.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpt2vifyxo.jl:18\n\
    \   [2] top-level scope at /tmp/tmpt2vifyxo.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt2vifyxo.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt2vifyxo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo6y6c7t5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpo6y6c7t5.jl:16\n   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpo6y6c7t5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpo6y6c7t5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpo6y6c7t5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpo6y6c7t5.jl:16\n   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpo6y6c7t5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6y6c7t5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpo6y6c7t5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpo6y6c7t5.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpo6y6c7t5.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6y6c7t5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgvhkbo53.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpgvhkbo53.jl:16\n   [3] top-level scope at /tmp/tmpgvhkbo53.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvhkbo53.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgvhkbo53.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgvhkbo53.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvhkbo53.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgvhkbo53.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgvhkbo53.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvhkbo53.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgvhkbo53.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgvhkbo53.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvhkbo53.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpgvhkbo53.jl:16\n   [3] top-level scope at /tmp/tmpgvhkbo53.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvhkbo53.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpgvhkbo53.jl:16\n\
    \   [3] top-level scope at /tmp/tmpgvhkbo53.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgvhkbo53.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvhkbo53.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp8trwqaf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpp8trwqaf.jl:16\n   [3] top-level scope at /tmp/tmpp8trwqaf.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpp8trwqaf.jl:16\n\
    \   [3] top-level scope at /tmp/tmpp8trwqaf.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpp8trwqaf.jl:16\n\
    \   [3] top-level scope at /tmp/tmpp8trwqaf.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpp8trwqaf.jl:16\n\
    \   [3] top-level scope at /tmp/tmpp8trwqaf.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpp8trwqaf.jl:16\n   [3] top-level scope at /tmp/tmpp8trwqaf.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpp8trwqaf.jl:16\n\
    \   [3] top-level scope at /tmp/tmpp8trwqaf.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8trwqaf.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpp8trwqaf.jl:16\n\
    \   [3] top-level scope at /tmp/tmpp8trwqaf.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpp8trwqaf.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8trwqaf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqom229gt.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpqom229gt.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpqom229gt.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqom229gt.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpqom229gt.jl:16\\\
    n   [3] top-level scope at /tmp/tmpqom229gt.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqom229gt.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpqom229gt.jl:16\\\
    n   [3] top-level scope at /tmp/tmpqom229gt.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqom229gt.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpqom229gt.jl:16\\\
    n   [3] top-level scope at /tmp/tmpqom229gt.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqom229gt.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpqom229gt.jl:16\\n   [3] top-level scope at /tmp/tmpqom229gt.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqom229gt.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpqom229gt.jl:16\\\
    n   [3] top-level scope at /tmp/tmpqom229gt.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpqom229gt.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi1plsql9.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpi1plsql9.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi1plsql9.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi1plsql9.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi1plsql9.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpi1plsql9.jl:16\\n   [3] top-level scope at /tmp/tmpi1plsql9.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi1plsql9.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi1plsql9.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi1plsql9.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi1plsql9.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi1plsql9.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6sx7u3r3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp6sx7u3r3.jl:16\n   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp6sx7u3r3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp6sx7u3r3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp6sx7u3r3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp6sx7u3r3.jl:16\n   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp6sx7u3r3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6sx7u3r3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp6sx7u3r3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp6sx7u3r3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6sx7u3r3.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sx7u3r3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s)\n    # Sort each word\n\
    \    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n  \
    \  # Join the words back together\n    return join(words)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnqmjm0yk.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqmjm0yk.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqmjm0yk.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqmjm0yk.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqmjm0yk.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqmjm0yk.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpnqmjm0yk.jl:18\n\
    \   [2] top-level scope at /tmp/tmpnqmjm0yk.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqmjm0yk.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqmjm0yk.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    sorted_words = [sort(word) for word in words]\n    # join sorted words\n\
    \    return join(sorted_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpltlgpbhx.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:26\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:27\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:28\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:29\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:30\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: no method matching sort(::SubString{String})\\n \
    \ Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:31\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpltlgpbhx.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmpltlgpbhx.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmpltlgpbhx.jl:32\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmpltlgpbhx.jl:25\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3zztcu2p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp3zztcu2p.jl:16\n   [3] top-level scope at /tmp/tmp3zztcu2p.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3zztcu2p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3zztcu2p.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3zztcu2p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3zztcu2p.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3zztcu2p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3zztcu2p.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp3zztcu2p.jl:16\n   [3] top-level scope at /tmp/tmp3zztcu2p.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3zztcu2p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3zztcu2p.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3zztcu2p.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3zztcu2p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3zztcu2p.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3zztcu2p.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3zztcu2p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkqrzxys4.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"H i\" == \"Hi\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpkqrzxys4.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\ntest set: Test Failed at /tmp/tmpkqrzxys4.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkqrzxys4.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\ntest set: Test Failed at /tmp/tmpkqrzxys4.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkqrzxys4.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\ntest set: Test Failed at /tmp/tmpkqrzxys4.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"a b c d\" ==\
    \ \"abcd\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkqrzxys4.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\ntest set: Test Failed at /tmp/tmpkqrzxys4.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpkqrzxys4.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\ntest set: Test Failed at /tmp/tmpkqrzxys4.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \". H i M y a e m\
    \ n i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkqrzxys4.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkqrzxys4.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7waabfgx.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp7waabfgx.jl:16\n   [3] top-level scope at /tmp/tmp7waabfgx.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7waabfgx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp7waabfgx.jl:16\n\
    \   [3] top-level scope at /tmp/tmp7waabfgx.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7waabfgx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp7waabfgx.jl:16\n\
    \   [3] top-level scope at /tmp/tmp7waabfgx.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7waabfgx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp7waabfgx.jl:16\n\
    \   [3] top-level scope at /tmp/tmp7waabfgx.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7waabfgx.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp7waabfgx.jl:16\n   [3] top-level scope at /tmp/tmp7waabfgx.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp7waabfgx.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp7waabfgx.jl:16\n\
    \   [3] top-level scope at /tmp/tmp7waabfgx.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7waabfgx.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7waabfgx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0vk4f7t1.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"H i\" == \"Hi\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp0vk4f7t1.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\ntest set: Test Failed at /tmp/tmp0vk4f7t1.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0vk4f7t1.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\ntest set: Test Failed at /tmp/tmp0vk4f7t1.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0vk4f7t1.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\ntest set: Test Failed at /tmp/tmp0vk4f7t1.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"a b c d\" ==\
    \ \"abcd\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0vk4f7t1.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\ntest set: Test Failed at /tmp/tmp0vk4f7t1.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp0vk4f7t1.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\ntest set: Test Failed at /tmp/tmp0vk4f7t1.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \". H i M y a e m\
    \ n i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0vk4f7t1.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0vk4f7t1.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     6      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp37rnz1ww.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] anti_shuffle(::String) at\
    \ /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope at /tmp/tmp37rnz1ww.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp37rnz1ww.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp37rnz1ww.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp37rnz1ww.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp37rnz1ww.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37rnz1ww.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr9l47bd4.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpr9l47bd4.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9l47bd4.jl:21\ntest set: Test Failed at /tmp/tmpr9l47bd4.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr9l47bd4.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9l47bd4.jl:21\ntest set: Test Failed at /tmp/tmpr9l47bd4.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpr9l47bd4.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9l47bd4.jl:21\ntest set: Test Failed at /tmp/tmpr9l47bd4.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr9l47bd4.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr9l47bd4.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9l47bd4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4agmyfp.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf4agmyfp.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\ntest set: Test Failed at /tmp/tmpf4agmyfp.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4agmyfp.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\ntest set: Test Failed at /tmp/tmpf4agmyfp.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4agmyfp.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\ntest set: Test Failed at /tmp/tmpf4agmyfp.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4agmyfp.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\ntest set: Test Failed at /tmp/tmpf4agmyfp.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf4agmyfp.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\ntest set: Test Failed at /tmp/tmpf4agmyfp.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf4agmyfp.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4agmyfp.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4agmyfp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp42ivt6ak.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp42ivt6ak.jl:16\n   [3] top-level scope at /tmp/tmp42ivt6ak.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp42ivt6ak.jl:16\n\
    \   [3] top-level scope at /tmp/tmp42ivt6ak.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp42ivt6ak.jl:16\n\
    \   [3] top-level scope at /tmp/tmp42ivt6ak.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp42ivt6ak.jl:16\n\
    \   [3] top-level scope at /tmp/tmp42ivt6ak.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp42ivt6ak.jl:16\n   [3] top-level scope at /tmp/tmp42ivt6ak.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp42ivt6ak.jl:16\n\
    \   [3] top-level scope at /tmp/tmp42ivt6ak.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp42ivt6ak.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp42ivt6ak.jl:16\n\
    \   [3] top-level scope at /tmp/tmp42ivt6ak.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp42ivt6ak.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp42ivt6ak.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp748vlq6y.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp748vlq6y.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp748vlq6y.jl:21\ntest set: Test Failed at /tmp/tmp748vlq6y.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp748vlq6y.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp748vlq6y.jl:21\ntest set: Test Failed at /tmp/tmp748vlq6y.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp748vlq6y.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp748vlq6y.jl:21\ntest set: Test Failed at /tmp/tmp748vlq6y.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp748vlq6y.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp748vlq6y.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp748vlq6y.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s)\n    # Sort the characters\
    \ in each word\n    sorted_words = [sort(w) for w in words]\n    # Join the words\
    \ back together\n    return join(sorted_words)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz7jjbdmi.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7jjbdmi.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7jjbdmi.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7jjbdmi.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7jjbdmi.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7jjbdmi.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpz7jjbdmi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpz7jjbdmi.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpz7jjbdmi.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7jjbdmi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7w9ja_jp.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmp7w9ja_jp.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmp7w9ja_jp.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7w9ja_jp.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp7w9ja_jp.jl:16\\\
    n   [3] top-level scope at /tmp/tmp7w9ja_jp.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7w9ja_jp.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp7w9ja_jp.jl:16\\\
    n   [3] top-level scope at /tmp/tmp7w9ja_jp.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7w9ja_jp.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp7w9ja_jp.jl:16\\\
    n   [3] top-level scope at /tmp/tmp7w9ja_jp.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7w9ja_jp.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmp7w9ja_jp.jl:16\\n   [3] top-level scope at /tmp/tmp7w9ja_jp.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7w9ja_jp.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp7w9ja_jp.jl:16\\\
    n   [3] top-level scope at /tmp/tmp7w9ja_jp.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp7w9ja_jp.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjti0hhb_.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjti0hhb_.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjti0hhb_.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjti0hhb_.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjti0hhb_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjti0hhb_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmpjti0hhb_.jl:16\\\
    n   [2] top-level scope at /tmp/tmpjti0hhb_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjti0hhb_.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       push!(new_words, sort(collect(word)))\n    end\n    join(new_words, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8vcc6eso.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"[\\'H\\', \\'i\\']\" == \"Hi\"\\nStacktrace:'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s)\n    # sort each word\n\
    \    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n  \
    \  # join the sorted words\n    return join(words)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq3basgfx.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3basgfx.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3basgfx.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3basgfx.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3basgfx.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3basgfx.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq3basgfx.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq3basgfx.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3basgfx.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3basgfx.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp876igw0p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp876igw0p.jl:16\n   [3] top-level scope at /tmp/tmp876igw0p.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp876igw0p.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp876igw0p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp876igw0p.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp876igw0p.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp876igw0p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp876igw0p.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp876igw0p.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp876igw0p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp876igw0p.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp876igw0p.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp876igw0p.jl:16\n   [3] top-level scope at /tmp/tmp876igw0p.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp876igw0p.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp876igw0p.jl:16\n\
    \   [3] top-level scope at /tmp/tmp876igw0p.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp876igw0p.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp876igw0p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp841v8o5q.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp841v8o5q.jl:16\n   [3] top-level scope at /tmp/tmp841v8o5q.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp841v8o5q.jl:16\n\
    \   [3] top-level scope at /tmp/tmp841v8o5q.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp841v8o5q.jl:16\n\
    \   [3] top-level scope at /tmp/tmp841v8o5q.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp841v8o5q.jl:16\n\
    \   [3] top-level scope at /tmp/tmp841v8o5q.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp841v8o5q.jl:16\n   [3] top-level scope at /tmp/tmp841v8o5q.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp841v8o5q.jl:16\n\
    \   [3] top-level scope at /tmp/tmp841v8o5q.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp841v8o5q.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp841v8o5q.jl:16\n\
    \   [3] top-level scope at /tmp/tmp841v8o5q.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp841v8o5q.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp841v8o5q.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    return join(map(sort, split(s, \" \")), \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmdow071r.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:21\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:22\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:23\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:24\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:25\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:26\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpmdow071r.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] anti_shuffle(::String) at /tmp/tmpmdow071r.jl:14\n   [6] top-level scope\
    \ at /tmp/tmpmdow071r.jl:27\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpmdow071r.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmdow071r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ckkte12.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp4ckkte12.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ckkte12.jl:21\ntest set: Test Failed at /tmp/tmp4ckkte12.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4ckkte12.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ckkte12.jl:21\ntest set: Test Failed at /tmp/tmp4ckkte12.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp4ckkte12.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ckkte12.jl:21\ntest set: Test Failed at /tmp/tmp4ckkte12.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ckkte12.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ckkte12.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ckkte12.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9xm81oyz.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmp9xm81oyz.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\\
    n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\\
    n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\\
    n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmp9xm81oyz.jl:16\\n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\\
    n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9xm81oyz.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp9xm81oyz.jl:16\\\
    n   [3] top-level scope at /tmp/tmp9xm81oyz.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp9xm81oyz.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphozi6y9l.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmphozi6y9l.jl:16\n   [3] top-level scope at /tmp/tmphozi6y9l.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphozi6y9l.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmphozi6y9l.jl:16\n\
    \   [3] top-level scope at /tmp/tmphozi6y9l.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphozi6y9l.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmphozi6y9l.jl:16\n\
    \   [3] top-level scope at /tmp/tmphozi6y9l.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphozi6y9l.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmphozi6y9l.jl:16\n\
    \   [3] top-level scope at /tmp/tmphozi6y9l.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphozi6y9l.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmphozi6y9l.jl:16\n   [3] top-level scope at /tmp/tmphozi6y9l.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphozi6y9l.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmphozi6y9l.jl:16\n\
    \   [3] top-level scope at /tmp/tmphozi6y9l.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmphozi6y9l.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphozi6y9l.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnt6lk2hv.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpnt6lk2hv.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpnt6lk2hv.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnt6lk2hv.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnt6lk2hv.jl:16\\\
    n   [3] top-level scope at /tmp/tmpnt6lk2hv.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnt6lk2hv.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnt6lk2hv.jl:16\\\
    n   [3] top-level scope at /tmp/tmpnt6lk2hv.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnt6lk2hv.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnt6lk2hv.jl:16\\\
    n   [3] top-level scope at /tmp/tmpnt6lk2hv.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnt6lk2hv.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpnt6lk2hv.jl:16\\n   [3] top-level scope at /tmp/tmpnt6lk2hv.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnt6lk2hv.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnt6lk2hv.jl:16\\\
    n   [3] top-level scope at /tmp/tmpnt6lk2hv.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnt6lk2hv.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # YOUR CODE HERE\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb31kk02a.jl:23\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n   Evaluated: \"hello\" == \"ehllo\"\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpb31kk02a.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb31kk02a.jl:21\\ntest set: Test Failed at /tmp/tmpb31kk02a.jl:24\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"number\"\
    \ == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb31kk02a.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb31kk02a.jl:21\\ntest set: Test Failed at /tmp/tmpb31kk02a.jl:26\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpb31kk02a.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb31kk02a.jl:21\\ntest set: Test Failed at /tmp/tmpb31kk02a.jl:28\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpb31kk02a.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb31kk02a.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     4      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc8seb6qc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpc8seb6qc.jl:16\n   [3] top-level scope at /tmp/tmpc8seb6qc.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc8seb6qc.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpc8seb6qc.jl:16\n\
    \   [3] top-level scope at /tmp/tmpc8seb6qc.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc8seb6qc.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpc8seb6qc.jl:16\n\
    \   [3] top-level scope at /tmp/tmpc8seb6qc.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc8seb6qc.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpc8seb6qc.jl:16\n\
    \   [3] top-level scope at /tmp/tmpc8seb6qc.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc8seb6qc.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpc8seb6qc.jl:16\n   [3] top-level scope at /tmp/tmpc8seb6qc.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc8seb6qc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpc8seb6qc.jl:16\n\
    \   [3] top-level scope at /tmp/tmpc8seb6qc.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpc8seb6qc.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8seb6qc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    #split the string into words\n    words = split(s, \" \")\n    #sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    #join the words back together\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq8r5c9y1.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8r5c9y1.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpq8r5c9y1.jl:18\n\
    \   [2] top-level scope at /tmp/tmpq8r5c9y1.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8r5c9y1.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8r5c9y1.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb8fwweee.jl:23\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n   Evaluated: \"hello\" == \"ehllo\"\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpb8fwweee.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb8fwweee.jl:21\\ntest set: Test Failed at /tmp/tmpb8fwweee.jl:24\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"number\"\
    \ == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb8fwweee.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb8fwweee.jl:21\\ntest set: Test Failed at /tmp/tmpb8fwweee.jl:26\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpb8fwweee.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb8fwweee.jl:21\\ntest set: Test Failed at /tmp/tmpb8fwweee.jl:28\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpb8fwweee.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb8fwweee.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     4      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    new_words = []\n    for word in words\n        new_words\
    \ = append!(new_words, sort(collect(word)))\n    end\n    return join(new_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr6lubc2j.jl:30\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6lubc2j.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6lubc2j.jl:25\ntest set: Test Failed at /tmp/tmpr6lubc2j.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr6lubc2j.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6lubc2j.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6lubc2j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkrjs21zd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkrjs21zd.jl:16\n   [3] top-level scope at /tmp/tmpkrjs21zd.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkrjs21zd.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkrjs21zd.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkrjs21zd.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkrjs21zd.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkrjs21zd.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkrjs21zd.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkrjs21zd.jl:16\n   [3] top-level scope at /tmp/tmpkrjs21zd.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkrjs21zd.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkrjs21zd.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrjs21zd.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkrjs21zd.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkrjs21zd.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkrjs21zd.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrjs21zd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp12okz3m5.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] anti_shuffle(::String)\
    \ at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope at /tmp/tmp12okz3m5.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] anti_shuffle(::String) at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope\
    \ at /tmp/tmp12okz3m5.jl:22\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] anti_shuffle(::String) at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope\
    \ at /tmp/tmp12okz3m5.jl:23\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] anti_shuffle(::String) at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope\
    \ at /tmp/tmp12okz3m5.jl:24\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\\n  Closest candidates are:\\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] anti_shuffle(::String) at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope\
    \ at /tmp/tmp12okz3m5.jl:25\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Nothing to an\
    \ object of type String\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] anti_shuffle(::String)\
    \ at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope at /tmp/tmp12okz3m5.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp12okz3m5.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] anti_shuffle(::String) at /tmp/tmp12okz3m5.jl:15\\n   [2] top-level scope\
    \ at /tmp/tmp12okz3m5.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp12okz3m5.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8httekl8.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmp8httekl8.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmp8httekl8.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8httekl8.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp8httekl8.jl:16\\\
    n   [3] top-level scope at /tmp/tmp8httekl8.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8httekl8.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp8httekl8.jl:16\\\
    n   [3] top-level scope at /tmp/tmp8httekl8.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8httekl8.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp8httekl8.jl:16\\\
    n   [3] top-level scope at /tmp/tmp8httekl8.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8httekl8.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmp8httekl8.jl:16\\n   [3] top-level scope at /tmp/tmp8httekl8.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8httekl8.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp8httekl8.jl:16\\\
    n   [3] top-level scope at /tmp/tmp8httekl8.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp8httekl8.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi9m7n3g_.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpi9m7n3g_.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpi9m7n3g_.jl:16\\n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpi9m7n3g_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpi9m7n3g_.jl:16\\\
    n   [3] top-level scope at /tmp/tmpi9m7n3g_.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpi9m7n3g_.jl:24\\n  \\nTest Summary: | Error\
    \  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnc11qp1q.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"H i\" == \"Hi\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnc11qp1q.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\ntest set: Test Failed at /tmp/tmpnc11qp1q.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnc11qp1q.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\ntest set: Test Failed at /tmp/tmpnc11qp1q.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnc11qp1q.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\ntest set: Test Failed at /tmp/tmpnc11qp1q.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"a b c d\" ==\
    \ \"abcd\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnc11qp1q.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\ntest set: Test Failed at /tmp/tmpnc11qp1q.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnc11qp1q.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\ntest set: Test Failed at /tmp/tmpnc11qp1q.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \". H i M y a e m\
    \ n i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnc11qp1q.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnc11qp1q.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcxr_2ckb.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcxr_2ckb.jl:16\n   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxr_2ckb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxr_2ckb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxr_2ckb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcxr_2ckb.jl:16\n   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxr_2ckb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxr_2ckb.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxr_2ckb.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxr_2ckb.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxr_2ckb.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxr_2ckb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp66se5bq7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp66se5bq7.jl:16\n   [3] top-level scope at /tmp/tmp66se5bq7.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp66se5bq7.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp66se5bq7.jl:16\n\
    \   [3] top-level scope at /tmp/tmp66se5bq7.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp66se5bq7.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp66se5bq7.jl:16\n\
    \   [3] top-level scope at /tmp/tmp66se5bq7.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp66se5bq7.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp66se5bq7.jl:16\n\
    \   [3] top-level scope at /tmp/tmp66se5bq7.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp66se5bq7.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp66se5bq7.jl:16\n   [3] top-level scope at /tmp/tmp66se5bq7.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp66se5bq7.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp66se5bq7.jl:16\n\
    \   [3] top-level scope at /tmp/tmp66se5bq7.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp66se5bq7.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66se5bq7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp66y45i11.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmp66y45i11.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\\
    n   [3] top-level scope at /tmp/tmp66y45i11.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\\
    n   [3] top-level scope at /tmp/tmp66y45i11.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\\
    n   [3] top-level scope at /tmp/tmp66y45i11.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmp66y45i11.jl:16\\n   [3] top-level scope at /tmp/tmp66y45i11.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\\
    n   [3] top-level scope at /tmp/tmp66y45i11.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp66y45i11.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp66y45i11.jl:16\\\
    n   [3] top-level scope at /tmp/tmp66y45i11.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp66y45i11.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Sort\
    \ each word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    # Join the words back together\n    return join(words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxc1s252e.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxc1s252e.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxc1s252e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxc1s252e.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxc1s252e.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc1s252e.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # join words back into string\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz768786t.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz768786t.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpz768786t.jl:18\n\
    \   [2] top-level scope at /tmp/tmpz768786t.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz768786t.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz768786t.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp07h9fw3k.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmp07h9fw3k.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmp07h9fw3k.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp07h9fw3k.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp07h9fw3k.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp07h9fw3k.jl:16\\\
    n   [3] top-level scope at /tmp/tmp07h9fw3k.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp07h9fw3k.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp07h9fw3k.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp07h9fw3k.jl:16\\\
    n   [3] top-level scope at /tmp/tmp07h9fw3k.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp07h9fw3k.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp07h9fw3k.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmp07h9fw3k.jl:16\\\
    n   [3] top-level scope at /tmp/tmp07h9fw3k.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp07h9fw3k.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp07h9fw3k.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmp07h9fw3k.jl:16\\n   [3] top-level scope at /tmp/tmp07h9fw3k.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp07h9fw3k.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvou4o40q.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpvou4o40q.jl:16\n   [3] top-level scope at /tmp/tmpvou4o40q.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvou4o40q.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvou4o40q.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvou4o40q.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvou4o40q.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvou4o40q.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvou4o40q.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpvou4o40q.jl:16\n   [3] top-level scope at /tmp/tmpvou4o40q.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvou4o40q.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvou4o40q.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvou4o40q.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpvou4o40q.jl:16\n\
    \   [3] top-level scope at /tmp/tmpvou4o40q.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvou4o40q.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvou4o40q.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcx3ph001.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcx3ph001.jl:16\n   [3] top-level scope at /tmp/tmpcx3ph001.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcx3ph001.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcx3ph001.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcx3ph001.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcx3ph001.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcx3ph001.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcx3ph001.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcx3ph001.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcx3ph001.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcx3ph001.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcx3ph001.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcx3ph001.jl:16\n   [3] top-level scope at /tmp/tmpcx3ph001.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcx3ph001.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcx3ph001.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcx3ph001.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcx3ph001.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcx3ph001.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsbmyhya5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpsbmyhya5.jl:16\n   [3] top-level scope at /tmp/tmpsbmyhya5.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsbmyhya5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpsbmyhya5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpsbmyhya5.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsbmyhya5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpsbmyhya5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpsbmyhya5.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsbmyhya5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpsbmyhya5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpsbmyhya5.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsbmyhya5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpsbmyhya5.jl:16\n   [3] top-level scope at /tmp/tmpsbmyhya5.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsbmyhya5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpsbmyhya5.jl:16\n\
    \   [3] top-level scope at /tmp/tmpsbmyhya5.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsbmyhya5.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsbmyhya5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyrbjl2m5.jl:29\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyrbjl2m5.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyrbjl2m5.jl:24\ntest set: Test Failed at /tmp/tmpyrbjl2m5.jl:31\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyrbjl2m5.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyrbjl2m5.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyrbjl2m5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, \" \")\n    # sort\
    \ the characters in each word\n    sorted_words = [sort(word) for word in words]\n\
    \    # join the words back into a string\n    return join(sorted_words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdhpwdbud.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdhpwdbud.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpdhpwdbud.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpdhpwdbud.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpdhpwdbud.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdhpwdbud.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeaia4spo.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpeaia4spo.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeaia4spo.jl:21\ntest set: Test Failed at /tmp/tmpeaia4spo.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpeaia4spo.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeaia4spo.jl:21\ntest set: Test Failed at /tmp/tmpeaia4spo.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpeaia4spo.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeaia4spo.jl:21\ntest set: Test Failed at /tmp/tmpeaia4spo.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeaia4spo.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeaia4spo.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeaia4spo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphghz947u.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] anti_shuffle(::String) at\
    \ /tmp/tmphghz947u.jl:15\n   [2] top-level scope at /tmp/tmphghz947u.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmphghz947u.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmphghz947u.jl:15\n   [2] top-level scope\
    \ at /tmp/tmphghz947u.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphghz947u.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphghz947u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqli5lx4y.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqli5lx4y.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\ntest set: Test Failed at /tmp/tmpqli5lx4y.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqli5lx4y.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\ntest set: Test Failed at /tmp/tmpqli5lx4y.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqli5lx4y.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\ntest set: Test Failed at /tmp/tmpqli5lx4y.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqli5lx4y.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\ntest set: Test Failed at /tmp/tmpqli5lx4y.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqli5lx4y.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\ntest set: Test Failed at /tmp/tmpqli5lx4y.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqli5lx4y.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqli5lx4y.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqli5lx4y.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, ' ')\n    # Sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # Join the words back together\n    return join(words, ' ')\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf86mznfy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf86mznfy.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpf86mznfy.jl:18\n\
    \   [2] top-level scope at /tmp/tmpf86mznfy.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf86mznfy.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf86mznfy.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    new_words = []\n    for word in words\n\
    \        new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6g0wm8e.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn6g0wm8e.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\ntest set: Test Failed at /tmp/tmpn6g0wm8e.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn6g0wm8e.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\ntest set: Test Failed at /tmp/tmpn6g0wm8e.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn6g0wm8e.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\ntest set: Test Failed at /tmp/tmpn6g0wm8e.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn6g0wm8e.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\ntest set: Test Failed at /tmp/tmpn6g0wm8e.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn6g0wm8e.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\ntest set: Test Failed at /tmp/tmpn6g0wm8e.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn6g0wm8e.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn6g0wm8e.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6g0wm8e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # join words back into a string\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxw5tsmt0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxw5tsmt0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpxw5tsmt0.jl:18\n\
    \   [2] top-level scope at /tmp/tmpxw5tsmt0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxw5tsmt0.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxw5tsmt0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp806zwx09.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp806zwx09.jl:16\n   [3] top-level scope at /tmp/tmp806zwx09.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp806zwx09.jl:16\n\
    \   [3] top-level scope at /tmp/tmp806zwx09.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp806zwx09.jl:16\n\
    \   [3] top-level scope at /tmp/tmp806zwx09.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp806zwx09.jl:16\n\
    \   [3] top-level scope at /tmp/tmp806zwx09.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp806zwx09.jl:16\n   [3] top-level scope at /tmp/tmp806zwx09.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp806zwx09.jl:16\n\
    \   [3] top-level scope at /tmp/tmp806zwx09.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp806zwx09.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp806zwx09.jl:16\n\
    \   [3] top-level scope at /tmp/tmp806zwx09.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp806zwx09.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp806zwx09.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjf6i9od4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpjf6i9od4.jl:16\n   [3] top-level scope at /tmp/tmpjf6i9od4.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpjf6i9od4.jl:16\n\
    \   [3] top-level scope at /tmp/tmpjf6i9od4.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpjf6i9od4.jl:16\n\
    \   [3] top-level scope at /tmp/tmpjf6i9od4.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpjf6i9od4.jl:16\n\
    \   [3] top-level scope at /tmp/tmpjf6i9od4.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpjf6i9od4.jl:16\n   [3] top-level scope at /tmp/tmpjf6i9od4.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpjf6i9od4.jl:16\n\
    \   [3] top-level scope at /tmp/tmpjf6i9od4.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpjf6i9od4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpjf6i9od4.jl:16\n\
    \   [3] top-level scope at /tmp/tmpjf6i9od4.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjf6i9od4.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjf6i9od4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # YOUR CODE HERE\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0cvhd0m4.jl:23\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n   Evaluated: \"hello\" == \"ehllo\"\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp0cvhd0m4.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0cvhd0m4.jl:21\\ntest set: Test Failed at /tmp/tmp0cvhd0m4.jl:24\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"number\"\
    \ == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0cvhd0m4.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0cvhd0m4.jl:21\\ntest set: Test Failed at /tmp/tmp0cvhd0m4.jl:26\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmp0cvhd0m4.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0cvhd0m4.jl:21\\ntest set: Test Failed at /tmp/tmp0cvhd0m4.jl:28\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0cvhd0m4.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0cvhd0m4.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     4      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpstxznmjh.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpstxznmjh.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\ntest set: Test Failed at /tmp/tmpstxznmjh.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpstxznmjh.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\ntest set: Test Failed at /tmp/tmpstxznmjh.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpstxznmjh.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\ntest set: Test Failed at /tmp/tmpstxznmjh.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpstxznmjh.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\ntest set: Test Failed at /tmp/tmpstxznmjh.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpstxznmjh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\ntest set: Test Failed at /tmp/tmpstxznmjh.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpstxznmjh.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpstxznmjh.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpstxznmjh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppn3_c93j.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmppn3_c93j.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\\
    n   [3] top-level scope at /tmp/tmppn3_c93j.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\\
    n   [3] top-level scope at /tmp/tmppn3_c93j.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\\
    n   [3] top-level scope at /tmp/tmppn3_c93j.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmppn3_c93j.jl:16\\n   [3] top-level scope at /tmp/tmppn3_c93j.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\\
    n   [3] top-level scope at /tmp/tmppn3_c93j.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppn3_c93j.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmppn3_c93j.jl:16\\\
    n   [3] top-level scope at /tmp/tmppn3_c93j.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmppn3_c93j.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82qaiprk.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp82qaiprk.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\ntest set: Test Failed at /tmp/tmp82qaiprk.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmp82qaiprk.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\ntest set: Test Failed at /tmp/tmp82qaiprk.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp82qaiprk.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\ntest set: Test Failed at /tmp/tmp82qaiprk.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmp82qaiprk.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\ntest set: Test Failed at /tmp/tmp82qaiprk.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp82qaiprk.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\ntest set: Test Failed at /tmp/tmp82qaiprk.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmp82qaiprk.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82qaiprk.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82qaiprk.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwwpjuzb7.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpwwpjuzb7.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpwwpjuzb7.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpwwpjuzb7.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpwwpjuzb7.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpwwpjuzb7.jl:16\\\
    n   [3] top-level scope at /tmp/tmpwwpjuzb7.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpwwpjuzb7.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpwwpjuzb7.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpwwpjuzb7.jl:16\\\
    n   [3] top-level scope at /tmp/tmpwwpjuzb7.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpwwpjuzb7.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s)\n    # Sort each word\n\
    \    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n  \
    \  # Join the words back together\n    return join(words)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiqas6w7s.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqas6w7s.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqas6w7s.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqas6w7s.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqas6w7s.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqas6w7s.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiqas6w7s.jl:18\n\
    \   [2] top-level scope at /tmp/tmpiqas6w7s.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqas6w7s.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqas6w7s.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo48aosjx.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpo48aosjx.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\\
    n   [3] top-level scope at /tmp/tmpo48aosjx.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\\
    n   [3] top-level scope at /tmp/tmpo48aosjx.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\\
    n   [3] top-level scope at /tmp/tmpo48aosjx.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpo48aosjx.jl:16\\n   [3] top-level scope at /tmp/tmpo48aosjx.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\\
    n   [3] top-level scope at /tmp/tmpo48aosjx.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo48aosjx.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpo48aosjx.jl:16\\\
    n   [3] top-level scope at /tmp/tmpo48aosjx.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpo48aosjx.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, \" \")\n    # sort\
    \ each word\n    sorted_words = [sort(word) for word in words]\n    # join the\
    \ words back together\n    return join(sorted_words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9sk_b8qc.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9sk_b8qc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmp9sk_b8qc.jl:17\n   [4] top-level scope\
    \ at /tmp/tmp9sk_b8qc.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmp9sk_b8qc.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sk_b8qc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(words[i])\n    end\n    return join(words, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\"\
    )\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") ==\
    \ \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiz6t1fc_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz6t1fc_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpiz6t1fc_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpiz6t1fc_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz6t1fc_.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiz6t1fc_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2aj4kyxt.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp2aj4kyxt.jl:16\n   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2aj4kyxt.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2aj4kyxt.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2aj4kyxt.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp2aj4kyxt.jl:16\n   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2aj4kyxt.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2aj4kyxt.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2aj4kyxt.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2aj4kyxt.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2aj4kyxt.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2aj4kyxt.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdm0lokj8.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpdm0lokj8.jl:16\n   [3] top-level scope at /tmp/tmpdm0lokj8.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpdm0lokj8.jl:16\n\
    \   [3] top-level scope at /tmp/tmpdm0lokj8.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpdm0lokj8.jl:16\n\
    \   [3] top-level scope at /tmp/tmpdm0lokj8.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpdm0lokj8.jl:16\n\
    \   [3] top-level scope at /tmp/tmpdm0lokj8.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpdm0lokj8.jl:16\n   [3] top-level scope at /tmp/tmpdm0lokj8.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpdm0lokj8.jl:16\n\
    \   [3] top-level scope at /tmp/tmpdm0lokj8.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpdm0lokj8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpdm0lokj8.jl:16\n\
    \   [3] top-level scope at /tmp/tmpdm0lokj8.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdm0lokj8.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdm0lokj8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvbpt4p_y.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpvbpt4p_y.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\\
    n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\\
    n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\\
    n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpvbpt4p_y.jl:16\\n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\\
    n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvbpt4p_y.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpvbpt4p_y.jl:16\\\
    n   [3] top-level scope at /tmp/tmpvbpt4p_y.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpvbpt4p_y.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Sort\
    \ the characters in each word\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    # Join the words back together\n   \
    \ return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\"\
    ) == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnmlsmxb3.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\n   [3] top-level scope\
    \ at /tmp/tmpnmlsmxb3.jl:28\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\\
    n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:29\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\\
    n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\\
    n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpnmlsmxb3.jl:18\\n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:32\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\\
    n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:33\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmlsmxb3.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpnmlsmxb3.jl:18\\\
    n   [3] top-level scope at /tmp/tmpnmlsmxb3.jl:34\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpnmlsmxb3.jl:27\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprep3_b96.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"H i\" == \"Hi\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmprep3_b96.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\ntest set: Test Failed at /tmp/tmprep3_b96.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmprep3_b96.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\ntest set: Test Failed at /tmp/tmprep3_b96.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmprep3_b96.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\ntest set: Test Failed at /tmp/tmprep3_b96.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"a b c d\" ==\
    \ \"abcd\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmprep3_b96.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\ntest set: Test Failed at /tmp/tmprep3_b96.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmprep3_b96.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\ntest set: Test Failed at /tmp/tmprep3_b96.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \". H i M y a e m\
    \ n i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmprep3_b96.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprep3_b96.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = push!(new_words, join(sort(collect(word))))\n    end\n   \
    \ return join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfrck_q5t.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpfrck_q5t.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfrck_q5t.jl:21\ntest set: Test Failed at /tmp/tmpfrck_q5t.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfrck_q5t.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfrck_q5t.jl:21\ntest set: Test Failed at /tmp/tmpfrck_q5t.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpfrck_q5t.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfrck_q5t.jl:21\ntest set: Test Failed at /tmp/tmpfrck_q5t.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfrck_q5t.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfrck_q5t.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfrck_q5t.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx3ezzqmx.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpx3ezzqmx.jl:16\n   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpx3ezzqmx.jl:16\n\
    \   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpx3ezzqmx.jl:16\n\
    \   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpx3ezzqmx.jl:16\n\
    \   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpx3ezzqmx.jl:16\n   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpx3ezzqmx.jl:16\n\
    \   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx3ezzqmx.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpx3ezzqmx.jl:16\n\
    \   [3] top-level scope at /tmp/tmpx3ezzqmx.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpx3ezzqmx.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3ezzqmx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp194gy99y.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp194gy99y.jl:16\n   [3] top-level scope at /tmp/tmp194gy99y.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp194gy99y.jl:16\n\
    \   [3] top-level scope at /tmp/tmp194gy99y.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp194gy99y.jl:16\n\
    \   [3] top-level scope at /tmp/tmp194gy99y.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp194gy99y.jl:16\n\
    \   [3] top-level scope at /tmp/tmp194gy99y.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp194gy99y.jl:16\n   [3] top-level scope at /tmp/tmp194gy99y.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp194gy99y.jl:16\n\
    \   [3] top-level scope at /tmp/tmp194gy99y.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp194gy99y.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp194gy99y.jl:16\n\
    \   [3] top-level scope at /tmp/tmp194gy99y.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp194gy99y.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp194gy99y.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    new_words = []\n    for word in words\n        new_words\
    \ = append!(new_words, sort(collect(word)))\n    end\n    return join(new_words)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3i3mhj92.jl:30\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3i3mhj92.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3i3mhj92.jl:25\ntest set: Test Failed at /tmp/tmp3i3mhj92.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3i3mhj92.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3i3mhj92.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3i3mhj92.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphcxu2v1t.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmphcxu2v1t.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphcxu2v1t.jl:21\ntest set: Test Failed at /tmp/tmphcxu2v1t.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmphcxu2v1t.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphcxu2v1t.jl:21\ntest set: Test Failed at /tmp/tmphcxu2v1t.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmphcxu2v1t.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphcxu2v1t.jl:21\ntest set: Test Failed at /tmp/tmphcxu2v1t.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphcxu2v1t.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphcxu2v1t.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphcxu2v1t.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpadwpjine.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpadwpjine.jl:16\n   [3] top-level scope at /tmp/tmpadwpjine.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpadwpjine.jl:16\n\
    \   [3] top-level scope at /tmp/tmpadwpjine.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpadwpjine.jl:16\n\
    \   [3] top-level scope at /tmp/tmpadwpjine.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpadwpjine.jl:16\n\
    \   [3] top-level scope at /tmp/tmpadwpjine.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpadwpjine.jl:16\n   [3] top-level scope at /tmp/tmpadwpjine.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpadwpjine.jl:16\n\
    \   [3] top-level scope at /tmp/tmpadwpjine.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpadwpjine.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpadwpjine.jl:16\n\
    \   [3] top-level scope at /tmp/tmpadwpjine.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpadwpjine.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpadwpjine.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    new_words = []\n    for word in words\n\
    \        new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpojg364sa.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpojg364sa.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\ntest set: Test Failed at /tmp/tmpojg364sa.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpojg364sa.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\ntest set: Test Failed at /tmp/tmpojg364sa.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpojg364sa.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\ntest set: Test Failed at /tmp/tmpojg364sa.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpojg364sa.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\ntest set: Test Failed at /tmp/tmpojg364sa.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpojg364sa.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\ntest set: Test Failed at /tmp/tmpojg364sa.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpojg364sa.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpojg364sa.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpojg364sa.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, r\"\\s+\")\n    #\
    \ sort each word\n    sorted_words = [sort(word) for word in words]\n    # join\
    \ the words back together\n    return join(sorted_words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjcw5v4xi.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcw5v4xi.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpjcw5v4xi.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpjcw5v4xi.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpjcw5v4xi.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjcw5v4xi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    s_list = split(s, \" \")\n    for i in 1:length(s_list)\n        s_list[i]\
    \ = join(sort(collect(s_list[i])), \"\")\n    end\n    return join(s_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    join(words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmozy2mpw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpmozy2mpw.jl:16\n   [3] top-level scope at /tmp/tmpmozy2mpw.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmozy2mpw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmozy2mpw.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmozy2mpw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmozy2mpw.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmozy2mpw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmozy2mpw.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpmozy2mpw.jl:16\n   [3] top-level scope at /tmp/tmpmozy2mpw.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmozy2mpw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmozy2mpw.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmozy2mpw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmozy2mpw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmozy2mpw.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmozy2mpw.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmozy2mpw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    join(words, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpip84e3p_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpip84e3p_.jl:16\n   [3] top-level scope at /tmp/tmpip84e3p_.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpip84e3p_.jl:16\n\
    \   [3] top-level scope at /tmp/tmpip84e3p_.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpip84e3p_.jl:16\n\
    \   [3] top-level scope at /tmp/tmpip84e3p_.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpip84e3p_.jl:16\n\
    \   [3] top-level scope at /tmp/tmpip84e3p_.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpip84e3p_.jl:16\n   [3] top-level scope at /tmp/tmpip84e3p_.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpip84e3p_.jl:16\n\
    \   [3] top-level scope at /tmp/tmpip84e3p_.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpip84e3p_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpip84e3p_.jl:16\n\
    \   [3] top-level scope at /tmp/tmpip84e3p_.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpip84e3p_.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpip84e3p_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpql5s1bsl.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpql5s1bsl.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpql5s1bsl.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpql5s1bsl.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpql5s1bsl.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpql5s1bsl.jl:16\\\
    n   [3] top-level scope at /tmp/tmpql5s1bsl.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpql5s1bsl.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into a list of words\n    words = split(s)\n    # Create\
    \ a new list of words\n    new_words = []\n    # For each word in the list of\
    \ words\n    for word in words\n        # Sort the characters in the word\n  \
    \      sorted_word = sort(collect(word))\n        # Join the sorted characters\
    \ into a new word\n        new_word = join(sorted_word)\n        # Add the new\
    \ word to the list of new words\n        push!(new_words, new_word)\n    end\n\
    \    # Join the new words into a new string\n    new_string = join(new_words)\n\
    \    # Return the new string\n    return new_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeyu64rsv.jl:41\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeyu64rsv.jl:41\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeyu64rsv.jl:36\\ntest set: Test Failed at /tmp/tmpeyu64rsv.jl:43\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpeyu64rsv.jl:43\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeyu64rsv.jl:36\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     2      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s)\n    # Sort each word\n\
    \    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n  \
    \  # Join the words back into a string\n    return join(words)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptl4e6jav.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptl4e6jav.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptl4e6jav.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptl4e6jav.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptl4e6jav.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptl4e6jav.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmptl4e6jav.jl:18\\\
    n   [2] top-level scope at /tmp/tmptl4e6jav.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptl4e6jav.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm7k34s1z.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpm7k34s1z.jl:16\n   [3] top-level scope at /tmp/tmpm7k34s1z.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpm7k34s1z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpm7k34s1z.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpm7k34s1z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpm7k34s1z.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpm7k34s1z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpm7k34s1z.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpm7k34s1z.jl:16\n   [3] top-level scope at /tmp/tmpm7k34s1z.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpm7k34s1z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpm7k34s1z.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpm7k34s1z.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpm7k34s1z.jl:16\n\
    \   [3] top-level scope at /tmp/tmpm7k34s1z.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpm7k34s1z.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7k34s1z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, r\"\\s+\")\n    # sort\
    \ each word\n    sorted_words = [sort(w) for w in words]\n    # join words back\
    \ together\n    return join(sorted_words, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpja5oms7g.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpja5oms7g.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpja5oms7g.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpja5oms7g.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpja5oms7g.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpja5oms7g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaykdm0al.jl:29\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaykdm0al.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaykdm0al.jl:24\ntest set: Test Failed at /tmp/tmpaykdm0al.jl:31\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaykdm0al.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaykdm0al.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaykdm0al.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmporq94hc_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmporq94hc_.jl:16\n   [3] top-level scope at /tmp/tmporq94hc_.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmporq94hc_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmporq94hc_.jl:16\n\
    \   [3] top-level scope at /tmp/tmporq94hc_.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmporq94hc_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmporq94hc_.jl:16\n\
    \   [3] top-level scope at /tmp/tmporq94hc_.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmporq94hc_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmporq94hc_.jl:16\n\
    \   [3] top-level scope at /tmp/tmporq94hc_.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmporq94hc_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmporq94hc_.jl:16\n   [3] top-level scope at /tmp/tmporq94hc_.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmporq94hc_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmporq94hc_.jl:16\n\
    \   [3] top-level scope at /tmp/tmporq94hc_.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmporq94hc_.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmporq94hc_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    result = []\n    for word in words\n    \
    \    push!(result, join(sort(collect(word))))\n    end\n    return join(result,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = push!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpllrp_7a0.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"['H', 'i']\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpllrp_7a0.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"['e', 'h', 'l',\
    \ 'l', 'o']\" == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpllrp_7a0.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"['b', 'e',\
    \ 'm', 'n', 'r', 'u']\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpllrp_7a0.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"['a', 'b', 'c',\
    \ 'd']\" == \"abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpllrp_7a0.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"['H', 'e', 'l', 'l', 'o'] ['!', '!', '!', 'W', 'd', 'l', 'o', 'r']\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpllrp_7a0.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:31\n\
    \  Expression: candidate(\"\") == \"\"\n   Evaluated: \"Char[]\" == \"\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpllrp_7a0.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\ntest set: Test Failed at /tmp/tmpllrp_7a0.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"['.', 'H', 'i'] ['M',\
    \ 'y'] ['a', 'e', 'm', 'n'] ['i', 's'] ['M', 'e', 'i', 'r', 's', 't'] ['.', 'R',\
    \ 'b', 'o', 'o', 't'] ['H', 'o', 'w'] ['a', 'e', 'r'] ['?', 'o', 'u', 'y']\" ==\
    \ \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpllrp_7a0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllrp_7a0.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 7 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpllrp_7a0.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string by space\n    words = split(s, \" \")\n    # sort each\
    \ word\n    sorted_words = [sort(word) for word in words]\n    # join words back\
    \ into a string\n    return join(sorted_words, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps13mwwha.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:26\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:27\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:28\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:29\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:30\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: no method matching sort(::SubString{String})\\n \
    \ Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:31\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps13mwwha.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\\\
    n   [3] anti_shuffle(::String) at /tmp/tmps13mwwha.jl:17\\n   [4] top-level scope\
    \ at /tmp/tmps13mwwha.jl:32\\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [6] top-level scope at /tmp/tmps13mwwha.jl:25\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmy38t3vk.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpmy38t3vk.jl:16\n   [3] top-level scope at /tmp/tmpmy38t3vk.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmy38t3vk.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmy38t3vk.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmy38t3vk.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmy38t3vk.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmy38t3vk.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmy38t3vk.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmy38t3vk.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmy38t3vk.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmy38t3vk.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmy38t3vk.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpmy38t3vk.jl:16\n   [3] top-level scope at /tmp/tmpmy38t3vk.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpmy38t3vk.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpmy38t3vk.jl:16\n\
    \   [3] top-level scope at /tmp/tmpmy38t3vk.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpmy38t3vk.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmy38t3vk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkzezt01p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkzezt01p.jl:16\n   [3] top-level scope at /tmp/tmpkzezt01p.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzezt01p.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkzezt01p.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkzezt01p.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzezt01p.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkzezt01p.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkzezt01p.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzezt01p.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkzezt01p.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkzezt01p.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzezt01p.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpkzezt01p.jl:16\n   [3] top-level scope at /tmp/tmpkzezt01p.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzezt01p.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpkzezt01p.jl:16\n\
    \   [3] top-level scope at /tmp/tmpkzezt01p.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpkzezt01p.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkzezt01p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s)\n    # sort each word\n\
    \    sorted_words = [sort(word) for word in words]\n    # join the words back\
    \ together\n    return join(sorted_words)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphrjblcsj.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphrjblcsj.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphrjblcsj.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphrjblcsj.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphrjblcsj.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphrjblcsj.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmphrjblcsj.jl:17\n   [4] top-level scope\
    \ at /tmp/tmphrjblcsj.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmphrjblcsj.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphrjblcsj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfgo6mg0v.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpfgo6mg0v.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\\
    n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\\
    n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\\
    n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpfgo6mg0v.jl:16\\n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\\
    n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfgo6mg0v.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpfgo6mg0v.jl:16\\\
    n   [3] top-level scope at /tmp/tmpfgo6mg0v.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpfgo6mg0v.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Loop\
    \ through each word\n    for i in 1:length(words)\n        # Sort the characters\
    \ in each word\n        words[i] = sort(words[i])\n    end\n    # Join the words\
    \ back together\n    return join(words, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsm_or8b1.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpsm_or8b1.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpsm_or8b1.jl:19\n\
    \   [2] top-level scope at /tmp/tmpsm_or8b1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsm_or8b1.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsm_or8b1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       push!(new_words, join(sort(collect(word))))\n    end\n    return join(new_words,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy_lcliae.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpy_lcliae.jl:16\n   [3] top-level scope at /tmp/tmpy_lcliae.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpy_lcliae.jl:16\n\
    \   [3] top-level scope at /tmp/tmpy_lcliae.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpy_lcliae.jl:16\n\
    \   [3] top-level scope at /tmp/tmpy_lcliae.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpy_lcliae.jl:16\n\
    \   [3] top-level scope at /tmp/tmpy_lcliae.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpy_lcliae.jl:16\n   [3] top-level scope at /tmp/tmpy_lcliae.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpy_lcliae.jl:16\n\
    \   [3] top-level scope at /tmp/tmpy_lcliae.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpy_lcliae.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpy_lcliae.jl:16\n\
    \   [3] top-level scope at /tmp/tmpy_lcliae.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy_lcliae.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy_lcliae.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplu_7usqq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplu_7usqq.jl:16\n   [3] top-level scope at /tmp/tmplu_7usqq.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplu_7usqq.jl:16\n\
    \   [3] top-level scope at /tmp/tmplu_7usqq.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplu_7usqq.jl:16\n\
    \   [3] top-level scope at /tmp/tmplu_7usqq.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplu_7usqq.jl:16\n\
    \   [3] top-level scope at /tmp/tmplu_7usqq.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplu_7usqq.jl:16\n   [3] top-level scope at /tmp/tmplu_7usqq.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplu_7usqq.jl:16\n\
    \   [3] top-level scope at /tmp/tmplu_7usqq.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplu_7usqq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplu_7usqq.jl:16\n\
    \   [3] top-level scope at /tmp/tmplu_7usqq.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplu_7usqq.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplu_7usqq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # Split the string into words\n    words = split(s, \" \")\n    # Create\
    \ a new array of strings\n    new_words = []\n    # For each word in the array\
    \ of words\n    for word in words\n        # Sort the characters in the word\n\
    \        sorted_word = sort(collect(word))\n        # Join the characters back\
    \ into a string\n        new_word = join(sorted_word)\n        # Add the new word\
    \ to the array of new words\n        push!(new_words, new_word)\n    end\n   \
    \ # Join the new words back into a string\n    return join(new_words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwy857qha.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpwy857qha.jl:16\n   [3] top-level scope at /tmp/tmpwy857qha.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwy857qha.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwy857qha.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwy857qha.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwy857qha.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwy857qha.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwy857qha.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpwy857qha.jl:16\n   [3] top-level scope at /tmp/tmpwy857qha.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwy857qha.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwy857qha.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwy857qha.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwy857qha.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwy857qha.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwy857qha.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwy857qha.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0nuu7if3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp0nuu7if3.jl:16\n   [3] top-level scope at /tmp/tmp0nuu7if3.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0nuu7if3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0nuu7if3.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0nuu7if3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0nuu7if3.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0nuu7if3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0nuu7if3.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp0nuu7if3.jl:16\n   [3] top-level scope at /tmp/tmp0nuu7if3.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0nuu7if3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0nuu7if3.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nuu7if3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp0nuu7if3.jl:16\n\
    \   [3] top-level scope at /tmp/tmp0nuu7if3.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0nuu7if3.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0nuu7if3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code goes here\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2cuh14fu.jl:23\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n   Evaluated: \"hello\" == \"ehllo\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2cuh14fu.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2cuh14fu.jl:21\ntest set: Test Failed at /tmp/tmp2cuh14fu.jl:24\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"number\" ==\
    \ \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2cuh14fu.jl:24\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2cuh14fu.jl:21\ntest set: Test Failed at /tmp/tmp2cuh14fu.jl:26\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp2cuh14fu.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2cuh14fu.jl:21\ntest set: Test Failed at /tmp/tmp2cuh14fu.jl:28\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2cuh14fu.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2cuh14fu.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2cuh14fu.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm79a18fz.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpm79a18fz.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpm79a18fz.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm79a18fz.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm79a18fz.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm79a18fz.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm79a18fz.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm79a18fz.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm79a18fz.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm79a18fz.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm79a18fz.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm79a18fz.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm79a18fz.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpm79a18fz.jl:16\\n   [3] top-level scope at /tmp/tmpm79a18fz.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpm79a18fz.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpm79a18fz.jl:16\\\
    n   [3] top-level scope at /tmp/tmpm79a18fz.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpm79a18fz.jl:24\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2hzxsgd9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp2hzxsgd9.jl:16\n   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hzxsgd9.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2hzxsgd9.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hzxsgd9.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2hzxsgd9.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hzxsgd9.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2hzxsgd9.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hzxsgd9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp2hzxsgd9.jl:16\n   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hzxsgd9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp2hzxsgd9.jl:16\n\
    \   [3] top-level scope at /tmp/tmp2hzxsgd9.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2hzxsgd9.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hzxsgd9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqtm_ppvw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpqtm_ppvw.jl:16\n   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpqtm_ppvw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpqtm_ppvw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpqtm_ppvw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpqtm_ppvw.jl:16\n   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpqtm_ppvw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtm_ppvw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpqtm_ppvw.jl:16\n\
    \   [3] top-level scope at /tmp/tmpqtm_ppvw.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpqtm_ppvw.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtm_ppvw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwroscbs_.jl:26\\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\\n   Evaluated: \"H i\" == \"Hi\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpwroscbs_.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\ntest set: Test Failed at /tmp/tmpwroscbs_.jl:27\\\
    n  Expression: candidate(\"hello\") == \"ehllo\"\\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwroscbs_.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\ntest set: Test Failed at /tmp/tmpwroscbs_.jl:28\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwroscbs_.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\ntest set: Test Failed at /tmp/tmpwroscbs_.jl:29\\\
    n  Expression: candidate(\"abcd\") == \"abcd\"\\n   Evaluated: \"a b c d\" ==\
    \ \"abcd\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwroscbs_.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\ntest set: Test Failed at /tmp/tmpwroscbs_.jl:30\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpwroscbs_.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\ntest set: Test Failed at /tmp/tmpwroscbs_.jl:32\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \". H i M y a e m\
    \ n i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwroscbs_.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwroscbs_.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, r\"\\s+\")\n    #\
    \ sort the characters in each word\n    sorted_words = [sort(word) for word in\
    \ words]\n    # join the words back together\n    return join(sorted_words, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfg76jk72.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:26\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:27\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:28\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:29\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:30\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:31\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpfg76jk72.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n   [2]\
    \ collect(::Base.Generator{Array{SubString{String},1},typeof(sort)}) at ./array.jl:665\n\
    \   [3] anti_shuffle(::String) at /tmp/tmpfg76jk72.jl:17\n   [4] top-level scope\
    \ at /tmp/tmpfg76jk72.jl:32\n   [5] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [6] top-level scope at /tmp/tmpfg76jk72.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfg76jk72.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # YOUR CODE HERE\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpppoqjp3g.jl:23\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n   Evaluated: \"hello\" == \"ehllo\"\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpppoqjp3g.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpppoqjp3g.jl:21\\ntest set: Test Failed at /tmp/tmpppoqjp3g.jl:24\\\
    n  Expression: candidate(\"number\") == \"bemnru\"\\n   Evaluated: \"number\"\
    \ == \"bemnru\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpppoqjp3g.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpppoqjp3g.jl:21\\ntest set: Test Failed at /tmp/tmpppoqjp3g.jl:26\\\
    n  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\\n   Evaluated:\
    \ \"Hello World!!!\" == \"Hello !!!Wdlor\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpppoqjp3g.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpppoqjp3g.jl:21\\ntest set: Test Failed at /tmp/tmpppoqjp3g.jl:28\\\
    n  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\\n   Evaluated: \"Hi. My name is Mister\
    \ Robot. How are you?\" == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpppoqjp3g.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpppoqjp3g.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     4      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    result = []\n    for word in words\n        push!(result,\
    \ join(sort(collect(word))))\n    end\n    return join(result)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4knvn5o4.jl:30\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4knvn5o4.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4knvn5o4.jl:25\ntest set: Test Failed at /tmp/tmp4knvn5o4.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4knvn5o4.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4knvn5o4.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4knvn5o4.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    return join(map(sort, split(s, \" \")), \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t\
    @test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"\
    bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"Hello\
    \ World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv8jw5ejw.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:21\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:22\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:23\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:24\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:25\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: no method matching sort(::SubString{String})\\n \
    \ Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:26\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv8jw5ejw.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},typeof(sort)},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [4] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [5] anti_shuffle(::String) at /tmp/tmpv8jw5ejw.jl:14\\n   [6] top-level scope\
    \ at /tmp/tmpv8jw5ejw.jl:27\\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpv8jw5ejw.jl:20\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = join(sort(collect(words[i])))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoa5v7f4z.jl:29\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated: \"Hello!!!Wdlor\" == \"\
    Hello !!!Wdlor\"\nStacktrace:\n [1] top-level scope at /tmp/tmpoa5v7f4z.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoa5v7f4z.jl:24\ntest set: Test Failed at /tmp/tmpoa5v7f4z.jl:31\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \".HiMyaemnisMeirst.RbootHowaer?ouy\"\
    \ == \".Hi My aemn is Meirst .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpoa5v7f4z.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoa5v7f4z.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     2      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoa5v7f4z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    s = split(s)\n    for i in 1:length(s)\n        s[i] = sort(s[i])\n  \
    \  end\n    return join(s)\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbi54a73_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbi54a73_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbi54a73_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbi54a73_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbi54a73_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpbi54a73_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmpbi54a73_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbi54a73_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbi54a73_.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbi54a73_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplbnbxtgp.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplbnbxtgp.jl:16\n   [3] top-level scope at /tmp/tmplbnbxtgp.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplbnbxtgp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplbnbxtgp.jl:16\n\
    \   [3] top-level scope at /tmp/tmplbnbxtgp.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplbnbxtgp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplbnbxtgp.jl:16\n\
    \   [3] top-level scope at /tmp/tmplbnbxtgp.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplbnbxtgp.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplbnbxtgp.jl:16\n\
    \   [3] top-level scope at /tmp/tmplbnbxtgp.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplbnbxtgp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmplbnbxtgp.jl:16\n   [3] top-level scope at /tmp/tmplbnbxtgp.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplbnbxtgp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmplbnbxtgp.jl:16\n\
    \   [3] top-level scope at /tmp/tmplbnbxtgp.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplbnbxtgp.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbnbxtgp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # join words back together\n    return join(words, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"\
    Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"number\"\
    ) == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp031bf63_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: no method\
    \ matching sort(::SubString{String})\\n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\\n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: no method matching sort(::SubString{String})\\n \
    \ Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp031bf63_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: no method matching sort(::SubString{String})\\\
    n  Closest candidates are:\\n    sort(!Matched::AbstractUnitRange) at range.jl:969\\\
    n    sort(!Matched::AbstractRange) at range.jl:972\\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\\\
    n    ...\\n  Stacktrace:\\n   [1] anti_shuffle(::String) at /tmp/tmp031bf63_.jl:18\\\
    n   [2] top-level scope at /tmp/tmp031bf63_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp031bf63_.jl:27\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwj_y1hn0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpwj_y1hn0.jl:16\n   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwj_y1hn0.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwj_y1hn0.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwj_y1hn0.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwj_y1hn0.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwj_y1hn0.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwj_y1hn0.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwj_y1hn0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpwj_y1hn0.jl:16\n   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpwj_y1hn0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpwj_y1hn0.jl:16\n\
    \   [3] top-level scope at /tmp/tmpwj_y1hn0.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwj_y1hn0.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwj_y1hn0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, r\"\\s+\")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpytq6fpxc.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpytq6fpxc.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\\
    n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\\
    n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\\
    n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpytq6fpxc.jl:16\\n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\\
    n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpytq6fpxc.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpytq6fpxc.jl:16\\\
    n   [3] top-level scope at /tmp/tmpytq6fpxc.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpytq6fpxc.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, \" \")\n    # sort\
    \ each word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    # join the words back together\n    return join(words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptph6wcvl.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptph6wcvl.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmptph6wcvl.jl:18\n\
    \   [2] top-level scope at /tmp/tmptph6wcvl.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptph6wcvl.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptph6wcvl.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3i14v0he.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp3i14v0he.jl:16\n   [3] top-level scope at /tmp/tmp3i14v0he.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3i14v0he.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3i14v0he.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3i14v0he.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3i14v0he.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3i14v0he.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3i14v0he.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp3i14v0he.jl:16\n   [3] top-level scope at /tmp/tmp3i14v0he.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3i14v0he.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3i14v0he.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i14v0he.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp3i14v0he.jl:16\n\
    \   [3] top-level scope at /tmp/tmp3i14v0he.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp3i14v0he.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3i14v0he.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split the string into words\n    words = split(s, \" \")\n    # sort\
    \ each word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n\
    \    end\n    # join the words back together\n    return join(words, \" \")\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp617azjj8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp617azjj8.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp617azjj8.jl:18\n\
    \   [2] top-level scope at /tmp/tmp617azjj8.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp617azjj8.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp617azjj8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjfpaja0z.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Hi\") == \"Hi\"\\n  MethodError: Cannot\
    \ `convert` an object of type Array{Char,1} to an object of type SubString{String}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString\
    \ at strings/substring.jl:52\\n    convert(::Type{SubString{S}}, !Matched::AbstractString)\
    \ where S<:AbstractString at strings/substring.jl:50\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\\
    n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1}, ::Int64) at ./array.jl:826\\\
    n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\n   [3] top-level scope\
    \ at /tmp/tmpjfpaja0z.jl:25\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\\
    n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:26\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    number\") == \"bemnru\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\\
    n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:27\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\\
    n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:28\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\\\
    n    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String)\
    \ at /tmp/tmpjfpaja0z.jl:16\\n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:29\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    \") == \"\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\\
    n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:30\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjfpaja0z.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\\\
    n    ...\\n  Stacktrace:\\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\\n   [2] anti_shuffle(::String) at /tmp/tmpjfpaja0z.jl:16\\\
    n   [3] top-level scope at /tmp/tmpjfpaja0z.jl:31\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpjfpaja0z.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcxyy0i0k.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcxyy0i0k.jl:16\n   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxyy0i0k.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxyy0i0k.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxyy0i0k.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpcxyy0i0k.jl:16\n   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxyy0i0k.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxyy0i0k.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpcxyy0i0k.jl:16\n\
    \   [3] top-level scope at /tmp/tmpcxyy0i0k.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpcxyy0i0k.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxyy0i0k.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5bdkc3l.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph5bdkc3l.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\ntest set: Test Failed at /tmp/tmph5bdkc3l.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmph5bdkc3l.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\ntest set: Test Failed at /tmp/tmph5bdkc3l.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmph5bdkc3l.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\ntest set: Test Failed at /tmp/tmph5bdkc3l.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmph5bdkc3l.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\ntest set: Test Failed at /tmp/tmph5bdkc3l.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph5bdkc3l.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\ntest set: Test Failed at /tmp/tmph5bdkc3l.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmph5bdkc3l.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5bdkc3l.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5bdkc3l.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # split string into words\n    words = split(s, \" \")\n    # sort each\
    \ word\n    for i in 1:length(words)\n        words[i] = sort(words[i])\n    end\n\
    \    # join words back into a string\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6yuimy75.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: no method matching\
    \ sort(::SubString{String})\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: no method matching sort(::SubString{String})\n  Closest\
    \ candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n   \
    \ sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yuimy75.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: no method matching sort(::SubString{String})\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] anti_shuffle(::String) at /tmp/tmp6yuimy75.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6yuimy75.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yuimy75.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6yuimy75.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s)\n    for i in 1:length(words)\n        words[i] = sort(collect(words[i]))\n\
    \    end\n    return join(words)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = anti_shuffle;\n\t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"\
    hello\") == \"ehllo\")\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"\
    abcd\") == \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\
    )\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister\
    \ Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp52flquok.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp52flquok.jl:16\n   [3] top-level scope at /tmp/tmp52flquok.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp52flquok.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp52flquok.jl:16\n\
    \   [3] top-level scope at /tmp/tmp52flquok.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp52flquok.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp52flquok.jl:16\n\
    \   [3] top-level scope at /tmp/tmp52flquok.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp52flquok.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp52flquok.jl:16\n\
    \   [3] top-level scope at /tmp/tmp52flquok.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp52flquok.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmp52flquok.jl:16\n   [3] top-level scope at /tmp/tmp52flquok.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp52flquok.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmp52flquok.jl:16\n\
    \   [3] top-level scope at /tmp/tmp52flquok.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp52flquok.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52flquok.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr2p4sn9o.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpr2p4sn9o.jl:16\n   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpr2p4sn9o.jl:16\n\
    \   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpr2p4sn9o.jl:16\n\
    \   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpr2p4sn9o.jl:16\n\
    \   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpr2p4sn9o.jl:16\n   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpr2p4sn9o.jl:16\n\
    \   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2p4sn9o.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpr2p4sn9o.jl:16\n\
    \   [3] top-level scope at /tmp/tmpr2p4sn9o.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpr2p4sn9o.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2p4sn9o.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgy5htwd8.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgy5htwd8.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\ntest set: Test Failed at /tmp/tmpgy5htwd8.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgy5htwd8.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\ntest set: Test Failed at /tmp/tmpgy5htwd8.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgy5htwd8.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\ntest set: Test Failed at /tmp/tmpgy5htwd8.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgy5htwd8.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\ntest set: Test Failed at /tmp/tmpgy5htwd8.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgy5htwd8.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\ntest set: Test Failed at /tmp/tmpgy5htwd8.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgy5htwd8.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgy5htwd8.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgy5htwd8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphqv1f1xc.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphqv1f1xc.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\ntest set: Test Failed at /tmp/tmphqv1f1xc.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmphqv1f1xc.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\ntest set: Test Failed at /tmp/tmphqv1f1xc.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmphqv1f1xc.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\ntest set: Test Failed at /tmp/tmphqv1f1xc.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmphqv1f1xc.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\ntest set: Test Failed at /tmp/tmphqv1f1xc.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphqv1f1xc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\ntest set: Test Failed at /tmp/tmphqv1f1xc.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmphqv1f1xc.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphqv1f1xc.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqv1f1xc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8c58gw4t.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] anti_shuffle(::String) at\
    \ /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope at /tmp/tmp8c58gw4t.jl:26\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp8c58gw4t.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] anti_shuffle(::String) at /tmp/tmp8c58gw4t.jl:15\n   [2] top-level scope\
    \ at /tmp/tmp8c58gw4t.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8c58gw4t.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8c58gw4t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_eo7vaao.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_eo7vaao.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\ntest set: Test Failed at /tmp/tmp_eo7vaao.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_eo7vaao.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\ntest set: Test Failed at /tmp/tmp_eo7vaao.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_eo7vaao.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\ntest set: Test Failed at /tmp/tmp_eo7vaao.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_eo7vaao.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\ntest set: Test Failed at /tmp/tmp_eo7vaao.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_eo7vaao.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\ntest set: Test Failed at /tmp/tmp_eo7vaao.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_eo7vaao.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_eo7vaao.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_eo7vaao.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    new_words = []\n    for word in words\n \
    \       new_words = append!(new_words, sort(collect(word)))\n    end\n    return\
    \ join(new_words, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\
    \t@test(candidate(\"Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\"\
    )\n\t@test(candidate(\"number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") ==\
    \ \"abcd\")\n\t@test(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\")\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hi. My name is Mister Robot.\
    \ How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcmn9ukvd.jl:26\n  Expression: candidate(\"\
    Hi\") == \"Hi\"\n   Evaluated: \"H i\" == \"Hi\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcmn9ukvd.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\ntest set: Test Failed at /tmp/tmpcmn9ukvd.jl:27\n\
    \  Expression: candidate(\"hello\") == \"ehllo\"\n   Evaluated: \"e h l l o\"\
    \ == \"ehllo\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcmn9ukvd.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\ntest set: Test Failed at /tmp/tmpcmn9ukvd.jl:28\n\
    \  Expression: candidate(\"number\") == \"bemnru\"\n   Evaluated: \"b e m n r\
    \ u\" == \"bemnru\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcmn9ukvd.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\ntest set: Test Failed at /tmp/tmpcmn9ukvd.jl:29\n\
    \  Expression: candidate(\"abcd\") == \"abcd\"\n   Evaluated: \"a b c d\" == \"\
    abcd\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcmn9ukvd.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\ntest set: Test Failed at /tmp/tmpcmn9ukvd.jl:30\n\
    \  Expression: candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\"\n   Evaluated:\
    \ \"H e l l o ! ! ! W d l o r\" == \"Hello !!!Wdlor\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcmn9ukvd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\ntest set: Test Failed at /tmp/tmpcmn9ukvd.jl:32\n\
    \  Expression: candidate(\"Hi. My name is Mister Robot. How are you?\") == \"\
    .Hi My aemn is Meirst .Rboot How aer ?ouy\"\n   Evaluated: \". H i M y a e m n\
    \ i s M e i r s t . R b o o t H o w a e r ? o u y\" == \".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcmn9ukvd.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcmn9ukvd.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcmn9ukvd.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = sort(collect(words[i]))\n    end\n    return join(words, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"Hi\"\
    ) == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpetq9_5vl.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Hi\") == \"Hi\"\n  MethodError: Cannot `convert` an\
    \ object of type Array{Char,1} to an object of type SubString{String}\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpetq9_5vl.jl:16\n   [3] top-level scope at /tmp/tmpetq9_5vl.jl:25\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    hello\") == \"ehllo\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpetq9_5vl.jl:16\n\
    \   [3] top-level scope at /tmp/tmpetq9_5vl.jl:26\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    number\") == \"bemnru\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpetq9_5vl.jl:16\n\
    \   [3] top-level scope at /tmp/tmpetq9_5vl.jl:27\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\") == \"abcd\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpetq9_5vl.jl:16\n\
    \   [3] top-level scope at /tmp/tmpetq9_5vl.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\"\n  MethodError: Cannot `convert` an object\
    \ of type Array{Char,1} to an object of type SubString{String}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:SubString at strings/substring.jl:52\n\
    \    convert(::Type{SubString{S}}, !Matched::AbstractString) where S<:AbstractString\
    \ at strings/substring.jl:50\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1},\
    \ ::Array{Char,1}, ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at\
    \ /tmp/tmpetq9_5vl.jl:16\n   [3] top-level scope at /tmp/tmpetq9_5vl.jl:29\n \
    \  [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    \") == \"\"\n  MethodError: Cannot `convert` an object of type Array{Char,1} to\
    \ an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpetq9_5vl.jl:16\n\
    \   [3] top-level scope at /tmp/tmpetq9_5vl.jl:30\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpetq9_5vl.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot\
    \ How aer ?ouy\"\n  MethodError: Cannot `convert` an object of type Array{Char,1}\
    \ to an object of type SubString{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:SubString at strings/substring.jl:52\n    convert(::Type{SubString{S}},\
    \ !Matched::AbstractString) where S<:AbstractString at strings/substring.jl:50\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(::Array{SubString{String},1}, ::Array{Char,1},\
    \ ::Int64) at ./array.jl:826\n   [2] anti_shuffle(::String) at /tmp/tmpetq9_5vl.jl:16\n\
    \   [3] top-level scope at /tmp/tmpetq9_5vl.jl:31\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpetq9_5vl.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpetq9_5vl.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function that takes a string and returns an ordered\
    \ version of it.\n    Ordered version of string, is a string where all words (separated\
    \ by space)\n    are replaced by a new word where all the characters arranged\
    \ in\n    ascending order based on ascii value.\n    Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi')\
    \ returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello\
    \ World!!!') returns 'Hello !!!Wdlor'\n    \"\"\"\nfunction anti_shuffle(s::String)::String\
    \ \n    words = split(s, \" \")\n    for i in 1:length(words)\n        words[i]\
    \ = join(sort(collect(words[i])), \"\")\n    end\n    return join(words, \" \"\
    )\nend\nusing Test\n\n@testset begin\n\ncandidate = anti_shuffle;\n\t@test(candidate(\"\
    Hi\") == \"Hi\")\n\t@test(candidate(\"hello\") == \"ehllo\")\n\t@test(candidate(\"\
    number\") == \"bemnru\")\n\t@test(candidate(\"abcd\") == \"abcd\")\n\t@test(candidate(\"\
    Hello World!!!\") == \"Hello !!!Wdlor\")\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn\
    \ is Meirst .Rboot How aer ?ouy\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK

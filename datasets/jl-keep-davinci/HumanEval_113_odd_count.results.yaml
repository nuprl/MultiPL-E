name: HumanEval_113_odd_count
language: julia
results:
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk7xhb4r_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpk7xhb4r_.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpk7xhb4r_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xhb4r_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xhb4r_.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk7xhb4r_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk7xhb4r_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xhb4r_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xhb4r_.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk7xhb4r_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk7xhb4r_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xhb4r_.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7xhb4r_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf6pifsd5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpf6pifsd5.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpf6pifsd5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf6pifsd5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpf6pifsd5.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpf6pifsd5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpf6pifsd5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf6pifsd5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpf6pifsd5.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpf6pifsd5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpf6pifsd5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf6pifsd5.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6pifsd5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuv7c20i7.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpuv7c20i7.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpuv7c20i7.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuv7c20i7.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpuv7c20i7.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpuv7c20i7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuv7c20i7.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuv7c20i7.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpuv7c20i7.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpuv7c20i7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuv7c20i7.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuv7c20i7.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuv7c20i7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        result = push!(result,\
    \ \"the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ruhdw0z.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9ruhdw0z.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ruhdw0z.jl:29\ntest set: Test Failed at /tmp/tmp9ruhdw0z.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9ruhdw0z.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ruhdw0z.jl:29\ntest set: Test Failed at /tmp/tmp9ruhdw0z.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp9ruhdw0z.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ruhdw0z.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ruhdw0z.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    # Initialize output vector\n    output = Vector{String}(undef, length(lst))\n\
    \    for i in 1:length(lst)\n        # Initialize counter\n        count = 0\n\
    \        # Loop through each character in string\n        for c in lst[i]\n  \
    \          # If character is odd, increment counter\n            if parse(Int,\
    \ c) % 2 == 1\n                count += 1\n            end\n        end\n    \
    \    # Add string to output vector\n        output[i] = \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\"\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3lk_rxv9.jl:35\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp3lk_rxv9.jl:26\n   [2] top-level\
    \ scope at /tmp/tmp3lk_rxv9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3lk_rxv9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp3lk_rxv9.jl:36\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp3lk_rxv9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3lk_rxv9.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3lk_rxv9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp3lk_rxv9.jl:37\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp3lk_rxv9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3lk_rxv9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3lk_rxv9.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3lk_rxv9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_ca_3te5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp_ca_3te5.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp_ca_3te5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ca_3te5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ca_3te5.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_ca_3te5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_ca_3te5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ca_3te5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ca_3te5.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_ca_3te5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_ca_3te5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ca_3te5.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ca_3te5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        num_odd = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          num_odd += 1\n            end\n        end\n        push!(out, \"the\
    \ number of odd elements $num_oddn the str$num_oddng $num_odd of the $num_oddnput.\"\
    )\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk7bbmlqh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: num_oddn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpk7bbmlqh.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpk7bbmlqh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7bbmlqh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7bbmlqh.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpk7bbmlqh.jl:21\n   [2] top-level scope at /tmp/tmpk7bbmlqh.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7bbmlqh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7bbmlqh.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpk7bbmlqh.jl:21\n   [2] top-level scope at /tmp/tmpk7bbmlqh.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7bbmlqh.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7bbmlqh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    n = length(lst)\n    out = Vector{String}(n)\n    for i in 1:n\n     \
    \   out[i] = \"the number of odd elements \" * string(sum(parse.(Int,lst[i]) .%\
    \ 2 .== 1)) *\n            \"n the str\" * string(i) * \"ng \" * string(i) * \"\
    \ of the \" * string(i) * \"nput.\"\n    end\n    return out\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8h8ozwg5.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching Array{String,1}(::Int64)\n\
    \  Closest candidates are:\n    Array{String,1}() where T at boot.jl:424\n   \
    \ Array{String,1}(!Matched::UndefInitializer, !Matched::Int64) where T at boot.jl:405\n\
    \    Array{String,1}(!Matched::UndefInitializer, !Matched::Int64...) where {T,\
    \ N} at boot.jl:411\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmp8h8ozwg5.jl:14\n   [2] top-level scope at /tmp/tmp8h8ozwg5.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8h8ozwg5.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp8h8ozwg5.jl:27\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching Array{String,1}(::Int64)\n  Closest candidates are:\n   \
    \ Array{String,1}() where T at boot.jl:424\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64) where T at boot.jl:405\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64...) where {T, N} at boot.jl:411\n    ...\n  Stacktrace:\n  \
    \ [1] odd_count(::Array{String,1}) at /tmp/tmp8h8ozwg5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp8h8ozwg5.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8h8ozwg5.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp8h8ozwg5.jl:28\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching Array{String,1}(::Int64)\n  Closest candidates are:\n   \
    \ Array{String,1}() where T at boot.jl:424\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64) where T at boot.jl:405\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64...) where {T, N} at boot.jl:411\n    ...\n  Stacktrace:\n  \
    \ [1] odd_count(::Array{String,1}) at /tmp/tmp8h8ozwg5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp8h8ozwg5.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8h8ozwg5.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8h8ozwg5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjinch71f.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpjinch71f.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpjinch71f.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjinch71f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjinch71f.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpjinch71f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpjinch71f.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjinch71f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjinch71f.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpjinch71f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpjinch71f.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjinch71f.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjinch71f.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgae007cp.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpgae007cp.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpgae007cp.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgae007cp.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgae007cp.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgae007cp.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgae007cp.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgae007cp.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgae007cp.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgae007cp.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgae007cp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgae007cp.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgae007cp.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        num_odd = 0\n       \
    \ for j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n  \
    \              num_odd += 1\n            end\n        end\n        push!(output,\
    \ \"the number of odd elements $num_oddn the str$num_oddng $num_odd of the $num_oddnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5p9b_n9h.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: num_oddn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp5p9b_n9h.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp5p9b_n9h.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5p9b_n9h.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5p9b_n9h.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp5p9b_n9h.jl:21\n   [2] top-level scope at /tmp/tmp5p9b_n9h.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5p9b_n9h.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5p9b_n9h.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp5p9b_n9h.jl:21\n   [2] top-level scope at /tmp/tmp5p9b_n9h.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5p9b_n9h.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5p9b_n9h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        output = push!(output, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpood_u9kv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpood_u9kv.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpood_u9kv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpood_u9kv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpood_u9kv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpood_u9kv.jl:17\n   [2] top-level scope at /tmp/tmpood_u9kv.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpood_u9kv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpood_u9kv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpood_u9kv.jl:17\n   [2] top-level scope at /tmp/tmpood_u9kv.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpood_u9kv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpood_u9kv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv8rz_5bt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpv8rz_5bt.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpv8rz_5bt.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv8rz_5bt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpv8rz_5bt.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpv8rz_5bt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpv8rz_5bt.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv8rz_5bt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpv8rz_5bt.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpv8rz_5bt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpv8rz_5bt.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv8rz_5bt.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv8rz_5bt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnmzoye4g.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\\n    ...\\n\
    \  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpnmzoye4g.jl:13\\n \
    \  [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpnmzoye4g.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpnmzoye4g.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpnmzoye4g.jl:20\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpnmzoye4g.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmzoye4g.jl:21\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpnmzoye4g.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpnmzoye4g.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpnmzoye4g.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpnmzoye4g.jl:21\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpnmzoye4g.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnmzoye4g.jl:22\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpnmzoye4g.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpnmzoye4g.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpnmzoye4g.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpnmzoye4g.jl:22\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpnmzoye4g.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnwh2cbq1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpnwh2cbq1.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpnwh2cbq1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnwh2cbq1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwh2cbq1.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpnwh2cbq1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnwh2cbq1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnwh2cbq1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpnwh2cbq1.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpnwh2cbq1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnwh2cbq1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnwh2cbq1.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnwh2cbq1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxk3nihho.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpxk3nihho.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpxk3nihho.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxk3nihho.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpxk3nihho.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpxk3nihho.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxk3nihho.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxk3nihho.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpxk3nihho.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpxk3nihho.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxk3nihho.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxk3nihho.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxk3nihho.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(length(filter(y->parse(Int,y)%2==1,x)))n\
    \ the str$(length(filter(y->parse(Int,y)%2==1,x)))ng $(length(filter(y->parse(Int,y)%2==1,x)))\
    \ of the $(length(filter(y->parse(Int,y)%2==1,x)))nput.\",lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0vk7bk25.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp0vk7bk25.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp0vk7bk25.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vk7bk25.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0vk7bk25.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0vk7bk25.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0vk7bk25.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vk7bk25.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0vk7bk25.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0vk7bk25.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0vk7bk25.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vk7bk25.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0vk7bk25.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn0eyk2_p.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpn0eyk2_p.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpn0eyk2_p.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn0eyk2_p.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpn0eyk2_p.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpn0eyk2_p.jl:21\n\
    \   [2] top-level scope at /tmp/tmpn0eyk2_p.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn0eyk2_p.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpn0eyk2_p.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpn0eyk2_p.jl:21\n\
    \   [2] top-level scope at /tmp/tmpn0eyk2_p.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn0eyk2_p.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn0eyk2_p.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3rftuom.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp3rftuom.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rftuom.jl:29\ntest set: Test Failed at /tmp/tmpp3rftuom.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp3rftuom.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rftuom.jl:29\ntest set: Test Failed at /tmp/tmpp3rftuom.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpp3rftuom.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rftuom.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3rftuom.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbu_oh5dp.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpbu_oh5dp.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpbu_oh5dp.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbu_oh5dp.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbu_oh5dp.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbu_oh5dp.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbu_oh5dp.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbu_oh5dp.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbu_oh5dp.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbu_oh5dp.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbu_oh5dp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbu_oh5dp.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbu_oh5dp.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int, j) % 2 == 1\n                count += 1\n         \
    \   end\n        end\n        push!(result, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkpr3ocd9.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmpkpr3ocd9.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmpkpr3ocd9.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpr3ocd9.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpr3ocd9.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkpr3ocd9.jl:21\\n   [2] top-level scope at /tmp/tmpkpr3ocd9.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpr3ocd9.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpr3ocd9.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkpr3ocd9.jl:21\\n   [2] top-level scope at /tmp/tmpkpr3ocd9.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpr3ocd9.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> if(parse(Int, d) % 2 == 0, \"n\", \"\
    1\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \")\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph_oe_31p.jl:13\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmph_oe_31p.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_k6o68hf.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_k6o68hf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> (parse(Int, d) % 2 == 1 ? \"1\" : \"\
    4\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9cf1k2n8.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::var\"#4#6\")\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmp9cf1k2n8.jl:13\n\
    \   [5] top-level scope at /tmp/tmp9cf1k2n8.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp9cf1k2n8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cf1k2n8.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp9cf1k2n8.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp9cf1k2n8.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp9cf1k2n8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cf1k2n8.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp9cf1k2n8.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp9cf1k2n8.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp9cf1k2n8.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cf1k2n8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> if(parse(Int, d) % 2 == 0, \"n\", \"\
    1\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \")\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm0oa5ria.jl:13\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmpm0oa5ria.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2!=0,x))n the\
    \ str$(count(y->y%2!=0,x))ng $(count(y->y%2!=0,x)) of the $(count(y->y%2!=0,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkhg0_q1r.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\\n    ...\\n\
    \  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkhg0_q1r.jl:13\\n \
    \  [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpkhg0_q1r.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpkhg0_q1r.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpkhg0_q1r.jl:20\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpkhg0_q1r.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkhg0_q1r.jl:21\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkhg0_q1r.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpkhg0_q1r.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpkhg0_q1r.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpkhg0_q1r.jl:21\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpkhg0_q1r.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkhg0_q1r.jl:22\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkhg0_q1r.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpkhg0_q1r.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpkhg0_q1r.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpkhg0_q1r.jl:22\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpkhg0_q1r.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr_dre2va.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmpr_dre2va.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmpr_dre2va.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr_dre2va.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr_dre2va.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpr_dre2va.jl:21\\n   [2] top-level scope at /tmp/tmpr_dre2va.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr_dre2va.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpr_dre2va.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpr_dre2va.jl:21\\n   [2] top-level scope at /tmp/tmpr_dre2va.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpr_dre2va.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int, j) % 2 != 0\n                count += 1\n         \
    \   end\n        end\n        new_lst = push!(new_lst, \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\")\n    end\n    return new_lst\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt76a94wu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpt76a94wu.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpt76a94wu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt76a94wu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt76a94wu.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt76a94wu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt76a94wu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt76a94wu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt76a94wu.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt76a94wu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt76a94wu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt76a94wu.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt76a94wu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfnnkn5lv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpfnnkn5lv.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpfnnkn5lv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnnkn5lv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpfnnkn5lv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpfnnkn5lv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfnnkn5lv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnnkn5lv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpfnnkn5lv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpfnnkn5lv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfnnkn5lv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnnkn5lv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnnkn5lv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk98eofsy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpk98eofsy.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpk98eofsy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk98eofsy.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk98eofsy.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk98eofsy.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk98eofsy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk98eofsy.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk98eofsy.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk98eofsy.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk98eofsy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk98eofsy.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk98eofsy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp62kbmh8p.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp62kbmh8p.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp62kbmh8p.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp62kbmh8p.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp62kbmh8p.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp62kbmh8p.jl:21\n\
    \   [2] top-level scope at /tmp/tmp62kbmh8p.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp62kbmh8p.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp62kbmh8p.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp62kbmh8p.jl:21\n\
    \   [2] top-level scope at /tmp/tmp62kbmh8p.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp62kbmh8p.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp62kbmh8p.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp578zeorv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp578zeorv.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp578zeorv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp578zeorv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp578zeorv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp578zeorv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp578zeorv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp578zeorv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp578zeorv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp578zeorv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp578zeorv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp578zeorv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp578zeorv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpot_ta17k.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmpot_ta17k.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmpot_ta17k.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpot_ta17k.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpot_ta17k.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpot_ta17k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpot_ta17k.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpot_ta17k.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpot_ta17k.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpot_ta17k.jl:13\n   [9] top-level scope at /tmp/tmpot_ta17k.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpot_ta17k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpot_ta17k.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpot_ta17k.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpot_ta17k.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpot_ta17k.jl:13\n   [9] top-level scope at /tmp/tmpot_ta17k.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpot_ta17k.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpot_ta17k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4rs_hnqd.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp4rs_hnqd.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp4rs_hnqd.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4rs_hnqd.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rs_hnqd.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp4rs_hnqd.jl:21\n\
    \   [2] top-level scope at /tmp/tmp4rs_hnqd.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4rs_hnqd.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rs_hnqd.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp4rs_hnqd.jl:21\n\
    \   [2] top-level scope at /tmp/tmp4rs_hnqd.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4rs_hnqd.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4rs_hnqd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3n2_4tzc.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmp3n2_4tzc.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmp3n2_4tzc.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3n2_4tzc.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3n2_4tzc.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp3n2_4tzc.jl:21\\n   [2] top-level scope at /tmp/tmp3n2_4tzc.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3n2_4tzc.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3n2_4tzc.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp3n2_4tzc.jl:21\\n   [2] top-level scope at /tmp/tmp3n2_4tzc.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3n2_4tzc.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprhpak23n.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmprhpak23n.jl:21\n   [2] top-level\
    \ scope at /tmp/tmprhpak23n.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhpak23n.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhpak23n.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprhpak23n.jl:21\n\
    \   [2] top-level scope at /tmp/tmprhpak23n.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhpak23n.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprhpak23n.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprhpak23n.jl:21\n\
    \   [2] top-level scope at /tmp/tmprhpak23n.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhpak23n.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhpak23n.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int,j) % 2 == 1\n                count += 1\n          \
    \  end\n        end\n        push!(output, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0sihyipo.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp0sihyipo.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp0sihyipo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0sihyipo.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0sihyipo.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0sihyipo.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0sihyipo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0sihyipo.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0sihyipo.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0sihyipo.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0sihyipo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0sihyipo.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0sihyipo.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(x, r\"\\d\", \"n\") for x in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8tupa4v_.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmp8tupa4v_.jl:13\n\
    \   [5] top-level scope at /tmp/tmp8tupa4v_.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8tupa4v_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tupa4v_.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp8tupa4v_.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp8tupa4v_.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8tupa4v_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tupa4v_.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp8tupa4v_.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp8tupa4v_.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8tupa4v_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8tupa4v_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph2n4qzf8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmph2n4qzf8.jl:21\n   [2] top-level\
    \ scope at /tmp/tmph2n4qzf8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph2n4qzf8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmph2n4qzf8.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmph2n4qzf8.jl:21\n\
    \   [2] top-level scope at /tmp/tmph2n4qzf8.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph2n4qzf8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmph2n4qzf8.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmph2n4qzf8.jl:21\n\
    \   [2] top-level scope at /tmp/tmph2n4qzf8.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph2n4qzf8.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph2n4qzf8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkzstndn8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkzstndn8.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpkzstndn8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkzstndn8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzstndn8.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkzstndn8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkzstndn8.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkzstndn8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkzstndn8.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkzstndn8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkzstndn8.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkzstndn8.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkzstndn8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp73hnglts.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp73hnglts.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp73hnglts.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp73hnglts.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp73hnglts.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp73hnglts.jl:21\n\
    \   [2] top-level scope at /tmp/tmp73hnglts.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp73hnglts.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp73hnglts.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp73hnglts.jl:21\n\
    \   [2] top-level scope at /tmp/tmp73hnglts.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp73hnglts.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp73hnglts.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbzhrbtjk.jl:30\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbzhrbtjk.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbzhrbtjk.jl:29\\ntest set: Test Failed at /tmp/tmpbzhrbtjk.jl:31\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbzhrbtjk.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbzhrbtjk.jl:29\\ntest set: Test Failed at /tmp/tmpbzhrbtjk.jl:32\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbzhrbtjk.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbzhrbtjk.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        odd_count = 0\n     \
    \   for j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n\
    \                odd_count += 1\n            end\n        end\n        output\
    \ = push!(output, \"the number of odd elements $odd_countn the str$odd_countng\
    \ $odd_count of the $odd_countnput.\")\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppvu9jnqd.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: odd_countn not defined\\\
    n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at /tmp/tmppvu9jnqd.jl:21\\\
    n   [2] top-level scope at /tmp/tmppvu9jnqd.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppvu9jnqd.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppvu9jnqd.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ odd_countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmppvu9jnqd.jl:21\\n   [2] top-level scope at /tmp/tmppvu9jnqd.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppvu9jnqd.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppvu9jnqd.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ odd_countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmppvu9jnqd.jl:21\\n   [2] top-level scope at /tmp/tmppvu9jnqd.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppvu9jnqd.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->y%2!=0,x)))*\"\
    n the str\"*string(length(filter(y->y%2!=0,x)))*\"ng \"*string(length(filter(y->y%2!=0,x)))*\"\
    \ of the \"*string(length(filter(y->y%2!=0,x)))*\"nput.\",lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl5umxnsr.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmpl5umxnsr.jl:13\n   [2] filter(::var\"\
    #4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpl5umxnsr.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n \
    \  [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpl5umxnsr.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpl5umxnsr.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpl5umxnsr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5umxnsr.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpl5umxnsr.jl:13\n\
    \   [2] filter(::var\"#4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"\
    #3#8\")(::String) at /tmp/tmpl5umxnsr.jl:13\n   [4] iterate at ./generator.jl:47\
    \ [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpl5umxnsr.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpl5umxnsr.jl:21\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpl5umxnsr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5umxnsr.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpl5umxnsr.jl:13\n\
    \   [2] filter(::var\"#4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"\
    #3#8\")(::String) at /tmp/tmpl5umxnsr.jl:13\n   [4] iterate at ./generator.jl:47\
    \ [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpl5umxnsr.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpl5umxnsr.jl:22\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpl5umxnsr.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5umxnsr.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = Vector{String}()\n    for i in 1:length(lst)\n        count = 0\n\
    \        for j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 ==\
    \ 1\n                count += 1\n            end\n        end\n        push!(out,\
    \ \"the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpu40c91nk.jl:30\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpu40c91nk.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu40c91nk.jl:29\\ntest set: Test Failed at /tmp/tmpu40c91nk.jl:31\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpu40c91nk.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu40c91nk.jl:29\\ntest set: Test Failed at /tmp/tmpu40c91nk.jl:32\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpu40c91nk.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu40c91nk.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp29_m3u6c.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp29_m3u6c.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp29_m3u6c.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29_m3u6c.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp29_m3u6c.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp29_m3u6c.jl:21\n\
    \   [2] top-level scope at /tmp/tmp29_m3u6c.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29_m3u6c.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp29_m3u6c.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp29_m3u6c.jl:21\n\
    \   [2] top-level scope at /tmp/tmp29_m3u6c.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29_m3u6c.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp29_m3u6c.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> (parse(Int, d) % 2 == 1 ? \"1\" : \"\
    4\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_smtb3w6.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::var\"#4#6\")\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmp_smtb3w6.jl:13\n\
    \   [5] top-level scope at /tmp/tmp_smtb3w6.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp_smtb3w6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_smtb3w6.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp_smtb3w6.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp_smtb3w6.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp_smtb3w6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_smtb3w6.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp_smtb3w6.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp_smtb3w6.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp_smtb3w6.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_smtb3w6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkpgyodt1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkpgyodt1.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpkpgyodt1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkpgyodt1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkpgyodt1.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkpgyodt1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkpgyodt1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkpgyodt1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkpgyodt1.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkpgyodt1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkpgyodt1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkpgyodt1.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkpgyodt1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int,j) % 2 == 1\n                count += 1\n          \
    \  end\n        end\n        push!(output, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgtz8kfl9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpgtz8kfl9.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpgtz8kfl9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgtz8kfl9.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgtz8kfl9.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgtz8kfl9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgtz8kfl9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgtz8kfl9.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgtz8kfl9.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgtz8kfl9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgtz8kfl9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgtz8kfl9.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgtz8kfl9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        result = [result;\
    \ \"the number of odd elements \"*string(count)*\"n the str\"*string(i)*\"ng \"\
    *string(i)*\" of the \"*string(i)*\"nput.\"]\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgcci415v.jl:30\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 4n the str1ng 1 of the 1nput.\"]\
    \ == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpgcci415v.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgcci415v.jl:29\\ntest set: Test Failed at /tmp/tmpgcci415v.jl:31\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str2ng 2 of the 2nput.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpgcci415v.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgcci415v.jl:29\\ntest set: Test Failed at /tmp/tmpgcci415v.jl:32\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 2n the str1ng 1 of the\
    \ 1nput.\", \"the number of odd elements 3n the str2ng 2 of the 2nput.\", \"the\
    \ number of odd elements 2n the str3ng 3 of the 3nput.\"] == [\"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n\
    \ the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgcci415v.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgcci415v.jl:29\\nTest Summary: | Fail  Total\\\
    ntest set      |    3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        num_odd = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          num_odd += 1\n            end\n        end\n        push!(out, \"the\
    \ number of odd elements $num_oddn the str$num_oddng $num_odd of the $num_oddnput.\"\
    )\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsy6puu5f.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: num_oddn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpsy6puu5f.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpsy6puu5f.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsy6puu5f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsy6puu5f.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpsy6puu5f.jl:21\n   [2] top-level scope at /tmp/tmpsy6puu5f.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsy6puu5f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsy6puu5f.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ num_oddn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpsy6puu5f.jl:21\n   [2] top-level scope at /tmp/tmpsy6puu5f.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsy6puu5f.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsy6puu5f.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ox9ma8j.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp1ox9ma8j.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp1ox9ma8j.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ox9ma8j.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ox9ma8j.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp1ox9ma8j.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ox9ma8j.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ox9ma8j.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ox9ma8j.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp1ox9ma8j.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ox9ma8j.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ox9ma8j.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ox9ma8j.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp7nw11rg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpp7nw11rg.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpp7nw11rg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp7nw11rg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpp7nw11rg.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpp7nw11rg.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp7nw11rg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp7nw11rg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpp7nw11rg.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpp7nw11rg.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp7nw11rg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp7nw11rg.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp7nw11rg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd_rahxtj.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpd_rahxtj.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpd_rahxtj.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_rahxtj.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_rahxtj.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd_rahxtj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd_rahxtj.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_rahxtj.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_rahxtj.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd_rahxtj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd_rahxtj.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_rahxtj.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_rahxtj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int,j) % 2 == 1\n                count += 1\n          \
    \  end\n        end\n        push!(output, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqu94abxu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpqu94abxu.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpqu94abxu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqu94abxu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpqu94abxu.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpqu94abxu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqu94abxu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqu94abxu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpqu94abxu.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpqu94abxu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqu94abxu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqu94abxu.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu94abxu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    n the str\"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"ng \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    \ of the \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"nput.\",lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        num_odd = 0\n        for\
    \ j in 1:length(lst[i])\n            if lst[i][j] % 2 == 1\n                num_odd\
    \ += 1\n            end\n        end\n        out = push!(out, \"the number of\
    \ odd elements $num_oddn the str$num_oddng $num_odd of the $num_oddnput.\")\n\
    \    end\n    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjyyd8olf.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpjyyd8olf.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpjyyd8olf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjyyd8olf.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjyyd8olf.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpjyyd8olf.jl:17\n   [2] top-level scope at /tmp/tmpjyyd8olf.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjyyd8olf.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjyyd8olf.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpjyyd8olf.jl:17\n   [2] top-level scope at /tmp/tmpjyyd8olf.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjyyd8olf.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyyd8olf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(count(x->x%2==1,x))*\"\
    n the str\"*string(x[1])*\"ng \"*string(x[1])*\" of the \"*string(x[1])*\"nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk5qzkyx2.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\\n    ...\\n\
    \  Stacktrace:\\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmpk5qzkyx2.jl:13\\n \
    \  [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#5\")(::String) at\
    \ /tmp/tmpk5qzkyx2.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\n  \
    \ [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#5\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpk5qzkyx2.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpk5qzkyx2.jl:20\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpk5qzkyx2.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk5qzkyx2.jl:21\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmpk5qzkyx2.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#5\")(::String)\
    \ at /tmp/tmpk5qzkyx2.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#5\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpk5qzkyx2.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpk5qzkyx2.jl:21\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpk5qzkyx2.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk5qzkyx2.jl:22\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmpk5qzkyx2.jl:13\\\
    n   [2] count at ./reduce.jl:855 [inlined]\\n   [3] (::var\"#3#5\")(::String)\
    \ at /tmp/tmpk5qzkyx2.jl:13\\n   [4] iterate at ./generator.jl:47 [inlined]\\\
    n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#5\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\\n   [7] map at ./abstractarray.jl:2072 [inlined]\\\
    n   [8] odd_count(::Array{String,1}) at /tmp/tmpk5qzkyx2.jl:13\\n   [9] top-level\
    \ scope at /tmp/tmpk5qzkyx2.jl:22\\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [11] top-level scope at /tmp/tmpk5qzkyx2.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1gne4e5l.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmp1gne4e5l.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmp1gne4e5l.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmp1gne4e5l.jl:13\n   [9] top-level\
    \ scope at /tmp/tmp1gne4e5l.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp1gne4e5l.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp1gne4e5l.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp1gne4e5l.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp1gne4e5l.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp1gne4e5l.jl:13\n   [9] top-level scope at /tmp/tmp1gne4e5l.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp1gne4e5l.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp1gne4e5l.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp1gne4e5l.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp1gne4e5l.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp1gne4e5l.jl:13\n   [9] top-level scope at /tmp/tmp1gne4e5l.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp1gne4e5l.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1gne4e5l.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5hv84_iv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp5hv84_iv.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp5hv84_iv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hv84_iv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hv84_iv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5hv84_iv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5hv84_iv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hv84_iv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5hv84_iv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5hv84_iv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5hv84_iv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5hv84_iv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5hv84_iv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int,j) % 2 == 1\n                count += 1\n          \
    \  end\n        end\n        output = push!(output, \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\")\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpui2sumtm.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpui2sumtm.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpui2sumtm.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpui2sumtm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpui2sumtm.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpui2sumtm.jl:21\n\
    \   [2] top-level scope at /tmp/tmpui2sumtm.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpui2sumtm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpui2sumtm.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpui2sumtm.jl:21\n\
    \   [2] top-level scope at /tmp/tmpui2sumtm.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpui2sumtm.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpui2sumtm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int, j) % 2 != 0\n                count += 1\n         \
    \   end\n        end\n        new_lst = push!(new_lst, \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\")\n    end\n    return new_lst\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5mxk1uek.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp5mxk1uek.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp5mxk1uek.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5mxk1uek.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5mxk1uek.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5mxk1uek.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5mxk1uek.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5mxk1uek.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5mxk1uek.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5mxk1uek.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5mxk1uek.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5mxk1uek.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mxk1uek.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(x, r\"\\d\", \"n\") for x in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8n0yzd1_.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmp8n0yzd1_.jl:13\n\
    \   [5] top-level scope at /tmp/tmp8n0yzd1_.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8n0yzd1_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n0yzd1_.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp8n0yzd1_.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp8n0yzd1_.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8n0yzd1_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n0yzd1_.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmp8n0yzd1_.jl:13\n   [5] top-level\
    \ scope at /tmp/tmp8n0yzd1_.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp8n0yzd1_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8n0yzd1_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprdjw62j5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmprdjw62j5.jl:21\n   [2] top-level\
    \ scope at /tmp/tmprdjw62j5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdjw62j5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprdjw62j5.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprdjw62j5.jl:21\n\
    \   [2] top-level scope at /tmp/tmprdjw62j5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdjw62j5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprdjw62j5.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprdjw62j5.jl:21\n\
    \   [2] top-level scope at /tmp/tmprdjw62j5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdjw62j5.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdjw62j5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppwnxy6ce.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmppwnxy6ce.jl:21\n   [2] top-level\
    \ scope at /tmp/tmppwnxy6ce.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppwnxy6ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppwnxy6ce.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppwnxy6ce.jl:21\n\
    \   [2] top-level scope at /tmp/tmppwnxy6ce.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppwnxy6ce.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppwnxy6ce.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppwnxy6ce.jl:21\n\
    \   [2] top-level scope at /tmp/tmppwnxy6ce.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppwnxy6ce.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwnxy6ce.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8inyzwcm.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp8inyzwcm.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp8inyzwcm.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8inyzwcm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp8inyzwcm.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp8inyzwcm.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8inyzwcm.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8inyzwcm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp8inyzwcm.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp8inyzwcm.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8inyzwcm.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8inyzwcm.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8inyzwcm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbkv_dluu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpbkv_dluu.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpbkv_dluu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbkv_dluu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbkv_dluu.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbkv_dluu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbkv_dluu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbkv_dluu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbkv_dluu.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbkv_dluu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbkv_dluu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbkv_dluu.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbkv_dluu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp95ls2d1_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp95ls2d1_.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp95ls2d1_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95ls2d1_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp95ls2d1_.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp95ls2d1_.jl:21\n\
    \   [2] top-level scope at /tmp/tmp95ls2d1_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95ls2d1_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp95ls2d1_.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp95ls2d1_.jl:21\n\
    \   [2] top-level scope at /tmp/tmp95ls2d1_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95ls2d1_.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95ls2d1_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyosqefdb.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpyosqefdb.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpyosqefdb.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyosqefdb.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyosqefdb.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpyosqefdb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyosqefdb.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyosqefdb.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyosqefdb.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpyosqefdb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyosqefdb.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyosqefdb.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyosqefdb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpww4ptiuu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpww4ptiuu.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpww4ptiuu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpww4ptiuu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpww4ptiuu.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpww4ptiuu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpww4ptiuu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpww4ptiuu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpww4ptiuu.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpww4ptiuu.jl:21\n\
    \   [2] top-level scope at /tmp/tmpww4ptiuu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpww4ptiuu.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpww4ptiuu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpov9im24w.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpov9im24w.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpov9im24w.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpov9im24w.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpov9im24w.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpov9im24w.jl:21\n\
    \   [2] top-level scope at /tmp/tmpov9im24w.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpov9im24w.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpov9im24w.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpov9im24w.jl:21\n\
    \   [2] top-level scope at /tmp/tmpov9im24w.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpov9im24w.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov9im24w.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5jyp91v0.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\\n    ...\\n\
    \  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5jyp91v0.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5jyp91v0.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5jyp91v0.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5jyp91v0.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmp5jyp91v0.jl:17\\n   [2] top-level scope at /tmp/tmp5jyp91v0.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5jyp91v0.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5jyp91v0.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmp5jyp91v0.jl:17\\n   [2] top-level scope at /tmp/tmp5jyp91v0.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5jyp91v0.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    # your code here\n    return [\"the number of odd elements \"*string(count(x->x%2==1,x))*\"\
    n the str\"*string(i)*\"ng \"*string(i)*\" of the \"*string(i)*\"nput.\" for (i,x)\
    \ in enumerate(lst)]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx7p54cx8.jl:21\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#6\")(::Char) at /tmp/tmpx7p54cx8.jl:14\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String}) at ./none:0\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmpx7p54cx8.jl:14\n\
    \   [7] top-level scope at /tmp/tmpx7p54cx8.jl:21\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpx7p54cx8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7p54cx8.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmpx7p54cx8.jl:14\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String})\
    \ at ./none:0\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmpx7p54cx8.jl:14\n\
    \   [7] top-level scope at /tmp/tmpx7p54cx8.jl:22\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpx7p54cx8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7p54cx8.jl:23\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmpx7p54cx8.jl:14\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String})\
    \ at ./none:0\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmpx7p54cx8.jl:14\n\
    \   [7] top-level scope at /tmp/tmpx7p54cx8.jl:23\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpx7p54cx8.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx7p54cx8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl47mr20u.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpl47mr20u.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpl47mr20u.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl47mr20u.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl47mr20u.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpl47mr20u.jl:17\n   [2] top-level scope at /tmp/tmpl47mr20u.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl47mr20u.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl47mr20u.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpl47mr20u.jl:17\n   [2] top-level scope at /tmp/tmpl47mr20u.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl47mr20u.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl47mr20u.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpabmmnzbv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpabmmnzbv.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpabmmnzbv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpabmmnzbv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpabmmnzbv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpabmmnzbv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpabmmnzbv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpabmmnzbv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpabmmnzbv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpabmmnzbv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpabmmnzbv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpabmmnzbv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabmmnzbv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if (parse(Int,lst[i][j]) % 2) != 0\n    \
    \            count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgob81xli.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpgob81xli.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpgob81xli.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgob81xli.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgob81xli.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgob81xli.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgob81xli.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgob81xli.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpgob81xli.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpgob81xli.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgob81xli.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgob81xli.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgob81xli.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if parse(Int, j) % 2 != 0\n                count += 1\n         \
    \   end\n        end\n        new_lst = push!(new_lst, \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\")\n    end\n    return new_lst\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9lau8vgv.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp9lau8vgv.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp9lau8vgv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lau8vgv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lau8vgv.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9lau8vgv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9lau8vgv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lau8vgv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9lau8vgv.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9lau8vgv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9lau8vgv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9lau8vgv.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9lau8vgv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0z790xoe.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp0z790xoe.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp0z790xoe.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0z790xoe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0z790xoe.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0z790xoe.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0z790xoe.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0z790xoe.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp0z790xoe.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0z790xoe.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0z790xoe.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0z790xoe.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0z790xoe.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    #lst = [\"1234567\"]\n    #lst = [\"3\",\"11111111\"]\n    #lst = [\"\
    3\",\"11111111\",\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\"\
    ]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\"]\n    #lst\
    \ = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"]\n   \
    \ #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"\
    1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"]\n  \
    \  #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\"]\n    #lst = [\"3\",\"11111111\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\"]\n    #lst = [\"3\",\"11111111\",\"1234567\",\"1234567\"\
    ,\"1234567\",\"1234567\",\"1234567\",\"123\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo9y_p7vg.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpo9y_p7vg.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpo9y_p7vg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_6fe23n8.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmp_6fe23n8.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmp_6fe23n8.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmp_6fe23n8.jl:13\n   [9] top-level\
    \ scope at /tmp/tmp_6fe23n8.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp_6fe23n8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6fe23n8.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp_6fe23n8.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp_6fe23n8.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp_6fe23n8.jl:13\n   [9] top-level scope at /tmp/tmp_6fe23n8.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp_6fe23n8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6fe23n8.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp_6fe23n8.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp_6fe23n8.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp_6fe23n8.jl:13\n   [9] top-level scope at /tmp/tmp_6fe23n8.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp_6fe23n8.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6fe23n8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt6op5atm.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpt6op5atm.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpt6op5atm.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt6op5atm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt6op5atm.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt6op5atm.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt6op5atm.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt6op5atm.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt6op5atm.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt6op5atm.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt6op5atm.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt6op5atm.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6op5atm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7y9eisrk.jl:30\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp7y9eisrk.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7y9eisrk.jl:29\\ntest set: Test Failed at /tmp/tmp7y9eisrk.jl:31\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp7y9eisrk.jl:31\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7y9eisrk.jl:29\\ntest set: Test Failed at /tmp/tmp7y9eisrk.jl:32\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7y9eisrk.jl:32\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7y9eisrk.jl:29\\nTest Summary: | Fail  Total\\\
    ntest set      |    3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9a267aqe.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmp9a267aqe.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmp9a267aqe.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9a267aqe.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9a267aqe.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp9a267aqe.jl:21\\n   [2] top-level scope at /tmp/tmp9a267aqe.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9a267aqe.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9a267aqe.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp9a267aqe.jl:21\\n   [2] top-level scope at /tmp/tmp9a267aqe.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9a267aqe.jl:29\\n  \\nTest Summary: | Error\
    \  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_i9rv33n.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp_i9rv33n.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp_i9rv33n.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_i9rv33n.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_i9rv33n.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_i9rv33n.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_i9rv33n.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_i9rv33n.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_i9rv33n.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_i9rv33n.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_i9rv33n.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_i9rv33n.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_i9rv33n.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = append!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprmm7dmrk.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmprmm7dmrk.jl:21\n   [2] top-level\
    \ scope at /tmp/tmprmm7dmrk.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmm7dmrk.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprmm7dmrk.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprmm7dmrk.jl:21\n\
    \   [2] top-level scope at /tmp/tmprmm7dmrk.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmm7dmrk.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprmm7dmrk.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprmm7dmrk.jl:21\n\
    \   [2] top-level scope at /tmp/tmprmm7dmrk.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmm7dmrk.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmm7dmrk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd407ny3r.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpd407ny3r.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpd407ny3r.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd407ny3r.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd407ny3r.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd407ny3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd407ny3r.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd407ny3r.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd407ny3r.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd407ny3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd407ny3r.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd407ny3r.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd407ny3r.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->parse(Int,y)%2==1,x))n\
    \ the str$(count(y->parse(Int,y)%2==1,x))ng $(count(y->parse(Int,y)%2==1,x)) of\
    \ the $(count(y->parse(Int,y)%2==1,x))nput.\",lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count n the str$count ng $count of the $count nput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyidpillp.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 n the str4 ng 4 of the 4 nput.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyidpillp.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyidpillp.jl:29\ntest set: Test Failed at /tmp/tmpyidpillp.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 n the str1\
    \ ng 1 of the 1 nput.\", \"the number of odd elements 8 n the str8 ng 8 of the\
    \ 8 nput.\"] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyidpillp.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyidpillp.jl:29\ntest set: Test Failed at /tmp/tmpyidpillp.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 n the str2 ng 2 of\
    \ the 2 nput.\", \"the number of odd elements 3 n the str3 ng 3 of the 3 nput.\"\
    , \"the number of odd elements 2 n the str2 ng 2 of the 2 nput.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpyidpillp.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyidpillp.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyidpillp.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwr156wmi.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching rem(::Char,\
    \ ::Int64)\\n  Closest candidates are:\\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\\\
    n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\\n    ...\\n\
    \  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at /tmp/tmpwr156wmi.jl:17\\\
    n   [2] top-level scope at /tmp/tmpwr156wmi.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpwr156wmi.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpwr156wmi.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmpwr156wmi.jl:17\\n   [2] top-level scope at /tmp/tmpwr156wmi.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpwr156wmi.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpwr156wmi.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\\n  Closest candidates are:\\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\\n    ...\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmpwr156wmi.jl:17\\n   [2] top-level scope at /tmp/tmpwr156wmi.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpwr156wmi.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpwr156wmi.jl:27\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        num = 0\n        for j in\
    \ 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n           \
    \     num += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $num in the string $i of the input.\")\n    end\n    return\
    \ out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvsgs4vnf.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvsgs4vnf.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvsgs4vnf.jl:29\ntest set: Test Failed at /tmp/tmpvsgs4vnf.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvsgs4vnf.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvsgs4vnf.jl:29\ntest set: Test Failed at /tmp/tmpvsgs4vnf.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvsgs4vnf.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvsgs4vnf.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvsgs4vnf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppm2h7oep.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmppm2h7oep.jl:21\n   [2] top-level\
    \ scope at /tmp/tmppm2h7oep.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm2h7oep.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppm2h7oep.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppm2h7oep.jl:21\n\
    \   [2] top-level scope at /tmp/tmppm2h7oep.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm2h7oep.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppm2h7oep.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppm2h7oep.jl:21\n\
    \   [2] top-level scope at /tmp/tmppm2h7oep.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppm2h7oep.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm2h7oep.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpewvjpz3_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpewvjpz3_.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpewvjpz3_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpewvjpz3_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpewvjpz3_.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpewvjpz3_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpewvjpz3_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpewvjpz3_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpewvjpz3_.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpewvjpz3_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpewvjpz3_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpewvjpz3_.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpewvjpz3_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2dcypjkr.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmp2dcypjkr.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmp2dcypjkr.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmp2dcypjkr.jl:13\n   [9] top-level\
    \ scope at /tmp/tmp2dcypjkr.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp2dcypjkr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dcypjkr.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp2dcypjkr.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp2dcypjkr.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp2dcypjkr.jl:13\n   [9] top-level scope at /tmp/tmp2dcypjkr.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp2dcypjkr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dcypjkr.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp2dcypjkr.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp2dcypjkr.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp2dcypjkr.jl:13\n   [9] top-level scope at /tmp/tmp2dcypjkr.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp2dcypjkr.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2dcypjkr.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6cokwezf.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp6cokwezf.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp6cokwezf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6cokwezf.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp6cokwezf.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp6cokwezf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6cokwezf.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6cokwezf.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp6cokwezf.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp6cokwezf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6cokwezf.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6cokwezf.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6cokwezf.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->parse(Int,y)%2==1,x))n\
    \ the str$(count(y->parse(Int,y)%2==1,x))ng $(count(y->parse(Int,y)%2==1,x)) of\
    \ the $(count(y->parse(Int,y)%2==1,x))nput.\",lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        new_lst = push!(new_lst,\
    \ \"the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return new_lst\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphsqtb6g3.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphsqtb6g3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsqtb6g3.jl:29\ntest set: Test Failed at /tmp/tmphsqtb6g3.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphsqtb6g3.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsqtb6g3.jl:29\ntest set: Test Failed at /tmp/tmphsqtb6g3.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmphsqtb6g3.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphsqtb6g3.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphsqtb6g3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl144baea.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpl144baea.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpl144baea.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl144baea.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl144baea.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpl144baea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpl144baea.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl144baea.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl144baea.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpl144baea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpl144baea.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl144baea.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl144baea.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in lst\n        count = 0\n        for j in i\n  \
    \          if parse(Int,j) % 2 == 1\n                count += 1\n            end\n\
    \        end\n        out = push!(out, \"the number of odd elements $countn the\
    \ str$countng $count of the $countnput.\")\n    end\n    return out\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnprrx396.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpnprrx396.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpnprrx396.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnprrx396.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpnprrx396.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpnprrx396.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnprrx396.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnprrx396.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpnprrx396.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpnprrx396.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnprrx396.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnprrx396.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnprrx396.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9cdovt67.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp9cdovt67.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp9cdovt67.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cdovt67.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cdovt67.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9cdovt67.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9cdovt67.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cdovt67.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cdovt67.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9cdovt67.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9cdovt67.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cdovt67.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cdovt67.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(new_lst, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return new_lst\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwy79jwwl.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwy79jwwl.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwy79jwwl.jl:29\ntest set: Test Failed at /tmp/tmpwy79jwwl.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwy79jwwl.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwy79jwwl.jl:29\ntest set: Test Failed at /tmp/tmpwy79jwwl.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpwy79jwwl.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwy79jwwl.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwy79jwwl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        output = push!(output, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqipzvdu0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpqipzvdu0.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpqipzvdu0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqipzvdu0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpqipzvdu0.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpqipzvdu0.jl:17\n   [2] top-level scope at /tmp/tmpqipzvdu0.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqipzvdu0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpqipzvdu0.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpqipzvdu0.jl:17\n   [2] top-level scope at /tmp/tmpqipzvdu0.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqipzvdu0.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqipzvdu0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->y%2==1,x)))*\"\
    n the str\"*string(length(filter(y->y%2==1,x)))*\"ng \"*string(length(filter(y->y%2==1,x)))*\"\
    \ of the \"*string(length(filter(y->y%2==1,x)))*\"nput.\",lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm9izp_1k.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmpm9izp_1k.jl:13\n   [2] filter(::var\"\
    #4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"#3#8\")(::String)\
    \ at /tmp/tmpm9izp_1k.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n \
    \  [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"\
    }, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpm9izp_1k.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpm9izp_1k.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpm9izp_1k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9izp_1k.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpm9izp_1k.jl:13\n\
    \   [2] filter(::var\"#4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"\
    #3#8\")(::String) at /tmp/tmpm9izp_1k.jl:13\n   [4] iterate at ./generator.jl:47\
    \ [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpm9izp_1k.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpm9izp_1k.jl:21\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpm9izp_1k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9izp_1k.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpm9izp_1k.jl:13\n\
    \   [2] filter(::var\"#4#9\", ::String) at ./strings/string.jl:356\n   [3] (::var\"\
    #3#8\")(::String) at /tmp/tmpm9izp_1k.jl:13\n   [4] iterate at ./generator.jl:47\
    \ [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpm9izp_1k.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpm9izp_1k.jl:22\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpm9izp_1k.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9izp_1k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", \"n\") for s in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj8a371vp.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmpj8a371vp.jl:13\n\
    \   [5] top-level scope at /tmp/tmpj8a371vp.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpj8a371vp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpj8a371vp.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmpj8a371vp.jl:13\n   [5] top-level\
    \ scope at /tmp/tmpj8a371vp.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpj8a371vp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpj8a371vp.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmpj8a371vp.jl:13\n   [5] top-level\
    \ scope at /tmp/tmpj8a371vp.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpj8a371vp.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj8a371vp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    n the str\"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"ng \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    \ of the \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"nput.\",lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphlr8yt8o.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmphlr8yt8o.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmphlr8yt8o.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmphlr8yt8o.jl:13\n   [9] top-level\
    \ scope at /tmp/tmphlr8yt8o.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmphlr8yt8o.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphlr8yt8o.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmphlr8yt8o.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmphlr8yt8o.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmphlr8yt8o.jl:13\n   [9] top-level scope at /tmp/tmphlr8yt8o.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmphlr8yt8o.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphlr8yt8o.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmphlr8yt8o.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmphlr8yt8o.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmphlr8yt8o.jl:13\n   [9] top-level scope at /tmp/tmphlr8yt8o.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmphlr8yt8o.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphlr8yt8o.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2q4jhqxq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp2q4jhqxq.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp2q4jhqxq.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2q4jhqxq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp2q4jhqxq.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp2q4jhqxq.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2q4jhqxq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2q4jhqxq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp2q4jhqxq.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp2q4jhqxq.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2q4jhqxq.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2q4jhqxq.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2q4jhqxq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5_dcbhjk.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmp5_dcbhjk.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmp5_dcbhjk.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5_dcbhjk.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5_dcbhjk.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp5_dcbhjk.jl:21\\n   [2] top-level scope at /tmp/tmp5_dcbhjk.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5_dcbhjk.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5_dcbhjk.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp5_dcbhjk.jl:21\\n   [2] top-level scope at /tmp/tmp5_dcbhjk.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5_dcbhjk.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    # create a vector of strings to return\n    ret = Vector{String}(length(lst))\n\
    \    # loop through the input list\n    for i in 1:length(lst)\n        # count\
    \ the number of odd digits in the string\n        odd_count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        odd_count += 1\n            end\n        end\n        # create the string\
    \ to put in the return vector\n        ret[i] = \"the number of odd elements $odd_countn\
    \ the str$odd_countng $odd_count of the $odd_countnput.\"\n    end\n    return\
    \ ret\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp50k_tjmh.jl:34\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching Array{String,1}(::Int64)\n\
    \  Closest candidates are:\n    Array{String,1}() where T at boot.jl:424\n   \
    \ Array{String,1}(!Matched::UndefInitializer, !Matched::Int64) where T at boot.jl:405\n\
    \    Array{String,1}(!Matched::UndefInitializer, !Matched::Int64...) where {T,\
    \ N} at boot.jl:411\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1})\
    \ at /tmp/tmp50k_tjmh.jl:14\n   [2] top-level scope at /tmp/tmp50k_tjmh.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp50k_tjmh.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp50k_tjmh.jl:35\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching Array{String,1}(::Int64)\n  Closest candidates are:\n   \
    \ Array{String,1}() where T at boot.jl:424\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64) where T at boot.jl:405\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64...) where {T, N} at boot.jl:411\n    ...\n  Stacktrace:\n  \
    \ [1] odd_count(::Array{String,1}) at /tmp/tmp50k_tjmh.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp50k_tjmh.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp50k_tjmh.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp50k_tjmh.jl:36\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching Array{String,1}(::Int64)\n  Closest candidates are:\n   \
    \ Array{String,1}() where T at boot.jl:424\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64) where T at boot.jl:405\n    Array{String,1}(!Matched::UndefInitializer,\
    \ !Matched::Int64...) where {T, N} at boot.jl:411\n    ...\n  Stacktrace:\n  \
    \ [1] odd_count(::Array{String,1}) at /tmp/tmp50k_tjmh.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp50k_tjmh.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp50k_tjmh.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp50k_tjmh.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6wgrqrav.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp6wgrqrav.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp6wgrqrav.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6wgrqrav.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp6wgrqrav.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp6wgrqrav.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6wgrqrav.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6wgrqrav.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp6wgrqrav.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp6wgrqrav.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6wgrqrav.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6wgrqrav.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6wgrqrav.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    for i in 1:length(lst)\n        odd_count = 0\n        for j in 1:length(lst[i])\n\
    \            if parse(Int,lst[i][j]) % 2 == 1\n                odd_count += 1\n\
    \            end\n        end\n        lst[i] = \"the number of odd elements $odd_countn\
    \ the str$odd_countng $odd_count of the $odd_countnput.\"\n    end\n    return\
    \ lst\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkz6inr7t.jl:29\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: odd_countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkz6inr7t.jl:20\n   [2] top-level\
    \ scope at /tmp/tmpkz6inr7t.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkz6inr7t.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkz6inr7t.jl:30\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkz6inr7t.jl:20\n   [2] top-level scope at /tmp/tmpkz6inr7t.jl:30\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkz6inr7t.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpkz6inr7t.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkz6inr7t.jl:20\n   [2] top-level scope at /tmp/tmpkz6inr7t.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkz6inr7t.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkz6inr7t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprcgwaxm9.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmprcgwaxm9.jl:21\n   [2] top-level\
    \ scope at /tmp/tmprcgwaxm9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcgwaxm9.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprcgwaxm9.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprcgwaxm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmprcgwaxm9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcgwaxm9.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmprcgwaxm9.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmprcgwaxm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmprcgwaxm9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcgwaxm9.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprcgwaxm9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9h8n67jz.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmp9h8n67jz.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmp9h8n67jz.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9h8n67jz.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9h8n67jz.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp9h8n67jz.jl:21\\n   [2] top-level scope at /tmp/tmp9h8n67jz.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9h8n67jz.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9h8n67jz.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp9h8n67jz.jl:21\\n   [2] top-level scope at /tmp/tmp9h8n67jz.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9h8n67jz.jl:29\\n  \\nTest Summary: | Error\
    \  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5ec57mlu.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp5ec57mlu.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp5ec57mlu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ec57mlu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ec57mlu.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5ec57mlu.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5ec57mlu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ec57mlu.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5ec57mlu.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5ec57mlu.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5ec57mlu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5ec57mlu.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ec57mlu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd8m4chi0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpd8m4chi0.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpd8m4chi0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd8m4chi0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd8m4chi0.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd8m4chi0.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd8m4chi0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd8m4chi0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpd8m4chi0.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpd8m4chi0.jl:21\n\
    \   [2] top-level scope at /tmp/tmpd8m4chi0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd8m4chi0.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8m4chi0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> (parse(Int, d) % 2 == 1 ? \"n\" : \"\
    4\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsru5hvlv.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::var\"#4#6\")\\n  Closest candidates are:\\n    replace(::String,\
    \ !Matched::Pair{#s67,B} where B where #s67<:AbstractChar; count) at strings/util.jl:421\\\
    n    replace(::String, !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String)\
    \ at ./none:0\\n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3] collect\
    \ at ./array.jl:665 [inlined]\\n   [4] odd_count(::Array{String,1}) at /tmp/tmpsru5hvlv.jl:13\\\
    n   [5] top-level scope at /tmp/tmpsru5hvlv.jl:20\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpsru5hvlv.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsru5hvlv.jl:21\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\\n  Closest candidates\
    \ are:\\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String) at ./none:0\\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\\n   [3] collect at ./array.jl:665 [inlined]\\\
    n   [4] odd_count(::Array{String,1}) at /tmp/tmpsru5hvlv.jl:13\\n   [5] top-level\
    \ scope at /tmp/tmpsru5hvlv.jl:21\\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpsru5hvlv.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsru5hvlv.jl:22\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\\n  Closest candidates\
    \ are:\\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String) at ./none:0\\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\\n   [3] collect at ./array.jl:665 [inlined]\\\
    n   [4] odd_count(::Array{String,1}) at /tmp/tmpsru5hvlv.jl:13\\n   [5] top-level\
    \ scope at /tmp/tmpsru5hvlv.jl:22\\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpsru5hvlv.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpozqnzlx1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpozqnzlx1.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpozqnzlx1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpozqnzlx1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpozqnzlx1.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpozqnzlx1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpozqnzlx1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpozqnzlx1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpozqnzlx1.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpozqnzlx1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpozqnzlx1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpozqnzlx1.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpozqnzlx1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwytvqeb_.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpwytvqeb_.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpwytvqeb_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwytvqeb_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpwytvqeb_.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpwytvqeb_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpwytvqeb_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwytvqeb_.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpwytvqeb_.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpwytvqeb_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpwytvqeb_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwytvqeb_.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwytvqeb_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt1oyylmj.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpt1oyylmj.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpt1oyylmj.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1oyylmj.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1oyylmj.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt1oyylmj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt1oyylmj.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1oyylmj.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1oyylmj.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpt1oyylmj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpt1oyylmj.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1oyylmj.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1oyylmj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4bmppfna.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp4bmppfna.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp4bmppfna.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4bmppfna.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4bmppfna.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp4bmppfna.jl:21\n\
    \   [2] top-level scope at /tmp/tmp4bmppfna.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4bmppfna.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4bmppfna.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp4bmppfna.jl:21\n\
    \   [2] top-level scope at /tmp/tmp4bmppfna.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4bmppfna.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4bmppfna.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    # initialize output\n    output = []\n    # loop over each string in the\
    \ list\n    for i in 1:length(lst)\n        # initialize counter\n        counter\
    \ = 0\n        # loop over each character in the string\n        for j in 1:length(lst[i])\n\
    \            # if the character is odd, increment counter\n            if parse(Int,lst[i][j])\
    \ % 2 != 0\n                counter += 1\n            end\n        end\n     \
    \   # add the string to the output\n        push!(output, \"the number of odd\
    \ elements $counter in the string $i of the input.\")\n    end\n    # return the\
    \ output\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvr9f7vzd.jl:37\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvr9f7vzd.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvr9f7vzd.jl:36\\ntest set: Test Failed at /tmp/tmpvr9f7vzd.jl:38\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvr9f7vzd.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvr9f7vzd.jl:36\\ntest set: Test Failed at /tmp/tmpvr9f7vzd.jl:39\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvr9f7vzd.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvr9f7vzd.jl:36\\nTest Summary: | Fail  Total\\\
    ntest set      |    3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpngvxkjz5.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpngvxkjz5.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpngvxkjz5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpngvxkjz5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpngvxkjz5.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpngvxkjz5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpngvxkjz5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpngvxkjz5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpngvxkjz5.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpngvxkjz5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpngvxkjz5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpngvxkjz5.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngvxkjz5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7hv4ci6h.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp7hv4ci6h.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp7hv4ci6h.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7hv4ci6h.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7hv4ci6h.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp7hv4ci6h.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7hv4ci6h.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7hv4ci6h.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7hv4ci6h.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp7hv4ci6h.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7hv4ci6h.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7hv4ci6h.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hv4ci6h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbmvrtz4s.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpbmvrtz4s.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpbmvrtz4s.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbmvrtz4s.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmvrtz4s.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbmvrtz4s.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbmvrtz4s.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbmvrtz4s.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpbmvrtz4s.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpbmvrtz4s.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbmvrtz4s.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbmvrtz4s.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbmvrtz4s.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpb2igh4xo.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmpb2igh4xo.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmpb2igh4xo.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb2igh4xo.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpb2igh4xo.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpb2igh4xo.jl:21\\n   [2] top-level scope at /tmp/tmpb2igh4xo.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb2igh4xo.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpb2igh4xo.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpb2igh4xo.jl:21\\n   [2] top-level scope at /tmp/tmpb2igh4xo.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb2igh4xo.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps0uhyxvn.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmps0uhyxvn.jl:21\n   [2] top-level\
    \ scope at /tmp/tmps0uhyxvn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps0uhyxvn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmps0uhyxvn.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmps0uhyxvn.jl:21\n\
    \   [2] top-level scope at /tmp/tmps0uhyxvn.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps0uhyxvn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmps0uhyxvn.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmps0uhyxvn.jl:21\n\
    \   [2] top-level scope at /tmp/tmps0uhyxvn.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps0uhyxvn.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps0uhyxvn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzp0hqwww.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpzp0hqwww.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpzp0hqwww.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzp0hqwww.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzp0hqwww.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpzp0hqwww.jl:17\n   [2] top-level scope at /tmp/tmpzp0hqwww.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzp0hqwww.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzp0hqwww.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpzp0hqwww.jl:17\n   [2] top-level scope at /tmp/tmpzp0hqwww.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzp0hqwww.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzp0hqwww.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    n the str\"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"ng \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    \ of the \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"nput.\",lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = Vector{String}(undef, length(lst))\n    for i in 1:length(lst)\n\
    \        odd_count = 0\n        for j in 1:length(lst[i])\n            if parse(Int,\
    \ lst[i][j]) % 2 == 1\n                odd_count += 1\n            end\n     \
    \   end\n        out[i] = \"the number of odd elements $odd_countn the str$odd_countng\
    \ $odd_count of the $odd_countnput.\"\n    end\n    return out\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl6j25v7f.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: odd_countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpl6j25v7f.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpl6j25v7f.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6j25v7f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6j25v7f.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpl6j25v7f.jl:21\n   [2] top-level scope at /tmp/tmpl6j25v7f.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6j25v7f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6j25v7f.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpl6j25v7f.jl:21\n   [2] top-level scope at /tmp/tmpl6j25v7f.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6j25v7f.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6j25v7f.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        new_lst = push!(new_lst, \"the number of odd elements $countn\
    \ the str$countng $count of the $countnput.\")\n    end\n    return new_lst\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkvi__x8q.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkvi__x8q.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpkvi__x8q.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkvi__x8q.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkvi__x8q.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkvi__x8q.jl:17\n   [2] top-level scope at /tmp/tmpkvi__x8q.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkvi__x8q.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkvi__x8q.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkvi__x8q.jl:17\n   [2] top-level scope at /tmp/tmpkvi__x8q.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkvi__x8q.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkvi__x8q.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    for i in 1:length(lst)\n        count = 0\n        for j in 1:length(lst[i])\n\
    \            if parse(Int,lst[i][j]) % 2 == 1\n                count += 1\n  \
    \          end\n        end\n        lst[i] = \"the number of odd elements \"\
    \ * string(count) * \"n the str\" * string(count) * \"ng \" * string(count) *\
    \ \" of the \" * string(count) * \"nput.\"\n    end\n    return lst\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [\"the number of odd elements \" * string(count(x->x%2==1, parse(Int,x)))\
    \ * \"n the str\" * string(i) * \"ng \" * string(i) * \" of the \" * string(i)\
    \ * \"nput.\" for (i,x) in enumerate(lst)]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfhdte6xv.jl:20\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"]\
    \ == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfhdte6xv.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfhdte6xv.jl:19\ntest set: Test Failed at /tmp/tmpfhdte6xv.jl:21\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 1n the str2ng 2 of the 2nput.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfhdte6xv.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfhdte6xv.jl:19\ntest set: Test Failed at /tmp/tmpfhdte6xv.jl:22\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the\
    \ 1nput.\", \"the number of odd elements 1n the str2ng 2 of the 2nput.\", \"the\
    \ number of odd elements 0n the str3ng 3 of the 3nput.\"] == [\"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n\
    \ the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpfhdte6xv.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfhdte6xv.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfhdte6xv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpraslby2k.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmpraslby2k.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmpraslby2k.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpraslby2k.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpraslby2k.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpraslby2k.jl:21\\n   [2] top-level scope at /tmp/tmpraslby2k.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpraslby2k.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpraslby2k.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpraslby2k.jl:21\\n   [2] top-level scope at /tmp/tmpraslby2k.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpraslby2k.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp64cdjgwh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp64cdjgwh.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp64cdjgwh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp64cdjgwh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp64cdjgwh.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp64cdjgwh.jl:21\n\
    \   [2] top-level scope at /tmp/tmp64cdjgwh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp64cdjgwh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp64cdjgwh.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp64cdjgwh.jl:21\n\
    \   [2] top-level scope at /tmp/tmp64cdjgwh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp64cdjgwh.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64cdjgwh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(sum(isodd.(parse.(Int, x))))n\
    \ the str$(sum(isodd.(parse.(Int, x))))ng $(sum(isodd.(parse.(Int, x)))) of the\
    \ $(sum(isodd.(parse.(Int, x))))nput.\", lst)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsnsiv246.jl:20\\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\\
    n   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"]\
    \ == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpsnsiv246.jl:20\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnsiv246.jl:19\\ntest set: Test Failed at /tmp/tmpsnsiv246.jl:21\\\
    n  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\\n   Evaluated: [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpsnsiv246.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnsiv246.jl:19\\ntest set: Test Failed at /tmp/tmpsnsiv246.jl:22\\\
    n  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\\n   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the\
    \ 1nput.\", \"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the\
    \ number of odd elements 0n the str0ng 0 of the 0nput.\"] == [\"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n\
    \ the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpsnsiv246.jl:22\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnsiv246.jl:19\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5lm9n52s.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp5lm9n52s.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp5lm9n52s.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5lm9n52s.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5lm9n52s.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5lm9n52s.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5lm9n52s.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5lm9n52s.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp5lm9n52s.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp5lm9n52s.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5lm9n52s.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5lm9n52s.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5lm9n52s.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> if(parse(Int, d) % 2 == 0, \"n\", \"\
    1\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \")\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptcl4uue_.jl:13\n [2] include(::Module, ::String) at ./Base.jl:377\n\
    \ [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4] _start() at ./client.jl:484\n\
    in expression starting at /tmp/tmptcl4uue_.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzxmli0qi.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpzxmli0qi.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpzxmli0qi.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzxmli0qi.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzxmli0qi.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpzxmli0qi.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzxmli0qi.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzxmli0qi.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzxmli0qi.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpzxmli0qi.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzxmli0qi.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzxmli0qi.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxmli0qi.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(x, r\"\\d\", \"n\") for x in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdpixoela.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmpdpixoela.jl:13\n\
    \   [5] top-level scope at /tmp/tmpdpixoela.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpdpixoela.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpdpixoela.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmpdpixoela.jl:13\n   [5] top-level\
    \ scope at /tmp/tmpdpixoela.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpdpixoela.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpdpixoela.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmpdpixoela.jl:13\n   [5] top-level\
    \ scope at /tmp/tmpdpixoela.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmpdpixoela.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdpixoela.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp95zslft1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp95zslft1.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp95zslft1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95zslft1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp95zslft1.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp95zslft1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp95zslft1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95zslft1.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp95zslft1.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp95zslft1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp95zslft1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp95zslft1.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95zslft1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(length(filter(y->parse(Int,y)%2!=0,x)))n\
    \ the str$(length(filter(y->parse(Int,y)%2!=0,x)))ng $(length(filter(y->parse(Int,y)%2!=0,x)))\
    \ of the $(length(filter(y->parse(Int,y)%2!=0,x)))nput.\",lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkuqsxy87.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkuqsxy87.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmpkuqsxy87.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpkuqsxy87.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpkuqsxy87.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpkuqsxy87.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkuqsxy87.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkuqsxy87.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpkuqsxy87.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpkuqsxy87.jl:13\n   [9] top-level scope at /tmp/tmpkuqsxy87.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpkuqsxy87.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkuqsxy87.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpkuqsxy87.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpkuqsxy87.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpkuqsxy87.jl:13\n   [9] top-level scope at /tmp/tmpkuqsxy87.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpkuqsxy87.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkuqsxy87.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", d -> (parse(Int, d) % 2 == 1 ? \"1\" : \"\
    0\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptxs919ew.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::var\"#4#6\")\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect at\
    \ ./array.jl:665 [inlined]\n   [4] odd_count(::Array{String,1}) at /tmp/tmptxs919ew.jl:13\n\
    \   [5] top-level scope at /tmp/tmptxs919ew.jl:20\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmptxs919ew.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptxs919ew.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmptxs919ew.jl:13\n   [5] top-level\
    \ scope at /tmp/tmptxs919ew.jl:21\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmptxs919ew.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptxs919ew.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#5\")(::String) at ./none:0\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\n   [3] collect at ./array.jl:665 [inlined]\n\
    \   [4] odd_count(::Array{String,1}) at /tmp/tmptxs919ew.jl:13\n   [5] top-level\
    \ scope at /tmp/tmptxs919ew.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmptxs919ew.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxs919ew.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(length(x)-length(replace(x,\
    \ r\"\\d\", \"\"))/2)n the str$(length(x)-length(replace(x, r\"\\d\", \"\"))/2)ng\
    \ $(length(x)-length(replace(x, r\"\\d\", \"\"))/2) of the $(length(x)-length(replace(x,\
    \ r\"\\d\", \"\"))/2)nput.\", lst)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpizn5pegl.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::String)\n  Closest candidates are:\n    replace(::String, !Matched::Pair{#s67,B}\
    \ where B where #s67<:AbstractChar; count) at strings/util.jl:421\n    replace(::String,\
    \ !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\n    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at /tmp/tmpizn5pegl.jl:13\n   [2] iterate at ./generator.jl:47 [inlined]\n \
    \  [3] _collect at ./array.jl:678 [inlined]\n   [4] collect_similar at ./array.jl:607\
    \ [inlined]\n   [5] map at ./abstractarray.jl:2072 [inlined]\n   [6] odd_count(::Array{String,1})\
    \ at /tmp/tmpizn5pegl.jl:13\n   [7] top-level scope at /tmp/tmpizn5pegl.jl:20\n\
    \   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpizn5pegl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpizn5pegl.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at /tmp/tmpizn5pegl.jl:13\n\
    \   [2] iterate at ./generator.jl:47 [inlined]\n   [3] _collect at ./array.jl:678\
    \ [inlined]\n   [4] collect_similar at ./array.jl:607 [inlined]\n   [5] map at\
    \ ./abstractarray.jl:2072 [inlined]\n   [6] odd_count(::Array{String,1}) at /tmp/tmpizn5pegl.jl:13\n\
    \   [7] top-level scope at /tmp/tmpizn5pegl.jl:21\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpizn5pegl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpizn5pegl.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::String)\n  Closest candidates\
    \ are:\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at /tmp/tmpizn5pegl.jl:13\n\
    \   [2] iterate at ./generator.jl:47 [inlined]\n   [3] _collect at ./array.jl:678\
    \ [inlined]\n   [4] collect_similar at ./array.jl:607 [inlined]\n   [5] map at\
    \ ./abstractarray.jl:2072 [inlined]\n   [6] odd_count(::Array{String,1}) at /tmp/tmpizn5pegl.jl:13\n\
    \   [7] top-level scope at /tmp/tmpizn5pegl.jl:22\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmpizn5pegl.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpizn5pegl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(new_lst, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return new_lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfnqio0zt.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpfnqio0zt.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpfnqio0zt.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnqio0zt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpfnqio0zt.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpfnqio0zt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfnqio0zt.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnqio0zt.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpfnqio0zt.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpfnqio0zt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfnqio0zt.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfnqio0zt.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnqio0zt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvk3qamyc.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpvk3qamyc.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpvk3qamyc.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvk3qamyc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpvk3qamyc.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpvk3qamyc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvk3qamyc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvk3qamyc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpvk3qamyc.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpvk3qamyc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvk3qamyc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvk3qamyc.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvk3qamyc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = Vector{String}(undef, length(lst))\n    for i in 1:length(lst)\n\
    \        out[i] = \"the number of odd elements \"\n        out[i] *= string(count(isdigit,\
    \ lst[i])[2])\n        out[i] *= \"n the str\"\n        out[i] *= string(count(isdigit,\
    \ lst[i])[2])\n        out[i] *= \"ng \"\n        out[i] *= string(count(isdigit,\
    \ lst[i])[2])\n        out[i] *= \" of the \"\n        out[i] *= string(count(isdigit,\
    \ lst[i])[2])\n        out[i] *= \"nput.\"\n    end\n    return out\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp85300m3l.jl:32\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  BoundsError\n  Stacktrace:\n   [1] getindex at\
    \ ./number.jl:78 [inlined]\n   [2] odd_count(::Array{String,1}) at /tmp/tmp85300m3l.jl:16\n\
    \   [3] top-level scope at /tmp/tmp85300m3l.jl:32\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp85300m3l.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp85300m3l.jl:33\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  BoundsError\n\
    \  Stacktrace:\n   [1] getindex at ./number.jl:78 [inlined]\n   [2] odd_count(::Array{String,1})\
    \ at /tmp/tmp85300m3l.jl:16\n   [3] top-level scope at /tmp/tmp85300m3l.jl:33\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp85300m3l.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp85300m3l.jl:34\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  BoundsError\n\
    \  Stacktrace:\n   [1] getindex at ./number.jl:78 [inlined]\n   [2] odd_count(::Array{String,1})\
    \ at /tmp/tmp85300m3l.jl:16\n   [3] top-level scope at /tmp/tmp85300m3l.jl:34\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp85300m3l.jl:31\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85300m3l.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", \"the number of odd elements $0n the str$0ng\
    \ $0 of the $0nput.\") for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid interpolation syntax: \"$0\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxr2e6z_v.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxr2e6z_v.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppbamusrg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmppbamusrg.jl:21\n   [2] top-level\
    \ scope at /tmp/tmppbamusrg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppbamusrg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppbamusrg.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppbamusrg.jl:21\n\
    \   [2] top-level scope at /tmp/tmppbamusrg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppbamusrg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmppbamusrg.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmppbamusrg.jl:21\n\
    \   [2] top-level scope at /tmp/tmppbamusrg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppbamusrg.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbamusrg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp74oe_g8r.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp74oe_g8r.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp74oe_g8r.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp74oe_g8r.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp74oe_g8r.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp74oe_g8r.jl:21\n\
    \   [2] top-level scope at /tmp/tmp74oe_g8r.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp74oe_g8r.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp74oe_g8r.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp74oe_g8r.jl:21\n\
    \   [2] top-level scope at /tmp/tmp74oe_g8r.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp74oe_g8r.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp74oe_g8r.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkkpaj439.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkkpaj439.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpkkpaj439.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkpaj439.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkkpaj439.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkkpaj439.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkkpaj439.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkpaj439.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkkpaj439.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpkkpaj439.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkkpaj439.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkpaj439.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkpaj439.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count\"*\n            \"n the str$count\"*\n     \
    \       \"ng $count of the $count\"*\n            \"nput.\")\n    end\n    return\
    \ output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    new_lst = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(new_lst, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return new_lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyplgocdq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpyplgocdq.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpyplgocdq.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyplgocdq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyplgocdq.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpyplgocdq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyplgocdq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyplgocdq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyplgocdq.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpyplgocdq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyplgocdq.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyplgocdq.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyplgocdq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1m34j9t0.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp1m34j9t0.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp1m34j9t0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1m34j9t0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp1m34j9t0.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp1m34j9t0.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1m34j9t0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1m34j9t0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp1m34j9t0.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp1m34j9t0.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1m34j9t0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1m34j9t0.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1m34j9t0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr2135mpn.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpr2135mpn.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpr2135mpn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr2135mpn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2135mpn.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpr2135mpn.jl:21\n\
    \   [2] top-level scope at /tmp/tmpr2135mpn.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr2135mpn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpr2135mpn.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpr2135mpn.jl:21\n\
    \   [2] top-level scope at /tmp/tmpr2135mpn.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr2135mpn.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2135mpn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [\"the number of odd elements $(count(x->x%2==1,parse(Int,x)))n\
    \ the str$(count(x->x%2==1,parse(Int,x)))ng $(count(x->x%2==1,parse(Int,x))) of\
    \ the $(count(x->x%2==1,parse(Int,x)))nput.\" for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2_gmnhds.jl:20\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"]\
    \ == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2_gmnhds.jl:20\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_gmnhds.jl:19\ntest set: Test Failed at /tmp/tmp2_gmnhds.jl:21\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2_gmnhds.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_gmnhds.jl:19\ntest set: Test Failed at /tmp/tmp2_gmnhds.jl:22\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 1n the str1ng 1 of the\
    \ 1nput.\", \"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the\
    \ number of odd elements 0n the str0ng 0 of the 0nput.\"] == [\"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n\
    \ the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp2_gmnhds.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_gmnhds.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_gmnhds.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphecqr788.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmphecqr788.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmphecqr788.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphecqr788.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphecqr788.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmphecqr788.jl:21\\n   [2] top-level scope at /tmp/tmphecqr788.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphecqr788.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphecqr788.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmphecqr788.jl:21\\n   [2] top-level scope at /tmp/tmphecqr788.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphecqr788.jl:29\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [\"the number of odd elements \" * string(count(x->x%2==1,x)) *\
    \ \"n the str\" * string(i) * \"ng \" * string(i) * \" of the \" * string(i) *\
    \ \"nput.\" for (i,x) in enumerate(lst)]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplic098pb.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#6\")(::Char) at /tmp/tmplic098pb.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String}) at ./none:0\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmplic098pb.jl:13\n\
    \   [7] top-level scope at /tmp/tmplic098pb.jl:20\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmplic098pb.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplic098pb.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmplic098pb.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String})\
    \ at ./none:0\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmplic098pb.jl:13\n\
    \   [7] top-level scope at /tmp/tmplic098pb.jl:21\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmplic098pb.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplic098pb.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#6\")(::Char) at /tmp/tmplic098pb.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#5\")(::Tuple{Int64,String})\
    \ at ./none:0\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5] collect(::Base.Generator{Base.Iterators.Enumerate{Array{String,1}},var\"\
    #3#5\"}) at ./array.jl:665\n   [6] odd_count(::Array{String,1}) at /tmp/tmplic098pb.jl:13\n\
    \   [7] top-level scope at /tmp/tmplic098pb.jl:22\n   [8] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [9] top-level scope at /tmp/tmplic098pb.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplic098pb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg0oecb1q.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmpg0oecb1q.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmpg0oecb1q.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmpg0oecb1q.jl:13\n   [9] top-level\
    \ scope at /tmp/tmpg0oecb1q.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpg0oecb1q.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpg0oecb1q.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpg0oecb1q.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpg0oecb1q.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpg0oecb1q.jl:13\n   [9] top-level scope at /tmp/tmpg0oecb1q.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpg0oecb1q.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpg0oecb1q.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmpg0oecb1q.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmpg0oecb1q.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmpg0oecb1q.jl:13\n   [9] top-level scope at /tmp/tmpg0oecb1q.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmpg0oecb1q.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg0oecb1q.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1jjfqnh.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpm1jjfqnh.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpm1jjfqnh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1jjfqnh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1jjfqnh.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpm1jjfqnh.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm1jjfqnh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1jjfqnh.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1jjfqnh.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpm1jjfqnh.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm1jjfqnh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1jjfqnh.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1jjfqnh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in lst\n        count = 0\n        for j in i\n  \
    \          if j % 2 == 1\n                count += 1\n            end\n      \
    \  end\n        push!(out, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return out\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7sx26xw8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp7sx26xw8.jl:17\n   [2] top-level\
    \ scope at /tmp/tmp7sx26xw8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7sx26xw8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7sx26xw8.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp7sx26xw8.jl:17\n   [2] top-level scope at /tmp/tmp7sx26xw8.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7sx26xw8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp7sx26xw8.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp7sx26xw8.jl:17\n   [2] top-level scope at /tmp/tmp7sx26xw8.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7sx26xw8.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7sx26xw8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph64d5q08.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmph64d5q08.jl:21\n   [2] top-level\
    \ scope at /tmp/tmph64d5q08.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64d5q08.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmph64d5q08.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmph64d5q08.jl:21\n\
    \   [2] top-level scope at /tmp/tmph64d5q08.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64d5q08.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmph64d5q08.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmph64d5q08.jl:21\n\
    \   [2] top-level scope at /tmp/tmph64d5q08.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64d5q08.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph64d5q08.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for i in 1:length(lst)\n        count = 0\n        for j\
    \ in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n        \
    \        count += 1\n            end\n        end\n        push!(out, \"the number\
    \ of odd elements $countn the str$countng $count of the $countnput.\")\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv_6t2hbh.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmpv_6t2hbh.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmpv_6t2hbh.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpv_6t2hbh.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv_6t2hbh.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpv_6t2hbh.jl:21\\n   [2] top-level scope at /tmp/tmpv_6t2hbh.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpv_6t2hbh.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpv_6t2hbh.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpv_6t2hbh.jl:21\\n   [2] top-level scope at /tmp/tmpv_6t2hbh.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpv_6t2hbh.jl:29\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = Vector{String}(undef, length(lst))\n    for i in 1:length(lst)\n\
    \        odd_count = 0\n        for j in 1:length(lst[i])\n            if parse(Int,\
    \ lst[i][j]) % 2 == 1\n                odd_count += 1\n            end\n     \
    \   end\n        output[i] = \"the number of odd elements $odd_countn the str$odd_countng\
    \ $odd_count of the $odd_countnput.\"\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzk3csk3f.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: odd_countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpzk3csk3f.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpzk3csk3f.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzk3csk3f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzk3csk3f.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpzk3csk3f.jl:21\n   [2] top-level scope at /tmp/tmpzk3csk3f.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzk3csk3f.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpzk3csk3f.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpzk3csk3f.jl:21\n   [2] top-level scope at /tmp/tmpzk3csk3f.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzk3csk3f.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzk3csk3f.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9yrs_t55.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp9yrs_t55.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp9yrs_t55.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yrs_t55.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yrs_t55.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9yrs_t55.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yrs_t55.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yrs_t55.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yrs_t55.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp9yrs_t55.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yrs_t55.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yrs_t55.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yrs_t55.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvyid9uwc.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvyid9uwc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvyid9uwc.jl:29\ntest set: Test Failed at /tmp/tmpvyid9uwc.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvyid9uwc.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvyid9uwc.jl:29\ntest set: Test Failed at /tmp/tmpvyid9uwc.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvyid9uwc.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvyid9uwc.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvyid9uwc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppwkxmb1x.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmppwkxmb1x.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmppwkxmb1x.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmppwkxmb1x.jl:13\n   [9] top-level\
    \ scope at /tmp/tmppwkxmb1x.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppwkxmb1x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppwkxmb1x.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmppwkxmb1x.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmppwkxmb1x.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmppwkxmb1x.jl:13\n   [9] top-level scope at /tmp/tmppwkxmb1x.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppwkxmb1x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppwkxmb1x.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmppwkxmb1x.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmppwkxmb1x.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmppwkxmb1x.jl:13\n   [9] top-level scope at /tmp/tmppwkxmb1x.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppwkxmb1x.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwkxmb1x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpycg3sbr_.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpycg3sbr_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycg3sbr_.jl:29\ntest set: Test Failed at /tmp/tmpycg3sbr_.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpycg3sbr_.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycg3sbr_.jl:29\ntest set: Test Failed at /tmp/tmpycg3sbr_.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpycg3sbr_.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycg3sbr_.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycg3sbr_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa9or6ev4.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpa9or6ev4.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpa9or6ev4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa9or6ev4.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpa9or6ev4.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpa9or6ev4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpa9or6ev4.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa9or6ev4.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpa9or6ev4.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpa9or6ev4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpa9or6ev4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa9or6ev4.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9or6ev4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7pj1ywq_.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7pj1ywq_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7pj1ywq_.jl:29\ntest set: Test Failed at /tmp/tmp7pj1ywq_.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7pj1ywq_.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7pj1ywq_.jl:29\ntest set: Test Failed at /tmp/tmp7pj1ywq_.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7pj1ywq_.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7pj1ywq_.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7pj1ywq_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        result = push!(result,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpncrl5m2g.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpncrl5m2g.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpncrl5m2g.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpncrl5m2g.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpncrl5m2g.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpncrl5m2g.jl:21\n\
    \   [2] top-level scope at /tmp/tmpncrl5m2g.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpncrl5m2g.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpncrl5m2g.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpncrl5m2g.jl:21\n\
    \   [2] top-level scope at /tmp/tmpncrl5m2g.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpncrl5m2g.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpncrl5m2g.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4m2b7kt.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf4m2b7kt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4m2b7kt.jl:29\ntest set: Test Failed at /tmp/tmpf4m2b7kt.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf4m2b7kt.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4m2b7kt.jl:29\ntest set: Test Failed at /tmp/tmpf4m2b7kt.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpf4m2b7kt.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf4m2b7kt.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4m2b7kt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpummmyjau.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpummmyjau.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpummmyjau.jl:29\ntest set: Test Failed at /tmp/tmpummmyjau.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpummmyjau.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpummmyjau.jl:29\ntest set: Test Failed at /tmp/tmpummmyjau.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpummmyjau.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpummmyjau.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpummmyjau.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplz6xs3r0.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmplz6xs3r0.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmplz6xs3r0.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmplz6xs3r0.jl:13\n   [9] top-level\
    \ scope at /tmp/tmplz6xs3r0.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmplz6xs3r0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplz6xs3r0.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmplz6xs3r0.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmplz6xs3r0.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmplz6xs3r0.jl:13\n   [9] top-level scope at /tmp/tmplz6xs3r0.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmplz6xs3r0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplz6xs3r0.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmplz6xs3r0.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmplz6xs3r0.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmplz6xs3r0.jl:13\n   [9] top-level scope at /tmp/tmplz6xs3r0.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmplz6xs3r0.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplz6xs3r0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_vde6mjg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp_vde6mjg.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp_vde6mjg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_vde6mjg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vde6mjg.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_vde6mjg.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_vde6mjg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_vde6mjg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_vde6mjg.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp_vde6mjg.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_vde6mjg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_vde6mjg.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_vde6mjg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb08mpxaz.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpb08mpxaz.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpb08mpxaz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb08mpxaz.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpb08mpxaz.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpb08mpxaz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb08mpxaz.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb08mpxaz.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpb08mpxaz.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpb08mpxaz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb08mpxaz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb08mpxaz.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb08mpxaz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(sum(x .% 2 .== 1))n the str$(sum(x\
    \ .% 2 .== 1))ng $(sum(x .% 2 .== 1)) of the $(sum(x .% 2 .== 1))nput.\", lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz2vgbnsp.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::String, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [2] _broadcast_getindex\
    \ at ./broadcast.jl:604 [inlined]\n   [3] _getindex at ./broadcast.jl:627 [inlined]\n\
    \   [4] _broadcast_getindex at ./broadcast.jl:603 [inlined]\n   [5] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [6] copy at ./broadcast.jl:830 [inlined]\n\
    \   [7] materialize at ./broadcast.jl:820 [inlined]\n   [8] (::var\"#3#4\")(::String)\
    \ at /tmp/tmpz2vgbnsp.jl:13\n   [9] iterate at ./generator.jl:47 [inlined]\n \
    \  [10] _collect at ./array.jl:678 [inlined]\n   [11] collect_similar at ./array.jl:607\
    \ [inlined]\n   [12] map at ./abstractarray.jl:2072 [inlined]\n   [13] odd_count(::Array{String,1})\
    \ at /tmp/tmpz2vgbnsp.jl:13\n   [14] top-level scope at /tmp/tmpz2vgbnsp.jl:20\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpz2vgbnsp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2vgbnsp.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::String, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] _broadcast_getindex_evalf at ./broadcast.jl:631\
    \ [inlined]\n   [2] _broadcast_getindex at ./broadcast.jl:604 [inlined]\n   [3]\
    \ _getindex at ./broadcast.jl:627 [inlined]\n   [4] _broadcast_getindex at ./broadcast.jl:603\
    \ [inlined]\n   [5] getindex at ./broadcast.jl:564 [inlined]\n   [6] copy at ./broadcast.jl:830\
    \ [inlined]\n   [7] materialize at ./broadcast.jl:820 [inlined]\n   [8] (::var\"\
    #3#4\")(::String) at /tmp/tmpz2vgbnsp.jl:13\n   [9] iterate at ./generator.jl:47\
    \ [inlined]\n   [10] _collect at ./array.jl:678 [inlined]\n   [11] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [12] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [13] odd_count(::Array{String,1}) at /tmp/tmpz2vgbnsp.jl:13\n   [14] top-level\
    \ scope at /tmp/tmpz2vgbnsp.jl:21\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpz2vgbnsp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2vgbnsp.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::String, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] _broadcast_getindex_evalf at ./broadcast.jl:631\
    \ [inlined]\n   [2] _broadcast_getindex at ./broadcast.jl:604 [inlined]\n   [3]\
    \ _getindex at ./broadcast.jl:627 [inlined]\n   [4] _broadcast_getindex at ./broadcast.jl:603\
    \ [inlined]\n   [5] getindex at ./broadcast.jl:564 [inlined]\n   [6] copy at ./broadcast.jl:830\
    \ [inlined]\n   [7] materialize at ./broadcast.jl:820 [inlined]\n   [8] (::var\"\
    #3#4\")(::String) at /tmp/tmpz2vgbnsp.jl:13\n   [9] iterate at ./generator.jl:47\
    \ [inlined]\n   [10] _collect at ./array.jl:678 [inlined]\n   [11] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [12] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [13] odd_count(::Array{String,1}) at /tmp/tmpz2vgbnsp.jl:13\n   [14] top-level\
    \ scope at /tmp/tmpz2vgbnsp.jl:22\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpz2vgbnsp.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2vgbnsp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ik659_e.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp4ik659_e.jl:17\n   [2] top-level\
    \ scope at /tmp/tmp4ik659_e.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ik659_e.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ik659_e.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp4ik659_e.jl:17\n   [2] top-level scope at /tmp/tmp4ik659_e.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ik659_e.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ik659_e.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp4ik659_e.jl:17\n   [2] top-level scope at /tmp/tmp4ik659_e.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ik659_e.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ik659_e.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $countn the str$countng\
    \ $count of the $countnput.\")\n    end\n    return output\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj55sc2l8.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpj55sc2l8.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpj55sc2l8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj55sc2l8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpj55sc2l8.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpj55sc2l8.jl:17\n   [2] top-level scope at /tmp/tmpj55sc2l8.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj55sc2l8.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpj55sc2l8.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpj55sc2l8.jl:17\n   [2] top-level scope at /tmp/tmpj55sc2l8.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj55sc2l8.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj55sc2l8.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2!=0,x))n the\
    \ str$(count(y->y%2!=0,x))ng $(count(y->y%2!=0,x)) of the $(count(y->y%2!=0,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph23lfzi7.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmph23lfzi7.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmph23lfzi7.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmph23lfzi7.jl:13\n   [9] top-level\
    \ scope at /tmp/tmph23lfzi7.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmph23lfzi7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmph23lfzi7.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmph23lfzi7.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmph23lfzi7.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmph23lfzi7.jl:13\n   [9] top-level scope at /tmp/tmph23lfzi7.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmph23lfzi7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmph23lfzi7.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmph23lfzi7.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmph23lfzi7.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmph23lfzi7.jl:13\n   [9] top-level scope at /tmp/tmph23lfzi7.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmph23lfzi7.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph23lfzi7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe1o1179v.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpe1o1179v.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpe1o1179v.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1o1179v.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1o1179v.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpe1o1179v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpe1o1179v.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1o1179v.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1o1179v.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpe1o1179v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpe1o1179v.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe1o1179v.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1o1179v.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6l82czod.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  UndefVarError: countn not defined\\n  Stacktrace:\\\
    n   [1] odd_count(::Array{String,1}) at /tmp/tmp6l82czod.jl:21\\n   [2] top-level\
    \ scope at /tmp/tmp6l82czod.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6l82czod.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6l82czod.jl:31\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp6l82czod.jl:21\\n   [2] top-level scope at /tmp/tmp6l82czod.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6l82czod.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6l82czod.jl:32\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  UndefVarError:\
    \ countn not defined\\n  Stacktrace:\\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmp6l82czod.jl:21\\n   [2] top-level scope at /tmp/tmp6l82czod.jl:32\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6l82czod.jl:29\\n  \\nTest Summary: | '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp75pjoixb.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp75pjoixb.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp75pjoixb.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75pjoixb.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75pjoixb.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp75pjoixb.jl:21\n\
    \   [2] top-level scope at /tmp/tmp75pjoixb.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75pjoixb.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp75pjoixb.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp75pjoixb.jl:21\n\
    \   [2] top-level scope at /tmp/tmp75pjoixb.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75pjoixb.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75pjoixb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return [replace(s, r\"\\d\", n -> (parse(Int, n) % 2 == 1 ? \"1\" : \"\
    0\")) for s in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2b5hklbm.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\\n  MethodError: no method matching replace(::String,\
    \ ::Regex, ::var\"#4#6\")\\n  Closest candidates are:\\n    replace(::String,\
    \ !Matched::Pair{#s67,B} where B where #s67<:AbstractChar; count) at strings/util.jl:421\\\
    n    replace(::String, !Matched::Pair{#s64,B} where B where #s64<:Union{Tuple{Vararg{AbstractChar,N}\
    \ where N}, Set{#s61} where #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar};\
    \ count) at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count)\
    \ at strings/util.jl:433\\n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String)\
    \ at ./none:0\\n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3] collect\
    \ at ./array.jl:665 [inlined]\\n   [4] odd_count(::Array{String,1}) at /tmp/tmp2b5hklbm.jl:13\\\
    n   [5] top-level scope at /tmp/tmp2b5hklbm.jl:20\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp2b5hklbm.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2b5hklbm.jl:21\\n  Test threw exception\\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\\n  Closest candidates\
    \ are:\\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String) at ./none:0\\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\\n   [3] collect at ./array.jl:665 [inlined]\\\
    n   [4] odd_count(::Array{String,1}) at /tmp/tmp2b5hklbm.jl:13\\n   [5] top-level\
    \ scope at /tmp/tmp2b5hklbm.jl:21\\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp2b5hklbm.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2b5hklbm.jl:22\\n  Test threw exception\\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\\n  MethodError:\
    \ no method matching replace(::String, ::Regex, ::var\"#4#6\")\\n  Closest candidates\
    \ are:\\n    replace(::String, !Matched::Pair{#s67,B} where B where #s67<:AbstractChar;\
    \ count) at strings/util.jl:421\\n    replace(::String, !Matched::Pair{#s64,B}\
    \ where B where #s64<:Union{Tuple{Vararg{AbstractChar,N} where N}, Set{#s61} where\
    \ #s61<:AbstractChar, AbstractArray{#s62,1} where #s62<:AbstractChar}; count)\
    \ at strings/util.jl:426\\n    replace(::String, !Matched::Pair; count) at strings/util.jl:433\\\
    n    ...\\n  Stacktrace:\\n   [1] (::var\"#3#5\")(::String) at ./none:0\\n   [2]\
    \ iterate at ./generator.jl:47 [inlined]\\n   [3] collect at ./array.jl:665 [inlined]\\\
    n   [4] odd_count(::Array{String,1}) at /tmp/tmp2b5hklbm.jl:13\\n   [5] top-level\
    \ scope at /tmp/tmp2b5hklbm.jl:22\\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmp2b5hklbm.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     3      3\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk04_gtuq.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpk04_gtuq.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpk04_gtuq.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk04_gtuq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk04_gtuq.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk04_gtuq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk04_gtuq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk04_gtuq.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk04_gtuq.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpk04_gtuq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk04_gtuq.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk04_gtuq.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk04_gtuq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    result = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(result, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvo8t328o.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpvo8t328o.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpvo8t328o.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo8t328o.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo8t328o.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpvo8t328o.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvo8t328o.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo8t328o.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo8t328o.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpvo8t328o.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvo8t328o.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo8t328o.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo8t328o.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp04x_24dd.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp04x_24dd.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp04x_24dd.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp04x_24dd.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp04x_24dd.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp04x_24dd.jl:21\n\
    \   [2] top-level scope at /tmp/tmp04x_24dd.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp04x_24dd.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp04x_24dd.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp04x_24dd.jl:21\n\
    \   [2] top-level scope at /tmp/tmp04x_24dd.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp04x_24dd.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04x_24dd.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        odd_count = 0\n     \
    \   for j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n\
    \                odd_count += 1\n            end\n        end\n        output\
    \ = push!(output, \"the number of odd elements $odd_countn the str$odd_countng\
    \ $odd_count of the $odd_countnput.\")\n    end\n    return output\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkoj1khyn.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: odd_countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpkoj1khyn.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpkoj1khyn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkoj1khyn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkoj1khyn.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkoj1khyn.jl:21\n   [2] top-level scope at /tmp/tmpkoj1khyn.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkoj1khyn.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpkoj1khyn.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ odd_countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpkoj1khyn.jl:21\n   [2] top-level scope at /tmp/tmpkoj1khyn.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkoj1khyn.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkoj1khyn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp44s8_ogg.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp44s8_ogg.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp44s8_ogg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp44s8_ogg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp44s8_ogg.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp44s8_ogg.jl:21\n\
    \   [2] top-level scope at /tmp/tmp44s8_ogg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp44s8_ogg.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp44s8_ogg.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp44s8_ogg.jl:21\n\
    \   [2] top-level scope at /tmp/tmp44s8_ogg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp44s8_ogg.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44s8_ogg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        output = push!(output,\
    \ \"the number of odd elements $count n the str$count ng $count of the $count\
    \ nput.\")\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\n\
    candidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmparqkr_47.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 n the str4 ng 4 of the 4 nput.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmparqkr_47.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmparqkr_47.jl:29\ntest set: Test Failed at /tmp/tmparqkr_47.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 n the str1\
    \ ng 1 of the 1 nput.\", \"the number of odd elements 8 n the str8 ng 8 of the\
    \ 8 nput.\"] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmparqkr_47.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmparqkr_47.jl:29\ntest set: Test Failed at /tmp/tmparqkr_47.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 n the str2 ng 2 of\
    \ the 2 nput.\", \"the number of odd elements 3 n the str3 ng 3 of the 3 nput.\"\
    , \"the number of odd elements 2 n the str2 ng 2 of the 2 nput.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmparqkr_47.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmparqkr_47.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmparqkr_47.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjgxllsmy.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpjgxllsmy.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpjgxllsmy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjgxllsmy.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjgxllsmy.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpjgxllsmy.jl:21\n\
    \   [2] top-level scope at /tmp/tmpjgxllsmy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjgxllsmy.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjgxllsmy.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpjgxllsmy.jl:21\n\
    \   [2] top-level scope at /tmp/tmpjgxllsmy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjgxllsmy.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjgxllsmy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqtx6_hcj.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqtx6_hcj.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqtx6_hcj.jl:29\ntest set: Test Failed at /tmp/tmpqtx6_hcj.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqtx6_hcj.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqtx6_hcj.jl:29\ntest set: Test Failed at /tmp/tmpqtx6_hcj.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqtx6_hcj.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqtx6_hcj.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtx6_hcj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    # lst = [\"1234567\"]\n    # lst = [\"3\",\"11111111\"]\n    output =\
    \ []\n    for i in 1:length(lst)\n        count = 0\n        for j in 1:length(lst[i])\n\
    \            if parse(Int,lst[i][j]) % 2 == 1\n                count += 1\n  \
    \          end\n        end\n        output = [output; \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\"]\n    end\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0vaeng5u.jl:32\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmp0vaeng5u.jl:23\n   [2] top-level\
    \ scope at /tmp/tmp0vaeng5u.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vaeng5u.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp0vaeng5u.jl:33\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0vaeng5u.jl:23\n\
    \   [2] top-level scope at /tmp/tmp0vaeng5u.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vaeng5u.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp0vaeng5u.jl:34\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmp0vaeng5u.jl:23\n\
    \   [2] top-level scope at /tmp/tmp0vaeng5u.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0vaeng5u.jl:31\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0vaeng5u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in lst\n        count = 0\n        for j in i\n\
    \            if j % 2 == 1\n                count += 1\n            end\n    \
    \    end\n        push!(output, \"the number of odd elements $count in the string\
    \ $i of the input.\")\n    end\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjxea71qx.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpjxea71qx.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpjxea71qx.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxea71qx.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxea71qx.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpjxea71qx.jl:17\n   [2] top-level scope at /tmp/tmpjxea71qx.jl:31\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxea71qx.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxea71qx.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at\
    \ /tmp/tmpjxea71qx.jl:17\n   [2] top-level scope at /tmp/tmpjxea71qx.jl:32\n \
    \  [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxea71qx.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjxea71qx.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements $(count(y->y%2==1,x))n the\
    \ str$(count(y->y%2==1,x))ng $(count(y->y%2==1,x)) of the $(count(y->y%2==1,x))nput.\"\
    ,lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9gasy9qn.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at div.jl:67\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at div.jl:68\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at div.jl:69\n    ...\n  Stacktrace:\n\
    \   [1] (::var\"#4#9\")(::Char) at /tmp/tmp9gasy9qn.jl:13\n   [2] count at ./reduce.jl:855\
    \ [inlined]\n   [3] (::var\"#3#8\")(::String) at /tmp/tmp9gasy9qn.jl:13\n   [4]\
    \ iterate at ./generator.jl:47 [inlined]\n   [5] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#8\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [8] odd_count(::Array{String,1}) at /tmp/tmp9gasy9qn.jl:13\n   [9] top-level\
    \ scope at /tmp/tmp9gasy9qn.jl:20\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp9gasy9qn.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gasy9qn.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp9gasy9qn.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp9gasy9qn.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp9gasy9qn.jl:13\n   [9] top-level scope at /tmp/tmp9gasy9qn.jl:21\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp9gasy9qn.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gasy9qn.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  MethodError:\
    \ no method matching rem(::Char, ::Int64)\n  Closest candidates are:\n    rem(::Any,\
    \ ::Any, !Matched::RoundingMode{:ToZero}) at div.jl:67\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at div.jl:68\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up})\
    \ at div.jl:69\n    ...\n  Stacktrace:\n   [1] (::var\"#4#9\")(::Char) at /tmp/tmp9gasy9qn.jl:13\n\
    \   [2] count at ./reduce.jl:855 [inlined]\n   [3] (::var\"#3#8\")(::String) at\
    \ /tmp/tmp9gasy9qn.jl:13\n   [4] iterate at ./generator.jl:47 [inlined]\n   [5]\
    \ _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"#3#8\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [6] collect_similar at ./array.jl:607\
    \ [inlined]\n   [7] map at ./abstractarray.jl:2072 [inlined]\n   [8] odd_count(::Array{String,1})\
    \ at /tmp/tmp9gasy9qn.jl:13\n   [9] top-level scope at /tmp/tmp9gasy9qn.jl:22\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp9gasy9qn.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gasy9qn.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(sum(map(y->parse(Int,y)%2,x)))*\"\
    n the str\"*string(length(x))*\"ng \"*string(length(x))*\" of the \"*string(length(x))*\"\
    nput.\",lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t\
    @test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvjplspd1.jl:20\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  ArgumentError: map(f, s::AbstractString) requires\
    \ f to return AbstractChar; try map(f, collect(s)) or a comprehension instead\n\
    \  Stacktrace:\n   [1] map(::var\"#4#6\", ::String) at ./strings/basic.jl:575\n\
    \   [2] (::var\"#3#5\")(::String) at /tmp/tmpvjplspd1.jl:13\n   [3] iterate at\
    \ ./generator.jl:47 [inlined]\n   [4] _collect(::Array{String,1}, ::Base.Generator{Array{String,1},var\"\
    #3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [7] odd_count(::Array{String,1}) at /tmp/tmpvjplspd1.jl:13\n   [8] top-level\
    \ scope at /tmp/tmpvjplspd1.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpvjplspd1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpvjplspd1.jl:21\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  ArgumentError:\
    \ map(f, s::AbstractString) requires f to return AbstractChar; try map(f, collect(s))\
    \ or a comprehension instead\n  Stacktrace:\n   [1] map(::var\"#4#6\", ::String)\
    \ at ./strings/basic.jl:575\n   [2] (::var\"#3#5\")(::String) at /tmp/tmpvjplspd1.jl:13\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{String,1},\
    \ ::Base.Generator{Array{String,1},var\"#3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})\
    \ at ./array.jl:678\n   [5] collect_similar at ./array.jl:607 [inlined]\n   [6]\
    \ map at ./abstractarray.jl:2072 [inlined]\n   [7] odd_count(::Array{String,1})\
    \ at /tmp/tmpvjplspd1.jl:13\n   [8] top-level scope at /tmp/tmpvjplspd1.jl:21\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpvjplspd1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpvjplspd1.jl:22\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  ArgumentError:\
    \ map(f, s::AbstractString) requires f to return AbstractChar; try map(f, collect(s))\
    \ or a comprehension instead\n  Stacktrace:\n   [1] map(::var\"#4#6\", ::String)\
    \ at ./strings/basic.jl:575\n   [2] (::var\"#3#5\")(::String) at /tmp/tmpvjplspd1.jl:13\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{String,1},\
    \ ::Base.Generator{Array{String,1},var\"#3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1})\
    \ at ./array.jl:678\n   [5] collect_similar at ./array.jl:607 [inlined]\n   [6]\
    \ map at ./abstractarray.jl:2072 [inlined]\n   [7] odd_count(::Array{String,1})\
    \ at /tmp/tmpvjplspd1.jl:13\n   [8] top-level scope at /tmp/tmpvjplspd1.jl:22\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpvjplspd1.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjplspd1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $count in the string $i of the input.\")\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpopbdurdg.jl:30\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"the number of odd elements 4 in the string 1 of the input.\"\
    ] == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpopbdurdg.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpopbdurdg.jl:29\ntest set: Test Failed at /tmp/tmpopbdurdg.jl:31\n\
    \  Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n   Evaluated: [\"the number of odd elements 1 in the string\
    \ 1 of the input.\", \"the number of odd elements 8 in the string 2 of the input.\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpopbdurdg.jl:31\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpopbdurdg.jl:29\ntest set: Test Failed at /tmp/tmpopbdurdg.jl:32\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"the number of odd elements 2 in the string 1 of\
    \ the input.\", \"the number of odd elements 3 in the string 2 of the input.\"\
    , \"the number of odd elements 2 in the string 3 of the input.\"] == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpopbdurdg.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpopbdurdg.jl:29\nTest Summary: | Fail  Total\n\
    test set      |    3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpopbdurdg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    return map(x->\"the number of odd elements \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    n the str\"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"ng \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"\
    \ of the \"*string(length(filter(y->parse(Int,y)%2==1,x)))*\"nput.\",lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    3      3\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    output = []\n    for i in 1:length(lst)\n        count = 0\n        for\
    \ j in 1:length(lst[i])\n            if parse(Int,lst[i][j]) % 2 == 1\n      \
    \          count += 1\n            end\n        end\n        push!(output, \"\
    the number of odd elements $countn the str$countng $count of the $countnput.\"\
    )\n    end\n    return output\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpywrbzcea.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpywrbzcea.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpywrbzcea.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpywrbzcea.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpywrbzcea.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpywrbzcea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpywrbzcea.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpywrbzcea.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpywrbzcea.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpywrbzcea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpywrbzcea.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpywrbzcea.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpywrbzcea.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n    >>>\
    \ odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of\
    \ the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd\
    \ elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"]\n    \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String}\
    \ \n    out = []\n    for (i,s) in enumerate(lst)\n        count = 0\n       \
    \ for c in s\n            if parse(Int,c) % 2 == 1\n                count += 1\n\
    \            end\n        end\n        out = push!(out, \"the number of odd elements\
    \ $countn the str$countng $count of the $countnput.\")\n    end\n    return out\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpixy9i02w.jl:30\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  UndefVarError: countn not defined\n  Stacktrace:\n\
    \   [1] odd_count(::Array{String,1}) at /tmp/tmpixy9i02w.jl:21\n   [2] top-level\
    \ scope at /tmp/tmpixy9i02w.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpixy9i02w.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpixy9i02w.jl:31\n  Test threw exception\n  Expression: candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpixy9i02w.jl:21\n\
    \   [2] top-level scope at /tmp/tmpixy9i02w.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpixy9i02w.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpixy9i02w.jl:32\n  Test threw exception\n  Expression: candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\n  UndefVarError:\
    \ countn not defined\n  Stacktrace:\n   [1] odd_count(::Array{String,1}) at /tmp/tmpixy9i02w.jl:21\n\
    \   [2] top-level scope at /tmp/tmpixy9i02w.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpixy9i02w.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixy9i02w.jl:27\n"
  exit_code: 1
  status: SyntaxError

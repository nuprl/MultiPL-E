name: HumanEval_117_select_words
language: julia
prompt: "\"\"\"Given a string s and a natural number n, you have been tasked to implement\
  \ \n    a function that returns a list of all words from string s that contain exactly\
  \ \n    n consonants, in order these words appear in the string s.\n    If the string\
  \ s is empty then the function should return an empty list.\n    Note: you may assume\
  \ the input string contains only letters and spaces.\n    Examples:\n    select_words(\"\
  Mary had a little lamb\", 4) ==> [\"little\"]\n    select_words(\"Mary had a little\
  \ lamb\", 3) ==> [\"Mary\", \"lamb\"]\n    select_words(\"simple white space\",\
  \ 2) ==> []\n    select_words(\"Hello world\", 4) ==> [\"world\"]\n    select_words(\"\
  Uncle sam\", 3) ==> [\"Uncle\"]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
  Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
  \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
  , 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"\
  ])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\"\
  , 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"\
  c\", \"d\", \"f\"])\nend\n"
completions: ["    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    words_with_n_consonants\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(words_with_n_consonants, word)\n        end\n    end\n    return\
    \ words_with_n_consonants\nend", "    words = split(s, \" \")\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s)\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    return split(s) |> filter(x\
    \ -> length(x) == n)\nend", "    words = split(s)\n    consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n    for\
    \ word in words\n        count = 0\n        for letter in word\n            if\
    \ letter in consonants\n                count += 1\n            end\n        end\n\
    \        if count == n\n            push!(result, word)\n        end\n    end\n\
    \    return result\nend", "    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in \"aeiou\"\n      \
    \          count += 1\n            end\n        end\n        if count == n\n \
    \           push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    selected_words = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(selected_words, word)\n     \
    \   end\n    end\n    return selected_words\nend", "    words = split(s)\n   \
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words = []\n    for word\
    \ in words\n        num_consonants = 0\n        for letter in word\n         \
    \   if letter in consonants\n                num_consonants += 1\n           \
    \ end\n        end\n        if num_consonants == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    z\"]\n    result = []\n    for word in words\n        count = 0\n        for letter\
    \ in word\n            if letter in consonants\n                count += 1\n \
    \           end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n\
    \        num_consonants = 0\n        for letter in word\n            if letter\
    \ in consonants\n                num_consonants += 1\n            end\n      \
    \  end\n        if num_consonants == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # your code here\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    selected_words\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    words = split(s)\n    result = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(result, word)\n   \
    \     end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s, \" \")\n    selected_words = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    selected = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(selected, word)\n        end\n    end\n    return selected\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return []\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    words_with_n_consonants = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(words_with_n_consonants, word)\n        end\n    end\n\
    \    return words_with_n_consonants\nend", "    words = split(s)\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ # Your code here\n    # You can add more functions as you need.\n    # You can\
    \ also change the return type of the function.\n    # You can also change the\
    \ function signature.\n    # You can also add more arguments to the function.\n\
    \    # You can also change the name of the function.\n    # You can also change\
    \ the name of the arguments.\n    # You can also change the order of the arguments.\n\
    \    # You can also change the type of the arguments.\n    # You can also change\
    \ the type of the return value.\n    # You can also change the name of the return\
    \ value.\n    # You can also change the order of the return value.\n    # You\
    \ can also change the type of the return value.\n    # You can also change the\
    \ name of the return value.\n    # You can also change the order of the return\
    \ value.\n    # You can also change the type of the return value.\n    # You can\
    \ also change the name of the return value.\n    # You can also change the order\
    \ of the return value.\n    # You can also change the type of the return value.\n\
    \    # You can also change the name of the return value.\n    # You can also change\
    \ the order of the return value.\n    # You can also change the type of the return\
    \ value.\n    # You can also change the name of the return value.\n    # You can\
    \ also change the order of the return value.\n    # You can also change the type\
    \ of the return value.\n    # You can also change the name of the return value.\n\
    \    # You can also change the order of the return value.\n    # You can also\
    \ change the type of the return value.\n    # You can also change the name of\
    \ the return value.\n    # You can also change the order of the return value.\n\
    \    # You can also change the type of the return value.\n    # You can also change\
    \ the name of the return value.\n    # You can also change the order of the return\
    \ value.\n    # You can also change the type of the return value.\n    # You can\
    \ also change the name of the return value.\n    # You can also change the order\
    \ of the return value.\n    # You can also change the type of the return value.\n\
    \    # You can also change the name of the return", "    words = split(s)\n  \
    \  result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return []\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code here\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   # your code here\nend", "    words = split(s, \" \")\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   # your code here\nend", "    words = split(s)\n    selected_words = []\n \
    \   for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n   \
    \     count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    selected_words\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    selected = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(selected,\
    \ word)\n        end\n    end\n    return selected\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    selected_words = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s)\n    selected = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(selected,\
    \ word)\n        end\n    end\n    return selected\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    return split(s) .|> x -> length(filter(x -> !(x in \"aeiou\"), x))\
    \ == n\nend", "    words = split(s, \" \")\n    result = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(result, word)\n   \
    \     end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    res = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(res, word)\n        end\n    end\n    return res\nend",
  "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    # your code goes here\n    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in\
    \ words\n        count = 0\n        for letter in word\n            if letter\
    \ in consonants\n                count += 1\n            end\n        end\n  \
    \      if count == n\n            push!(result, word)\n        end\n    end\n\
    \    return result\nend", "    words = split(s)\n    selected_words = []\n   \
    \ for word in words\n        if count_consonants(word) == n\n            push!(selected_words,\
    \ word)\n        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    # your code goes here\n    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s, \" \")\n   \
    \ result = []\n    for word in words\n        if count_consonants(word) == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    selected_words =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n\
    \        num_consonants = 0\n        for letter in word\n            if letter\
    \ in consonants\n                num_consonants += 1\n            end\n      \
    \  end\n        if num_consonants == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code goes here\n    words = split(s)\n    consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend", "    words = split(s)\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    result =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(result, word)\n        end\n    end\n    return result\nend", "   \
    \ words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ r\"\\s+\")\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result = []\n  \
    \  for word in words\n        if length(word) == n\n            if all(word[i]\
    \ in consonants for i in 1:n)\n                push!(result, word)\n         \
    \   end\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\nend", "    words = split(s)\n    consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n\
    \    for word in words\n        count = 0\n        for letter in word\n      \
    \      if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend", "    words = split(s)\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    selected_words = []\n    for word in words\n    \
    \    count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s)\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ r\"\\s+\")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    # your code here\n    return\
    \ []\nend", "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in\
    \ words\n        count = 0\n        for letter in word\n            if letter\
    \ in consonants\n                count += 1\n            end\n        end\n  \
    \      if count == n\n            push!(selected_words, word)\n        end\n \
    \   end\n    return selected_words\nend", "    words = split(s)\n    selected_words\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s, \" \")\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s)\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code here\nend", "    words = split(s)\n    consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend",
  "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected, word)\n\
    \        end\n    end\n    return selected\nend", "    words = split(s)\n    selected_words\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected, word)\n\
    \        end\n    end\n    return selected\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   return split(s) |> filter(x -> count_consonants(x) == n)\nend", "    words\
    \ = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    selected_words =\
    \ []\n    for word in words\n        if count_consonants(word) == n\n        \
    \    push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # your code here\n\
    \    return []\nend", "    words = split(s)\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    words = split(s, r\"\\s+\"\
    )\n    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        consonants\
    \ = 0\n        for letter in word\n            if letter in \"bcdfghjklmnpqrstvwxyz\"\
    \n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend", "    words = split(s)\n    result = []\n  \
    \  for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s,\
    \ \" \")\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    s = split(s)\n    words = []\n    for i in s\n        if count_consonants(i)\
    \ == n\n            push!(words, i)\n        end\n    end\n    return words\n\
    end", "    words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s)\n    result = []\n    for word in\
    \ words\n        if count_consonants(word) == n\n            push!(result, word)\n\
    \        end\n    end\n    return result\nend", "    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   # your code here\nend", "    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    # your code goes here\n    words = split(s, \" \")\n    result = []\n\
    \    for word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    words = split(s)\n\
    \    result = []\n    for word in words\n        if count_consonants(word) ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s, \" \")\n    result = []\n    for word in words\n \
    \       if count_consonants(word) == n\n            push!(result, word)\n    \
    \    end\n    end\n    return result\nend", "    words = split(s)\n    consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend", "    # your code here\n\
    \    return []\nend", "    # your code here\n    words = split(s)\n    result\
    \ = []\n    for word in words\n        if count_consonants(word) == n\n      \
    \      push!(result, word)\n        end\n    end\n    return result\nend", " \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ consonants = 0\n        for letter in word\n            if !(letter in \"aeiou\"\
    )\n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend", "    # your code here\nend", "    words = split(s)\n \
    \   consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result = []\n    for word in words\n\
    \        count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end", "    words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend", "    words = split(s)\n\
    \    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    z\"]\n    result = []\n    for word in words\n        count = 0\n        for letter\
    \ in word\n            if letter in consonants\n                count += 1\n \
    \           end\n        end\n        if count == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

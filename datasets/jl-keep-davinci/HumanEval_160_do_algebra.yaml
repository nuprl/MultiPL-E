name: HumanEval_160_do_algebra
language: julia
prompt: "\"\"\"\n    Given two lists operator, and operand. The first list has basic\
  \ algebra operations, and \n    the second list is a list of integers. Use the two\
  \ given lists to build the algebric \n    expression and return the evaluation of\
  \ this expression.\n\n    The basic algebra operations:\n    Addition ( + ) \n \
  \   Subtraction ( - ) \n    Multiplication ( * ) \n    Floor division ( // ) \n\
  \    Exponentiation ( ** ) \n\n    Example:\n    operator['+', '*', '-']\n    array\
  \ = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result = 9\n\n    Note:\n \
  \       The length of operator list is equal to the length of operand list minus\
  \ one.\n        Operand is a list of of non-negative integers.\n        Operator\
  \ list has at least one operator, and operand list has at least two operands.\n\n\
  \    \"\"\"\nfunction do_algebra(operator::Vector{String}, operand::Vector{Int64})::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = do_algebra;\n\t@test(candidate([\"\
  **\", \"*\", \"+\"], [2, 3, 4, 5]) == 37)\n\t@test(candidate([\"+\", \"*\", \"-\"\
  ], [2, 3, 4, 5]) == 9)\n\t@test(candidate([\"//\", \"*\"], [7, 3, 4]) == 8)\nend\n"
completions: ["    # your code here\n    return 0\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result / operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ ^= operand[i+1]\n        end\n    end\n    return result\nend", "    # your\
    \ code here\nend", "    # Your code here\n    return 0\nend", "    # Your code\
    \ here\n    return 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result //= operand[i+1]\n        elseif operator[i] == \"\
    **\"\n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result //= operand[i+1]\n        elseif operator[i] == \"\
    **\"\n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # Your code here\n    # You\
    \ can add some helper functions\n    return 0\nend", "    # Your code here\nend",
  "    # Your code here\n    return 0\nend", "    # YOUR CODE HERE\n    result = operand[1]\n\
    \    for i in 2:length(operand)\n        if operator[i-1] == \"+\"\n         \
    \   result += operand[i]\n        elseif operator[i-1] == \"-\"\n            result\
    \ -= operand[i]\n        elseif operator[i-1] == \"*\"\n            result *=\
    \ operand[i]\n        elseif operator[i-1] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i])\n        elseif operator[i-1] == \"**\"\n            result\
    \ = result^operand[i]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # Your code here\nend", "    result = operand[1]\n    for\
    \ i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # Your code here\nend", " \
    \   # Your code here\nend", "    # Your code here\n    return 0\nend", "    #\
    \ your code here\n    return 0\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 2:length(operand)\n        if operator[i-1]\
    \ == \"+\"\n            result += operand[i]\n        elseif operator[i-1] ==\
    \ \"-\"\n            result -= operand[i]\n        elseif operator[i-1] == \"\
    *\"\n            result *= operand[i]\n        elseif operator[i-1] == \"//\"\n\
    \            result //= operand[i]\n        elseif operator[i-1] == \"**\"\n \
    \           result ^= operand[i]\n        end\n    end\n    return result\nend",
  "    # Your code here\n    return 0\nend", "    result = operand[1]\n    for i in\
    \ 1:length(operator)\n        if operator[i] == \"+\"\n            result += operand[i+1]\n\
    \        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n   \
    \     elseif operator[i] == \"*\"\n            result *= operand[i+1]\n      \
    \  elseif operator[i] == \"//\"\n            result = result \xF7 operand[i+1]\n\
    \        elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n  \
    \      end\n    end\n    return result\nend", "    result = operand[1]\n    for\
    \ i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result ^=\
    \ operand[i+1]\n        end\n    end\n    return result\nend", "    # your code\
    \ goes here\n    return 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result = result ^ operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # YOUR CODE HERE\n    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = div(result, operand[i+1])\n        elseif operator[i] == \"**\"\
    \n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    if length(operator) != length(operand) - 1\n  \
    \      throw(ArgumentError(\"The length of operator list is not equal to the length\
    \ of operand list minus one.\"))\n    end\n    if length(operator) == 0\n    \
    \    throw(ArgumentError(\"Operator list has at least one operator.\"))\n    end\n\
    \    if length(operand) < 2\n        throw(ArgumentError(\"Operand list has at\
    \ least two operands.\"))\n    end\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        else\n            throw(ArgumentError(\"\
    The operator is not valid.\"))\n        end\n    end\n    return result\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # Your code here\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result^operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # your code here\n    return 0\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result ^ operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    \"\"\"\n    Given two lists operator, and operand.\
    \ The first list has basic algebra operations, and \n    the second list is a\
    \ list of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.", "    result = operand[1]\n \
    \   for i in 1:length(operator)\n        if operator[i] == \"+\"\n           \
    \ result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result / operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result ^ operand[i+1]\n        end\n    end\n    return result\nend", "  \
    \  # your code here\n    return 0\nend", "    result = operand[1]\n    for i in\
    \ 1:length(operator)\n        if operator[i] == \"+\"\n            result += operand[i+1]\n\
    \        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n   \
    \     elseif operator[i] == \"*\"\n            result *= operand[i+1]\n      \
    \  elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # Your code here\nend", " \
    \   result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # your code here\nend", "    # your code goes here\n    return\
    \ 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n       \
    \ if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n   \
    \ end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result = result ^ operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # Your code here\nend", " \
    \   result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result =\
    \ result ^ operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result //= operand[i+1]\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # Your code here\nend", "    result = operand[1]\n    for\
    \ i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = div(result, operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n  \
    \      end\n    end\n    return result\nend", "    result = operand[1]\n    for\
    \ i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result =\
    \ result ^ operand[i+1]\n        end\n    end\n    return result\nend", "    #\
    \ your code here\n    return 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = result \xF7 operand[i+1]\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result ^ operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    # Your code here\n    return 0\nend", "    # Your code here\n    # You can\
    \ add some local functions if needed\nend", "    # Your code here\nend", "   \
    \ result = operand[1]\n    for i in 2:length(operand)\n        if operator[i-1]\
    \ == \"+\"\n            result += operand[i]\n        elseif operator[i-1] ==\
    \ \"-\"\n            result -= operand[i]\n        elseif operator[i-1] == \"\
    *\"\n            result *= operand[i]\n        elseif operator[i-1] == \"//\"\n\
    \            result = floor(Int64, result/operand[i])\n        elseif operator[i-1]\
    \ == \"**\"\n            result = result^operand[i]\n        end\n    end\n  \
    \  return result\nend", "    # Your code here\n    return 0\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result //= operand[i+1]\n        elseif operator[i] == \"**\"\n      \
    \      result ^= operand[i+1]\n        end\n    end\n    return result\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # Your code here\n    return 0\nend", "    # Your code here\n\
    \    return 0\nend", "    # YOUR CODE HERE\n    result = operand[1]\n    for i\
    \ in 1:length(operator)\n        if operator[i] == \"+\"\n            result +=\
    \ operand[i+1]\n        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n\
    \        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n   \
    \     elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result ^=\
    \ operand[i+1]\n        end\n    end\n    return result\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result^operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = div(result, operand[i+1])\n        elseif operator[i] == \"**\"\
    \n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    # YOUR CODE HERE\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n   \
    \ end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result //= operand[i+1]\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n   \
    \ end\n    return result\nend", "    # your code here\n    return 0\nend", " \
    \   # Your code here\n    return 0\nend", "    # Your code here\n    return 0\n\
    end", "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # Your code here\n    return 0\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result / operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ ^= operand[i+1]\n        end\n    end\n    return result\nend", "    # your\
    \ code here\n    return 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result = floor(Int64, result ^ operand[i+1])\n\
    \        end\n    end\n    return result\nend", "    result = operand[1]\n   \
    \ for i in 2:length(operand)\n        if operator[i-1] == \"+\"\n            result\
    \ += operand[i]\n        elseif operator[i-1] == \"-\"\n            result -=\
    \ operand[i]\n        elseif operator[i-1] == \"*\"\n            result *= operand[i]\n\
    \        elseif operator[i-1] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i])\n        elseif operator[i-1] == \"**\"\n            result =\
    \ result ^ operand[i]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = div(result, operand[i+1])\n        elseif operator[i] == \"**\"\
    \n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    # YOUR CODE HERE\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\nend", "    result =\
    \ operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"+\"\
    \n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n  \
    \          result -= operand[i+1]\n        elseif operator[i] == \"*\"\n     \
    \       result *= operand[i+1]\n        elseif operator[i] == \"//\"\n       \
    \     result = floor(Int64, result/operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result = result^operand[i+1]\n        end\n    end\n   \
    \ return result\nend", "    # Your code here\n    return 0\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result ^ operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result //= operand[i+1]\n        elseif operator[i] == \"\
    **\"\n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    # YOUR CODE HERE\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result^operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i = 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    # Your code here\n    return 0\nend", "    result = operand[1]\n    for i in\
    \ 1:length(operator)\n        if operator[i] == \"+\"\n            result += operand[i+1]\n\
    \        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n   \
    \     elseif operator[i] == \"*\"\n            result *= operand[i+1]\n      \
    \  elseif operator[i] == \"//\"\n            result //= operand[i+1]\n       \
    \ elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # YOUR CODE HERE\nend", "    result = operand[1]\n    for\
    \ i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = div(result, operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n  \
    \      end\n    end\n    return result\nend", "    # Your code here\n    return\
    \ 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n       \
    \ if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result //= operand[i+1]\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # Your code here\n    return 0\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = div(result,\
    \ operand[i+1])\n        elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result =\
    \ result ^ operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # Your code here\nend", "    # YOUR CODE HERE\n\
    \    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result = result ^ operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = convert(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result ^=\
    \ operand[i+1]\n        end\n    end\n    return result\nend", "    # your code\
    \ here\nend", "    result = operand[1]\n    for i in 1:length(operator)\n    \
    \    if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\nend", "    result =\
    \ operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"+\"\
    \n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n  \
    \          result -= operand[i+1]\n        elseif operator[i] == \"*\"\n     \
    \       result *= operand[i+1]\n        elseif operator[i] == \"//\"\n       \
    \     result = div(result, operand[i+1])\n        elseif operator[i] == \"**\"\
    \n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result ^ operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result = result ^ operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # your code goes here\n \
    \   return 0\nend", "    # Your code here\nend", "    result = operand[1]\n  \
    \  for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = div(result, operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n  \
    \      end\n    end\n    return result\nend", "    # YOUR CODE HERE\n    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result / operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result ^ operand[i+1]\n        end\n    end\n    return result\nend", "  \
    \  result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    # your code here\n    return 0\nend", "    # Your\
    \ code here\n    return 0\nend", "    # Your code here\nend", "    # Your code\
    \ here\nend", "    result = operand[1]\n    for i in 1:length(operator)\n    \
    \    if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = result \xF7 operand[i+1]\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result //= operand[i+1]\n        elseif operator[i] == \"\
    **\"\n            result ^= operand[i+1]\n        end\n    end\n    return result\n\
    end", "    # YOUR CODE HERE\n    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = convert(Int64, result / operand[i+1])\n       \
    \ elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    # You can add some\
    \ local functions if needed\n    # You can also use some global variables if needed\n\
    \    # You can use the built-in functions if needed\n    # You can add some imports\
    \ if needed\n    # You can create some helper functions if needed\n    # You can\
    \ also create some classes if needed\n    # You can also create some exceptions\
    \ if needed\n    # You can also create some enumerations if needed\n    # You\
    \ can also create some traits if needed\n    # You can also create some type aliases\
    \ if needed\n    # You can also create some abstract types if needed\n    # You\
    \ can also create some type unions if needed\n    # You can also create some type\
    \ intersections if needed\n    # You can also create some type parameters if needed\n\
    \    # You can also create some type constructors if needed\n    # You can also\
    \ create some type projections if needed\n    # You can also create some type\
    \ abstractions if needed\n    # You can also create some type lambdas if needed\n\
    \    # You can also create some type applications if needed\n    # You can also\
    \ create some type bounds if needed\n    # You can also create some type variables\
    \ if needed\n    # You can also create some type bounds if needed\n    # You can\
    \ also create some type bounds if needed\n    # You can also create some type\
    \ bounds if needed\n    # You can also create some type bounds if needed\n   \
    \ # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You can also create some type bounds if needed\n\
    \    # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You can also create some type bounds if needed\n\
    \    # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You can also create some type bounds if needed\n\
    \    # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You can also create some type bounds if needed\n\
    \    # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You can also create some type bounds if needed\n\
    \    # You can also create some type bounds if needed\n    # You can also create\
    \ some type bounds if needed\n    # You", "    result = operand[1]\n    for i\
    \ in 1:length(operator)\n        if operator[i] == \"+\"\n            result +=\
    \ operand[i+1]\n        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n\
    \        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n   \
    \     elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    # your code here\n    return\
    \ 0\nend", "    result = operand[1]\n    for i in 1:length(operator)\n       \
    \ if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result / operand[i+1])\n      \
    \  elseif operator[i] == \"**\"\n            result ^= operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\nend", "    # YOUR CODE\
    \ HERE\n    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    result = operand[1]\n    for i in 1:length(operator)\n        if operator[i]\
    \ == \"+\"\n            result += operand[i+1]\n        elseif operator[i] ==\
    \ \"-\"\n            result -= operand[i+1]\n        elseif operator[i] == \"\
    *\"\n            result *= operand[i+1]\n        elseif operator[i] == \"//\"\n\
    \            result = div(result, operand[i+1])\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result / operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result ^ operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # YOUR CODE HERE\n    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result^operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result/operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result^operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = div(result, operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # your code here\nend", "    result =\
    \ operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"+\"\
    \n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n  \
    \          result -= operand[i+1]\n        elseif operator[i] == \"*\"\n     \
    \       result *= operand[i+1]\n        elseif operator[i] == \"//\"\n       \
    \     result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = floor(Int64, result ^ operand[i+1])\n      \
    \  end\n    end\n    return result\nend", "    result = operand[1]\n    for i\
    \ in 1:length(operator)\n        if operator[i] == \"+\"\n            result +=\
    \ operand[i+1]\n        elseif operator[i] == \"-\"\n            result -= operand[i+1]\n\
    \        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n   \
    \     elseif operator[i] == \"//\"\n            result = floor(Int64, result/operand[i+1])\n\
    \        elseif operator[i] == \"**\"\n            result = result^operand[i+1]\n\
    \        end\n    end\n    return result\nend", "    result = operand[1]\n   \
    \ for i in 1:length(operator)\n        if operator[i] == \"+\"\n            result\
    \ += operand[i+1]\n        elseif operator[i] == \"-\"\n            result -=\
    \ operand[i+1]\n        elseif operator[i] == \"*\"\n            result *= operand[i+1]\n\
    \        elseif operator[i] == \"//\"\n            result = floor(Int64, result\
    \ / operand[i+1])\n        elseif operator[i] == \"**\"\n            result ^=\
    \ operand[i+1]\n        end\n    end\n    return result\nend", "    result = operand[1]\n\
    \    for i in 1:length(operator)\n        if operator[i] == \"+\"\n          \
    \  result += operand[i+1]\n        elseif operator[i] == \"-\"\n            result\
    \ -= operand[i+1]\n        elseif operator[i] == \"*\"\n            result *=\
    \ operand[i+1]\n        elseif operator[i] == \"//\"\n            result = floor(Int64,\
    \ result/operand[i+1])\n        elseif operator[i] == \"**\"\n            result\
    \ = result^operand[i+1]\n        end\n    end\n    return result\nend", "    result\
    \ = operand[1]\n    for i in 1:length(operator)\n        if operator[i] == \"\
    +\"\n            result += operand[i+1]\n        elseif operator[i] == \"-\"\n\
    \            result -= operand[i+1]\n        elseif operator[i] == \"*\"\n   \
    \         result *= operand[i+1]\n        elseif operator[i] == \"//\"\n     \
    \       result = floor(Int64, result / operand[i+1])\n        elseif operator[i]\
    \ == \"**\"\n            result = result ^ operand[i+1]\n        end\n    end\n\
    \    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result //= operand[i+1]\n        elseif operator[i] ==\
    \ \"**\"\n            result ^= operand[i+1]\n        end\n    end\n    return\
    \ result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n  \
    \      if operator[i] == \"+\"\n            result += operand[i+1]\n        elseif\
    \ operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif operator[i]\
    \ == \"*\"\n            result *= operand[i+1]\n        elseif operator[i] ==\
    \ \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    result = operand[1]\n    for i in 1:length(operator)\n\
    \        if operator[i] == \"+\"\n            result += operand[i+1]\n       \
    \ elseif operator[i] == \"-\"\n            result -= operand[i+1]\n        elseif\
    \ operator[i] == \"*\"\n            result *= operand[i+1]\n        elseif operator[i]\
    \ == \"//\"\n            result = floor(Int64, result/operand[i+1])\n        elseif\
    \ operator[i] == \"**\"\n            result = result^operand[i+1]\n        end\n\
    \    end\n    return result\nend", "    # Your code here\n    return 0\nend",
  "    # your code here\n    return 0\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_108_count_nums
language: julia
results:
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_hwzau7o.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp_hwzau7o.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hwzau7o.jl:23\ntest set: Test Failed at /tmp/tmp_hwzau7o.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_hwzau7o.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hwzau7o.jl:23\ntest set: Test Failed at /tmp/tmp_hwzau7o.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_hwzau7o.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hwzau7o.jl:23\ntest set: Test Failed at /tmp/tmp_hwzau7o.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_hwzau7o.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hwzau7o.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hwzau7o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppl9a25v5.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppl9a25v5.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9a25v5.jl:23\ntest set: Test Failed at /tmp/tmppl9a25v5.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppl9a25v5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9a25v5.jl:23\ntest set: Test Failed at /tmp/tmppl9a25v5.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppl9a25v5.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9a25v5.jl:23\ntest set: Test Failed at /tmp/tmppl9a25v5.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppl9a25v5.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppl9a25v5.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppl9a25v5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_s0ochf.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmph_s0ochf.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_s0ochf.jl:23\ntest set: Test Failed at /tmp/tmph_s0ochf.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_s0ochf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_s0ochf.jl:23\ntest set: Test Failed at /tmp/tmph_s0ochf.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_s0ochf.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_s0ochf.jl:23\ntest set: Test Failed at /tmp/tmph_s0ochf.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_s0ochf.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_s0ochf.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_s0ochf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvziaql6r.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpvziaql6r.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvziaql6r.jl:23\ntest set: Test Failed at /tmp/tmpvziaql6r.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvziaql6r.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvziaql6r.jl:23\ntest set: Test Failed at /tmp/tmpvziaql6r.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvziaql6r.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvziaql6r.jl:23\ntest set: Test Failed at /tmp/tmpvziaql6r.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvziaql6r.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvziaql6r.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvziaql6r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2_c7nivw.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp2_c7nivw.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2_c7nivw.jl:23\\ntest set: Test Failed at /tmp/tmp2_c7nivw.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2_c7nivw.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2_c7nivw.jl:23\\ntest set: Test Failed at /tmp/tmp2_c7nivw.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2_c7nivw.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2_c7nivw.jl:23\\ntest set: Test Failed at /tmp/tmp2_c7nivw.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2_c7nivw.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2_c7nivw.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpknxaokyn.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpknxaokyn.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknxaokyn.jl:23\\ntest set: Test Failed at /tmp/tmpknxaokyn.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpknxaokyn.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknxaokyn.jl:23\\ntest set: Test Failed at /tmp/tmpknxaokyn.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpknxaokyn.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknxaokyn.jl:23\\ntest set: Test Failed at /tmp/tmpknxaokyn.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpknxaokyn.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpknxaokyn.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt39lpyq3.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpt39lpyq3.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt39lpyq3.jl:23\ntest set: Test Failed at /tmp/tmpt39lpyq3.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt39lpyq3.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt39lpyq3.jl:23\ntest set: Test Failed at /tmp/tmpt39lpyq3.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt39lpyq3.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt39lpyq3.jl:23\ntest set: Test Failed at /tmp/tmpt39lpyq3.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt39lpyq3.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt39lpyq3.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt39lpyq3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdeu8p57s.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpdeu8p57s.jl:18\n   [6] top-level scope at /tmp/tmpdeu8p57s.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpdeu8p57s.jl:18\n   [6] top-level scope at /tmp/tmpdeu8p57s.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpdeu8p57s.jl:18\n   [6] top-level scope at /tmp/tmpdeu8p57s.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpdeu8p57s.jl:18\n   [6] top-level scope at /tmp/tmpdeu8p57s.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpdeu8p57s.jl:18\n   [6] top-level scope at /tmp/tmpdeu8p57s.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpdeu8p57s.jl:18\n\
    \   [6] top-level scope at /tmp/tmpdeu8p57s.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdeu8p57s.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpdeu8p57s.jl:18\n\
    \   [6] top-level scope at /tmp/tmpdeu8p57s.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpdeu8p57s.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdeu8p57s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpthr8atmj.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpthr8atmj.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthr8atmj.jl:23\ntest set: Test Failed at /tmp/tmpthr8atmj.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpthr8atmj.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthr8atmj.jl:23\ntest set: Test Failed at /tmp/tmpthr8atmj.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpthr8atmj.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthr8atmj.jl:23\ntest set: Test Failed at /tmp/tmpthr8atmj.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpthr8atmj.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpthr8atmj.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpthr8atmj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5h6ozi2a.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5h6ozi2a.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h6ozi2a.jl:23\ntest set: Test Failed at /tmp/tmp5h6ozi2a.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5h6ozi2a.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h6ozi2a.jl:23\ntest set: Test Failed at /tmp/tmp5h6ozi2a.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5h6ozi2a.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h6ozi2a.jl:23\ntest set: Test Failed at /tmp/tmp5h6ozi2a.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5h6ozi2a.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5h6ozi2a.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5h6ozi2a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdvrsygek.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpdvrsygek.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdvrsygek.jl:23\\ntest set: Test Failed at /tmp/tmpdvrsygek.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpdvrsygek.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdvrsygek.jl:23\\ntest set: Test Failed at /tmp/tmpdvrsygek.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpdvrsygek.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdvrsygek.jl:23\\ntest set: Test Failed at /tmp/tmpdvrsygek.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpdvrsygek.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdvrsygek.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp85utalga.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp85utalga.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85utalga.jl:26\ntest set: Test Failed at /tmp/tmp85utalga.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp85utalga.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85utalga.jl:26\ntest set: Test Failed at /tmp/tmp85utalga.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp85utalga.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85utalga.jl:26\ntest set: Test Failed at /tmp/tmp85utalga.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp85utalga.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85utalga.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85utalga.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpman2cokq.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpman2cokq.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpman2cokq.jl:23\\ntest set: Test Failed at /tmp/tmpman2cokq.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpman2cokq.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpman2cokq.jl:23\\ntest set: Test Failed at /tmp/tmpman2cokq.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpman2cokq.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpman2cokq.jl:23\\ntest set: Test Failed at /tmp/tmpman2cokq.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpman2cokq.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpman2cokq.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd16v4ty3.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpd16v4ty3.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd16v4ty3.jl:23\\ntest set: Test Failed at /tmp/tmpd16v4ty3.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd16v4ty3.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd16v4ty3.jl:23\\ntest set: Test Failed at /tmp/tmpd16v4ty3.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd16v4ty3.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd16v4ty3.jl:23\\ntest set: Test Failed at /tmp/tmpd16v4ty3.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpd16v4ty3.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd16v4ty3.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_7p0rza0.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp_7p0rza0.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7p0rza0.jl:23\\ntest set: Test Failed at /tmp/tmp_7p0rza0.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7p0rza0.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7p0rza0.jl:23\\ntest set: Test Failed at /tmp/tmp_7p0rza0.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7p0rza0.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7p0rza0.jl:23\\ntest set: Test Failed at /tmp/tmp_7p0rza0.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7p0rza0.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7p0rza0.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5dyp3y4y.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5dyp3y4y.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5dyp3y4y.jl:31\ntest set: Test Failed at /tmp/tmp5dyp3y4y.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5dyp3y4y.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5dyp3y4y.jl:31\ntest set: Test Failed at /tmp/tmp5dyp3y4y.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5dyp3y4y.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5dyp3y4y.jl:31\ntest set: Test Failed at /tmp/tmp5dyp3y4y.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5dyp3y4y.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5dyp3y4y.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dyp3y4y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr2y8z3cp.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpr2y8z3cp.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr2y8z3cp.jl:23\ntest set: Test Failed at /tmp/tmpr2y8z3cp.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr2y8z3cp.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr2y8z3cp.jl:23\ntest set: Test Failed at /tmp/tmpr2y8z3cp.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr2y8z3cp.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr2y8z3cp.jl:23\ntest set: Test Failed at /tmp/tmpr2y8z3cp.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr2y8z3cp.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr2y8z3cp.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2y8z3cp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuuw56ewz.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpuuw56ewz.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuuw56ewz.jl:31\ntest set: Test Failed at /tmp/tmpuuw56ewz.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuuw56ewz.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuuw56ewz.jl:31\ntest set: Test Failed at /tmp/tmpuuw56ewz.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuuw56ewz.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuuw56ewz.jl:31\ntest set: Test Failed at /tmp/tmpuuw56ewz.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuuw56ewz.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuuw56ewz.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuw56ewz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1issz3sy.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp1issz3sy.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1issz3sy.jl:23\ntest set: Test Failed at /tmp/tmp1issz3sy.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1issz3sy.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1issz3sy.jl:23\ntest set: Test Failed at /tmp/tmp1issz3sy.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1issz3sy.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1issz3sy.jl:23\ntest set: Test Failed at /tmp/tmp1issz3sy.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1issz3sy.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1issz3sy.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1issz3sy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz0ihya3f.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpz0ihya3f.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz0ihya3f.jl:26\ntest set: Test Failed at /tmp/tmpz0ihya3f.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz0ihya3f.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz0ihya3f.jl:26\ntest set: Test Failed at /tmp/tmpz0ihya3f.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz0ihya3f.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz0ihya3f.jl:26\ntest set: Test Failed at /tmp/tmpz0ihya3f.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz0ihya3f.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz0ihya3f.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz0ihya3f.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppw7sdo_b.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppw7sdo_b.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppw7sdo_b.jl:23\ntest set: Test Failed at /tmp/tmppw7sdo_b.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppw7sdo_b.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppw7sdo_b.jl:23\ntest set: Test Failed at /tmp/tmppw7sdo_b.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppw7sdo_b.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppw7sdo_b.jl:23\ntest set: Test Failed at /tmp/tmppw7sdo_b.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppw7sdo_b.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppw7sdo_b.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppw7sdo_b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponviri7e.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmponviri7e.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponviri7e.jl:26\ntest set: Test Failed at /tmp/tmponviri7e.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponviri7e.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponviri7e.jl:26\ntest set: Test Failed at /tmp/tmponviri7e.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponviri7e.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponviri7e.jl:26\ntest set: Test Failed at /tmp/tmponviri7e.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponviri7e.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponviri7e.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponviri7e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97532em6.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp97532em6.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97532em6.jl:23\ntest set: Test Failed at /tmp/tmp97532em6.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp97532em6.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97532em6.jl:23\ntest set: Test Failed at /tmp/tmp97532em6.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp97532em6.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97532em6.jl:23\ntest set: Test Failed at /tmp/tmp97532em6.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp97532em6.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97532em6.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97532em6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdhajpp3y.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpdhajpp3y.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhajpp3y.jl:23\ntest set: Test Failed at /tmp/tmpdhajpp3y.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhajpp3y.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhajpp3y.jl:23\ntest set: Test Failed at /tmp/tmpdhajpp3y.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhajpp3y.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhajpp3y.jl:23\ntest set: Test Failed at /tmp/tmpdhajpp3y.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhajpp3y.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhajpp3y.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdhajpp3y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcgt6ptuy.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpcgt6ptuy.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgt6ptuy.jl:23\ntest set: Test Failed at /tmp/tmpcgt6ptuy.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcgt6ptuy.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgt6ptuy.jl:23\ntest set: Test Failed at /tmp/tmpcgt6ptuy.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcgt6ptuy.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgt6ptuy.jl:23\ntest set: Test Failed at /tmp/tmpcgt6ptuy.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcgt6ptuy.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgt6ptuy.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcgt6ptuy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl3onndtb.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpl3onndtb.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3onndtb.jl:23\ntest set: Test Failed at /tmp/tmpl3onndtb.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl3onndtb.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3onndtb.jl:23\ntest set: Test Failed at /tmp/tmpl3onndtb.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl3onndtb.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3onndtb.jl:23\ntest set: Test Failed at /tmp/tmpl3onndtb.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl3onndtb.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3onndtb.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl3onndtb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5w6zrgkd.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5w6zrgkd.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5w6zrgkd.jl:23\ntest set: Test Failed at /tmp/tmp5w6zrgkd.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5w6zrgkd.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5w6zrgkd.jl:23\ntest set: Test Failed at /tmp/tmp5w6zrgkd.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5w6zrgkd.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5w6zrgkd.jl:23\ntest set: Test Failed at /tmp/tmp5w6zrgkd.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5w6zrgkd.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5w6zrgkd.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5w6zrgkd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj_88wjvw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpj_88wjvw.jl:18\n   [6] top-level scope at /tmp/tmpj_88wjvw.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpj_88wjvw.jl:18\n   [6] top-level scope at /tmp/tmpj_88wjvw.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpj_88wjvw.jl:18\n   [6] top-level scope at /tmp/tmpj_88wjvw.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpj_88wjvw.jl:18\n   [6] top-level scope at /tmp/tmpj_88wjvw.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpj_88wjvw.jl:18\n   [6] top-level scope at /tmp/tmpj_88wjvw.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpj_88wjvw.jl:18\n\
    \   [6] top-level scope at /tmp/tmpj_88wjvw.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_88wjvw.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpj_88wjvw.jl:18\n\
    \   [6] top-level scope at /tmp/tmpj_88wjvw.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpj_88wjvw.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_88wjvw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwjrcg935.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpwjrcg935.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwjrcg935.jl:23\\ntest set: Test Failed at /tmp/tmpwjrcg935.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpwjrcg935.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwjrcg935.jl:23\\ntest set: Test Failed at /tmp/tmpwjrcg935.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpwjrcg935.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwjrcg935.jl:23\\ntest set: Test Failed at /tmp/tmpwjrcg935.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpwjrcg935.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwjrcg935.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp985vazyk.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp985vazyk.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp985vazyk.jl:23\ntest set: Test Failed at /tmp/tmp985vazyk.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp985vazyk.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp985vazyk.jl:23\ntest set: Test Failed at /tmp/tmp985vazyk.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp985vazyk.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp985vazyk.jl:23\ntest set: Test Failed at /tmp/tmp985vazyk.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp985vazyk.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp985vazyk.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp985vazyk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcesvwqum.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpcesvwqum.jl:18\n   [6] top-level scope at /tmp/tmpcesvwqum.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcesvwqum.jl:18\n   [6] top-level scope at /tmp/tmpcesvwqum.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcesvwqum.jl:18\n   [6] top-level scope at /tmp/tmpcesvwqum.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcesvwqum.jl:18\n   [6] top-level scope at /tmp/tmpcesvwqum.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcesvwqum.jl:18\n   [6] top-level scope at /tmp/tmpcesvwqum.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpcesvwqum.jl:18\n\
    \   [6] top-level scope at /tmp/tmpcesvwqum.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcesvwqum.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpcesvwqum.jl:18\n\
    \   [6] top-level scope at /tmp/tmpcesvwqum.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcesvwqum.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcesvwqum.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa9lc795t.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpa9lc795t.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa9lc795t.jl:23\ntest set: Test Failed at /tmp/tmpa9lc795t.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa9lc795t.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa9lc795t.jl:23\ntest set: Test Failed at /tmp/tmpa9lc795t.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa9lc795t.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa9lc795t.jl:23\ntest set: Test Failed at /tmp/tmpa9lc795t.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa9lc795t.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa9lc795t.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9lc795t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21v77g2g.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp21v77g2g.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21v77g2g.jl:23\ntest set: Test Failed at /tmp/tmp21v77g2g.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp21v77g2g.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21v77g2g.jl:23\ntest set: Test Failed at /tmp/tmp21v77g2g.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp21v77g2g.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21v77g2g.jl:23\ntest set: Test Failed at /tmp/tmp21v77g2g.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp21v77g2g.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21v77g2g.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21v77g2g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_7wgbl7h.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp_7wgbl7h.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7wgbl7h.jl:23\\ntest set: Test Failed at /tmp/tmp_7wgbl7h.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7wgbl7h.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7wgbl7h.jl:23\\ntest set: Test Failed at /tmp/tmp_7wgbl7h.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7wgbl7h.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7wgbl7h.jl:23\\ntest set: Test Failed at /tmp/tmp_7wgbl7h.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_7wgbl7h.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7wgbl7h.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp_7wgbl7h.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvkbgdd9y.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpvkbgdd9y.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvkbgdd9y.jl:23\ntest set: Test Failed at /tmp/tmpvkbgdd9y.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvkbgdd9y.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvkbgdd9y.jl:23\ntest set: Test Failed at /tmp/tmpvkbgdd9y.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvkbgdd9y.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvkbgdd9y.jl:23\ntest set: Test Failed at /tmp/tmpvkbgdd9y.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvkbgdd9y.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvkbgdd9y.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvkbgdd9y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa1rqyh8c.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpa1rqyh8c.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa1rqyh8c.jl:23\ntest set: Test Failed at /tmp/tmpa1rqyh8c.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa1rqyh8c.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa1rqyh8c.jl:23\ntest set: Test Failed at /tmp/tmpa1rqyh8c.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa1rqyh8c.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa1rqyh8c.jl:23\ntest set: Test Failed at /tmp/tmpa1rqyh8c.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa1rqyh8c.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa1rqyh8c.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa1rqyh8c.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcav5leox.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpcav5leox.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcav5leox.jl:23\ntest set: Test Failed at /tmp/tmpcav5leox.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcav5leox.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcav5leox.jl:23\ntest set: Test Failed at /tmp/tmpcav5leox.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcav5leox.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcav5leox.jl:23\ntest set: Test Failed at /tmp/tmpcav5leox.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcav5leox.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcav5leox.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcav5leox.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i >= 0\n            if sum(digits(i)) > 0\n       \
    \         count += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa6o4th_z.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpa6o4th_z.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa6o4th_z.jl:29\ntest set: Test Failed at /tmp/tmpa6o4th_z.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa6o4th_z.jl:32\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa6o4th_z.jl:29\ntest set: Test Failed at /tmp/tmpa6o4th_z.jl:33\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa6o4th_z.jl:33\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa6o4th_z.jl:29\ntest set: Test Failed at /tmp/tmpa6o4th_z.jl:34\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa6o4th_z.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa6o4th_z.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa6o4th_z.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzoelttva.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpzoelttva.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzoelttva.jl:23\ntest set: Test Failed at /tmp/tmpzoelttva.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzoelttva.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzoelttva.jl:23\ntest set: Test Failed at /tmp/tmpzoelttva.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzoelttva.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzoelttva.jl:23\ntest set: Test Failed at /tmp/tmpzoelttva.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzoelttva.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzoelttva.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzoelttva.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpr12ntigu.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpr12ntigu.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr12ntigu.jl:23\\ntest set: Test Failed at /tmp/tmpr12ntigu.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpr12ntigu.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr12ntigu.jl:23\\ntest set: Test Failed at /tmp/tmpr12ntigu.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpr12ntigu.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr12ntigu.jl:23\\ntest set: Test Failed at /tmp/tmpr12ntigu.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpr12ntigu.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr12ntigu.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgi4gfdc_.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpgi4gfdc_.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgi4gfdc_.jl:23\\ntest set: Test Failed at /tmp/tmpgi4gfdc_.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpgi4gfdc_.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgi4gfdc_.jl:23\\ntest set: Test Failed at /tmp/tmpgi4gfdc_.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpgi4gfdc_.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgi4gfdc_.jl:23\\ntest set: Test Failed at /tmp/tmpgi4gfdc_.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpgi4gfdc_.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgi4gfdc_.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpktk9pyi1.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpktk9pyi1.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpktk9pyi1.jl:23\ntest set: Test Failed at /tmp/tmpktk9pyi1.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpktk9pyi1.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpktk9pyi1.jl:23\ntest set: Test Failed at /tmp/tmpktk9pyi1.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpktk9pyi1.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpktk9pyi1.jl:23\ntest set: Test Failed at /tmp/tmpktk9pyi1.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpktk9pyi1.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpktk9pyi1.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpktk9pyi1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeu3lcfmf.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpeu3lcfmf.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu3lcfmf.jl:23\ntest set: Test Failed at /tmp/tmpeu3lcfmf.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeu3lcfmf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu3lcfmf.jl:23\ntest set: Test Failed at /tmp/tmpeu3lcfmf.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeu3lcfmf.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu3lcfmf.jl:23\ntest set: Test Failed at /tmp/tmpeu3lcfmf.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeu3lcfmf.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu3lcfmf.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeu3lcfmf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponqgw5f9.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmponqgw5f9.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponqgw5f9.jl:23\ntest set: Test Failed at /tmp/tmponqgw5f9.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponqgw5f9.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponqgw5f9.jl:23\ntest set: Test Failed at /tmp/tmponqgw5f9.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponqgw5f9.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponqgw5f9.jl:23\ntest set: Test Failed at /tmp/tmponqgw5f9.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmponqgw5f9.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmponqgw5f9.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponqgw5f9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj5hi7k0h.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpj5hi7k0h.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj5hi7k0h.jl:26\ntest set: Test Failed at /tmp/tmpj5hi7k0h.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj5hi7k0h.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj5hi7k0h.jl:26\ntest set: Test Failed at /tmp/tmpj5hi7k0h.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj5hi7k0h.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj5hi7k0h.jl:26\ntest set: Test Failed at /tmp/tmpj5hi7k0h.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj5hi7k0h.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj5hi7k0h.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj5hi7k0h.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmply4cvq8c.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmply4cvq8c.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmply4cvq8c.jl:26\ntest set: Test Failed at /tmp/tmply4cvq8c.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmply4cvq8c.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmply4cvq8c.jl:26\ntest set: Test Failed at /tmp/tmply4cvq8c.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmply4cvq8c.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmply4cvq8c.jl:26\ntest set: Test Failed at /tmp/tmply4cvq8c.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmply4cvq8c.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmply4cvq8c.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmply4cvq8c.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm24n567n.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpm24n567n.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm24n567n.jl:26\ntest set: Test Failed at /tmp/tmpm24n567n.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm24n567n.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm24n567n.jl:26\ntest set: Test Failed at /tmp/tmpm24n567n.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm24n567n.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm24n567n.jl:26\ntest set: Test Failed at /tmp/tmpm24n567n.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm24n567n.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm24n567n.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm24n567n.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqqin1rch.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpqqin1rch.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqqin1rch.jl:23\\ntest set: Test Failed at /tmp/tmpqqin1rch.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqqin1rch.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqqin1rch.jl:23\\ntest set: Test Failed at /tmp/tmpqqin1rch.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqqin1rch.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqqin1rch.jl:23\\ntest set: Test Failed at /tmp/tmpqqin1rch.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqqin1rch.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqqin1rch.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphd7_9pav.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmphd7_9pav.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphd7_9pav.jl:26\ntest set: Test Failed at /tmp/tmphd7_9pav.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphd7_9pav.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphd7_9pav.jl:26\ntest set: Test Failed at /tmp/tmphd7_9pav.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphd7_9pav.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphd7_9pav.jl:26\ntest set: Test Failed at /tmp/tmphd7_9pav.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphd7_9pav.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphd7_9pav.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd7_9pav.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphzx8ndaq.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmphzx8ndaq.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzx8ndaq.jl:26\ntest set: Test Failed at /tmp/tmphzx8ndaq.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphzx8ndaq.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzx8ndaq.jl:26\ntest set: Test Failed at /tmp/tmphzx8ndaq.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphzx8ndaq.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzx8ndaq.jl:26\ntest set: Test Failed at /tmp/tmphzx8ndaq.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphzx8ndaq.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzx8ndaq.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphzx8ndaq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm0a5i9pw.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpm0a5i9pw.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm0a5i9pw.jl:23\ntest set: Test Failed at /tmp/tmpm0a5i9pw.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm0a5i9pw.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm0a5i9pw.jl:23\ntest set: Test Failed at /tmp/tmpm0a5i9pw.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm0a5i9pw.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm0a5i9pw.jl:23\ntest set: Test Failed at /tmp/tmpm0a5i9pw.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm0a5i9pw.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm0a5i9pw.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm0a5i9pw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknuapedw.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpknuapedw.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknuapedw.jl:23\ntest set: Test Failed at /tmp/tmpknuapedw.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpknuapedw.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknuapedw.jl:23\ntest set: Test Failed at /tmp/tmpknuapedw.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpknuapedw.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknuapedw.jl:23\ntest set: Test Failed at /tmp/tmpknuapedw.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpknuapedw.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpknuapedw.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknuapedw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjyrff8mp.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpjyrff8mp.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyrff8mp.jl:26\ntest set: Test Failed at /tmp/tmpjyrff8mp.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjyrff8mp.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyrff8mp.jl:26\ntest set: Test Failed at /tmp/tmpjyrff8mp.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjyrff8mp.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyrff8mp.jl:26\ntest set: Test Failed at /tmp/tmpjyrff8mp.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjyrff8mp.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyrff8mp.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyrff8mp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmb8vt01t.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpmb8vt01t.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmb8vt01t.jl:23\ntest set: Test Failed at /tmp/tmpmb8vt01t.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmb8vt01t.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmb8vt01t.jl:23\ntest set: Test Failed at /tmp/tmpmb8vt01t.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmb8vt01t.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmb8vt01t.jl:23\ntest set: Test Failed at /tmp/tmpmb8vt01t.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmb8vt01t.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmb8vt01t.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmb8vt01t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg98a4qzv.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpg98a4qzv.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg98a4qzv.jl:23\ntest set: Test Failed at /tmp/tmpg98a4qzv.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg98a4qzv.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg98a4qzv.jl:23\ntest set: Test Failed at /tmp/tmpg98a4qzv.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg98a4qzv.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg98a4qzv.jl:23\ntest set: Test Failed at /tmp/tmpg98a4qzv.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg98a4qzv.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg98a4qzv.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg98a4qzv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59zf0_91.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp59zf0_91.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59zf0_91.jl:23\ntest set: Test Failed at /tmp/tmp59zf0_91.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp59zf0_91.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59zf0_91.jl:23\ntest set: Test Failed at /tmp/tmp59zf0_91.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp59zf0_91.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59zf0_91.jl:23\ntest set: Test Failed at /tmp/tmp59zf0_91.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp59zf0_91.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59zf0_91.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59zf0_91.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpniy54e51.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([-1, -2, 0]) == 0\\n  UndefVarError: sum_digits\
    \ not defined\\n  Stacktrace:\\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\\
    n   [2] top-level scope at /tmp/tmpniy54e51.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:26\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmpniy54e51.jl:26\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:27\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmpniy54e51.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:28\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmpniy54e51.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:29\\n  Test threw exception\\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmpniy54e51.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:30\\n  Test threw exception\\n  Expression: candidate([0,\
    \ 1]) == 1\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\n   [1]\
    \ count_nums(::Array{Int64,1}) at /tmp/tmpniy54e51.jl:13\\n   [2] top-level scope\
    \ at /tmp/tmpniy54e51.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpniy54e51.jl:31\\n  Test threw exception\\n  Expression: candidate([1])\
    \ == 1\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpniy54e51.jl:13\\n   [2] top-level scope at /tmp/tmpniy54e51.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpniy54e51.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkb2_n1gh.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpkb2_n1gh.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb2_n1gh.jl:23\ntest set: Test Failed at /tmp/tmpkb2_n1gh.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkb2_n1gh.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb2_n1gh.jl:23\ntest set: Test Failed at /tmp/tmpkb2_n1gh.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkb2_n1gh.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb2_n1gh.jl:23\ntest set: Test Failed at /tmp/tmpkb2_n1gh.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkb2_n1gh.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb2_n1gh.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkb2_n1gh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3z0wowcc.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3z0wowcc.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3z0wowcc.jl:23\\ntest set: Test Failed at /tmp/tmp3z0wowcc.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3z0wowcc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3z0wowcc.jl:23\\ntest set: Test Failed at /tmp/tmp3z0wowcc.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3z0wowcc.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3z0wowcc.jl:23\\ntest set: Test Failed at /tmp/tmp3z0wowcc.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3z0wowcc.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3z0wowcc.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i \xF7 10\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi0h69bvq.jl:29\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 3 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpi0h69bvq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi0h69bvq.jl:27\ntest set: Test Failed at /tmp/tmpi0h69bvq.jl:30\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 18 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi0h69bvq.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi0h69bvq.jl:27\ntest set: Test Failed at /tmp/tmpi0h69bvq.jl:31\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 28 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi0h69bvq.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi0h69bvq.jl:27\ntest set: Test Failed at /tmp/tmpi0h69bvq.jl:32\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 28 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi0h69bvq.jl:32\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi0h69bvq.jl:27\ntest set: Test Failed at /tmp/tmpi0h69bvq.jl:33\n\
    \  Expression: candidate([12, 23, 34, -45, -56, 0]) == 5\n   Evaluated: 35 ==\
    \ 5\nStacktrace:\n [1] top-level scope at /tmp/tmpi0h69bvq.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi0h69bvq.jl:27\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     5      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi0h69bvq.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi2nym8_q.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpi2nym8_q.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2nym8_q.jl:23\\ntest set: Test Failed at /tmp/tmpi2nym8_q.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi2nym8_q.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2nym8_q.jl:23\\ntest set: Test Failed at /tmp/tmpi2nym8_q.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi2nym8_q.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2nym8_q.jl:23\\ntest set: Test Failed at /tmp/tmpi2nym8_q.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpi2nym8_q.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi2nym8_q.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv2s5z9sp.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpv2s5z9sp.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2s5z9sp.jl:26\ntest set: Test Failed at /tmp/tmpv2s5z9sp.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv2s5z9sp.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2s5z9sp.jl:26\ntest set: Test Failed at /tmp/tmpv2s5z9sp.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv2s5z9sp.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2s5z9sp.jl:26\ntest set: Test Failed at /tmp/tmpv2s5z9sp.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv2s5z9sp.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2s5z9sp.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv2s5z9sp.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp6iemwgy.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpp6iemwgy.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp6iemwgy.jl:23\ntest set: Test Failed at /tmp/tmpp6iemwgy.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp6iemwgy.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp6iemwgy.jl:23\ntest set: Test Failed at /tmp/tmpp6iemwgy.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp6iemwgy.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp6iemwgy.jl:23\ntest set: Test Failed at /tmp/tmpp6iemwgy.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp6iemwgy.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp6iemwgy.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp6iemwgy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppgy5bg0j.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppgy5bg0j.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppgy5bg0j.jl:23\ntest set: Test Failed at /tmp/tmppgy5bg0j.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppgy5bg0j.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppgy5bg0j.jl:23\ntest set: Test Failed at /tmp/tmppgy5bg0j.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppgy5bg0j.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppgy5bg0j.jl:23\ntest set: Test Failed at /tmp/tmppgy5bg0j.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppgy5bg0j.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppgy5bg0j.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppgy5bg0j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptq3wr8rv.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmptq3wr8rv.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptq3wr8rv.jl:23\ntest set: Test Failed at /tmp/tmptq3wr8rv.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptq3wr8rv.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptq3wr8rv.jl:23\ntest set: Test Failed at /tmp/tmptq3wr8rv.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptq3wr8rv.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptq3wr8rv.jl:23\ntest set: Test Failed at /tmp/tmptq3wr8rv.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptq3wr8rv.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptq3wr8rv.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptq3wr8rv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsp5hayx5.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpsp5hayx5.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsp5hayx5.jl:31\ntest set: Test Failed at /tmp/tmpsp5hayx5.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsp5hayx5.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsp5hayx5.jl:31\ntest set: Test Failed at /tmp/tmpsp5hayx5.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsp5hayx5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsp5hayx5.jl:31\ntest set: Test Failed at /tmp/tmpsp5hayx5.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsp5hayx5.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsp5hayx5.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsp5hayx5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdzs6btmq.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpdzs6btmq.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzs6btmq.jl:23\ntest set: Test Failed at /tmp/tmpdzs6btmq.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzs6btmq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzs6btmq.jl:23\ntest set: Test Failed at /tmp/tmpdzs6btmq.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzs6btmq.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzs6btmq.jl:23\ntest set: Test Failed at /tmp/tmpdzs6btmq.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdzs6btmq.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdzs6btmq.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdzs6btmq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzrnpeprz.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpzrnpeprz.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzrnpeprz.jl:23\ntest set: Test Failed at /tmp/tmpzrnpeprz.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzrnpeprz.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzrnpeprz.jl:23\ntest set: Test Failed at /tmp/tmpzrnpeprz.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzrnpeprz.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzrnpeprz.jl:23\ntest set: Test Failed at /tmp/tmpzrnpeprz.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzrnpeprz.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzrnpeprz.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzrnpeprz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn8vfkijm.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpn8vfkijm.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn8vfkijm.jl:26\ntest set: Test Failed at /tmp/tmpn8vfkijm.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn8vfkijm.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn8vfkijm.jl:26\ntest set: Test Failed at /tmp/tmpn8vfkijm.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn8vfkijm.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn8vfkijm.jl:26\ntest set: Test Failed at /tmp/tmpn8vfkijm.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn8vfkijm.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn8vfkijm.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8vfkijm.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8uxuamv9.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp8uxuamv9.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8uxuamv9.jl:23\\ntest set: Test Failed at /tmp/tmp8uxuamv9.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8uxuamv9.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8uxuamv9.jl:23\\ntest set: Test Failed at /tmp/tmp8uxuamv9.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8uxuamv9.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8uxuamv9.jl:23\\ntest set: Test Failed at /tmp/tmp8uxuamv9.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8uxuamv9.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8uxuamv9.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqbtg81st.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqbtg81st.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbtg81st.jl:23\ntest set: Test Failed at /tmp/tmpqbtg81st.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbtg81st.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbtg81st.jl:23\ntest set: Test Failed at /tmp/tmpqbtg81st.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbtg81st.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbtg81st.jl:23\ntest set: Test Failed at /tmp/tmpqbtg81st.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbtg81st.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbtg81st.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbtg81st.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqud3b4ny.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqud3b4ny.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqud3b4ny.jl:23\ntest set: Test Failed at /tmp/tmpqud3b4ny.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqud3b4ny.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqud3b4ny.jl:23\ntest set: Test Failed at /tmp/tmpqud3b4ny.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqud3b4ny.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqud3b4ny.jl:23\ntest set: Test Failed at /tmp/tmpqud3b4ny.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqud3b4ny.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqud3b4ny.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqud3b4ny.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5wlgjxl.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpr5wlgjxl.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wlgjxl.jl:23\ntest set: Test Failed at /tmp/tmpr5wlgjxl.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wlgjxl.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wlgjxl.jl:23\ntest set: Test Failed at /tmp/tmpr5wlgjxl.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wlgjxl.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wlgjxl.jl:23\ntest set: Test Failed at /tmp/tmpr5wlgjxl.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5wlgjxl.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5wlgjxl.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5wlgjxl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdk2jlr5w.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpdk2jlr5w.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdk2jlr5w.jl:23\ntest set: Test Failed at /tmp/tmpdk2jlr5w.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdk2jlr5w.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdk2jlr5w.jl:23\ntest set: Test Failed at /tmp/tmpdk2jlr5w.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdk2jlr5w.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdk2jlr5w.jl:23\ntest set: Test Failed at /tmp/tmpdk2jlr5w.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdk2jlr5w.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdk2jlr5w.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdk2jlr5w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpou5c40zt.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpou5c40zt.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpou5c40zt.jl:23\ntest set: Test Failed at /tmp/tmpou5c40zt.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpou5c40zt.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpou5c40zt.jl:23\ntest set: Test Failed at /tmp/tmpou5c40zt.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpou5c40zt.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpou5c40zt.jl:23\ntest set: Test Failed at /tmp/tmpou5c40zt.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpou5c40zt.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpou5c40zt.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpou5c40zt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpshi5a59w.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpshi5a59w.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshi5a59w.jl:23\ntest set: Test Failed at /tmp/tmpshi5a59w.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpshi5a59w.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshi5a59w.jl:23\ntest set: Test Failed at /tmp/tmpshi5a59w.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpshi5a59w.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshi5a59w.jl:23\ntest set: Test Failed at /tmp/tmpshi5a59w.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpshi5a59w.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpshi5a59w.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpshi5a59w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxy_ig92h.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpxy_ig92h.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxy_ig92h.jl:23\ntest set: Test Failed at /tmp/tmpxy_ig92h.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxy_ig92h.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxy_ig92h.jl:23\ntest set: Test Failed at /tmp/tmpxy_ig92h.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxy_ig92h.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxy_ig92h.jl:23\ntest set: Test Failed at /tmp/tmpxy_ig92h.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxy_ig92h.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxy_ig92h.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxy_ig92h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp12ejh9ms.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp12ejh9ms.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12ejh9ms.jl:23\ntest set: Test Failed at /tmp/tmp12ejh9ms.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12ejh9ms.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12ejh9ms.jl:23\ntest set: Test Failed at /tmp/tmp12ejh9ms.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12ejh9ms.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12ejh9ms.jl:23\ntest set: Test Failed at /tmp/tmp12ejh9ms.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12ejh9ms.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12ejh9ms.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12ejh9ms.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp56qnch00.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp56qnch00.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp56qnch00.jl:23\ntest set: Test Failed at /tmp/tmp56qnch00.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp56qnch00.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp56qnch00.jl:23\ntest set: Test Failed at /tmp/tmp56qnch00.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp56qnch00.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp56qnch00.jl:23\ntest set: Test Failed at /tmp/tmp56qnch00.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp56qnch00.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp56qnch00.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp56qnch00.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5x2cwty6.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5x2cwty6.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5x2cwty6.jl:31\ntest set: Test Failed at /tmp/tmp5x2cwty6.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5x2cwty6.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5x2cwty6.jl:31\ntest set: Test Failed at /tmp/tmp5x2cwty6.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5x2cwty6.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5x2cwty6.jl:31\ntest set: Test Failed at /tmp/tmp5x2cwty6.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5x2cwty6.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5x2cwty6.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5x2cwty6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpggpqzb9y.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpggpqzb9y.jl:18\n   [6] top-level scope at /tmp/tmpggpqzb9y.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpggpqzb9y.jl:18\n   [6] top-level scope at /tmp/tmpggpqzb9y.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpggpqzb9y.jl:18\n   [6] top-level scope at /tmp/tmpggpqzb9y.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpggpqzb9y.jl:18\n   [6] top-level scope at /tmp/tmpggpqzb9y.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpggpqzb9y.jl:18\n   [6] top-level scope at /tmp/tmpggpqzb9y.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpggpqzb9y.jl:18\n\
    \   [6] top-level scope at /tmp/tmpggpqzb9y.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpggpqzb9y.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpggpqzb9y.jl:18\n\
    \   [6] top-level scope at /tmp/tmpggpqzb9y.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpggpqzb9y.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggpqzb9y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsinym968.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate([-1, -2, 0]) == 0\\n  OverflowError: 10\
    \ * 1000000000000000000 overflowed for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\\
    n   [4] rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:33\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:34\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\\
    n   [4] rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:34\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:35\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\\
    n   [4] rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:35\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:36\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\\
    n   [4] rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:36\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:37\\n  Test threw exception\\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\\n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\\
    n   [4] rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:37\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:38\\n  Test threw exception\\n  Expression: candidate([0,\
    \ 1]) == 1\\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\\\
    n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288 [inlined]\\n  \
    \ [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:38\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsinym968.jl:39\\n  Test threw exception\\n  Expression: candidate([1])\
    \ == 1\\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\\\
    n  Stacktrace:\\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\\n   [2] checked_mul at ./checked.jl:288 [inlined]\\n  \
    \ [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpsinym968.jl:18\\n   [6] top-level scope at /tmp/tmpsinym968.jl:39\\\
    n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [8] top-level scope at /tmp/tmpsinym968.jl:31\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i // 10\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpobjokotd.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpobjokotd.jl:17\n   [6] top-level scope at /tmp/tmpobjokotd.jl:29\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:30\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpobjokotd.jl:17\n   [6] top-level scope at /tmp/tmpobjokotd.jl:30\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:31\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpobjokotd.jl:17\n   [6] top-level scope at /tmp/tmpobjokotd.jl:31\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:32\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpobjokotd.jl:17\n   [6] top-level scope at /tmp/tmpobjokotd.jl:32\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:33\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpobjokotd.jl:17\n   [6] top-level scope at /tmp/tmpobjokotd.jl:33\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:34\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpobjokotd.jl:17\n\
    \   [6] top-level scope at /tmp/tmpobjokotd.jl:34\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpobjokotd.jl:35\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpobjokotd.jl:17\n\
    \   [6] top-level scope at /tmp/tmpobjokotd.jl:35\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpobjokotd.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobjokotd.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt8k98qdz.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpt8k98qdz.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt8k98qdz.jl:23\ntest set: Test Failed at /tmp/tmpt8k98qdz.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt8k98qdz.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt8k98qdz.jl:23\ntest set: Test Failed at /tmp/tmpt8k98qdz.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt8k98qdz.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt8k98qdz.jl:23\ntest set: Test Failed at /tmp/tmpt8k98qdz.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt8k98qdz.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt8k98qdz.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8k98qdz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0fs64wtv.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate([-1, -2, 0]) == 0\\n  UndefVarError: sum_digits\
    \ not defined\\n  Stacktrace:\\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\\
    n   [2] top-level scope at /tmp/tmp0fs64wtv.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:26\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmp0fs64wtv.jl:26\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:27\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmp0fs64wtv.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:28\\n  Test threw exception\\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmp0fs64wtv.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:29\\n  Test threw exception\\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\\
    n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level\
    \ scope at /tmp/tmp0fs64wtv.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:30\\n  Test threw exception\\n  Expression: candidate([0,\
    \ 1]) == 1\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\n   [1]\
    \ count_nums(::Array{Int64,1}) at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level scope\
    \ at /tmp/tmp0fs64wtv.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fs64wtv.jl:31\\n  Test threw exception\\n  Expression: candidate([1])\
    \ == 1\\n  UndefVarError: sum_digits not defined\\n  Stacktrace:\\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp0fs64wtv.jl:13\\n   [2] top-level scope at /tmp/tmp0fs64wtv.jl:31\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fs64wtv.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfk19oue6.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpfk19oue6.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfk19oue6.jl:26\ntest set: Test Failed at /tmp/tmpfk19oue6.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfk19oue6.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfk19oue6.jl:26\ntest set: Test Failed at /tmp/tmpfk19oue6.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfk19oue6.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfk19oue6.jl:26\ntest set: Test Failed at /tmp/tmpfk19oue6.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfk19oue6.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfk19oue6.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfk19oue6.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7xpx38bh.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmp7xpx38bh.jl:13\n\
    \   [2] top-level scope at /tmp/tmp7xpx38bh.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:26\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp7xpx38bh.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:27\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp7xpx38bh.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:28\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp7xpx38bh.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:29\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level\
    \ scope at /tmp/tmp7xpx38bh.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:30\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level scope at /tmp/tmp7xpx38bh.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xpx38bh.jl:31\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp7xpx38bh.jl:13\n   [2] top-level scope at /tmp/tmp7xpx38bh.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xpx38bh.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xpx38bh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpibs8g_9y.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpibs8g_9y.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibs8g_9y.jl:23\ntest set: Test Failed at /tmp/tmpibs8g_9y.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibs8g_9y.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibs8g_9y.jl:23\ntest set: Test Failed at /tmp/tmpibs8g_9y.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibs8g_9y.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibs8g_9y.jl:23\ntest set: Test Failed at /tmp/tmpibs8g_9y.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpibs8g_9y.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpibs8g_9y.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibs8g_9y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqbonyqbi.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqbonyqbi.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbonyqbi.jl:23\ntest set: Test Failed at /tmp/tmpqbonyqbi.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbonyqbi.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbonyqbi.jl:23\ntest set: Test Failed at /tmp/tmpqbonyqbi.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbonyqbi.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbonyqbi.jl:23\ntest set: Test Failed at /tmp/tmpqbonyqbi.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqbonyqbi.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqbonyqbi.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbonyqbi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpef6m6tdi.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpef6m6tdi.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpef6m6tdi.jl:23\ntest set: Test Failed at /tmp/tmpef6m6tdi.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpef6m6tdi.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpef6m6tdi.jl:23\ntest set: Test Failed at /tmp/tmpef6m6tdi.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpef6m6tdi.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpef6m6tdi.jl:23\ntest set: Test Failed at /tmp/tmpef6m6tdi.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpef6m6tdi.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpef6m6tdi.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpef6m6tdi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp917zc5w4.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp917zc5w4.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp917zc5w4.jl:23\\ntest set: Test Failed at /tmp/tmp917zc5w4.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp917zc5w4.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp917zc5w4.jl:23\\ntest set: Test Failed at /tmp/tmp917zc5w4.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp917zc5w4.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp917zc5w4.jl:23\\ntest set: Test Failed at /tmp/tmp917zc5w4.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp917zc5w4.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp917zc5w4.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpstjajmgc.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpstjajmgc.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpstjajmgc.jl:23\\ntest set: Test Failed at /tmp/tmpstjajmgc.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpstjajmgc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpstjajmgc.jl:23\\ntest set: Test Failed at /tmp/tmpstjajmgc.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpstjajmgc.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpstjajmgc.jl:23\\ntest set: Test Failed at /tmp/tmpstjajmgc.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpstjajmgc.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpstjajmgc.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpstjajmgc.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp83kl3o95.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp83kl3o95.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp83kl3o95.jl:23\ntest set: Test Failed at /tmp/tmp83kl3o95.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp83kl3o95.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp83kl3o95.jl:23\ntest set: Test Failed at /tmp/tmp83kl3o95.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp83kl3o95.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp83kl3o95.jl:23\ntest set: Test Failed at /tmp/tmp83kl3o95.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp83kl3o95.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp83kl3o95.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp83kl3o95.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnubn58vg.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpnubn58vg.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnubn58vg.jl:23\ntest set: Test Failed at /tmp/tmpnubn58vg.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnubn58vg.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnubn58vg.jl:23\ntest set: Test Failed at /tmp/tmpnubn58vg.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnubn58vg.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnubn58vg.jl:23\ntest set: Test Failed at /tmp/tmpnubn58vg.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnubn58vg.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnubn58vg.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnubn58vg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_1wbfeed.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp_1wbfeed.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1wbfeed.jl:23\\ntest set: Test Failed at /tmp/tmp_1wbfeed.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_1wbfeed.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1wbfeed.jl:23\\ntest set: Test Failed at /tmp/tmp_1wbfeed.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_1wbfeed.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1wbfeed.jl:23\\ntest set: Test Failed at /tmp/tmp_1wbfeed.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_1wbfeed.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_1wbfeed.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdhu9zjl7.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpdhu9zjl7.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhu9zjl7.jl:23\ntest set: Test Failed at /tmp/tmpdhu9zjl7.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhu9zjl7.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhu9zjl7.jl:23\ntest set: Test Failed at /tmp/tmpdhu9zjl7.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhu9zjl7.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhu9zjl7.jl:23\ntest set: Test Failed at /tmp/tmpdhu9zjl7.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdhu9zjl7.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdhu9zjl7.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdhu9zjl7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpngv31o0n.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpngv31o0n.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpngv31o0n.jl:23\ntest set: Test Failed at /tmp/tmpngv31o0n.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpngv31o0n.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpngv31o0n.jl:23\ntest set: Test Failed at /tmp/tmpngv31o0n.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpngv31o0n.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpngv31o0n.jl:23\ntest set: Test Failed at /tmp/tmpngv31o0n.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpngv31o0n.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpngv31o0n.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngv31o0n.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpky6b9dyw.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpky6b9dyw.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky6b9dyw.jl:26\ntest set: Test Failed at /tmp/tmpky6b9dyw.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky6b9dyw.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky6b9dyw.jl:26\ntest set: Test Failed at /tmp/tmpky6b9dyw.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky6b9dyw.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky6b9dyw.jl:26\ntest set: Test Failed at /tmp/tmpky6b9dyw.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky6b9dyw.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky6b9dyw.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpky6b9dyw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpguu5l4em.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpguu5l4em.jl:13\n\
    \   [2] top-level scope at /tmp/tmpguu5l4em.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:26\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpguu5l4em.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpguu5l4em.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:27\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpguu5l4em.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpguu5l4em.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:28\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpguu5l4em.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpguu5l4em.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:29\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpguu5l4em.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpguu5l4em.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:30\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpguu5l4em.jl:13\n   [2] top-level scope at /tmp/tmpguu5l4em.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpguu5l4em.jl:31\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpguu5l4em.jl:13\n   [2] top-level scope at /tmp/tmpguu5l4em.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpguu5l4em.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpguu5l4em.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqk4ce696.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqk4ce696.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqk4ce696.jl:23\ntest set: Test Failed at /tmp/tmpqk4ce696.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqk4ce696.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqk4ce696.jl:23\ntest set: Test Failed at /tmp/tmpqk4ce696.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqk4ce696.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqk4ce696.jl:23\ntest set: Test Failed at /tmp/tmpqk4ce696.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqk4ce696.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqk4ce696.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqk4ce696.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbb9cvbp0.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpbb9cvbp0.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbb9cvbp0.jl:23\ntest set: Test Failed at /tmp/tmpbb9cvbp0.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbb9cvbp0.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbb9cvbp0.jl:23\ntest set: Test Failed at /tmp/tmpbb9cvbp0.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbb9cvbp0.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbb9cvbp0.jl:23\ntest set: Test Failed at /tmp/tmpbb9cvbp0.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbb9cvbp0.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbb9cvbp0.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbb9cvbp0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43zysj04.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp43zysj04.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp43zysj04.jl:23\ntest set: Test Failed at /tmp/tmp43zysj04.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp43zysj04.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp43zysj04.jl:23\ntest set: Test Failed at /tmp/tmp43zysj04.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp43zysj04.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp43zysj04.jl:23\ntest set: Test Failed at /tmp/tmp43zysj04.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp43zysj04.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp43zysj04.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43zysj04.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz3v5fld9.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpz3v5fld9.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3v5fld9.jl:23\ntest set: Test Failed at /tmp/tmpz3v5fld9.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3v5fld9.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3v5fld9.jl:23\ntest set: Test Failed at /tmp/tmpz3v5fld9.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3v5fld9.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3v5fld9.jl:23\ntest set: Test Failed at /tmp/tmpz3v5fld9.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpz3v5fld9.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3v5fld9.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz3v5fld9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6td5o9a.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpq6td5o9a.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6td5o9a.jl:23\ntest set: Test Failed at /tmp/tmpq6td5o9a.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq6td5o9a.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6td5o9a.jl:23\ntest set: Test Failed at /tmp/tmpq6td5o9a.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq6td5o9a.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6td5o9a.jl:23\ntest set: Test Failed at /tmp/tmpq6td5o9a.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq6td5o9a.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6td5o9a.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6td5o9a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp933iubp8.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp933iubp8.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp933iubp8.jl:23\ntest set: Test Failed at /tmp/tmp933iubp8.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp933iubp8.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp933iubp8.jl:23\ntest set: Test Failed at /tmp/tmp933iubp8.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp933iubp8.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp933iubp8.jl:23\ntest set: Test Failed at /tmp/tmp933iubp8.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp933iubp8.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp933iubp8.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp933iubp8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcxecgs4a.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpcxecgs4a.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcxecgs4a.jl:23\\ntest set: Test Failed at /tmp/tmpcxecgs4a.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcxecgs4a.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcxecgs4a.jl:23\\ntest set: Test Failed at /tmp/tmpcxecgs4a.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcxecgs4a.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcxecgs4a.jl:23\\ntest set: Test Failed at /tmp/tmpcxecgs4a.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcxecgs4a.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcxecgs4a.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq75m_i86.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpq75m_i86.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq75m_i86.jl:23\ntest set: Test Failed at /tmp/tmpq75m_i86.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq75m_i86.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq75m_i86.jl:23\ntest set: Test Failed at /tmp/tmpq75m_i86.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq75m_i86.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq75m_i86.jl:23\ntest set: Test Failed at /tmp/tmpq75m_i86.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq75m_i86.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq75m_i86.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq75m_i86.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2umgwud1.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp2umgwud1.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2umgwud1.jl:23\ntest set: Test Failed at /tmp/tmp2umgwud1.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2umgwud1.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2umgwud1.jl:23\ntest set: Test Failed at /tmp/tmp2umgwud1.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2umgwud1.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2umgwud1.jl:23\ntest set: Test Failed at /tmp/tmp2umgwud1.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2umgwud1.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2umgwud1.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2umgwud1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i >= 0\n            if sum(digits(i)) > 0\n       \
    \         count += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyv_kwfpb.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpyv_kwfpb.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyv_kwfpb.jl:29\ntest set: Test Failed at /tmp/tmpyv_kwfpb.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyv_kwfpb.jl:32\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyv_kwfpb.jl:29\ntest set: Test Failed at /tmp/tmpyv_kwfpb.jl:33\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyv_kwfpb.jl:33\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyv_kwfpb.jl:29\ntest set: Test Failed at /tmp/tmpyv_kwfpb.jl:34\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyv_kwfpb.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyv_kwfpb.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyv_kwfpb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoy55oyo_.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpoy55oyo_.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoy55oyo_.jl:23\ntest set: Test Failed at /tmp/tmpoy55oyo_.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoy55oyo_.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoy55oyo_.jl:23\ntest set: Test Failed at /tmp/tmpoy55oyo_.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoy55oyo_.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoy55oyo_.jl:23\ntest set: Test Failed at /tmp/tmpoy55oyo_.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoy55oyo_.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoy55oyo_.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoy55oyo_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagvo479y.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpagvo479y.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpagvo479y.jl:26\ntest set: Test Failed at /tmp/tmpagvo479y.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpagvo479y.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpagvo479y.jl:26\ntest set: Test Failed at /tmp/tmpagvo479y.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpagvo479y.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpagvo479y.jl:26\ntest set: Test Failed at /tmp/tmpagvo479y.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpagvo479y.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpagvo479y.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagvo479y.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0z9ijs3e.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp0z9ijs3e.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z9ijs3e.jl:26\ntest set: Test Failed at /tmp/tmp0z9ijs3e.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0z9ijs3e.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z9ijs3e.jl:26\ntest set: Test Failed at /tmp/tmp0z9ijs3e.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0z9ijs3e.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z9ijs3e.jl:26\ntest set: Test Failed at /tmp/tmp0z9ijs3e.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0z9ijs3e.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z9ijs3e.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0z9ijs3e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplnceqpup.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmplnceqpup.jl:13\n\
    \   [2] top-level scope at /tmp/tmplnceqpup.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:26\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmplnceqpup.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplnceqpup.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:27\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmplnceqpup.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplnceqpup.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:28\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmplnceqpup.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplnceqpup.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:29\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmplnceqpup.jl:13\n   [2] top-level\
    \ scope at /tmp/tmplnceqpup.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:30\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmplnceqpup.jl:13\n   [2] top-level scope at /tmp/tmplnceqpup.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmplnceqpup.jl:31\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmplnceqpup.jl:13\n   [2] top-level scope at /tmp/tmplnceqpup.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnceqpup.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplnceqpup.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = div(i,\
    \ 10)\n        end\n        if sum > 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyqf0b48l.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpyqf0b48l.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqf0b48l.jl:31\ntest set: Test Failed at /tmp/tmpyqf0b48l.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyqf0b48l.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqf0b48l.jl:31\ntest set: Test Failed at /tmp/tmpyqf0b48l.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyqf0b48l.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqf0b48l.jl:31\ntest set: Test Failed at /tmp/tmpyqf0b48l.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyqf0b48l.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqf0b48l.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyqf0b48l.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph7wieqyl.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmph7wieqyl.jl:18\n   [6] top-level scope at /tmp/tmph7wieqyl.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmph7wieqyl.jl:18\n   [6] top-level scope at /tmp/tmph7wieqyl.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmph7wieqyl.jl:18\n   [6] top-level scope at /tmp/tmph7wieqyl.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmph7wieqyl.jl:18\n   [6] top-level scope at /tmp/tmph7wieqyl.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmph7wieqyl.jl:18\n   [6] top-level scope at /tmp/tmph7wieqyl.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmph7wieqyl.jl:18\n\
    \   [6] top-level scope at /tmp/tmph7wieqyl.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmph7wieqyl.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmph7wieqyl.jl:18\n\
    \   [6] top-level scope at /tmp/tmph7wieqyl.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmph7wieqyl.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7wieqyl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm728injs.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpm728injs.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm728injs.jl:23\ntest set: Test Failed at /tmp/tmpm728injs.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm728injs.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm728injs.jl:23\ntest set: Test Failed at /tmp/tmpm728injs.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm728injs.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm728injs.jl:23\ntest set: Test Failed at /tmp/tmpm728injs.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm728injs.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm728injs.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm728injs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppcel_bqo.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppcel_bqo.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppcel_bqo.jl:23\ntest set: Test Failed at /tmp/tmppcel_bqo.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppcel_bqo.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppcel_bqo.jl:23\ntest set: Test Failed at /tmp/tmppcel_bqo.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppcel_bqo.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppcel_bqo.jl:23\ntest set: Test Failed at /tmp/tmppcel_bqo.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppcel_bqo.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppcel_bqo.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppcel_bqo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpryse6xs7.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpryse6xs7.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryse6xs7.jl:26\ntest set: Test Failed at /tmp/tmpryse6xs7.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpryse6xs7.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryse6xs7.jl:26\ntest set: Test Failed at /tmp/tmpryse6xs7.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpryse6xs7.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryse6xs7.jl:26\ntest set: Test Failed at /tmp/tmpryse6xs7.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpryse6xs7.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryse6xs7.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpryse6xs7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg69bu66p.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpg69bu66p.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg69bu66p.jl:23\ntest set: Test Failed at /tmp/tmpg69bu66p.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg69bu66p.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg69bu66p.jl:23\ntest set: Test Failed at /tmp/tmpg69bu66p.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg69bu66p.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg69bu66p.jl:23\ntest set: Test Failed at /tmp/tmpg69bu66p.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg69bu66p.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg69bu66p.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg69bu66p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpih001or5.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpih001or5.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpih001or5.jl:23\ntest set: Test Failed at /tmp/tmpih001or5.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpih001or5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpih001or5.jl:23\ntest set: Test Failed at /tmp/tmpih001or5.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpih001or5.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpih001or5.jl:23\ntest set: Test Failed at /tmp/tmpih001or5.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpih001or5.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpih001or5.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpih001or5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxjhbrcav.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpxjhbrcav.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjhbrcav.jl:23\ntest set: Test Failed at /tmp/tmpxjhbrcav.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxjhbrcav.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjhbrcav.jl:23\ntest set: Test Failed at /tmp/tmpxjhbrcav.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxjhbrcav.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjhbrcav.jl:23\ntest set: Test Failed at /tmp/tmpxjhbrcav.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxjhbrcav.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjhbrcav.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjhbrcav.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc7f1hidb.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpc7f1hidb.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7f1hidb.jl:23\ntest set: Test Failed at /tmp/tmpc7f1hidb.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7f1hidb.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7f1hidb.jl:23\ntest set: Test Failed at /tmp/tmpc7f1hidb.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7f1hidb.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7f1hidb.jl:23\ntest set: Test Failed at /tmp/tmpc7f1hidb.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc7f1hidb.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc7f1hidb.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc7f1hidb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40gvrwsf.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp40gvrwsf.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40gvrwsf.jl:23\ntest set: Test Failed at /tmp/tmp40gvrwsf.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40gvrwsf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40gvrwsf.jl:23\ntest set: Test Failed at /tmp/tmp40gvrwsf.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40gvrwsf.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40gvrwsf.jl:23\ntest set: Test Failed at /tmp/tmp40gvrwsf.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp40gvrwsf.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp40gvrwsf.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40gvrwsf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuep1tyds.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpuep1tyds.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuep1tyds.jl:26\ntest set: Test Failed at /tmp/tmpuep1tyds.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuep1tyds.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuep1tyds.jl:26\ntest set: Test Failed at /tmp/tmpuep1tyds.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuep1tyds.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuep1tyds.jl:26\ntest set: Test Failed at /tmp/tmpuep1tyds.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuep1tyds.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuep1tyds.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuep1tyds.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5nvx53u.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpr5nvx53u.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5nvx53u.jl:23\ntest set: Test Failed at /tmp/tmpr5nvx53u.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5nvx53u.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5nvx53u.jl:23\ntest set: Test Failed at /tmp/tmpr5nvx53u.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5nvx53u.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5nvx53u.jl:23\ntest set: Test Failed at /tmp/tmpr5nvx53u.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr5nvx53u.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5nvx53u.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5nvx53u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9efih0ml.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp9efih0ml.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9efih0ml.jl:26\ntest set: Test Failed at /tmp/tmp9efih0ml.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9efih0ml.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9efih0ml.jl:26\ntest set: Test Failed at /tmp/tmp9efih0ml.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9efih0ml.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9efih0ml.jl:26\ntest set: Test Failed at /tmp/tmp9efih0ml.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9efih0ml.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9efih0ml.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9efih0ml.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf7mknpjq.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpf7mknpjq.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf7mknpjq.jl:23\ntest set: Test Failed at /tmp/tmpf7mknpjq.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf7mknpjq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf7mknpjq.jl:23\ntest set: Test Failed at /tmp/tmpf7mknpjq.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf7mknpjq.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf7mknpjq.jl:23\ntest set: Test Failed at /tmp/tmpf7mknpjq.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf7mknpjq.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf7mknpjq.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf7mknpjq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqe8hfa5j.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqe8hfa5j.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqe8hfa5j.jl:23\ntest set: Test Failed at /tmp/tmpqe8hfa5j.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqe8hfa5j.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqe8hfa5j.jl:23\ntest set: Test Failed at /tmp/tmpqe8hfa5j.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqe8hfa5j.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqe8hfa5j.jl:23\ntest set: Test Failed at /tmp/tmpqe8hfa5j.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqe8hfa5j.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqe8hfa5j.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqe8hfa5j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmqwvtmjm.jl:28\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpmqwvtmjm.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmqwvtmjm.jl:26\\ntest set: Test Failed at /tmp/tmpmqwvtmjm.jl:29\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmqwvtmjm.jl:29\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmqwvtmjm.jl:26\\ntest set: Test Failed at /tmp/tmpmqwvtmjm.jl:30\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmqwvtmjm.jl:30\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmqwvtmjm.jl:26\\ntest set: Test Failed at /tmp/tmpmqwvtmjm.jl:31\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmqwvtmjm.jl:31\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmqwvtmjm.jl:26\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqmvf9mh4.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqmvf9mh4.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmvf9mh4.jl:23\ntest set: Test Failed at /tmp/tmpqmvf9mh4.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmvf9mh4.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmvf9mh4.jl:23\ntest set: Test Failed at /tmp/tmpqmvf9mh4.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmvf9mh4.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmvf9mh4.jl:23\ntest set: Test Failed at /tmp/tmpqmvf9mh4.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmvf9mh4.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmvf9mh4.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqmvf9mh4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7wao5d96.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp7wao5d96.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wao5d96.jl:23\ntest set: Test Failed at /tmp/tmp7wao5d96.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7wao5d96.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wao5d96.jl:23\ntest set: Test Failed at /tmp/tmp7wao5d96.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7wao5d96.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wao5d96.jl:23\ntest set: Test Failed at /tmp/tmp7wao5d96.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7wao5d96.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7wao5d96.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7wao5d96.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe4s3_m3_.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpe4s3_m3_.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4s3_m3_.jl:23\ntest set: Test Failed at /tmp/tmpe4s3_m3_.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe4s3_m3_.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4s3_m3_.jl:23\ntest set: Test Failed at /tmp/tmpe4s3_m3_.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe4s3_m3_.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4s3_m3_.jl:23\ntest set: Test Failed at /tmp/tmpe4s3_m3_.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe4s3_m3_.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4s3_m3_.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4s3_m3_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm9dnrhjw.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpm9dnrhjw.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm9dnrhjw.jl:23\ntest set: Test Failed at /tmp/tmpm9dnrhjw.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm9dnrhjw.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm9dnrhjw.jl:23\ntest set: Test Failed at /tmp/tmpm9dnrhjw.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm9dnrhjw.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm9dnrhjw.jl:23\ntest set: Test Failed at /tmp/tmpm9dnrhjw.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm9dnrhjw.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm9dnrhjw.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9dnrhjw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk08_rms2.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpk08_rms2.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk08_rms2.jl:23\\ntest set: Test Failed at /tmp/tmpk08_rms2.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpk08_rms2.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk08_rms2.jl:23\\ntest set: Test Failed at /tmp/tmpk08_rms2.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpk08_rms2.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk08_rms2.jl:23\\ntest set: Test Failed at /tmp/tmpk08_rms2.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpk08_rms2.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk08_rms2.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4tpa0i8y.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp4tpa0i8y.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4tpa0i8y.jl:26\ntest set: Test Failed at /tmp/tmp4tpa0i8y.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4tpa0i8y.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4tpa0i8y.jl:26\ntest set: Test Failed at /tmp/tmp4tpa0i8y.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4tpa0i8y.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4tpa0i8y.jl:26\ntest set: Test Failed at /tmp/tmp4tpa0i8y.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4tpa0i8y.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4tpa0i8y.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4tpa0i8y.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt7fuucn_.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpt7fuucn_.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7fuucn_.jl:26\ntest set: Test Failed at /tmp/tmpt7fuucn_.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt7fuucn_.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7fuucn_.jl:26\ntest set: Test Failed at /tmp/tmpt7fuucn_.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt7fuucn_.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7fuucn_.jl:26\ntest set: Test Failed at /tmp/tmpt7fuucn_.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt7fuucn_.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7fuucn_.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7fuucn_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcir1y0r.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpfcir1y0r.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcir1y0r.jl:23\ntest set: Test Failed at /tmp/tmpfcir1y0r.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfcir1y0r.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcir1y0r.jl:23\ntest set: Test Failed at /tmp/tmpfcir1y0r.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfcir1y0r.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcir1y0r.jl:23\ntest set: Test Failed at /tmp/tmpfcir1y0r.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfcir1y0r.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfcir1y0r.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcir1y0r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp510rm4uh.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp510rm4uh.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp510rm4uh.jl:23\ntest set: Test Failed at /tmp/tmp510rm4uh.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp510rm4uh.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp510rm4uh.jl:23\ntest set: Test Failed at /tmp/tmp510rm4uh.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp510rm4uh.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp510rm4uh.jl:23\ntest set: Test Failed at /tmp/tmp510rm4uh.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp510rm4uh.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp510rm4uh.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp510rm4uh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi79s6brf.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpi79s6brf.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi79s6brf.jl:23\ntest set: Test Failed at /tmp/tmpi79s6brf.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi79s6brf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi79s6brf.jl:23\ntest set: Test Failed at /tmp/tmpi79s6brf.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi79s6brf.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi79s6brf.jl:23\ntest set: Test Failed at /tmp/tmpi79s6brf.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi79s6brf.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi79s6brf.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi79s6brf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpv1_e22ab.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpv1_e22ab.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv1_e22ab.jl:23\\ntest set: Test Failed at /tmp/tmpv1_e22ab.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv1_e22ab.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv1_e22ab.jl:23\\ntest set: Test Failed at /tmp/tmpv1_e22ab.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv1_e22ab.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv1_e22ab.jl:23\\ntest set: Test Failed at /tmp/tmpv1_e22ab.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpv1_e22ab.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv1_e22ab.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpubmj74nz.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpubmj74nz.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpubmj74nz.jl:23\ntest set: Test Failed at /tmp/tmpubmj74nz.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpubmj74nz.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpubmj74nz.jl:23\ntest set: Test Failed at /tmp/tmpubmj74nz.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpubmj74nz.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpubmj74nz.jl:23\ntest set: Test Failed at /tmp/tmpubmj74nz.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpubmj74nz.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpubmj74nz.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubmj74nz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw53txl3j.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpw53txl3j.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw53txl3j.jl:23\ntest set: Test Failed at /tmp/tmpw53txl3j.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw53txl3j.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw53txl3j.jl:23\ntest set: Test Failed at /tmp/tmpw53txl3j.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw53txl3j.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw53txl3j.jl:23\ntest set: Test Failed at /tmp/tmpw53txl3j.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw53txl3j.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw53txl3j.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw53txl3j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprsg_mmqc.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmprsg_mmqc.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprsg_mmqc.jl:23\ntest set: Test Failed at /tmp/tmprsg_mmqc.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprsg_mmqc.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprsg_mmqc.jl:23\ntest set: Test Failed at /tmp/tmprsg_mmqc.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprsg_mmqc.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprsg_mmqc.jl:23\ntest set: Test Failed at /tmp/tmprsg_mmqc.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprsg_mmqc.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprsg_mmqc.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprsg_mmqc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxstdzn5b.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpxstdzn5b.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxstdzn5b.jl:23\ntest set: Test Failed at /tmp/tmpxstdzn5b.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxstdzn5b.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxstdzn5b.jl:23\ntest set: Test Failed at /tmp/tmpxstdzn5b.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxstdzn5b.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxstdzn5b.jl:23\ntest set: Test Failed at /tmp/tmpxstdzn5b.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxstdzn5b.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxstdzn5b.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxstdzn5b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpes7m8qsl.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpes7m8qsl.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpes7m8qsl.jl:23\\ntest set: Test Failed at /tmp/tmpes7m8qsl.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpes7m8qsl.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpes7m8qsl.jl:23\\ntest set: Test Failed at /tmp/tmpes7m8qsl.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpes7m8qsl.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpes7m8qsl.jl:23\\ntest set: Test Failed at /tmp/tmpes7m8qsl.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpes7m8qsl.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpes7m8qsl.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpky8a9d6g.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpky8a9d6g.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky8a9d6g.jl:23\ntest set: Test Failed at /tmp/tmpky8a9d6g.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky8a9d6g.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky8a9d6g.jl:23\ntest set: Test Failed at /tmp/tmpky8a9d6g.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky8a9d6g.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky8a9d6g.jl:23\ntest set: Test Failed at /tmp/tmpky8a9d6g.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpky8a9d6g.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpky8a9d6g.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpky8a9d6g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3v6akd1s.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp3v6akd1s.jl:18\n   [6] top-level scope at /tmp/tmp3v6akd1s.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp3v6akd1s.jl:18\n   [6] top-level scope at /tmp/tmp3v6akd1s.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp3v6akd1s.jl:18\n   [6] top-level scope at /tmp/tmp3v6akd1s.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp3v6akd1s.jl:18\n   [6] top-level scope at /tmp/tmp3v6akd1s.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp3v6akd1s.jl:18\n   [6] top-level scope at /tmp/tmp3v6akd1s.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp3v6akd1s.jl:18\n\
    \   [6] top-level scope at /tmp/tmp3v6akd1s.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp3v6akd1s.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp3v6akd1s.jl:18\n\
    \   [6] top-level scope at /tmp/tmp3v6akd1s.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp3v6akd1s.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3v6akd1s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i > 0\n            if sum(digits(i)) > 0\n        \
    \        count += 1\n            end\n        else\n            if sum(digits(-i))\
    \ > 0\n                count += 1\n            end\n        end\n    end\n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgbyhip_c.jl:31\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpgbyhip_c.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbyhip_c.jl:29\ntest set: Test Failed at /tmp/tmpgbyhip_c.jl:32\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgbyhip_c.jl:32\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbyhip_c.jl:29\ntest set: Test Failed at /tmp/tmpgbyhip_c.jl:33\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgbyhip_c.jl:33\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbyhip_c.jl:29\ntest set: Test Failed at /tmp/tmpgbyhip_c.jl:34\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgbyhip_c.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbyhip_c.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgbyhip_c.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnyp_u1kt.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpnyp_u1kt.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnyp_u1kt.jl:23\ntest set: Test Failed at /tmp/tmpnyp_u1kt.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnyp_u1kt.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnyp_u1kt.jl:23\ntest set: Test Failed at /tmp/tmpnyp_u1kt.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnyp_u1kt.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnyp_u1kt.jl:23\ntest set: Test Failed at /tmp/tmpnyp_u1kt.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnyp_u1kt.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnyp_u1kt.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnyp_u1kt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9kxph84k.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp9kxph84k.jl:18\n   [6] top-level scope at /tmp/tmp9kxph84k.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp9kxph84k.jl:18\n   [6] top-level scope at /tmp/tmp9kxph84k.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp9kxph84k.jl:18\n   [6] top-level scope at /tmp/tmp9kxph84k.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp9kxph84k.jl:18\n   [6] top-level scope at /tmp/tmp9kxph84k.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp9kxph84k.jl:18\n   [6] top-level scope at /tmp/tmp9kxph84k.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp9kxph84k.jl:18\n\
    \   [6] top-level scope at /tmp/tmp9kxph84k.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kxph84k.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp9kxph84k.jl:18\n\
    \   [6] top-level scope at /tmp/tmp9kxph84k.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp9kxph84k.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9kxph84k.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphqph8bh6.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmphqph8bh6.jl:18\n   [6] top-level scope at /tmp/tmphqph8bh6.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmphqph8bh6.jl:18\n   [6] top-level scope at /tmp/tmphqph8bh6.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmphqph8bh6.jl:18\n   [6] top-level scope at /tmp/tmphqph8bh6.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmphqph8bh6.jl:18\n   [6] top-level scope at /tmp/tmphqph8bh6.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmphqph8bh6.jl:18\n   [6] top-level scope at /tmp/tmphqph8bh6.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmphqph8bh6.jl:18\n\
    \   [6] top-level scope at /tmp/tmphqph8bh6.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmphqph8bh6.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmphqph8bh6.jl:18\n\
    \   [6] top-level scope at /tmp/tmphqph8bh6.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphqph8bh6.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqph8bh6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppj3q0tn5.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppj3q0tn5.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj3q0tn5.jl:23\ntest set: Test Failed at /tmp/tmppj3q0tn5.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppj3q0tn5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj3q0tn5.jl:23\ntest set: Test Failed at /tmp/tmppj3q0tn5.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppj3q0tn5.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj3q0tn5.jl:23\ntest set: Test Failed at /tmp/tmppj3q0tn5.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppj3q0tn5.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj3q0tn5.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppj3q0tn5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ndrhhrs.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp8ndrhhrs.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ndrhhrs.jl:23\ntest set: Test Failed at /tmp/tmp8ndrhhrs.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8ndrhhrs.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ndrhhrs.jl:23\ntest set: Test Failed at /tmp/tmp8ndrhhrs.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8ndrhhrs.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ndrhhrs.jl:23\ntest set: Test Failed at /tmp/tmp8ndrhhrs.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8ndrhhrs.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ndrhhrs.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ndrhhrs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7di6sb5l.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp7di6sb5l.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7di6sb5l.jl:23\ntest set: Test Failed at /tmp/tmp7di6sb5l.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7di6sb5l.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7di6sb5l.jl:23\ntest set: Test Failed at /tmp/tmp7di6sb5l.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7di6sb5l.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7di6sb5l.jl:23\ntest set: Test Failed at /tmp/tmp7di6sb5l.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7di6sb5l.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7di6sb5l.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7di6sb5l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpo0rmsjl1.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpo0rmsjl1.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo0rmsjl1.jl:23\\ntest set: Test Failed at /tmp/tmpo0rmsjl1.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpo0rmsjl1.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo0rmsjl1.jl:23\\ntest set: Test Failed at /tmp/tmpo0rmsjl1.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpo0rmsjl1.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo0rmsjl1.jl:23\\ntest set: Test Failed at /tmp/tmpo0rmsjl1.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpo0rmsjl1.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpo0rmsjl1.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph4cia_fm.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmph4cia_fm.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4cia_fm.jl:23\ntest set: Test Failed at /tmp/tmph4cia_fm.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph4cia_fm.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4cia_fm.jl:23\ntest set: Test Failed at /tmp/tmph4cia_fm.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph4cia_fm.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4cia_fm.jl:23\ntest set: Test Failed at /tmp/tmph4cia_fm.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph4cia_fm.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4cia_fm.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph4cia_fm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4btsd76x.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp4btsd76x.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4btsd76x.jl:23\ntest set: Test Failed at /tmp/tmp4btsd76x.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4btsd76x.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4btsd76x.jl:23\ntest set: Test Failed at /tmp/tmp4btsd76x.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4btsd76x.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4btsd76x.jl:23\ntest set: Test Failed at /tmp/tmp4btsd76x.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4btsd76x.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4btsd76x.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4btsd76x.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp10kvusov.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp10kvusov.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10kvusov.jl:23\ntest set: Test Failed at /tmp/tmp10kvusov.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp10kvusov.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10kvusov.jl:23\ntest set: Test Failed at /tmp/tmp10kvusov.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp10kvusov.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10kvusov.jl:23\ntest set: Test Failed at /tmp/tmp10kvusov.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp10kvusov.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10kvusov.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10kvusov.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmly9vbrh.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpmly9vbrh.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmly9vbrh.jl:26\ntest set: Test Failed at /tmp/tmpmly9vbrh.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmly9vbrh.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmly9vbrh.jl:26\ntest set: Test Failed at /tmp/tmpmly9vbrh.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmly9vbrh.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmly9vbrh.jl:26\ntest set: Test Failed at /tmp/tmpmly9vbrh.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmly9vbrh.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmly9vbrh.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmly9vbrh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpc3t044mp.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpc3t044mp.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3t044mp.jl:23\\ntest set: Test Failed at /tmp/tmpc3t044mp.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3t044mp.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3t044mp.jl:23\\ntest set: Test Failed at /tmp/tmpc3t044mp.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3t044mp.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3t044mp.jl:23\\ntest set: Test Failed at /tmp/tmpc3t044mp.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3t044mp.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3t044mp.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplgjmbldy.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmplgjmbldy.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplgjmbldy.jl:23\ntest set: Test Failed at /tmp/tmplgjmbldy.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplgjmbldy.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplgjmbldy.jl:23\ntest set: Test Failed at /tmp/tmplgjmbldy.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplgjmbldy.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplgjmbldy.jl:23\ntest set: Test Failed at /tmp/tmplgjmbldy.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplgjmbldy.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplgjmbldy.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplgjmbldy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5v52608k.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5v52608k.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v52608k.jl:23\ntest set: Test Failed at /tmp/tmp5v52608k.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5v52608k.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v52608k.jl:23\ntest set: Test Failed at /tmp/tmp5v52608k.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5v52608k.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v52608k.jl:23\ntest set: Test Failed at /tmp/tmp5v52608k.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5v52608k.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v52608k.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5v52608k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mtff70f.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp5mtff70f.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mtff70f.jl:26\ntest set: Test Failed at /tmp/tmp5mtff70f.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mtff70f.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mtff70f.jl:26\ntest set: Test Failed at /tmp/tmp5mtff70f.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mtff70f.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mtff70f.jl:26\ntest set: Test Failed at /tmp/tmp5mtff70f.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mtff70f.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mtff70f.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mtff70f.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppbcssfwr.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppbcssfwr.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbcssfwr.jl:23\ntest set: Test Failed at /tmp/tmppbcssfwr.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppbcssfwr.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbcssfwr.jl:23\ntest set: Test Failed at /tmp/tmppbcssfwr.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppbcssfwr.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbcssfwr.jl:23\ntest set: Test Failed at /tmp/tmppbcssfwr.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppbcssfwr.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbcssfwr.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbcssfwr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeiyadwpx.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpeiyadwpx.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeiyadwpx.jl:23\ntest set: Test Failed at /tmp/tmpeiyadwpx.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeiyadwpx.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeiyadwpx.jl:23\ntest set: Test Failed at /tmp/tmpeiyadwpx.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeiyadwpx.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeiyadwpx.jl:23\ntest set: Test Failed at /tmp/tmpeiyadwpx.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeiyadwpx.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeiyadwpx.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeiyadwpx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzljtv5wt.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpzljtv5wt.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzljtv5wt.jl:23\ntest set: Test Failed at /tmp/tmpzljtv5wt.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzljtv5wt.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzljtv5wt.jl:23\ntest set: Test Failed at /tmp/tmpzljtv5wt.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzljtv5wt.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzljtv5wt.jl:23\ntest set: Test Failed at /tmp/tmpzljtv5wt.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzljtv5wt.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzljtv5wt.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzljtv5wt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpivd4anqe.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpivd4anqe.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivd4anqe.jl:23\ntest set: Test Failed at /tmp/tmpivd4anqe.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpivd4anqe.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivd4anqe.jl:23\ntest set: Test Failed at /tmp/tmpivd4anqe.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpivd4anqe.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivd4anqe.jl:23\ntest set: Test Failed at /tmp/tmpivd4anqe.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpivd4anqe.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpivd4anqe.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpivd4anqe.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph29c3cps.jl:25\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmph29c3cps.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph29c3cps.jl:23\\ntest set: Test Failed at /tmp/tmph29c3cps.jl:26\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmph29c3cps.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph29c3cps.jl:23\\ntest set: Test Failed at /tmp/tmph29c3cps.jl:27\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmph29c3cps.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph29c3cps.jl:23\\ntest set: Test Failed at /tmp/tmph29c3cps.jl:28\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmph29c3cps.jl:28\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph29c3cps.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6g59ageq.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp6g59ageq.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g59ageq.jl:26\ntest set: Test Failed at /tmp/tmp6g59ageq.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6g59ageq.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g59ageq.jl:26\ntest set: Test Failed at /tmp/tmp6g59ageq.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6g59ageq.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g59ageq.jl:26\ntest set: Test Failed at /tmp/tmp6g59ageq.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6g59ageq.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g59ageq.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6g59ageq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgvgszw0z.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpgvgszw0z.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvgszw0z.jl:26\ntest set: Test Failed at /tmp/tmpgvgszw0z.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgvgszw0z.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvgszw0z.jl:26\ntest set: Test Failed at /tmp/tmpgvgszw0z.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgvgszw0z.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvgszw0z.jl:26\ntest set: Test Failed at /tmp/tmpgvgszw0z.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgvgszw0z.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvgszw0z.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvgszw0z.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxxvc5ybz.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpxxvc5ybz.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxvc5ybz.jl:26\ntest set: Test Failed at /tmp/tmpxxvc5ybz.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxxvc5ybz.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxvc5ybz.jl:26\ntest set: Test Failed at /tmp/tmpxxvc5ybz.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxxvc5ybz.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxvc5ybz.jl:26\ntest set: Test Failed at /tmp/tmpxxvc5ybz.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxxvc5ybz.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxxvc5ybz.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxxvc5ybz.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr8g7j_k2.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpr8g7j_k2.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8g7j_k2.jl:23\ntest set: Test Failed at /tmp/tmpr8g7j_k2.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8g7j_k2.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8g7j_k2.jl:23\ntest set: Test Failed at /tmp/tmpr8g7j_k2.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8g7j_k2.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8g7j_k2.jl:23\ntest set: Test Failed at /tmp/tmpr8g7j_k2.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8g7j_k2.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8g7j_k2.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr8g7j_k2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqs4p4p8c.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqs4p4p8c.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs4p4p8c.jl:26\ntest set: Test Failed at /tmp/tmpqs4p4p8c.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqs4p4p8c.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs4p4p8c.jl:26\ntest set: Test Failed at /tmp/tmpqs4p4p8c.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqs4p4p8c.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs4p4p8c.jl:26\ntest set: Test Failed at /tmp/tmpqs4p4p8c.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqs4p4p8c.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs4p4p8c.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqs4p4p8c.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptl7o75az.jl:28\\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\\n   Evaluated: 2 == 0\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmptl7o75az.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptl7o75az.jl:26\\ntest set: Test Failed at /tmp/tmptl7o75az.jl:29\\\
    n  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\\n   Evaluated: 7 == 6\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptl7o75az.jl:29\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptl7o75az.jl:26\\ntest set: Test Failed at /tmp/tmptl7o75az.jl:30\\\
    n  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\\n   Evaluated: 6 == 5\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptl7o75az.jl:30\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptl7o75az.jl:26\\ntest set: Test Failed at /tmp/tmptl7o75az.jl:31\\\
    n  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\\n   Evaluated: 6 == 4\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptl7o75az.jl:31\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptl7o75az.jl:26\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     4      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0gazgufq.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp0gazgufq.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0gazgufq.jl:26\ntest set: Test Failed at /tmp/tmp0gazgufq.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0gazgufq.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0gazgufq.jl:26\ntest set: Test Failed at /tmp/tmp0gazgufq.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0gazgufq.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0gazgufq.jl:26\ntest set: Test Failed at /tmp/tmp0gazgufq.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0gazgufq.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0gazgufq.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0gazgufq.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjktkjrga.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpjktkjrga.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjktkjrga.jl:23\ntest set: Test Failed at /tmp/tmpjktkjrga.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjktkjrga.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjktkjrga.jl:23\ntest set: Test Failed at /tmp/tmpjktkjrga.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjktkjrga.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjktkjrga.jl:23\ntest set: Test Failed at /tmp/tmpjktkjrga.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjktkjrga.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjktkjrga.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjktkjrga.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp844w_i8_.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp844w_i8_.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp844w_i8_.jl:26\ntest set: Test Failed at /tmp/tmp844w_i8_.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp844w_i8_.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp844w_i8_.jl:26\ntest set: Test Failed at /tmp/tmp844w_i8_.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp844w_i8_.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp844w_i8_.jl:26\ntest set: Test Failed at /tmp/tmp844w_i8_.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp844w_i8_.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp844w_i8_.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp844w_i8_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpztaceezq.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpztaceezq.jl:18\n   [6] top-level scope at /tmp/tmpztaceezq.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpztaceezq.jl:18\n   [6] top-level scope at /tmp/tmpztaceezq.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpztaceezq.jl:18\n   [6] top-level scope at /tmp/tmpztaceezq.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpztaceezq.jl:18\n   [6] top-level scope at /tmp/tmpztaceezq.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpztaceezq.jl:18\n   [6] top-level scope at /tmp/tmpztaceezq.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpztaceezq.jl:18\n\
    \   [6] top-level scope at /tmp/tmpztaceezq.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpztaceezq.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpztaceezq.jl:18\n\
    \   [6] top-level scope at /tmp/tmpztaceezq.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpztaceezq.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztaceezq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppznupmwa.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmppznupmwa.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppznupmwa.jl:31\ntest set: Test Failed at /tmp/tmppznupmwa.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppznupmwa.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppznupmwa.jl:31\ntest set: Test Failed at /tmp/tmppznupmwa.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppznupmwa.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppznupmwa.jl:31\ntest set: Test Failed at /tmp/tmppznupmwa.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppznupmwa.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppznupmwa.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppznupmwa.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps4mlz2z5.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmps4mlz2z5.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4mlz2z5.jl:23\ntest set: Test Failed at /tmp/tmps4mlz2z5.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps4mlz2z5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4mlz2z5.jl:23\ntest set: Test Failed at /tmp/tmps4mlz2z5.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps4mlz2z5.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4mlz2z5.jl:23\ntest set: Test Failed at /tmp/tmps4mlz2z5.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps4mlz2z5.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4mlz2z5.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4mlz2z5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo6bz9278.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpo6bz9278.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo6bz9278.jl:23\ntest set: Test Failed at /tmp/tmpo6bz9278.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo6bz9278.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo6bz9278.jl:23\ntest set: Test Failed at /tmp/tmpo6bz9278.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo6bz9278.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo6bz9278.jl:23\ntest set: Test Failed at /tmp/tmpo6bz9278.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo6bz9278.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo6bz9278.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6bz9278.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7rz0puzq.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp7rz0puzq.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rz0puzq.jl:23\ntest set: Test Failed at /tmp/tmp7rz0puzq.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rz0puzq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rz0puzq.jl:23\ntest set: Test Failed at /tmp/tmp7rz0puzq.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rz0puzq.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rz0puzq.jl:23\ntest set: Test Failed at /tmp/tmp7rz0puzq.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rz0puzq.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rz0puzq.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rz0puzq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn433rzkt.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpn433rzkt.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn433rzkt.jl:26\ntest set: Test Failed at /tmp/tmpn433rzkt.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn433rzkt.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn433rzkt.jl:26\ntest set: Test Failed at /tmp/tmpn433rzkt.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn433rzkt.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn433rzkt.jl:26\ntest set: Test Failed at /tmp/tmpn433rzkt.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn433rzkt.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn433rzkt.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn433rzkt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd11rjrkr.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpd11rjrkr.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd11rjrkr.jl:23\ntest set: Test Failed at /tmp/tmpd11rjrkr.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd11rjrkr.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd11rjrkr.jl:23\ntest set: Test Failed at /tmp/tmpd11rjrkr.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd11rjrkr.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd11rjrkr.jl:23\ntest set: Test Failed at /tmp/tmpd11rjrkr.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd11rjrkr.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd11rjrkr.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd11rjrkr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdtvvx5l.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpgdtvvx5l.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdtvvx5l.jl:23\ntest set: Test Failed at /tmp/tmpgdtvvx5l.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgdtvvx5l.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdtvvx5l.jl:23\ntest set: Test Failed at /tmp/tmpgdtvvx5l.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgdtvvx5l.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdtvvx5l.jl:23\ntest set: Test Failed at /tmp/tmpgdtvvx5l.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgdtvvx5l.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdtvvx5l.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdtvvx5l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0i30ihqs.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp0i30ihqs.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0i30ihqs.jl:23\ntest set: Test Failed at /tmp/tmp0i30ihqs.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0i30ihqs.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0i30ihqs.jl:23\ntest set: Test Failed at /tmp/tmp0i30ihqs.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0i30ihqs.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0i30ihqs.jl:23\ntest set: Test Failed at /tmp/tmp0i30ihqs.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0i30ihqs.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0i30ihqs.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0i30ihqs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyljpx_4f.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpyljpx_4f.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyljpx_4f.jl:23\ntest set: Test Failed at /tmp/tmpyljpx_4f.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyljpx_4f.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyljpx_4f.jl:23\ntest set: Test Failed at /tmp/tmpyljpx_4f.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyljpx_4f.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyljpx_4f.jl:23\ntest set: Test Failed at /tmp/tmpyljpx_4f.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyljpx_4f.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyljpx_4f.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyljpx_4f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy319qvd2.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpy319qvd2.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy319qvd2.jl:26\ntest set: Test Failed at /tmp/tmpy319qvd2.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy319qvd2.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy319qvd2.jl:26\ntest set: Test Failed at /tmp/tmpy319qvd2.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy319qvd2.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy319qvd2.jl:26\ntest set: Test Failed at /tmp/tmpy319qvd2.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy319qvd2.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy319qvd2.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy319qvd2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87o158qa.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp87o158qa.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87o158qa.jl:23\ntest set: Test Failed at /tmp/tmp87o158qa.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87o158qa.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87o158qa.jl:23\ntest set: Test Failed at /tmp/tmp87o158qa.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87o158qa.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87o158qa.jl:23\ntest set: Test Failed at /tmp/tmp87o158qa.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87o158qa.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87o158qa.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87o158qa.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        if\
    \ sum(digits(i)) > 0\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([-1, -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6)\n\t@test(candidate([1, 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4)\n\t@test(candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5)\n\t@test(candidate([0, 1]) == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3_8_ofub.jl:28\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmp3_8_ofub.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3_8_ofub.jl:26\ntest set: Test Failed at /tmp/tmp3_8_ofub.jl:29\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3_8_ofub.jl:29\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3_8_ofub.jl:26\ntest set: Test Failed at /tmp/tmp3_8_ofub.jl:30\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3_8_ofub.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3_8_ofub.jl:26\ntest set: Test Failed at /tmp/tmp3_8_ofub.jl:31\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3_8_ofub.jl:31\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3_8_ofub.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_8_ofub.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj53lrtqn.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpj53lrtqn.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj53lrtqn.jl:23\ntest set: Test Failed at /tmp/tmpj53lrtqn.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj53lrtqn.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj53lrtqn.jl:23\ntest set: Test Failed at /tmp/tmpj53lrtqn.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj53lrtqn.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj53lrtqn.jl:23\ntest set: Test Failed at /tmp/tmpj53lrtqn.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj53lrtqn.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj53lrtqn.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj53lrtqn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpui9gbdic.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpui9gbdic.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui9gbdic.jl:23\ntest set: Test Failed at /tmp/tmpui9gbdic.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpui9gbdic.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui9gbdic.jl:23\ntest set: Test Failed at /tmp/tmpui9gbdic.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpui9gbdic.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui9gbdic.jl:23\ntest set: Test Failed at /tmp/tmpui9gbdic.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpui9gbdic.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpui9gbdic.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpui9gbdic.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpek3wrop7.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpek3wrop7.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpek3wrop7.jl:23\ntest set: Test Failed at /tmp/tmpek3wrop7.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpek3wrop7.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpek3wrop7.jl:23\ntest set: Test Failed at /tmp/tmpek3wrop7.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpek3wrop7.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpek3wrop7.jl:23\ntest set: Test Failed at /tmp/tmpek3wrop7.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpek3wrop7.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpek3wrop7.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpek3wrop7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqwhqvusm.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpqwhqvusm.jl:18\n   [6] top-level scope at /tmp/tmpqwhqvusm.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpqwhqvusm.jl:18\n   [6] top-level scope at /tmp/tmpqwhqvusm.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpqwhqvusm.jl:18\n   [6] top-level scope at /tmp/tmpqwhqvusm.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpqwhqvusm.jl:18\n   [6] top-level scope at /tmp/tmpqwhqvusm.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpqwhqvusm.jl:18\n   [6] top-level scope at /tmp/tmpqwhqvusm.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpqwhqvusm.jl:18\n\
    \   [6] top-level scope at /tmp/tmpqwhqvusm.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwhqvusm.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpqwhqvusm.jl:18\n\
    \   [6] top-level scope at /tmp/tmpqwhqvusm.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpqwhqvusm.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwhqvusm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(abs.(digits(i))) > 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptizn3cvl.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmptizn3cvl.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptizn3cvl.jl:23\ntest set: Test Failed at /tmp/tmptizn3cvl.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptizn3cvl.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptizn3cvl.jl:23\ntest set: Test Failed at /tmp/tmptizn3cvl.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptizn3cvl.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptizn3cvl.jl:23\ntest set: Test Failed at /tmp/tmptizn3cvl.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptizn3cvl.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptizn3cvl.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptizn3cvl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum_digits(i) > 0\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj3pv03mx.jl:25\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  UndefVarError: sum_digits not defined\n\
    \  Stacktrace:\n   [1] count_nums(::Array{Int64,1}) at /tmp/tmpj3pv03mx.jl:13\n\
    \   [2] top-level scope at /tmp/tmpj3pv03mx.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:26\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpj3pv03mx.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:27\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpj3pv03mx.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:28\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpj3pv03mx.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:29\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n\
    \   [1] count_nums(::Array{Int64,1}) at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level\
    \ scope at /tmp/tmpj3pv03mx.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:30\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level scope at /tmp/tmpj3pv03mx.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj3pv03mx.jl:31\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  UndefVarError: sum_digits not defined\n  Stacktrace:\n   [1] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpj3pv03mx.jl:13\n   [2] top-level scope at /tmp/tmpj3pv03mx.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj3pv03mx.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj3pv03mx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if sum(digits(abs(i))) > 0\n            count += 1\n \
    \       end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_nums;\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1,\
    \ -2, 0]) == 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\
    \t@test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1])\
    \ == 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphnoh5s64.jl:25\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmphnoh5s64.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnoh5s64.jl:23\ntest set: Test Failed at /tmp/tmphnoh5s64.jl:26\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphnoh5s64.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnoh5s64.jl:23\ntest set: Test Failed at /tmp/tmphnoh5s64.jl:27\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphnoh5s64.jl:27\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnoh5s64.jl:23\ntest set: Test Failed at /tmp/tmphnoh5s64.jl:28\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphnoh5s64.jl:28\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphnoh5s64.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphnoh5s64.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        sum = 0\n        if i < 0\n            i = -i\n      \
    \  end\n        while i > 0\n            sum += i % 10\n            i = i // 10\n\
    \        end\n        if sum > 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcxvyahhq.jl:33\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmpcxvyahhq.jl:18\n   [6] top-level scope at /tmp/tmpcxvyahhq.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:34\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcxvyahhq.jl:18\n   [6] top-level scope at /tmp/tmpcxvyahhq.jl:34\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:35\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcxvyahhq.jl:18\n   [6] top-level scope at /tmp/tmpcxvyahhq.jl:35\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:36\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcxvyahhq.jl:18\n   [6] top-level scope at /tmp/tmpcxvyahhq.jl:36\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:37\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmpcxvyahhq.jl:18\n   [6] top-level scope at /tmp/tmpcxvyahhq.jl:37\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:38\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpcxvyahhq.jl:18\n\
    \   [6] top-level scope at /tmp/tmpcxvyahhq.jl:38\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxvyahhq.jl:39\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmpcxvyahhq.jl:18\n\
    \   [6] top-level scope at /tmp/tmpcxvyahhq.jl:39\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpcxvyahhq.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxvyahhq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        while\
    \ i > 0\n            count += i % 10\n            i = i // 10\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp57faykq6.jl:29\n  Test threw exception\n\
    \  Expression: candidate([-1, -2, 0]) == 0\n  OverflowError: 10 * 1000000000000000000\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol,\
    \ ::Int64, ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288\
    \ [inlined]\n   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n\
    \   [4] rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1})\
    \ at /tmp/tmp57faykq6.jl:17\n   [6] top-level scope at /tmp/tmp57faykq6.jl:29\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:30\n  Test threw exception\n  Expression: candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp57faykq6.jl:17\n   [6] top-level scope at /tmp/tmp57faykq6.jl:30\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:31\n  Test threw exception\n  Expression: candidate([1,\
    \ 6, 9, -6, 0, 1, 5]) == 5\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp57faykq6.jl:17\n   [6] top-level scope at /tmp/tmp57faykq6.jl:31\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:32\n  Test threw exception\n  Expression: candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n  OverflowError: 10 * 1000000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp57faykq6.jl:17\n   [6] top-level scope at /tmp/tmp57faykq6.jl:32\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:33\n  Test threw exception\n  Expression: candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n  OverflowError: 10 * 2500000000000000000 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64,\
    \ ::Int64) at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n\
    \   [3] rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4]\
    \ rem at ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at\
    \ /tmp/tmp57faykq6.jl:17\n   [6] top-level scope at /tmp/tmp57faykq6.jl:33\n \
    \  [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:34\n  Test threw exception\n  Expression: candidate([0,\
    \ 1]) == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp57faykq6.jl:17\n\
    \   [6] top-level scope at /tmp/tmp57faykq6.jl:34\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp57faykq6.jl:35\n  Test threw exception\n  Expression: candidate([1])\
    \ == 1\n  OverflowError: 10 * 1000000000000000000 overflowed for type Int64\n\
    \  Stacktrace:\n   [1] throw_overflowerr_binaryop(::Symbol, ::Int64, ::Int64)\
    \ at ./checked.jl:154\n   [2] checked_mul at ./checked.jl:288 [inlined]\n   [3]\
    \ rem(::Rational{Int64}, ::Rational{Int64}) at ./rational.jl:264\n   [4] rem at\
    \ ./promotion.jl:352 [inlined]\n   [5] count_nums(::Array{Int64,1}) at /tmp/tmp57faykq6.jl:17\n\
    \   [6] top-level scope at /tmp/tmp57faykq6.jl:35\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmp57faykq6.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp57faykq6.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Write a function count_nums which takes an array of integers\
    \ and returns\n    the number of elements which has a sum of digits > 0.\n   \
    \ If a number is negative, then its first signed digit will be negative:\n   \
    \ e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n   \
    \ >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n   \
    \ \"\"\"\nfunction count_nums(arr::Vector{Int64})::Int64 \n    count = 0\n   \
    \ for i in arr\n        if i < 0\n            i = -i\n        end\n        sum\
    \ = 0\n        while i > 0\n            sum += i % 10\n            i = i \xF7\
    \ 10\n        end\n        if sum > 0\n            count += 1\n        end\n \
    \   end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_nums;\n\
    \t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([-1, -2, 0]) ==\
    \ 0)\n\t@test(candidate([1, 1, 2, -2, 3, 4, 5]) == 6)\n\t@test(candidate([1, 6,\
    \ 9, -6, 0, 1, 5]) == 5)\n\t@test(candidate([1, 100, 98, -7, 1, -1]) == 4)\n\t\
    @test(candidate([12, 23, 34, -45, -56, 0]) == 5)\n\t@test(candidate([0, 1]) ==\
    \ 1)\n\t@test(candidate([1]) == 1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqct2jyvq.jl:33\n  Expression: candidate([-1,\
    \ -2, 0]) == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] top-level scope at /tmp/tmpqct2jyvq.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqct2jyvq.jl:31\ntest set: Test Failed at /tmp/tmpqct2jyvq.jl:34\n\
    \  Expression: candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n   Evaluated: 7 == 6\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqct2jyvq.jl:34\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqct2jyvq.jl:31\ntest set: Test Failed at /tmp/tmpqct2jyvq.jl:35\n\
    \  Expression: candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n   Evaluated: 6 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqct2jyvq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqct2jyvq.jl:31\ntest set: Test Failed at /tmp/tmpqct2jyvq.jl:36\n\
    \  Expression: candidate([1, 100, 98, -7, 1, -1]) == 4\n   Evaluated: 6 == 4\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqct2jyvq.jl:36\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqct2jyvq.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqct2jyvq.jl:29\n"
  exit_code: 1
  status: SyntaxError

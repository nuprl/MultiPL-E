name: HumanEval_57_monotonic
language: julia
results:
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ >= l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] <= l[i-1]\n               \
    \ return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphpr7_q3g.jl:37\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphpr7_q3g.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpr7_q3g.jl:32\ntest set: Test Failed at /tmp/tmphpr7_q3g.jl:40\n\
    \  Expression: candidate([9, 9, 9, 9]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphpr7_q3g.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphpr7_q3g.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphpr7_q3g.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if length(l) == 2\n        return true\n    end\n    if l[1] < l[2]\n\
    \        for i in 2:length(l)-1\n            if l[i] > l[i+1]\n              \
    \  return false\n            end\n        end\n    else\n        for i in 2:length(l)-1\n\
    \            if l[i] < l[i+1]\n                return false\n            end\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    # Check if the list is monotonically\
    \ increasing\n    if all(l[i] <= l[i+1] for i in 1:length(l)-1)\n        return\
    \ true\n    # Check if the list is monotonically decreasing\n    elseif all(l[i]\
    \ >= l[i+1] for i in 1:length(l)-1)\n        return true\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] - l[1] > 0\n        for i in 2:length(l)\n            if\
    \ l[i] - l[i-1] < 0\n                return false\n            end\n        end\n\
    \    else\n        for i in 2:length(l)\n            if l[i] - l[i-1] > 0\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return all(diff(l) .>= 0) || all(diff(l)\
    \ .<= 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ >= l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] <= l[i-1]\n               \
    \ return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2hytkfo.jl:37\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu2hytkfo.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2hytkfo.jl:32\ntest set: Test Failed at /tmp/tmpu2hytkfo.jl:40\n\
    \  Expression: candidate([9, 9, 9, 9]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu2hytkfo.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2hytkfo.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2hytkfo.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i-1]\
    \ < l[i]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i-1] > l[i]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i-1]\
    \ < l[i]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i-1] > l[i]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ >= l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] <= l[i-1]\n               \
    \ return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5v6vbhdj.jl:37\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\n   Evaluated: false == true\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5v6vbhdj.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v6vbhdj.jl:32\ntest set: Test Failed at /tmp/tmp5v6vbhdj.jl:40\n\
    \  Expression: candidate([9, 9, 9, 9]) == true\n   Evaluated: false == true\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5v6vbhdj.jl:40\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v6vbhdj.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5v6vbhdj.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] - l[1] > 0\n        for i in 2:length(l)-1\n           \
    \ if l[i+1] - l[i] < 0\n                return false\n            end\n      \
    \  end\n    else\n        for i in 2:length(l)-1\n            if l[i+1] - l[i]\
    \ > 0\n                return false\n            end\n        end\n    end\n \
    \   return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in 1:length(l)-1)\
    \ || all(l[i] >= l[i+1] for i in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ < l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] > l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] <= l[2]\n        for i in 2:length(l)-1\n            if\
    \ l[i] > l[i+1]\n                return false\n            end\n        end\n\
    \    else\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n    \
    \            return false\n            end\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ >= l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] <= l[i-1]\n               \
    \ return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpa8zfjowr.jl:37\\n  Expression: candidate([4,\
    \ 1, 1, 0]) == true\\n   Evaluated: false == true\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpa8zfjowr.jl:37\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8zfjowr.jl:32\\ntest set: Test Failed at /tmp/tmpa8zfjowr.jl:40\\\
    n  Expression: candidate([9, 9, 9, 9]) == true\\n   Evaluated: false == true\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa8zfjowr.jl:40\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa8zfjowr.jl:32\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    return all(l[i] <= l[i+1] for i in 1:length(l)-1)\
    \ || all(l[i] >= l[i+1] for i in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i-1]\
    \ < l[i]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i-1] > l[i]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    elseif\
    \ l[2] < l[1]\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n  \
    \              return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    elseif\
    \ l[1] > l[2]\n        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] > l[2]\n        for i in 2:length(l)\n            if l[i]\
    \ > l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] < l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) <= 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 1:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 1:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) < 2\n        return true\n\
    \    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n            if l[i]\
    \ < l[i-1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)\n            if l[i] > l[i-1]\n                return\
    \ false\n            end\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) ==\
    \ true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20,\
    \ 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n\
    \    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\nfunction\
    \ monotonic(l::Vector{Int64})::Bool \n    if length(l) == 1\n        return true\n\
    \    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n            if l[i]\
    \ > l[i+1]\n                return false\n            end\n        end\n    else\n\
    \        for i in 2:length(l)-1\n            if l[i] < l[i+1]\n              \
    \  return false\n            end\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    8      8\n"
  exit_code: 0
  status: OK

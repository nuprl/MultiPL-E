name: HumanEval_62_derivative
language: julia
results:
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9sw4ri3e.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9sw4ri3e.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9sw4ri3e.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sw4ri3e.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdc2a_st3.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdc2a_st3.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdc2a_st3.jl:20\ntest set: Test Failed at /tmp/tmpdc2a_st3.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdc2a_st3.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdc2a_st3.jl:20\ntest set: Test Failed at /tmp/tmpdc2a_st3.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdc2a_st3.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdc2a_st3.jl:20\ntest set: Test Failed at /tmp/tmpdc2a_st3.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpdc2a_st3.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdc2a_st3.jl:20\ntest set: Test Failed at /tmp/tmpdc2a_st3.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdc2a_st3.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdc2a_st3.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc2a_st3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpczhqfidp.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxhb6cgav.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxhb6cgav.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhb6cgav.jl:16\ntest set: Test Failed at /tmp/tmpxhb6cgav.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxhb6cgav.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhb6cgav.jl:16\ntest set: Test Failed at /tmp/tmpxhb6cgav.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxhb6cgav.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhb6cgav.jl:16\ntest set: Test Failed at /tmp/tmpxhb6cgav.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpxhb6cgav.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxhb6cgav.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhb6cgav.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    if length(xs) == 1\n        return [0]\n    else\n\
    \        return [xs[i] * i for i in 2:length(xs)]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpl1q0oxxc.jl:22\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpl1q0oxxc.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl1q0oxxc.jl:21\\ntest set: Test Failed at /tmp/tmpl1q0oxxc.jl:23\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpl1q0oxxc.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl1q0oxxc.jl:21\\ntest set: Test Failed at /tmp/tmpl1q0oxxc.jl:24\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpl1q0oxxc.jl:24\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl1q0oxxc.jl:21\\ntest set: Test Failed at /tmp/tmpl1q0oxxc.jl:25\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpl1q0oxxc.jl:25\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl1q0oxxc.jl:21\\ntest set: Test Failed at /tmp/tmpl1q0oxxc.jl:26\\\
    n  Expression: candidate([1]) == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpl1q0oxxc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl1q0oxxc.jl:21\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    return [i*xs[i] for i in 1:length(xs)-1]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2x0p7ayt.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2x0p7ayt.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2x0p7ayt.jl:17\ntest set: Test Failed at /tmp/tmp2x0p7ayt.jl:19\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2x0p7ayt.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2x0p7ayt.jl:17\ntest set: Test Failed at /tmp/tmp2x0p7ayt.jl:20\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2x0p7ayt.jl:20\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2x0p7ayt.jl:17\ntest set: Test Failed at /tmp/tmp2x0p7ayt.jl:21\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2x0p7ayt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2x0p7ayt.jl:17\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2x0p7ayt.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxmh_gcda.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmh_gcda.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmh_gcda.jl:16\ntest set: Test Failed at /tmp/tmpxmh_gcda.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmh_gcda.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmh_gcda.jl:16\ntest set: Test Failed at /tmp/tmpxmh_gcda.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmh_gcda.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmh_gcda.jl:16\ntest set: Test Failed at /tmp/tmpxmh_gcda.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpxmh_gcda.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmh_gcda.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxmh_gcda.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpab4wnqwg.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpab4wnqwg.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpab4wnqwg.jl:16\ntest set: Test Failed at /tmp/tmpab4wnqwg.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpab4wnqwg.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpab4wnqwg.jl:16\ntest set: Test Failed at /tmp/tmpab4wnqwg.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpab4wnqwg.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpab4wnqwg.jl:16\ntest set: Test Failed at /tmp/tmpab4wnqwg.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpab4wnqwg.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpab4wnqwg.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpab4wnqwg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpddcoodxc.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpddcoodxc.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddcoodxc.jl:20\ntest set: Test Failed at /tmp/tmpddcoodxc.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpddcoodxc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddcoodxc.jl:20\ntest set: Test Failed at /tmp/tmpddcoodxc.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpddcoodxc.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddcoodxc.jl:20\ntest set: Test Failed at /tmp/tmpddcoodxc.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpddcoodxc.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddcoodxc.jl:20\ntest set: Test Failed at /tmp/tmpddcoodxc.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpddcoodxc.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddcoodxc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpddcoodxc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs2 = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n      \
    \  xs2[i] = xs[i+1] * i\n    end\n    return xs2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp37gdh8g1.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp37gdh8g1.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp37gdh8g1.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp37gdh8g1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_l8jerhv.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_l8jerhv.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_l8jerhv.jl:16\\ntest set: Test Failed at /tmp/tmp_l8jerhv.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_l8jerhv.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_l8jerhv.jl:16\\ntest set: Test Failed at /tmp/tmp_l8jerhv.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_l8jerhv.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_l8jerhv.jl:16\\ntest set: Test Failed at /tmp/tmp_l8jerhv.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_l8jerhv.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_l8jerhv.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwivzjk2_.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwivzjk2_.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwivzjk2_.jl:20\ntest set: Test Failed at /tmp/tmpwivzjk2_.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwivzjk2_.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwivzjk2_.jl:20\ntest set: Test Failed at /tmp/tmpwivzjk2_.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwivzjk2_.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwivzjk2_.jl:20\ntest set: Test Failed at /tmp/tmpwivzjk2_.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpwivzjk2_.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwivzjk2_.jl:20\ntest set: Test Failed at /tmp/tmpwivzjk2_.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwivzjk2_.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwivzjk2_.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwivzjk2_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw9iroqn8.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw9iroqn8.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9iroqn8.jl:16\ntest set: Test Failed at /tmp/tmpw9iroqn8.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw9iroqn8.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9iroqn8.jl:16\ntest set: Test Failed at /tmp/tmpw9iroqn8.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw9iroqn8.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9iroqn8.jl:16\ntest set: Test Failed at /tmp/tmpw9iroqn8.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpw9iroqn8.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw9iroqn8.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9iroqn8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplw66xin4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplw66xin4.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw66xin4.jl:16\ntest set: Test Failed at /tmp/tmplw66xin4.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplw66xin4.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw66xin4.jl:16\ntest set: Test Failed at /tmp/tmplw66xin4.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplw66xin4.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw66xin4.jl:16\ntest set: Test Failed at /tmp/tmplw66xin4.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmplw66xin4.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw66xin4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplw66xin4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpst3u2k_2.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpst3u2k_2.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpst3u2k_2.jl:16\\ntest set: Test Failed at /tmp/tmpst3u2k_2.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpst3u2k_2.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpst3u2k_2.jl:16\\ntest set: Test Failed at /tmp/tmpst3u2k_2.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpst3u2k_2.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpst3u2k_2.jl:16\\ntest set: Test Failed at /tmp/tmpst3u2k_2.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpst3u2k_2.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpst3u2k_2.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr8lbtpgx.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8lbtpgx.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8lbtpgx.jl:16\ntest set: Test Failed at /tmp/tmpr8lbtpgx.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8lbtpgx.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8lbtpgx.jl:16\ntest set: Test Failed at /tmp/tmpr8lbtpgx.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr8lbtpgx.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8lbtpgx.jl:16\ntest set: Test Failed at /tmp/tmpr8lbtpgx.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpr8lbtpgx.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr8lbtpgx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr8lbtpgx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuqj2pd53.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuqj2pd53.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqj2pd53.jl:16\\ntest set: Test Failed at /tmp/tmpuqj2pd53.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuqj2pd53.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqj2pd53.jl:16\\ntest set: Test Failed at /tmp/tmpuqj2pd53.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuqj2pd53.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqj2pd53.jl:16\\ntest set: Test Failed at /tmp/tmpuqj2pd53.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuqj2pd53.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqj2pd53.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbfx_nh_y.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbfx_nh_y.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfx_nh_y.jl:20\ntest set: Test Failed at /tmp/tmpbfx_nh_y.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbfx_nh_y.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfx_nh_y.jl:20\ntest set: Test Failed at /tmp/tmpbfx_nh_y.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbfx_nh_y.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfx_nh_y.jl:20\ntest set: Test Failed at /tmp/tmpbfx_nh_y.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpbfx_nh_y.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfx_nh_y.jl:20\ntest set: Test Failed at /tmp/tmpbfx_nh_y.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbfx_nh_y.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfx_nh_y.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfx_nh_y.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkkvl3teq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkkvl3teq.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkkvl3teq.jl:16\ntest set: Test Failed at /tmp/tmpkkvl3teq.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkkvl3teq.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkkvl3teq.jl:16\ntest set: Test Failed at /tmp/tmpkkvl3teq.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkkvl3teq.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkkvl3teq.jl:16\ntest set: Test Failed at /tmp/tmpkkvl3teq.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpkkvl3teq.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkkvl3teq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkvl3teq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8evaodp2.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8evaodp2.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8evaodp2.jl:16\ntest set: Test Failed at /tmp/tmp8evaodp2.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8evaodp2.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8evaodp2.jl:16\ntest set: Test Failed at /tmp/tmp8evaodp2.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8evaodp2.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8evaodp2.jl:16\ntest set: Test Failed at /tmp/tmp8evaodp2.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp8evaodp2.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8evaodp2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8evaodp2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm3aby5yv.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm3aby5yv.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm3aby5yv.jl:16\ntest set: Test Failed at /tmp/tmpm3aby5yv.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm3aby5yv.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm3aby5yv.jl:16\ntest set: Test Failed at /tmp/tmpm3aby5yv.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm3aby5yv.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm3aby5yv.jl:16\ntest set: Test Failed at /tmp/tmpm3aby5yv.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpm3aby5yv.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm3aby5yv.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3aby5yv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfbg6yo6t.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfbg6yo6t.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfbg6yo6t.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfbg6yo6t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzgo8e1yt.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzgo8e1yt.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzgo8e1yt.jl:16\\ntest set: Test Failed at /tmp/tmpzgo8e1yt.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzgo8e1yt.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzgo8e1yt.jl:16\\ntest set: Test Failed at /tmp/tmpzgo8e1yt.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzgo8e1yt.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzgo8e1yt.jl:16\\ntest set: Test Failed at /tmp/tmpzgo8e1yt.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzgo8e1yt.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzgo8e1yt.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2o9v3ux6.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2o9v3ux6.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o9v3ux6.jl:16\ntest set: Test Failed at /tmp/tmp2o9v3ux6.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2o9v3ux6.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o9v3ux6.jl:16\ntest set: Test Failed at /tmp/tmp2o9v3ux6.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2o9v3ux6.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o9v3ux6.jl:16\ntest set: Test Failed at /tmp/tmp2o9v3ux6.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2o9v3ux6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o9v3ux6.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o9v3ux6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgefdcf4g.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgefdcf4g.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgefdcf4g.jl:16\ntest set: Test Failed at /tmp/tmpgefdcf4g.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgefdcf4g.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgefdcf4g.jl:16\ntest set: Test Failed at /tmp/tmpgefdcf4g.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgefdcf4g.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgefdcf4g.jl:16\ntest set: Test Failed at /tmp/tmpgefdcf4g.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpgefdcf4g.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgefdcf4g.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgefdcf4g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpa3xra0_2.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa3xra0_2.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa3xra0_2.jl:16\\ntest set: Test Failed at /tmp/tmpa3xra0_2.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa3xra0_2.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa3xra0_2.jl:16\\ntest set: Test Failed at /tmp/tmpa3xra0_2.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa3xra0_2.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa3xra0_2.jl:16\\ntest set: Test Failed at /tmp/tmpa3xra0_2.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpa3xra0_2.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa3xra0_2.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i + 1] * (i + 1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuaq3wpa2.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuaq3wpa2.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuaq3wpa2.jl:20\\ntest set: Test Failed at /tmp/tmpuaq3wpa2.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuaq3wpa2.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuaq3wpa2.jl:20\\ntest set: Test Failed at /tmp/tmpuaq3wpa2.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuaq3wpa2.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuaq3wpa2.jl:20\\ntest set: Test Failed at /tmp/tmpuaq3wpa2.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuaq3wpa2.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuaq3wpa2.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpsi7keewy.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsi7keewy.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsi7keewy.jl:20\ntest set: Test Failed at /tmp/tmpsi7keewy.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsi7keewy.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsi7keewy.jl:20\ntest set: Test Failed at /tmp/tmpsi7keewy.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsi7keewy.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsi7keewy.jl:20\ntest set: Test Failed at /tmp/tmpsi7keewy.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpsi7keewy.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsi7keewy.jl:20\ntest set: Test Failed at /tmp/tmpsi7keewy.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsi7keewy.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsi7keewy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsi7keewy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpswn8afy4.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpswn8afy4.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswn8afy4.jl:16\\ntest set: Test Failed at /tmp/tmpswn8afy4.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpswn8afy4.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswn8afy4.jl:16\\ntest set: Test Failed at /tmp/tmpswn8afy4.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpswn8afy4.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswn8afy4.jl:16\\ntest set: Test Failed at /tmp/tmpswn8afy4.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpswn8afy4.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswn8afy4.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1l2w0q2o.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1l2w0q2o.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1l2w0q2o.jl:16\\ntest set: Test Failed at /tmp/tmp1l2w0q2o.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1l2w0q2o.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1l2w0q2o.jl:16\\ntest set: Test Failed at /tmp/tmp1l2w0q2o.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1l2w0q2o.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1l2w0q2o.jl:16\\ntest set: Test Failed at /tmp/tmp1l2w0q2o.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1l2w0q2o.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1l2w0q2o.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq7h59v4t.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq7h59v4t.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq7h59v4t.jl:16\ntest set: Test Failed at /tmp/tmpq7h59v4t.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq7h59v4t.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq7h59v4t.jl:16\ntest set: Test Failed at /tmp/tmpq7h59v4t.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq7h59v4t.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq7h59v4t.jl:16\ntest set: Test Failed at /tmp/tmpq7h59v4t.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpq7h59v4t.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq7h59v4t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq7h59v4t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpag9oynqh.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpag9oynqh.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag9oynqh.jl:16\\ntest set: Test Failed at /tmp/tmpag9oynqh.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpag9oynqh.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag9oynqh.jl:16\\ntest set: Test Failed at /tmp/tmpag9oynqh.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpag9oynqh.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag9oynqh.jl:16\\ntest set: Test Failed at /tmp/tmpag9oynqh.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpag9oynqh.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpag9oynqh.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2jm_c1k1.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2jm_c1k1.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jm_c1k1.jl:16\ntest set: Test Failed at /tmp/tmp2jm_c1k1.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2jm_c1k1.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jm_c1k1.jl:16\ntest set: Test Failed at /tmp/tmp2jm_c1k1.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2jm_c1k1.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jm_c1k1.jl:16\ntest set: Test Failed at /tmp/tmp2jm_c1k1.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2jm_c1k1.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jm_c1k1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jm_c1k1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2hcmql8u.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2hcmql8u.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hcmql8u.jl:20\ntest set: Test Failed at /tmp/tmp2hcmql8u.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2hcmql8u.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hcmql8u.jl:20\ntest set: Test Failed at /tmp/tmp2hcmql8u.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2hcmql8u.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hcmql8u.jl:20\ntest set: Test Failed at /tmp/tmp2hcmql8u.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2hcmql8u.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hcmql8u.jl:20\ntest set: Test Failed at /tmp/tmp2hcmql8u.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2hcmql8u.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2hcmql8u.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hcmql8u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7v5_w9yn.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7v5_w9yn.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7v5_w9yn.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7v5_w9yn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i + 1] * (i + 1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkymli72q.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkymli72q.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkymli72q.jl:20\ntest set: Test Failed at /tmp/tmpkymli72q.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkymli72q.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkymli72q.jl:20\ntest set: Test Failed at /tmp/tmpkymli72q.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkymli72q.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkymli72q.jl:20\ntest set: Test Failed at /tmp/tmpkymli72q.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpkymli72q.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkymli72q.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkymli72q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2w737x9a.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2w737x9a.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w737x9a.jl:16\ntest set: Test Failed at /tmp/tmp2w737x9a.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2w737x9a.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w737x9a.jl:16\ntest set: Test Failed at /tmp/tmp2w737x9a.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2w737x9a.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w737x9a.jl:16\ntest set: Test Failed at /tmp/tmp2w737x9a.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2w737x9a.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2w737x9a.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2w737x9a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb3cdm9iq.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb3cdm9iq.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb3cdm9iq.jl:20\ntest set: Test Failed at /tmp/tmpb3cdm9iq.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb3cdm9iq.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb3cdm9iq.jl:20\ntest set: Test Failed at /tmp/tmpb3cdm9iq.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb3cdm9iq.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb3cdm9iq.jl:20\ntest set: Test Failed at /tmp/tmpb3cdm9iq.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpb3cdm9iq.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb3cdm9iq.jl:20\ntest set: Test Failed at /tmp/tmpb3cdm9iq.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb3cdm9iq.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb3cdm9iq.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb3cdm9iq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1vicwewy.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1vicwewy.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1vicwewy.jl:16\ntest set: Test Failed at /tmp/tmp1vicwewy.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1vicwewy.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1vicwewy.jl:16\ntest set: Test Failed at /tmp/tmp1vicwewy.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1vicwewy.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1vicwewy.jl:16\ntest set: Test Failed at /tmp/tmp1vicwewy.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp1vicwewy.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1vicwewy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1vicwewy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6xekxhf.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb6xekxhf.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6xekxhf.jl:16\ntest set: Test Failed at /tmp/tmpb6xekxhf.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb6xekxhf.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6xekxhf.jl:16\ntest set: Test Failed at /tmp/tmpb6xekxhf.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb6xekxhf.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6xekxhf.jl:16\ntest set: Test Failed at /tmp/tmpb6xekxhf.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpb6xekxhf.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6xekxhf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6xekxhf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy2lur9c3.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy2lur9c3.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy2lur9c3.jl:16\ntest set: Test Failed at /tmp/tmpy2lur9c3.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy2lur9c3.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy2lur9c3.jl:16\ntest set: Test Failed at /tmp/tmpy2lur9c3.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy2lur9c3.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy2lur9c3.jl:16\ntest set: Test Failed at /tmp/tmpy2lur9c3.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpy2lur9c3.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy2lur9c3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy2lur9c3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9972rp9.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9972rp9.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9972rp9.jl:20\ntest set: Test Failed at /tmp/tmpc9972rp9.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9972rp9.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9972rp9.jl:20\ntest set: Test Failed at /tmp/tmpc9972rp9.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9972rp9.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9972rp9.jl:20\ntest set: Test Failed at /tmp/tmpc9972rp9.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpc9972rp9.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9972rp9.jl:20\ntest set: Test Failed at /tmp/tmpc9972rp9.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpc9972rp9.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc9972rp9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9972rp9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw1fe6frm.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw1fe6frm.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw1fe6frm.jl:16\\ntest set: Test Failed at /tmp/tmpw1fe6frm.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw1fe6frm.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw1fe6frm.jl:16\\ntest set: Test Failed at /tmp/tmpw1fe6frm.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpw1fe6frm.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw1fe6frm.jl:16\\ntest set: Test Failed at /tmp/tmpw1fe6frm.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw1fe6frm.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw1fe6frm.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf8f6r4me.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf8f6r4me.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf8f6r4me.jl:16\ntest set: Test Failed at /tmp/tmpf8f6r4me.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf8f6r4me.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf8f6r4me.jl:16\ntest set: Test Failed at /tmp/tmpf8f6r4me.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpf8f6r4me.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf8f6r4me.jl:16\ntest set: Test Failed at /tmp/tmpf8f6r4me.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpf8f6r4me.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf8f6r4me.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf8f6r4me.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpokcgmp7q.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpokcgmp7q.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokcgmp7q.jl:20\\ntest set: Test Failed at /tmp/tmpokcgmp7q.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpokcgmp7q.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokcgmp7q.jl:20\\ntest set: Test Failed at /tmp/tmpokcgmp7q.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpokcgmp7q.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokcgmp7q.jl:20\\ntest set: Test Failed at /tmp/tmpokcgmp7q.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpokcgmp7q.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokcgmp7q.jl:20\\ntest set: Test Failed at /tmp/tmpokcgmp7q.jl:25\\\
    n  Expression: candidate([1]) == '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_deriv = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_deriv)\n\
    \        xs_deriv[i] = xs[i+1] * (i+1)\n    end\n    return xs_deriv\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxsusb7ey.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxsusb7ey.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsusb7ey.jl:20\ntest set: Test Failed at /tmp/tmpxsusb7ey.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxsusb7ey.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsusb7ey.jl:20\ntest set: Test Failed at /tmp/tmpxsusb7ey.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxsusb7ey.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsusb7ey.jl:20\ntest set: Test Failed at /tmp/tmpxsusb7ey.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpxsusb7ey.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxsusb7ey.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxsusb7ey.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2nho8dlc.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2nho8dlc.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2nho8dlc.jl:20\ntest set: Test Failed at /tmp/tmp2nho8dlc.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2nho8dlc.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2nho8dlc.jl:20\ntest set: Test Failed at /tmp/tmp2nho8dlc.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2nho8dlc.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2nho8dlc.jl:20\ntest set: Test Failed at /tmp/tmp2nho8dlc.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp2nho8dlc.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2nho8dlc.jl:20\ntest set: Test Failed at /tmp/tmp2nho8dlc.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2nho8dlc.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2nho8dlc.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2nho8dlc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6c1o7pf4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6c1o7pf4.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6c1o7pf4.jl:16\ntest set: Test Failed at /tmp/tmp6c1o7pf4.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6c1o7pf4.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6c1o7pf4.jl:16\ntest set: Test Failed at /tmp/tmp6c1o7pf4.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6c1o7pf4.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6c1o7pf4.jl:16\ntest set: Test Failed at /tmp/tmp6c1o7pf4.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp6c1o7pf4.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6c1o7pf4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6c1o7pf4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    dxs =\
    \ zeros(Int64, n-1)\n    for i in 1:n-1\n        dxs[i] = xs[i+1] * i\n    end\n\
    \    return dxs\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7d0c3pq4.jl:29\\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\nStacktrace:\\n [1] top-level\
    \ scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxj3x7kkf.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxj3x7kkf.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxj3x7kkf.jl:16\ntest set: Test Failed at /tmp/tmpxj3x7kkf.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxj3x7kkf.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxj3x7kkf.jl:16\ntest set: Test Failed at /tmp/tmpxj3x7kkf.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxj3x7kkf.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxj3x7kkf.jl:16\ntest set: Test Failed at /tmp/tmpxj3x7kkf.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpxj3x7kkf.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxj3x7kkf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxj3x7kkf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5wbqrk91.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5wbqrk91.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wbqrk91.jl:20\ntest set: Test Failed at /tmp/tmp5wbqrk91.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5wbqrk91.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wbqrk91.jl:20\ntest set: Test Failed at /tmp/tmp5wbqrk91.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5wbqrk91.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wbqrk91.jl:20\ntest set: Test Failed at /tmp/tmp5wbqrk91.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp5wbqrk91.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wbqrk91.jl:20\ntest set: Test Failed at /tmp/tmp5wbqrk91.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5wbqrk91.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wbqrk91.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wbqrk91.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i = 1:n-1\n      \
    \  ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1tje4eo6.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tje4eo6.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tje4eo6.jl:16\ntest set: Test Failed at /tmp/tmp1tje4eo6.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tje4eo6.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tje4eo6.jl:16\ntest set: Test Failed at /tmp/tmp1tje4eo6.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tje4eo6.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tje4eo6.jl:16\ntest set: Test Failed at /tmp/tmp1tje4eo6.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp1tje4eo6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tje4eo6.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1tje4eo6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpj0m8d9v3.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj0m8d9v3.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj0m8d9v3.jl:20\ntest set: Test Failed at /tmp/tmpj0m8d9v3.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj0m8d9v3.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj0m8d9v3.jl:20\ntest set: Test Failed at /tmp/tmpj0m8d9v3.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj0m8d9v3.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj0m8d9v3.jl:20\ntest set: Test Failed at /tmp/tmpj0m8d9v3.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpj0m8d9v3.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj0m8d9v3.jl:20\ntest set: Test Failed at /tmp/tmpj0m8d9v3.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj0m8d9v3.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj0m8d9v3.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0m8d9v3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp97n9vic_.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp97n9vic_.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp97n9vic_.jl:16\\ntest set: Test Failed at /tmp/tmp97n9vic_.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp97n9vic_.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp97n9vic_.jl:16\\ntest set: Test Failed at /tmp/tmp97n9vic_.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp97n9vic_.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp97n9vic_.jl:16\\ntest set: Test Failed at /tmp/tmp97n9vic_.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp97n9vic_.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp97n9vic_.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpt7a8f0yh.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt7a8f0yh.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt7a8f0yh.jl:20\\ntest set: Test Failed at /tmp/tmpt7a8f0yh.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpt7a8f0yh.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt7a8f0yh.jl:20\\ntest set: Test Failed at /tmp/tmpt7a8f0yh.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpt7a8f0yh.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt7a8f0yh.jl:20\\ntest set: Test Failed at /tmp/tmpt7a8f0yh.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt7a8f0yh.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt7a8f0yh.jl:20\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87ugk1c9.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87ugk1c9.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87ugk1c9.jl:16\ntest set: Test Failed at /tmp/tmp87ugk1c9.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87ugk1c9.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87ugk1c9.jl:16\ntest set: Test Failed at /tmp/tmp87ugk1c9.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87ugk1c9.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87ugk1c9.jl:16\ntest set: Test Failed at /tmp/tmp87ugk1c9.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp87ugk1c9.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87ugk1c9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87ugk1c9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_67b48mb.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_67b48mb.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_67b48mb.jl:20\\ntest set: Test Failed at /tmp/tmp_67b48mb.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_67b48mb.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_67b48mb.jl:20\\ntest set: Test Failed at /tmp/tmp_67b48mb.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_67b48mb.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_67b48mb.jl:20\\ntest set: Test Failed at /tmp/tmp_67b48mb.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_67b48mb.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_67b48mb.jl:20\\ntest set: Test Failed at /tmp/tmp_67b48mb.jl:25\\\
    n  Expression: candidate([1]) == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp_67b48mb.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_67b48mb.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i = 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprl56ruvt.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprl56ruvt.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl56ruvt.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprl56ruvt.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [xs[i] * i for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_wtxfcda.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_wtxfcda.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wtxfcda.jl:16\ntest set: Test Failed at /tmp/tmp_wtxfcda.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_wtxfcda.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wtxfcda.jl:16\ntest set: Test Failed at /tmp/tmp_wtxfcda.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_wtxfcda.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wtxfcda.jl:16\ntest set: Test Failed at /tmp/tmp_wtxfcda.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp_wtxfcda.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wtxfcda.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_wtxfcda.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs)\
    \ - 1\n        xs_derivative[i] = xs[i] * i\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqtq4526a.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqtq4526a.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqtq4526a.jl:20\\ntest set: Test Failed at /tmp/tmpqtq4526a.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqtq4526a.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqtq4526a.jl:20\\ntest set: Test Failed at /tmp/tmpqtq4526a.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqtq4526a.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqtq4526a.jl:20\\ntest set: Test Failed at /tmp/tmpqtq4526a.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqtq4526a.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqtq4526a.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeghn8f65.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeghn8f65.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeghn8f65.jl:16\ntest set: Test Failed at /tmp/tmpeghn8f65.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeghn8f65.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeghn8f65.jl:16\ntest set: Test Failed at /tmp/tmpeghn8f65.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeghn8f65.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeghn8f65.jl:16\ntest set: Test Failed at /tmp/tmpeghn8f65.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpeghn8f65.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeghn8f65.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeghn8f65.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp14sswblb.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp14sswblb.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14sswblb.jl:16\ntest set: Test Failed at /tmp/tmp14sswblb.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp14sswblb.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14sswblb.jl:16\ntest set: Test Failed at /tmp/tmp14sswblb.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp14sswblb.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14sswblb.jl:16\ntest set: Test Failed at /tmp/tmp14sswblb.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp14sswblb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14sswblb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp14sswblb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = [i * xs[i] for i in 1:length(xs)-1]\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl8pino7m.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl8pino7m.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl8pino7m.jl:17\ntest set: Test Failed at /tmp/tmpl8pino7m.jl:19\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl8pino7m.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl8pino7m.jl:17\ntest set: Test Failed at /tmp/tmpl8pino7m.jl:20\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl8pino7m.jl:20\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl8pino7m.jl:17\ntest set: Test Failed at /tmp/tmpl8pino7m.jl:21\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpl8pino7m.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl8pino7m.jl:17\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl8pino7m.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0yd2sr1e.jl:29\\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp0yd2sr1e.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0yd2sr1e.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     1      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjpelzzge.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpjpelzzge.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjpelzzge.jl:16\\ntest set: Test Failed at /tmp/tmpjpelzzge.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpjpelzzge.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjpelzzge.jl:16\\ntest set: Test Failed at /tmp/tmpjpelzzge.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpjpelzzge.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjpelzzge.jl:16\\ntest set: Test Failed at /tmp/tmpjpelzzge.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjpelzzge.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjpelzzge.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpi6ue7fz1.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi6ue7fz1.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6ue7fz1.jl:20\ntest set: Test Failed at /tmp/tmpi6ue7fz1.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi6ue7fz1.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6ue7fz1.jl:20\ntest set: Test Failed at /tmp/tmpi6ue7fz1.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi6ue7fz1.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6ue7fz1.jl:20\ntest set: Test Failed at /tmp/tmpi6ue7fz1.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpi6ue7fz1.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6ue7fz1.jl:20\ntest set: Test Failed at /tmp/tmpi6ue7fz1.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi6ue7fz1.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi6ue7fz1.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi6ue7fz1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuizwsm1h.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuizwsm1h.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuizwsm1h.jl:16\ntest set: Test Failed at /tmp/tmpuizwsm1h.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuizwsm1h.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuizwsm1h.jl:16\ntest set: Test Failed at /tmp/tmpuizwsm1h.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuizwsm1h.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuizwsm1h.jl:16\ntest set: Test Failed at /tmp/tmpuizwsm1h.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpuizwsm1h.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuizwsm1h.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuizwsm1h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_o739olb.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_o739olb.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_o739olb.jl:16\ntest set: Test Failed at /tmp/tmp_o739olb.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_o739olb.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_o739olb.jl:16\ntest set: Test Failed at /tmp/tmp_o739olb.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_o739olb.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_o739olb.jl:16\ntest set: Test Failed at /tmp/tmp_o739olb.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp_o739olb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_o739olb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_o739olb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvyrhmrr.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuvyrhmrr.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvyrhmrr.jl:16\ntest set: Test Failed at /tmp/tmpuvyrhmrr.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuvyrhmrr.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvyrhmrr.jl:16\ntest set: Test Failed at /tmp/tmpuvyrhmrr.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuvyrhmrr.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvyrhmrr.jl:16\ntest set: Test Failed at /tmp/tmpuvyrhmrr.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpuvyrhmrr.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvyrhmrr.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvyrhmrr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpswmbf6zo.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpswmbf6zo.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswmbf6zo.jl:20\\ntest set: Test Failed at /tmp/tmpswmbf6zo.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpswmbf6zo.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswmbf6zo.jl:20\\ntest set: Test Failed at /tmp/tmpswmbf6zo.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpswmbf6zo.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswmbf6zo.jl:20\\ntest set: Test Failed at /tmp/tmpswmbf6zo.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpswmbf6zo.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswmbf6zo.jl:20\\ntest set: Test Failed at /tmp/tmpswmbf6zo.jl:25\\\
    n  Expression: candidate([1]) == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpswmbf6zo.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpswmbf6zo.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpiwfge4z2.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpiwfge4z2.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiwfge4z2.jl:16\\ntest set: Test Failed at /tmp/tmpiwfge4z2.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpiwfge4z2.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiwfge4z2.jl:16\\ntest set: Test Failed at /tmp/tmpiwfge4z2.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpiwfge4z2.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiwfge4z2.jl:16\\ntest set: Test Failed at /tmp/tmpiwfge4z2.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpiwfge4z2.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiwfge4z2.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [xs[i]\
    \ * i for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpaqeuwwy8.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaqeuwwy8.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqeuwwy8.jl:20\ntest set: Test Failed at /tmp/tmpaqeuwwy8.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaqeuwwy8.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqeuwwy8.jl:20\ntest set: Test Failed at /tmp/tmpaqeuwwy8.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaqeuwwy8.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqeuwwy8.jl:20\ntest set: Test Failed at /tmp/tmpaqeuwwy8.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpaqeuwwy8.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqeuwwy8.jl:20\ntest set: Test Failed at /tmp/tmpaqeuwwy8.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaqeuwwy8.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqeuwwy8.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaqeuwwy8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_yv9pv9.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj_yv9pv9.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_yv9pv9.jl:16\ntest set: Test Failed at /tmp/tmpj_yv9pv9.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj_yv9pv9.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_yv9pv9.jl:16\ntest set: Test Failed at /tmp/tmpj_yv9pv9.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj_yv9pv9.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_yv9pv9.jl:16\ntest set: Test Failed at /tmp/tmpj_yv9pv9.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpj_yv9pv9.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_yv9pv9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_yv9pv9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpafc5e0f7.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpafc5e0f7.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpafc5e0f7.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpafc5e0f7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1]*(i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpt9uhuxyk.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt9uhuxyk.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9uhuxyk.jl:20\\ntest set: Test Failed at /tmp/tmpt9uhuxyk.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpt9uhuxyk.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9uhuxyk.jl:20\\ntest set: Test Failed at /tmp/tmpt9uhuxyk.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpt9uhuxyk.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9uhuxyk.jl:20\\ntest set: Test Failed at /tmp/tmpt9uhuxyk.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt9uhuxyk.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9uhuxyk.jl:20\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpt9uhuxyk.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = Int64[]\n    for i in 1:length(xs)-1\n        push!(xs_derivative,\
    \ i*xs[i+1])\n    end\n    return xs_derivative\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpanataloi.jl:29\\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpanataloi.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpanataloi.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     1      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoav1e3sn.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoav1e3sn.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoav1e3sn.jl:16\ntest set: Test Failed at /tmp/tmpoav1e3sn.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoav1e3sn.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoav1e3sn.jl:16\ntest set: Test Failed at /tmp/tmpoav1e3sn.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoav1e3sn.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoav1e3sn.jl:16\ntest set: Test Failed at /tmp/tmpoav1e3sn.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpoav1e3sn.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoav1e3sn.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoav1e3sn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0lmpchos.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0lmpchos.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0lmpchos.jl:16\ntest set: Test Failed at /tmp/tmp0lmpchos.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0lmpchos.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0lmpchos.jl:16\ntest set: Test Failed at /tmp/tmp0lmpchos.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0lmpchos.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0lmpchos.jl:16\ntest set: Test Failed at /tmp/tmp0lmpchos.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp0lmpchos.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0lmpchos.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0lmpchos.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp24fypta0.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp24fypta0.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp24fypta0.jl:16\\ntest set: Test Failed at /tmp/tmp24fypta0.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp24fypta0.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp24fypta0.jl:16\\ntest set: Test Failed at /tmp/tmp24fypta0.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp24fypta0.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp24fypta0.jl:16\\ntest set: Test Failed at /tmp/tmp24fypta0.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp24fypta0.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp24fypta0.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsj6gocp9.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsj6gocp9.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj6gocp9.jl:16\ntest set: Test Failed at /tmp/tmpsj6gocp9.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsj6gocp9.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj6gocp9.jl:16\ntest set: Test Failed at /tmp/tmpsj6gocp9.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsj6gocp9.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj6gocp9.jl:16\ntest set: Test Failed at /tmp/tmpsj6gocp9.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpsj6gocp9.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj6gocp9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsj6gocp9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = i*xs[i+1]\n    end\n    return xs_new\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpifoo6lv6.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpifoo6lv6.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpifoo6lv6.jl:16\ntest set: Test Failed at /tmp/tmpifoo6lv6.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpifoo6lv6.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpifoo6lv6.jl:16\ntest set: Test Failed at /tmp/tmpifoo6lv6.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpifoo6lv6.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpifoo6lv6.jl:16\ntest set: Test Failed at /tmp/tmpifoo6lv6.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpifoo6lv6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpifoo6lv6.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpifoo6lv6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj72q_sd5.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj72q_sd5.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj72q_sd5.jl:16\ntest set: Test Failed at /tmp/tmpj72q_sd5.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj72q_sd5.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj72q_sd5.jl:16\ntest set: Test Failed at /tmp/tmpj72q_sd5.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj72q_sd5.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj72q_sd5.jl:16\ntest set: Test Failed at /tmp/tmpj72q_sd5.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpj72q_sd5.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj72q_sd5.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj72q_sd5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu8tas1i_.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu8tas1i_.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8tas1i_.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8tas1i_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplffmrei5.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplffmrei5.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplffmrei5.jl:20\ntest set: Test Failed at /tmp/tmplffmrei5.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplffmrei5.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplffmrei5.jl:20\ntest set: Test Failed at /tmp/tmplffmrei5.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplffmrei5.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplffmrei5.jl:20\ntest set: Test Failed at /tmp/tmplffmrei5.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmplffmrei5.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplffmrei5.jl:20\ntest set: Test Failed at /tmp/tmplffmrei5.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplffmrei5.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplffmrei5.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplffmrei5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeu8ss_3h.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeu8ss_3h.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeu8ss_3h.jl:16\\ntest set: Test Failed at /tmp/tmpeu8ss_3h.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpeu8ss_3h.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeu8ss_3h.jl:16\\ntest set: Test Failed at /tmp/tmpeu8ss_3h.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpeu8ss_3h.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeu8ss_3h.jl:16\\ntest set: Test Failed at /tmp/tmpeu8ss_3h.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeu8ss_3h.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeu8ss_3h.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_deriv = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n \
    \       xs_deriv[i] = xs[i+1] * (i+1)\n    end\n    return xs_deriv\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuj86p25h.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuj86p25h.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj86p25h.jl:20\ntest set: Test Failed at /tmp/tmpuj86p25h.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuj86p25h.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj86p25h.jl:20\ntest set: Test Failed at /tmp/tmpuj86p25h.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpuj86p25h.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj86p25h.jl:20\ntest set: Test Failed at /tmp/tmpuj86p25h.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpuj86p25h.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuj86p25h.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuj86p25h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu0novfmy.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu0novfmy.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu0novfmy.jl:16\ntest set: Test Failed at /tmp/tmpu0novfmy.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu0novfmy.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu0novfmy.jl:16\ntest set: Test Failed at /tmp/tmpu0novfmy.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu0novfmy.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu0novfmy.jl:16\ntest set: Test Failed at /tmp/tmpu0novfmy.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpu0novfmy.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu0novfmy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu0novfmy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpc3kh4t12.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3kh4t12.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3kh4t12.jl:16\\ntest set: Test Failed at /tmp/tmpc3kh4t12.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3kh4t12.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3kh4t12.jl:16\\ntest set: Test Failed at /tmp/tmpc3kh4t12.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpc3kh4t12.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3kh4t12.jl:16\\ntest set: Test Failed at /tmp/tmpc3kh4t12.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc3kh4t12.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc3kh4t12.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpigwj2x4e.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpigwj2x4e.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpigwj2x4e.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpigwj2x4e.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sn_kmrn.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6sn_kmrn.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sn_kmrn.jl:20\ntest set: Test Failed at /tmp/tmp6sn_kmrn.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6sn_kmrn.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sn_kmrn.jl:20\ntest set: Test Failed at /tmp/tmp6sn_kmrn.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6sn_kmrn.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sn_kmrn.jl:20\ntest set: Test Failed at /tmp/tmp6sn_kmrn.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp6sn_kmrn.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sn_kmrn.jl:20\ntest set: Test Failed at /tmp/tmp6sn_kmrn.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6sn_kmrn.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sn_kmrn.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sn_kmrn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxmryr5m4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmryr5m4.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmryr5m4.jl:16\ntest set: Test Failed at /tmp/tmpxmryr5m4.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmryr5m4.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmryr5m4.jl:16\ntest set: Test Failed at /tmp/tmpxmryr5m4.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxmryr5m4.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmryr5m4.jl:16\ntest set: Test Failed at /tmp/tmpxmryr5m4.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpxmryr5m4.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxmryr5m4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxmryr5m4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i] * i\n    end\n    return xs_derivative\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1tvq7aid.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tvq7aid.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tvq7aid.jl:20\ntest set: Test Failed at /tmp/tmp1tvq7aid.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tvq7aid.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tvq7aid.jl:20\ntest set: Test Failed at /tmp/tmp1tvq7aid.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1tvq7aid.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tvq7aid.jl:20\ntest set: Test Failed at /tmp/tmp1tvq7aid.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp1tvq7aid.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1tvq7aid.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1tvq7aid.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqt9lvy0j.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9lvy0j.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9lvy0j.jl:16\\ntest set: Test Failed at /tmp/tmpqt9lvy0j.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9lvy0j.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9lvy0j.jl:16\\ntest set: Test Failed at /tmp/tmpqt9lvy0j.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9lvy0j.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9lvy0j.jl:16\\ntest set: Test Failed at /tmp/tmpqt9lvy0j.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqt9lvy0j.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqt9lvy0j.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmppnjjzfd8.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnjjzfd8.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnjjzfd8.jl:20\ntest set: Test Failed at /tmp/tmppnjjzfd8.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnjjzfd8.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnjjzfd8.jl:20\ntest set: Test Failed at /tmp/tmppnjjzfd8.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnjjzfd8.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnjjzfd8.jl:20\ntest set: Test Failed at /tmp/tmppnjjzfd8.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmppnjjzfd8.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnjjzfd8.jl:20\ntest set: Test Failed at /tmp/tmppnjjzfd8.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnjjzfd8.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnjjzfd8.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnjjzfd8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjhkkj45h.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjhkkj45h.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjhkkj45h.jl:20\ntest set: Test Failed at /tmp/tmpjhkkj45h.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjhkkj45h.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjhkkj45h.jl:20\ntest set: Test Failed at /tmp/tmpjhkkj45h.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjhkkj45h.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjhkkj45h.jl:20\ntest set: Test Failed at /tmp/tmpjhkkj45h.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpjhkkj45h.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjhkkj45h.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhkkj45h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0soh6jci.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0soh6jci.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0soh6jci.jl:20\ntest set: Test Failed at /tmp/tmp0soh6jci.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0soh6jci.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0soh6jci.jl:20\ntest set: Test Failed at /tmp/tmp0soh6jci.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0soh6jci.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0soh6jci.jl:20\ntest set: Test Failed at /tmp/tmp0soh6jci.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp0soh6jci.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0soh6jci.jl:20\ntest set: Test Failed at /tmp/tmp0soh6jci.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0soh6jci.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0soh6jci.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0soh6jci.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmp84qlbq9s.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp84qlbq9s.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp84qlbq9s.jl:20\\ntest set: Test Failed at /tmp/tmp84qlbq9s.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp84qlbq9s.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp84qlbq9s.jl:20\\ntest set: Test Failed at /tmp/tmp84qlbq9s.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp84qlbq9s.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp84qlbq9s.jl:20\\ntest set: Test Failed at /tmp/tmp84qlbq9s.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp84qlbq9s.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp84qlbq9s.jl:20\\ntest set: Test Failed at /tmp/tmp84qlbq9s.jl:25\\\
    n  Expression: candidate([1]) == '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpakrbdutz.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpakrbdutz.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpakrbdutz.jl:16\\ntest set: Test Failed at /tmp/tmpakrbdutz.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpakrbdutz.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpakrbdutz.jl:16\\ntest set: Test Failed at /tmp/tmpakrbdutz.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpakrbdutz.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpakrbdutz.jl:16\\ntest set: Test Failed at /tmp/tmpakrbdutz.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpakrbdutz.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpakrbdutz.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptrl7n3zo.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptrl7n3zo.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrl7n3zo.jl:20\ntest set: Test Failed at /tmp/tmptrl7n3zo.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptrl7n3zo.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrl7n3zo.jl:20\ntest set: Test Failed at /tmp/tmptrl7n3zo.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptrl7n3zo.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrl7n3zo.jl:20\ntest set: Test Failed at /tmp/tmptrl7n3zo.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmptrl7n3zo.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrl7n3zo.jl:20\ntest set: Test Failed at /tmp/tmptrl7n3zo.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptrl7n3zo.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrl7n3zo.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrl7n3zo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpin3kb99y.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpin3kb99y.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpin3kb99y.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpin3kb99y.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp12jn3wdb.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12jn3wdb.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12jn3wdb.jl:16\ntest set: Test Failed at /tmp/tmp12jn3wdb.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12jn3wdb.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12jn3wdb.jl:16\ntest set: Test Failed at /tmp/tmp12jn3wdb.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp12jn3wdb.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12jn3wdb.jl:16\ntest set: Test Failed at /tmp/tmp12jn3wdb.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp12jn3wdb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12jn3wdb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12jn3wdb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    dxs = zeros(Int64, n-1)\n    for i in 1:n-1\n    \
    \    dxs[i] = xs[i+1] * i\n    end\n    return dxs\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzap3f21z.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzap3f21z.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzap3f21z.jl:16\ntest set: Test Failed at /tmp/tmpzap3f21z.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzap3f21z.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzap3f21z.jl:16\ntest set: Test Failed at /tmp/tmpzap3f21z.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzap3f21z.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzap3f21z.jl:16\ntest set: Test Failed at /tmp/tmpzap3f21z.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpzap3f21z.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzap3f21z.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzap3f21z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpii_ystla.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpii_ystla.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_ystla.jl:16\\ntest set: Test Failed at /tmp/tmpii_ystla.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpii_ystla.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_ystla.jl:16\\ntest set: Test Failed at /tmp/tmpii_ystla.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpii_ystla.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_ystla.jl:16\\ntest set: Test Failed at /tmp/tmpii_ystla.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpii_ystla.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_ystla.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3orqrxwe.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3orqrxwe.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3orqrxwe.jl:16\ntest set: Test Failed at /tmp/tmp3orqrxwe.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3orqrxwe.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3orqrxwe.jl:16\ntest set: Test Failed at /tmp/tmp3orqrxwe.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3orqrxwe.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3orqrxwe.jl:16\ntest set: Test Failed at /tmp/tmp3orqrxwe.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp3orqrxwe.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3orqrxwe.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3orqrxwe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprl0eox04.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprl0eox04.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl0eox04.jl:20\ntest set: Test Failed at /tmp/tmprl0eox04.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprl0eox04.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl0eox04.jl:20\ntest set: Test Failed at /tmp/tmprl0eox04.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprl0eox04.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl0eox04.jl:20\ntest set: Test Failed at /tmp/tmprl0eox04.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmprl0eox04.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl0eox04.jl:20\ntest set: Test Failed at /tmp/tmprl0eox04.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprl0eox04.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprl0eox04.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprl0eox04.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9zjv_n3m.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp9zjv_n3m.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9zjv_n3m.jl:16\\ntest set: Test Failed at /tmp/tmp9zjv_n3m.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp9zjv_n3m.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9zjv_n3m.jl:16\\ntest set: Test Failed at /tmp/tmp9zjv_n3m.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp9zjv_n3m.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9zjv_n3m.jl:16\\ntest set: Test Failed at /tmp/tmp9zjv_n3m.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9zjv_n3m.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9zjv_n3m.jl:16\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbc32xu1c.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbc32xu1c.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbc32xu1c.jl:16\ntest set: Test Failed at /tmp/tmpbc32xu1c.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbc32xu1c.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbc32xu1c.jl:16\ntest set: Test Failed at /tmp/tmpbc32xu1c.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbc32xu1c.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbc32xu1c.jl:16\ntest set: Test Failed at /tmp/tmpbc32xu1c.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpbc32xu1c.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbc32xu1c.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbc32xu1c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw5v_dy9m.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw5v_dy9m.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5v_dy9m.jl:16\ntest set: Test Failed at /tmp/tmpw5v_dy9m.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw5v_dy9m.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5v_dy9m.jl:16\ntest set: Test Failed at /tmp/tmpw5v_dy9m.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw5v_dy9m.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5v_dy9m.jl:16\ntest set: Test Failed at /tmp/tmpw5v_dy9m.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpw5v_dy9m.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5v_dy9m.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5v_dy9m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5s6dot0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo5s6dot0.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5s6dot0.jl:16\ntest set: Test Failed at /tmp/tmpo5s6dot0.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo5s6dot0.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5s6dot0.jl:16\ntest set: Test Failed at /tmp/tmpo5s6dot0.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo5s6dot0.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5s6dot0.jl:16\ntest set: Test Failed at /tmp/tmpo5s6dot0.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpo5s6dot0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo5s6dot0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5s6dot0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp27fx91di.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp27fx91di.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp27fx91di.jl:16\ntest set: Test Failed at /tmp/tmp27fx91di.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp27fx91di.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp27fx91di.jl:16\ntest set: Test Failed at /tmp/tmp27fx91di.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp27fx91di.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp27fx91di.jl:16\ntest set: Test Failed at /tmp/tmp27fx91di.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp27fx91di.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp27fx91di.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27fx91di.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1sxo07f4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1sxo07f4.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1sxo07f4.jl:16\ntest set: Test Failed at /tmp/tmp1sxo07f4.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1sxo07f4.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1sxo07f4.jl:16\ntest set: Test Failed at /tmp/tmp1sxo07f4.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1sxo07f4.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1sxo07f4.jl:16\ntest set: Test Failed at /tmp/tmp1sxo07f4.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp1sxo07f4.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1sxo07f4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1sxo07f4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphl814owo.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphl814owo.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphl814owo.jl:20\ntest set: Test Failed at /tmp/tmphl814owo.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphl814owo.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphl814owo.jl:20\ntest set: Test Failed at /tmp/tmphl814owo.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphl814owo.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphl814owo.jl:20\ntest set: Test Failed at /tmp/tmphl814owo.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmphl814owo.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphl814owo.jl:20\ntest set: Test Failed at /tmp/tmphl814owo.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphl814owo.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphl814owo.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphl814owo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr03f6c2r.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr03f6c2r.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr03f6c2r.jl:16\ntest set: Test Failed at /tmp/tmpr03f6c2r.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr03f6c2r.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr03f6c2r.jl:16\ntest set: Test Failed at /tmp/tmpr03f6c2r.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr03f6c2r.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr03f6c2r.jl:16\ntest set: Test Failed at /tmp/tmpr03f6c2r.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpr03f6c2r.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr03f6c2r.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr03f6c2r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptsfr12zk.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsfr12zk.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsfr12zk.jl:16\\ntest set: Test Failed at /tmp/tmptsfr12zk.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsfr12zk.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsfr12zk.jl:16\\ntest set: Test Failed at /tmp/tmptsfr12zk.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptsfr12zk.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsfr12zk.jl:16\\ntest set: Test Failed at /tmp/tmptsfr12zk.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptsfr12zk.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptsfr12zk.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfj_yyg8l.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpfj_yyg8l.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfj_yyg8l.jl:16\\ntest set: Test Failed at /tmp/tmpfj_yyg8l.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpfj_yyg8l.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfj_yyg8l.jl:16\\ntest set: Test Failed at /tmp/tmpfj_yyg8l.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpfj_yyg8l.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfj_yyg8l.jl:16\\ntest set: Test Failed at /tmp/tmpfj_yyg8l.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpfj_yyg8l.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfj_yyg8l.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplsekekpa.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplsekekpa.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplsekekpa.jl:20\ntest set: Test Failed at /tmp/tmplsekekpa.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplsekekpa.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplsekekpa.jl:20\ntest set: Test Failed at /tmp/tmplsekekpa.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplsekekpa.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplsekekpa.jl:20\ntest set: Test Failed at /tmp/tmplsekekpa.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmplsekekpa.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplsekekpa.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplsekekpa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mskcu95.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mskcu95.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mskcu95.jl:16\ntest set: Test Failed at /tmp/tmp5mskcu95.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mskcu95.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mskcu95.jl:16\ntest set: Test Failed at /tmp/tmp5mskcu95.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mskcu95.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mskcu95.jl:16\ntest set: Test Failed at /tmp/tmp5mskcu95.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp5mskcu95.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mskcu95.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mskcu95.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    return xs[2:n] .* (1:n-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvr8ysflm.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvr8ysflm.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvr8ysflm.jl:16\ntest set: Test Failed at /tmp/tmpvr8ysflm.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvr8ysflm.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvr8ysflm.jl:16\ntest set: Test Failed at /tmp/tmpvr8ysflm.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvr8ysflm.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvr8ysflm.jl:16\ntest set: Test Failed at /tmp/tmpvr8ysflm.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpvr8ysflm.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvr8ysflm.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvr8ysflm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq5nuocrb.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq5nuocrb.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq5nuocrb.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq5nuocrb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcg9mj962.jl:29\\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\\n   Evaluated: [0] == Int64[]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpcg9mj962.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcg9mj962.jl:24\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1frrvea4.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1frrvea4.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1frrvea4.jl:16\\ntest set: Test Failed at /tmp/tmp1frrvea4.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1frrvea4.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1frrvea4.jl:16\\ntest set: Test Failed at /tmp/tmp1frrvea4.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp1frrvea4.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1frrvea4.jl:16\\ntest set: Test Failed at /tmp/tmp1frrvea4.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1frrvea4.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1frrvea4.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = i * xs[i + 1]\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp92u1nc9t.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp92u1nc9t.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp92u1nc9t.jl:16\\ntest set: Test Failed at /tmp/tmp92u1nc9t.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp92u1nc9t.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp92u1nc9t.jl:16\\ntest set: Test Failed at /tmp/tmp92u1nc9t.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp92u1nc9t.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp92u1nc9t.jl:16\\ntest set: Test Failed at /tmp/tmp92u1nc9t.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp92u1nc9t.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp92u1nc9t.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    return xs[2:end] .* (1:length(xs[2:end]))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk2i4pyqr.jl:21\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk2i4pyqr.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk2i4pyqr.jl:20\\ntest set: Test Failed at /tmp/tmpk2i4pyqr.jl:22\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpk2i4pyqr.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk2i4pyqr.jl:20\\ntest set: Test Failed at /tmp/tmpk2i4pyqr.jl:23\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpk2i4pyqr.jl:23\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk2i4pyqr.jl:20\\ntest set: Test Failed at /tmp/tmpk2i4pyqr.jl:24\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk2i4pyqr.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk2i4pyqr.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoea9fu8v.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoea9fu8v.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoea9fu8v.jl:16\ntest set: Test Failed at /tmp/tmpoea9fu8v.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoea9fu8v.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoea9fu8v.jl:16\ntest set: Test Failed at /tmp/tmpoea9fu8v.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoea9fu8v.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoea9fu8v.jl:16\ntest set: Test Failed at /tmp/tmpoea9fu8v.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpoea9fu8v.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoea9fu8v.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoea9fu8v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = []\n    for i in 1:length(xs)-1\n        push!(xs_new, i*xs[i+1])\n\
    \    end\n    return xs_new\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpa1a3kxet.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa1a3kxet.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa1a3kxet.jl:16\\ntest set: Test Failed at /tmp/tmpa1a3kxet.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [1, 4] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa1a3kxet.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa1a3kxet.jl:16\\ntest set: Test Failed at /tmp/tmpa1a3kxet.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [3, 4] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpa1a3kxet.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa1a3kxet.jl:16\\ntest set: Test Failed at /tmp/tmpa1a3kxet.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpa1a3kxet.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpa1a3kxet.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqmmfjk8t.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmmfjk8t.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmmfjk8t.jl:16\ntest set: Test Failed at /tmp/tmpqmmfjk8t.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmmfjk8t.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmmfjk8t.jl:16\ntest set: Test Failed at /tmp/tmpqmmfjk8t.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqmmfjk8t.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmmfjk8t.jl:16\ntest set: Test Failed at /tmp/tmpqmmfjk8t.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpqmmfjk8t.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqmmfjk8t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqmmfjk8t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcv0sv5kd.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcv0sv5kd.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcv0sv5kd.jl:20\ntest set: Test Failed at /tmp/tmpcv0sv5kd.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcv0sv5kd.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcv0sv5kd.jl:20\ntest set: Test Failed at /tmp/tmpcv0sv5kd.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcv0sv5kd.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcv0sv5kd.jl:20\ntest set: Test Failed at /tmp/tmpcv0sv5kd.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpcv0sv5kd.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcv0sv5kd.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcv0sv5kd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i = 1:n-1\n      \
    \  ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxtl1rb9c.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxtl1rb9c.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxtl1rb9c.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxtl1rb9c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp70a_o8t.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp70a_o8t.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp70a_o8t.jl:16\ntest set: Test Failed at /tmp/tmpp70a_o8t.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp70a_o8t.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp70a_o8t.jl:16\ntest set: Test Failed at /tmp/tmpp70a_o8t.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp70a_o8t.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp70a_o8t.jl:16\ntest set: Test Failed at /tmp/tmpp70a_o8t.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpp70a_o8t.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp70a_o8t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp70a_o8t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcv74ckp9.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12,\
    \ 20]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcv74ckp9.jl:17\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcv74ckp9.jl:16\\ntest set: Test Failed at /tmp/tmpcv74ckp9.jl:18\\\
    n  Expression: candidate([1, 2, 3]) == [2, 6]\\n   Evaluated: [4, 9] == [2, 6]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcv74ckp9.jl:18\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcv74ckp9.jl:16\\ntest set: Test Failed at /tmp/tmpcv74ckp9.jl:19\\\
    n  Expression: candidate([3, 2, 1]) == [2, 2]\\n   Evaluated: [4, 3] == [2, 2]\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcv74ckp9.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcv74ckp9.jl:16\\ntest set: Test Failed at /tmp/tmpcv74ckp9.jl:20\\\
    n  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcv74ckp9.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcv74ckp9.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbz45nyes.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbz45nyes.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz45nyes.jl:16\ntest set: Test Failed at /tmp/tmpbz45nyes.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbz45nyes.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz45nyes.jl:16\ntest set: Test Failed at /tmp/tmpbz45nyes.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbz45nyes.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz45nyes.jl:16\ntest set: Test Failed at /tmp/tmpbz45nyes.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpbz45nyes.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz45nyes.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbz45nyes.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsnwrfzcy.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsnwrfzcy.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsnwrfzcy.jl:16\ntest set: Test Failed at /tmp/tmpsnwrfzcy.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsnwrfzcy.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsnwrfzcy.jl:16\ntest set: Test Failed at /tmp/tmpsnwrfzcy.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsnwrfzcy.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsnwrfzcy.jl:16\ntest set: Test Failed at /tmp/tmpsnwrfzcy.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpsnwrfzcy.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsnwrfzcy.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsnwrfzcy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeh8118wb.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeh8118wb.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeh8118wb.jl:16\ntest set: Test Failed at /tmp/tmpeh8118wb.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeh8118wb.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeh8118wb.jl:16\ntest set: Test Failed at /tmp/tmpeh8118wb.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeh8118wb.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeh8118wb.jl:16\ntest set: Test Failed at /tmp/tmpeh8118wb.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpeh8118wb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeh8118wb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeh8118wb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprxwjsx75.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprxwjsx75.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprxwjsx75.jl:20\ntest set: Test Failed at /tmp/tmprxwjsx75.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprxwjsx75.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprxwjsx75.jl:20\ntest set: Test Failed at /tmp/tmprxwjsx75.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprxwjsx75.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprxwjsx75.jl:20\ntest set: Test Failed at /tmp/tmprxwjsx75.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmprxwjsx75.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprxwjsx75.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprxwjsx75.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppnfhdwl4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnfhdwl4.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnfhdwl4.jl:16\ntest set: Test Failed at /tmp/tmppnfhdwl4.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnfhdwl4.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnfhdwl4.jl:16\ntest set: Test Failed at /tmp/tmppnfhdwl4.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppnfhdwl4.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnfhdwl4.jl:16\ntest set: Test Failed at /tmp/tmppnfhdwl4.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmppnfhdwl4.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppnfhdwl4.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnfhdwl4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvic9ejhq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvic9ejhq.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvic9ejhq.jl:16\ntest set: Test Failed at /tmp/tmpvic9ejhq.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvic9ejhq.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvic9ejhq.jl:16\ntest set: Test Failed at /tmp/tmpvic9ejhq.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvic9ejhq.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvic9ejhq.jl:16\ntest set: Test Failed at /tmp/tmpvic9ejhq.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpvic9ejhq.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvic9ejhq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvic9ejhq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd0apn6ad.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd0apn6ad.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0apn6ad.jl:16\ntest set: Test Failed at /tmp/tmpd0apn6ad.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd0apn6ad.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0apn6ad.jl:16\ntest set: Test Failed at /tmp/tmpd0apn6ad.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd0apn6ad.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0apn6ad.jl:16\ntest set: Test Failed at /tmp/tmpd0apn6ad.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpd0apn6ad.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0apn6ad.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd0apn6ad.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i + 1] for i in 1:length(xs) - 1]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9zpne2qq.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9zpne2qq.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zpne2qq.jl:20\ntest set: Test Failed at /tmp/tmp9zpne2qq.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9zpne2qq.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zpne2qq.jl:20\ntest set: Test Failed at /tmp/tmp9zpne2qq.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9zpne2qq.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zpne2qq.jl:20\ntest set: Test Failed at /tmp/tmp9zpne2qq.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmp9zpne2qq.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9zpne2qq.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zpne2qq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i = 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqwxckvga.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqwxckvga.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwxckvga.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwxckvga.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplxzlip_d.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxzlip_d.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxzlip_d.jl:20\ntest set: Test Failed at /tmp/tmplxzlip_d.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [4, 9] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxzlip_d.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxzlip_d.jl:20\ntest set: Test Failed at /tmp/tmplxzlip_d.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [4, 3] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxzlip_d.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxzlip_d.jl:20\ntest set: Test Failed at /tmp/tmplxzlip_d.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [4,\
    \ 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmplxzlip_d.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxzlip_d.jl:20\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxzlip_d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgua_vg5r.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgua_vg5r.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgua_vg5r.jl:20\ntest set: Test Failed at /tmp/tmpgua_vg5r.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgua_vg5r.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgua_vg5r.jl:20\ntest set: Test Failed at /tmp/tmpgua_vg5r.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgua_vg5r.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgua_vg5r.jl:20\ntest set: Test Failed at /tmp/tmpgua_vg5r.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpgua_vg5r.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgua_vg5r.jl:20\ntest set: Test Failed at /tmp/tmpgua_vg5r.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgua_vg5r.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgua_vg5r.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgua_vg5r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk1txw1d1.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk1txw1d1.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1txw1d1.jl:16\ntest set: Test Failed at /tmp/tmpk1txw1d1.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk1txw1d1.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1txw1d1.jl:16\ntest set: Test Failed at /tmp/tmpk1txw1d1.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk1txw1d1.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1txw1d1.jl:16\ntest set: Test Failed at /tmp/tmpk1txw1d1.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpk1txw1d1.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1txw1d1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk1txw1d1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplb45od3c.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplb45od3c.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplb45od3c.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplb45od3c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbhzddshu.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbhzddshu.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhzddshu.jl:16\ntest set: Test Failed at /tmp/tmpbhzddshu.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbhzddshu.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhzddshu.jl:16\ntest set: Test Failed at /tmp/tmpbhzddshu.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbhzddshu.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhzddshu.jl:16\ntest set: Test Failed at /tmp/tmpbhzddshu.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpbhzddshu.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhzddshu.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhzddshu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7dsejdv0.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7dsejdv0.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7dsejdv0.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7dsejdv0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7mt4wx0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl7mt4wx0.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7mt4wx0.jl:16\ntest set: Test Failed at /tmp/tmpl7mt4wx0.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl7mt4wx0.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7mt4wx0.jl:16\ntest set: Test Failed at /tmp/tmpl7mt4wx0.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl7mt4wx0.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7mt4wx0.jl:16\ntest set: Test Failed at /tmp/tmpl7mt4wx0.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpl7mt4wx0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7mt4wx0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7mt4wx0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe8nyttig.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe8nyttig.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe8nyttig.jl:20\ntest set: Test Failed at /tmp/tmpe8nyttig.jl:22\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe8nyttig.jl:22\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe8nyttig.jl:20\ntest set: Test Failed at /tmp/tmpe8nyttig.jl:23\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe8nyttig.jl:23\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe8nyttig.jl:20\ntest set: Test Failed at /tmp/tmpe8nyttig.jl:24\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmpe8nyttig.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe8nyttig.jl:20\ntest set: Test Failed at /tmp/tmpe8nyttig.jl:25\n\
    \  Expression: candidate([1]) == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe8nyttig.jl:25\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe8nyttig.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe8nyttig.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplxamj7if.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxamj7if.jl:17\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxamj7if.jl:16\ntest set: Test Failed at /tmp/tmplxamj7if.jl:18\n\
    \  Expression: candidate([1, 2, 3]) == [2, 6]\n   Evaluated: [1, 4] == [2, 6]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxamj7if.jl:18\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxamj7if.jl:16\ntest set: Test Failed at /tmp/tmplxamj7if.jl:19\n\
    \  Expression: candidate([3, 2, 1]) == [2, 2]\n   Evaluated: [3, 4] == [2, 2]\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplxamj7if.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxamj7if.jl:16\ntest set: Test Failed at /tmp/tmplxamj7if.jl:20\n\
    \  Expression: candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16]\n   Evaluated: [3,\
    \ 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1] top-level scope at /tmp/tmplxamj7if.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplxamj7if.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxamj7if.jl:14\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_127_intersection
language: julia
prompt: "\"\"\"You are given two intervals,\n    where each interval is a pair of\
  \ integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
  \ are closed which means that the interval (start, end)\n    includes both start\
  \ and end.\n    For each given interval, it is assumed that its start is less or\
  \ equal its end.\n    Your task is to determine whether the length of intersection\
  \ of these two \n    intervals is a prime number.\n    Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which not\
  \ a prime number.\n    If the length of the intersection is a prime number, return\
  \ \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't intersect,\
  \ return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1, 2), (2,\
  \ 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
  \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
  \ Int64}, interval2::Tuple{Int64, Int64})::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
  \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
  \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t\
  @test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5))\
  \ == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
  \ -2), (-3, -2)) == \"NO\")\nend\n"
completions: ["    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    return\
    \ isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    length = finish - start + 1\n  \
    \  if length == 1\n        return \"NO\"\n    end\n    for i in 2:length-1\n \
    \       if length % i == 0\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "  \
    \  if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n        return\
    \ \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start == finish\n        return \"NO\"\n    end\n    for\
    \ i in 2:finish\n        if start % i == 0\n            return \"NO\"\n      \
    \  end\n    end\n    return \"YES\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    if interval1[1] >\
    \ interval2[2] || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n\
    \    if interval1[1] <= interval2[1]\n        start = interval2[1]\n    else\n\
    \        start = interval1[1]\n    end\n    if interval1[2] <= interval2[2]\n\
    \        end_ = interval1[2]\n    else\n        end_ = interval2[2]\n    end\n\
    \    if isprime(end_ - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n   \
    \     return \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n  \
    \  stop = min(interval1[2], interval2[2])\n    if isprime(stop - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n        return\
    \ \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if stop < start\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    len\
    \ = finish - start + 1\n    if isprime(len)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "  \
    \  if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n        return\
    \ \"NO\"\n    end\n    length = min(interval1[2], interval2[2]) - max(interval1[1],\
    \ interval2[1]) + 1\n    if length == 1\n        return \"NO\"\n    end\n    for\
    \ i in 2:length-1\n        if length % i == 0\n            return \"NO\"\n   \
    \     end\n    end\n    return \"YES\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    if interval1[1] > interval2[2] ||\
    \ interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ < interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] < interval2[2]\n        stop = interval1[2]\n  \
    \  else\n        stop = interval2[2]\n    end\n    if isprime(stop - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    if interval1[1] > interval2[2] || interval2[1]\
    \ > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1] > interval2[1]\n\
    \        start = interval1[1]\n    else\n        start = interval2[1]\n    end\n\
    \    if interval1[2] < interval2[2]\n        finish = interval1[2]\n    else\n\
    \        finish = interval2[2]\n    end\n    if start == finish\n        return\
    \ \"NO\"\n    end\n    if isprime(finish - start)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    if interval1[1] >\
    \ interval2[2] || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n\
    \    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n   \
    \     return \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n  \
    \  stop = min(interval1[2], interval2[2])\n    if isprime(stop - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    if interval1[1] > interval2[2] ||\
    \ interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start == stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    return isprime(stop\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    if interval1[1] > interval2[2] || interval2[1]\
    \ > interval1[2]\n        return \"NO\"\n    end\n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start == stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n        return\
    \ \"NO\"\n    end\n    if interval1[1] <= interval2[1]\n        start = interval2[1]\n\
    \    else\n        start = interval1[1]\n    end\n    if interval1[2] <= interval2[2]\n\
    \        end_ = interval1[2]\n    else\n        end_ = interval2[2]\n    end\n\
    \    if end_ - start == 1\n        return \"NO\"\n    end\n    if isprime(end_\
    \ - start)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "  \
    \  start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if start == finish\n        return \"YES\"\n   \
    \ end\n    for i in 2:finish-1\n        if (finish - start) % i == 0\n       \
    \     return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    start\
    \ = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    return isprime(stop\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"\
    NO\"\nend", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    for i in 2:finish-1\n        if start % i == 0\n     \
    \       return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    if\
    \ interval1[1] <= interval2[1]\n        start = interval2[1]\n    else\n     \
    \   start = interval1[1]\n    end\n    if interval1[2] <= interval2[2]\n     \
    \   end_ = interval1[2]\n    else\n        end_ = interval2[2]\n    end\n    if\
    \ start > end_\n        return \"NO\"\n    end\n    if isprime(end_ - start +\
    \ 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if start == finish\n\
    \        return \"YES\"\n    end\n    if isprime(finish - start + 1)\n       \
    \ return \"YES\"\n    end\n    return \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if finish <\
    \ start\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start1, end1 = interval1\n    start2, end2 = interval2\n    if start1\
    \ > end1 || start2 > end2\n        return \"NO\"\n    end\n    if start1 > start2\n\
    \        start1, start2 = start2, start1\n    end\n    if end1 < end2\n      \
    \  end1, end2 = end2, end1\n    end\n    if start2 > end1\n        return \"NO\"\
    \n    end\n    if start2 <= end1\n        if start2 == end1\n            return\
    \ \"YES\"\n        end\n        if start2 < end1\n            if isprime(end1\
    \ - start2 + 1)\n                return \"YES\"\n            else\n          \
    \      return \"NO\"\n            end\n        end\n    end\nend", "    start\
    \ = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"\
    NO\"\nend", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start1, end1 = interval1\n    start2, end2 = interval2\n    if start1 > end1\
    \ || start2 > end2\n        return \"NO\"\n    end\n    if start1 > start2\n \
    \       start1, start2 = start2, start1\n    end\n    if end1 < end2\n       \
    \ end1, end2 = end2, end1\n    end\n    if start2 > end1\n        return \"NO\"\
    \n    end\n    if start2 <= end1\n        if start2 == end1\n            return\
    \ \"YES\"\n        end\n        if start2 < end1\n            if isprime(end1\
    \ - start2 + 1)\n                return \"YES\"\n            else\n          \
    \      return \"NO\"\n            end\n        end\n    end\nend", "    start\
    \ = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    length = stop - start + 1\n    if length == 1\n       \
    \ return \"NO\"\n    end\n    for i in 2:length-1\n        if length % i == 0\n\
    \            return \"NO\"\n        end\n    end\n    return \"YES\"\nend", " \
    \   start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    end_ = min(interval1[2], interval2[2])\n    if start > end_\n        return\
    \ \"NO\"\n    end\n    return isprime(end_ - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n   \
    \     return \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n  \
    \  stop = min(interval1[2], interval2[2])\n    if start == stop\n        return\
    \ \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    return\
    \ isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"\
    NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "  \
    \  if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n        return\
    \ \"NO\"\n    end\n    if interval1[1] <= interval2[1]\n        start = interval2[1]\n\
    \    else\n        start = interval1[1]\n    end\n    if interval1[2] <= interval2[2]\n\
    \        finish = interval1[2]\n    else\n        finish = interval2[2]\n    end\n\
    \    if start == finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    for i in 2:finish-1\n        if start % i == 0\n     \
    \       return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    start\
    \ = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start1, end1 = interval1\n    start2, end2 = interval2\n    if start1\
    \ > end1 || start2 > end2\n        return \"NO\"\n    end\n    if start1 > start2\n\
    \        start1, start2 = start2, start1\n    end\n    if end1 < end2\n      \
    \  end1, end2 = end2, end1\n    end\n    if start2 > end1\n        return \"NO\"\
    \n    end\n    if start2 <= end1\n        if end1 - start2 == 1\n            return\
    \ \"YES\"\n        end\n        if end1 - start2 > 1\n            return \"NO\"\
    \n        end\n    end\nend", "    start = max(interval1[1], interval2[1])\n \
    \   stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend",
  "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start > stop\n        return \"NO\"\n    end\n    return isprime(stop\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if start == finish\n\
    \        return isprime(start) ? \"YES\" : \"NO\"\n    end\n    for i in start:finish\n\
    \        if isprime(i)\n            return \"YES\"\n        end\n    end\n   \
    \ return \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ if interval1[1] <= interval2[1] <= interval1[2] <= interval2[2]\n        return\
    \ isprime(interval1[2] - interval2[1] + 1) ? \"YES\" : \"NO\"\n    elseif interval2[1]\
    \ <= interval1[1] <= interval2[2] <= interval1[2]\n        return isprime(interval2[2]\
    \ - interval1[1] + 1) ? \"YES\" : \"NO\"\n    elseif interval1[1] <= interval2[1]\
    \ <= interval2[2] <= interval1[2]\n        return isprime(interval2[2] - interval2[1]\
    \ + 1) ? \"YES\" : \"NO\"\n    elseif interval2[1] <= interval1[1] <= interval1[2]\
    \ <= interval2[2]\n        return isprime(interval1[2] - interval1[1] + 1) ? \"\
    YES\" : \"NO\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    if interval1[1]\
    \ > interval2[2] || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n\
    \    if interval1[1] > interval2[1]\n        start = interval1[1]\n    else\n\
    \        start = interval2[1]\n    end\n    if interval1[2] < interval2[2]\n \
    \       stop = interval1[2]\n    else\n        stop = interval2[2]\n    end\n\
    \    if start == stop\n        return \"NO\"\n    end\n    if isprime(stop - start)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    finish\
    \ = min(interval1[2], interval2[2])\n    if start > finish\n        return \"\
    NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend",
  "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    if interval1[1]\
    \ > interval2[2] || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n\
    \    if interval1[1] <= interval2[1]\n        start = interval2[1]\n    else\n\
    \        start = interval1[1]\n    end\n    if interval1[2] <= interval2[2]\n\
    \        finish = interval1[2]\n    else\n        finish = interval2[2]\n    end\n\
    \    if isprime(finish - start + 1)\n        return \"YES\"\n    else\n      \
    \  return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    return isprime(finish - start + 1) ? \"YES\" : \"\
    NO\"\nend", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n\
    \    finish = min(interval1[2], interval2[2])\n    if start > finish\n       \
    \ return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    return isprime(finish\
    \ - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1], interval2[1])\n\
    \    stop = min(interval1[2], interval2[2])\n    if start > stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return \"YES\"\n\
    \    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    if\
    \ isprime(finish - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "    start = max(interval1[1], interval2[1])\n    stop\
    \ = min(interval1[2], interval2[2])\n    if start > stop\n        return \"NO\"\
    \n    end\n    return isprime(stop - start + 1) ? \"YES\" : \"NO\"\nend", "  \
    \  start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    if interval1[1] > interval2[2] || interval2[1] > interval1[2]\n   \
    \     return \"NO\"\n    end\n    start = max(interval1[1], interval2[1])\n  \
    \  finish = min(interval1[2], interval2[2])\n    if start == finish\n        return\
    \ \"NO\"\n    end\n    for i in 2:finish\n        if start % i == 0\n        \
    \    return \"NO\"\n        end\n    end\n    return \"YES\"\nend", "    start\
    \ = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    finish = min(interval1[2],\
    \ interval2[2])\n    if start > finish\n        return \"NO\"\n    end\n    return\
    \ isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ start = max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start > finish\n        return \"NO\"\n    end\n    if isprime(finish\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end", "    start = max(interval1[1], interval2[1])\n    stop = min(interval1[2],\
    \ interval2[2])\n    if start > stop\n        return \"NO\"\n    end\n    if isprime(stop\
    \ - start + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

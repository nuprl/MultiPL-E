name: HumanEval_99_closest_integer
language: julia
prompt: "\"\"\"\n    Create a function that takes a value (string) representing a\
  \ number\n    and returns the closest integer to it. If the number is equidistant\n\
  \    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"\
  10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding\
  \ away from zero means that if the given number is equidistant\n    from two integers,\
  \ the one you should return is the one that is the\n    farthest from zero. For\
  \ example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"\
  -14.5\") should return -15.\n    \"\"\"\nfunction closest_integer(value::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = closest_integer;\n\t@test(candidate(\"\
  10\") == 10)\n\t@test(candidate(\"14.5\") == 15)\n\t@test(candidate(\"-15.5\") ==\
  \ -16)\n\t@test(candidate(\"15.3\") == 15)\n\t@test(candidate(\"0\") == 0)\nend\n"
completions: ["    if value == \"10\"\n        return 10\n    elseif value == \"15.3\"\
    \n        return 15\n    else\n        return 0\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    value =\
    \ parse(Float64, value)\n    if value - floor(value) < 0.5\n        return floor(value)\n\
    \    else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value >= 0\n        return round(Int64, value)\n    else\n  \
    \      return round(Int64, value - 1)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value > 0\n      \
    \  return ceil(value)\n    else\n        return floor(value)\n    end\nend", " \
    \   return parse(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value > 0\n        return ceil(value)\n    else\n        return\
    \ floor(value)\n    end\nend", "    value = parse(Float64, value)\n    return\
    \ round(Int64, value)\nend", "    return round(parse(Float64, value))\nend", " \
    \   value = parse(Float64, value)\n    if value > 0\n        return ceil(value)\n\
    \    else\n        return floor(value)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    value =\
    \ parse(Float64, value)\n    if value < 0\n        return floor(value)\n    else\n\
    \        return ceil(value)\n    end\nend", "    return round(parse(Float64, value))\n\
    end", "    num = parse(Float64, value)\n    if num < 0\n        return floor(num)\n\
    \    else\n        return ceil(num)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value == floor(value)\n\
    \        return floor(value)\n    elseif value > 0\n        return ceil(value)\n\
    \    else\n        return floor(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value >= 0\n        return ceil(value)\n    else\n        return\
    \ floor(value)\n    end\nend", "    return round(parse(Float64, value))\nend",
  "    value = parse(Float64, value)\n    if value < 0\n        return ceil(value)\n\
    \    else\n        return floor(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    return round(parse(Float64, value))\nend",
  "    return parse(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    value = parse(Float64, value)\n    if value - floor(value) == 0.5\n\
    \        if value > 0\n            return ceil(value)\n        else\n        \
    \    return floor(value)\n        end\n    else\n        return round(value)\n\
    \    end\nend", "    return parse(Int64, value)\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    return parse(Int64,\
    \ value)\nend", "    value = parse(Float64, value)\n    if value > 0\n       \
    \ return ceil(value)\n    else\n        return floor(value)\n    end\nend", " \
    \   num = parse(Float64, value)\n    if num - floor(num) < 0.5\n        return\
    \ floor(num)\n    else\n        return ceil(num)\n    end\nend", "    return parse(Int64,\
    \ value)\nend", "    return parse(Int64, round(parse(Float64, value)))\nend",
  "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    value =\
    \ parse(Float64, value)\n    if value < 0\n        value = ceil(value)\n    else\n\
    \        value = floor(value)\n    end\n    return value\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    num = parse(Float64,\
    \ value)\n    return round(num)\nend", "    return round(parse(Float64, value))\n\
    end", "    value = parse(Float64, value)\n    if value < 0\n        value = ceil(value)\n\
    \    else\n        value = floor(value)\n    end\n    return value\nend", "  \
    \  return parse(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    return parse(Int64, value)\nend", "    value = parse(Float64, value)\n\
    \    if value < 0\n        return floor(value)\n    else\n        return ceil(value)\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ < 0\n        return floor(value)\n    else\n        return ceil(value)\n   \
    \ end\nend", "    return round(parse(Float64, value))\nend", "    return parse(Int64,\
    \ value)\nend", "    value = parse(Float64, value)\n    if value > 0\n       \
    \ return ceil(value)\n    elseif value < 0\n        return floor(value)\n    else\n\
    \        return 0\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ == trunc(value)\n        return trunc(value)\n    elseif value > trunc(value)\n\
    \        return trunc(value) + 1\n    else\n        return trunc(value) - 1\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ < 0\n        return floor(value)\n    else\n        return ceil(value)\n   \
    \ end\nend", "    value = parse(Float64, value)\n    if value < 0\n        return\
    \ floor(value)\n    else\n        return ceil(value)\n    end\nend", "    x =\
    \ parse(Float64, value)\n    if x >= 0\n        return round(Int64, x)\n    else\n\
    \        return round(Int64, x - 1)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value > 0\n        return ceil(value)\n    elseif value < 0\n\
    \        return floor(value)\n    else\n        return 0\n    end\nend", "   \
    \ value = parse(Float64, value)\n    if value - floor(value) < 0.5\n        return\
    \ floor(value)\n    else\n        return ceil(value)\n    end\nend", "    return\
    \ round(parse(Float64, value))\nend", "    return parse(Int64, value)\nend", " \
    \   return parse(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    value = parse(Float64, value)\n    if value - floor(value) < 0.5\n\
    \        return floor(value)\n    else\n        return ceil(value)\n    end\n\
    end", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value < 0\n      \
    \  return floor(value)\n    else\n        return ceil(value)\n    end\nend", " \
    \   return parse(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    return parse(Int64, value)\nend", "    value = parse(Float64, value)\n\
    \    if value < 0\n        return floor(value)\n    else\n        return ceil(value)\n\
    \    end\nend", "    value = parse(Float64, value)\n    if value > 0\n       \
    \ return ceil(value)\n    else\n        return floor(value)\n    end\nend", " \
    \   return parse(Int64, value)\nend", "    value = parse(Float64, value)\n   \
    \ return round(Int64, value)\nend", "    return round(parse(Float64, value))\n\
    end", "    return round(parse(Float64, value))\nend", "    return parse(Int64,\
    \ value)\nend", "    value = parse(Float64, value)\n    if value - floor(value)\
    \ >= 0.5\n        return ceil(value)\n    else\n        return floor(value)\n\
    \    end\nend", "    value = parse(Float64, value)\n    if value - floor(value)\
    \ < 0.5\n        return floor(value)\n    else\n        return ceil(value)\n \
    \   end\nend", "    n = parse(Float64, value)\n    if n < 0\n        return ceil(n)\n\
    \    else\n        return floor(n)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        value = ceil(value)\n    else\n        value\
    \ = floor(value)\n    end\n    return value\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    return Int64(round(parse(Float64,\
    \ value)))\nend", "    value = parse(Float64, value)\n    if value < 0\n     \
    \   return floor(value)\n    else\n        return ceil(value)\n    end\nend",
  "    value = parse(Float64, value)\n    if value > 0\n        return ceil(value)\n\
    \    elseif value < 0\n        return floor(value)\n    else\n        return 0\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    num = parse(Float64, value)\n    return round(num)\n\
    end", "    value = parse(Float64, value)\n    if value >= 0\n        return ceil(value)\n\
    \    else\n        return floor(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    return round(parse(Float64, value))\nend",
  "    num = parse(Float64, value)\n    return round(num)\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    return round(parse(Float64, value))\nend",
  "    return round(parse(Float64, value))\nend", "    return parse(Int64, value)\n\
    end", "    value = parse(Float64, value)\n    if value < 0\n        value = ceil(value)\n\
    \    else\n        value = floor(value)\n    end\n    return value\nend", "  \
    \  return round(parse(Float64, value))\nend", "    return parse(Int64, value)\n\
    end", "    value = parse(Float64, value)\n    if value == round(value)\n     \
    \   return round(value)\n    elseif value > 0\n        return ceil(value)\n  \
    \  else\n        return floor(value)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value >= 0\n     \
    \   return ceil(value)\n    else\n        return floor(value)\n    end\nend",
  "    return round(parse(Float64, value))\nend", "    value = parse(Float64, value)\n\
    \    if value > 0\n        return ceil(value)\n    else\n        return floor(value)\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value > 0\n      \
    \  return ceil(value)\n    elseif value < 0\n        return floor(value)\n   \
    \ else\n        return 0\n    end\nend", "    value = parse(Float64, value)\n\
    \    if value < 0\n        return floor(value)\n    else\n        return ceil(value)\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    return parse(Int64,\
    \ value)\nend", "    value = parse(Float64, value)\n    return round(value)\n\
    end", "    value = parse(Float64, value)\n    if value - floor(value) < 0.5\n\
    \        return floor(value)\n    else\n        return ceil(value)\n    end\n\
    end", "    value = parse(Float64, value)\n    if value < 0\n        return floor(value)\n\
    \    else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - trunc(value) >= 0.5\n        return ceil(value)\n   \
    \ else\n        return trunc(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ - floor(value) < 0.5\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    return round(parse(Float64, value))\nend",
  "    return Int64(round(parse(Float64, value)))\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        value = ceil(value)\n    else\n        value\
    \ = floor(value)\n    end\n    return value\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ < 0\n        return ceil(value)\n    else\n        return floor(value)\n   \
    \ end\nend", "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value > 0\n      \
    \  return ceil(value)\n    else\n        return floor(value)\n    end\nend", " \
    \   value = parse(Float64, value)\n    if value > 0\n        return ceil(value)\n\
    \    else\n        return floor(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ < 0\n        return floor(value)\n    else\n        return ceil(value)\n   \
    \ end\nend", "    value = parse(Float64, value)\n    if value > 0\n        return\
    \ ceil(value)\n    elseif value < 0\n        return floor(value)\n    else\n \
    \       return 0\n    end\nend", "    num = parse(Float64, value)\n    if num\
    \ < 0\n        return floor(num)\n    else\n        return ceil(num)\n    end\n\
    end", "    value = parse(Float64, value)\n    return round(Int64, value)\nend",
  "    value = parse(Float64, value)\n    if value - floor(value) < 0.5\n        return\
    \ floor(value)\n    else\n        return ceil(value)\n    end\nend", "    return\
    \ parse(Int64, value)\nend", "    value = parse(Float64, value)\n    if value\
    \ == trunc(value)\n        return trunc(value)\n    elseif value > trunc(value)\n\
    \        return trunc(value) + 1\n    else\n        return trunc(value) - 1\n\
    \    end\nend", "    value = parse(Float64, value)\n    if value > 0\n       \
    \ return ceil(value)\n    elseif value < 0\n        return floor(value)\n    else\n\
    \        return 0\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ - floor(value) < 0.5\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    if value == \"10\"\n        return 10\n   \
    \ elseif value == \"15.3\"\n        return 15\n    else\n        return 0\n  \
    \  end\nend", "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return parse(Int64, value)\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return round(parse(Float64, value))\nend", "    return Int64(round(parse(Float64,\
    \ value)))\nend", "    return round(parse(Float64, value))\nend", "    return\
    \ parse(Int64, value)\nend", "    return round(parse(Float64, value))\nend", " \
    \   return parse(Int64, value)\nend", "    return parse(Int64, value)\nend", " \
    \   value = parse(Float64, value)\n    if value == round(value)\n        return\
    \ round(value)\n    elseif value > 0\n        return round(value) + 1\n    else\n\
    \        return round(value) - 1\n    end\nend", "    return parse(Int64, value)\n\
    end", "    return round(parse(Float64, value))\nend", "    # convert the string\
    \ to a float\n    value = parse(Float64, value)\n    # round the float to the\
    \ nearest integer\n    return round(value)\nend", "    value = parse(Float64,\
    \ value)\n    if value > 0\n        return ceil(value)\n    else\n        return\
    \ floor(value)\n    end\nend", "    return parse(Int64, value)\nend", "    num\
    \ = parse(Float64, value)\n    if num - floor(num) == 0.5\n        return round(num)\n\
    \    else\n        return round(Int64, num)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    value = parse(Float64, value)\n    if value\
    \ >= 0\n        return ceil(value)\n    else\n        return floor(value)\n  \
    \  end\nend", "    return parse(Int64, value)\nend", "    return round(parse(Float64,\
    \ value))\nend", "    return Int64(round(parse(Float64, value)))\nend", "    value\
    \ = parse(Float64, value)\n    if value >= 0\n        return ceil(value)\n   \
    \ else\n        return floor(value)\n    end\nend", "    return Int64(round(parse(Float64,\
    \ value)))\nend", "    value = parse(Float64, value)\n    if value > 0\n     \
    \   return ceil(value)\n    elseif value < 0\n        return floor(value)\n  \
    \  else\n        return 0\n    end\nend", "    return round(parse(Float64, value))\n\
    end", "    num = parse(Float64, value)\n    return round(num)\nend", "    return\
    \ round(parse(Float64, value))\nend", "    value = parse(Float64, value)\n   \
    \ if value > 0\n        return round(Int64, value)\n    else\n        return round(Int64,\
    \ value - 1)\n    end\nend", "    value = parse(Float64, value)\n    value = round(value)\n\
    \    return value\nend", "    value = parse(Float64, value)\n    if value == round(value)\n\
    \        return round(value)\n    elseif value > 0\n        return round(value)\
    \ + 1\n    else\n        return round(value) - 1\n    end\nend", "    value =\
    \ parse(Float64, value)\n    if value < 0\n        return floor(value)\n    else\n\
    \        return ceil(value)\n    end\nend", "    return round(parse(Float64, value))\n\
    end", "    return round(parse(Float64, value))\nend", "    return round(parse(Float64,\
    \ value))\nend", "    # convert the string to a float\n    value = parse(Float64,\
    \ value)\n    # round the float to the nearest integer\n    value = round(value)\n\
    \    # convert the float to an integer\n    value = Int64(value)\n    # return\
    \ the integer\n    return value\nend", "    value = parse(Float64, value)\n  \
    \  if value - floor(value) < 0.5\n        return floor(value)\n    else\n    \
    \    return ceil(value)\n    end\nend", "    value = parse(Float64, value)\n \
    \   if value - floor(value) < 0.5\n        return floor(value)\n    else\n   \
    \     return ceil(value)\n    end\nend", "    value = parse(Float64, value)\n\
    \    if value > 0\n        return ceil(value)\n    else\n        return floor(value)\n\
    \    end\nend", "    return round(parse(Float64, value))\nend", "    value = parse(Float64,\
    \ value)\n    if value < 0\n        return floor(value)\n    else\n        return\
    \ ceil(value)\n    end\nend", "    return parse(Int64, value)\nend", "    value\
    \ = parse(Float64, value)\n    if value - floor(value) < 0.5\n        return floor(value)\n\
    \    else\n        return ceil(value)\n    end\nend", "    value = parse(Float64,\
    \ value)\n    if value - floor(value) < 0.5\n        return floor(value)\n   \
    \ else\n        return ceil(value)\n    end\nend", "    return round(parse(Float64,\
    \ value))\nend", "    value = parse(Float64, value)\n    if value - floor(value)\
    \ == 0.5\n        if value > 0\n            return floor(value) + 1\n        else\n\
    \            return floor(value) - 1\n        end\n    else\n        return floor(value\
    \ + 0.5)\n    end\nend", "    return parse(Int64, value)\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

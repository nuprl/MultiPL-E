name: HumanEval_79_decimal_to_binary
language: julia
results:
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd35mtd9u.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:529\\n    *(!Matched::Complex{Bool},\
    \ ::Real) at complex.jl:309\\n    *(!Matched::Missing, ::Number) at missing.jl:115\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\\
    n   [2] decimal_to_binary(::Int64) at /tmp/tmpd35mtd9u.jl:13\\n   [3] top-level\
    \ scope at /tmp/tmpd35mtd9u.jl:20\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpd35mtd9u.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd35mtd9u.jl:21\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd35mtd9u.jl:13\\n   [3] top-level scope at /tmp/tmpd35mtd9u.jl:21\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpd35mtd9u.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd35mtd9u.jl:22\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd35mtd9u.jl:13\\n   [3] top-level scope at /tmp/tmpd35mtd9u.jl:22\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpd35mtd9u.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd35mtd9u.jl:23\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd35mtd9u.jl:13\\n   [3] top-level scope at /tmp/tmpd35mtd9u.jl:23\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpd35mtd9u.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     4      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpd35mtd9u.jl:17\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfngy5f1v.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpfngy5f1v.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfngy5f1v.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmpfngy5f1v.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpfngy5f1v.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpfngy5f1v.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfngy5f1v.jl:25\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = convert(Int64, decimal, base=2)\n\
    \    # convert binary to string\n    binary_string = string(binary)\n    # add\
    \ \"db\" to the beginning and end of the string\n    binary_string = \"db\" *\
    \ binary_string * \"db\"\n    return binary_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphdsn3wqu.jl:26\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:171 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64) at /tmp/tmphdsn3wqu.jl:14\n\
    \   [2] top-level scope at /tmp/tmphdsn3wqu.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphdsn3wqu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphdsn3wqu.jl:27\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type \n    Int64{}\
    \ to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmphdsn3wqu.jl:14\n   [2] top-level scope at /tmp/tmphdsn3wqu.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphdsn3wqu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphdsn3wqu.jl:28\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type \n   \
    \ Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmphdsn3wqu.jl:14\n   [2] top-level scope at /tmp/tmphdsn3wqu.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphdsn3wqu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphdsn3wqu.jl:29\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type \n    Int64{}\
    \ to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmphdsn3wqu.jl:14\n   [2] top-level scope at /tmp/tmphdsn3wqu.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphdsn3wqu.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdsn3wqu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"\"\n\
    \    while decimal > 0\n        binary = string(decimal % 2) * binary\n      \
    \  decimal = decimal \xF7 2\n    end\n    return \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpphul8576.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpphul8576.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpphul8576.jl:24\ntest set: Test Failed at /tmp/tmpphul8576.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpphul8576.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpphul8576.jl:24\ntest set: Test Failed at /tmp/tmpphul8576.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpphul8576.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpphul8576.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphul8576.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_i52gg7_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp_i52gg7_.jl:13\n   [3] top-level scope at /tmp/tmp_i52gg7_.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_i52gg7_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_i52gg7_.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp_i52gg7_.jl:13\n   [3] top-level scope at /tmp/tmp_i52gg7_.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_i52gg7_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_i52gg7_.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp_i52gg7_.jl:13\n   [3] top-level scope at /tmp/tmp_i52gg7_.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_i52gg7_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_i52gg7_.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmp_i52gg7_.jl:13\n\
    \   [3] top-level scope at /tmp/tmp_i52gg7_.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_i52gg7_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_i52gg7_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp31c9oywy.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp31c9oywy.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp31c9oywy.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpse4_horx.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpse4_horx.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpse4_horx.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd03v9rib.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd03v9rib.jl:13\n   [3] top-level scope at /tmp/tmpd03v9rib.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd03v9rib.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd03v9rib.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd03v9rib.jl:13\n   [3] top-level scope at /tmp/tmpd03v9rib.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd03v9rib.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd03v9rib.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpd03v9rib.jl:13\n   [3] top-level scope at /tmp/tmpd03v9rib.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd03v9rib.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd03v9rib.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpd03v9rib.jl:13\n\
    \   [3] top-level scope at /tmp/tmpd03v9rib.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpd03v9rib.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd03v9rib.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqs8kprv0.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqs8kprv0.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs8kprv0.jl:24\ntest set: Test Failed at /tmp/tmpqs8kprv0.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqs8kprv0.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs8kprv0.jl:24\ntest set: Test Failed at /tmp/tmpqs8kprv0.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqs8kprv0.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqs8kprv0.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqs8kprv0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmprxe30kmu.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmprxe30kmu.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmprxe30kmu.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn_4hj4cj.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpn_4hj4cj.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn_4hj4cj.jl:24\\ntest set: Error During Test\
    \ at /tmp/tmpn_4hj4cj.jl:26\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpn_4hj4cj.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpn_4hj4cj.jl:26\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn_4hj4cj.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn_4hj4cj.jl:27\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpn_4hj4cj.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpn_4hj4cj.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn_4hj4cj.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"db\"\
    \n    while decimal > 0\n        binary = binary * string(decimal % 2)\n     \
    \   decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcu2zmg0y.jl:29\n  Expression: candidate(32)\
    \ == \"db100000db\"\n   Evaluated: \"db000001db\" == \"db100000db\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcu2zmg0y.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcu2zmg0y.jl:27\ntest set: Test Failed at /tmp/tmpcu2zmg0y.jl:30\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcu2zmg0y.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcu2zmg0y.jl:27\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcu2zmg0y.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9kfdck18.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9kfdck18.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9kfdck18.jl:24\ntest set: Test Failed at /tmp/tmp9kfdck18.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9kfdck18.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9kfdck18.jl:24\ntest set: Test Failed at /tmp/tmp9kfdck18.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9kfdck18.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9kfdck18.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9kfdck18.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk5ktrsqy.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpk5ktrsqy.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk5ktrsqy.jl:25\\ntest set: Test Failed at /tmp/tmpk5ktrsqy.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk5ktrsqy.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk5ktrsqy.jl:25\\ntest set: Test Failed at /tmp/tmpk5ktrsqy.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk5ktrsqy.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk5ktrsqy.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n  \
    \  return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9bfhx4jb.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9bfhx4jb.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9bfhx4jb.jl:25\ntest set: Test Failed at /tmp/tmp9bfhx4jb.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9bfhx4jb.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9bfhx4jb.jl:25\ntest set: Test Failed at /tmp/tmp9bfhx4jb.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9bfhx4jb.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9bfhx4jb.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9bfhx4jb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps5zvuk1b.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmps5zvuk1b.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps5zvuk1b.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbngzjs5w.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbngzjs5w.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbngzjs5w.jl:24\ntest set: Test Failed at /tmp/tmpbngzjs5w.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbngzjs5w.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbngzjs5w.jl:24\ntest set: Test Failed at /tmp/tmpbngzjs5w.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbngzjs5w.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbngzjs5w.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbngzjs5w.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbx191d6o.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbx191d6o.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbx191d6o.jl:25\ntest set: Test Failed at /tmp/tmpbx191d6o.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbx191d6o.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbx191d6o.jl:25\ntest set: Test Failed at /tmp/tmpbx191d6o.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbx191d6o.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbx191d6o.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbx191d6o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # Convert the decimal number to a binary string\n    binary_string = string(decimal,\
    \ base=2)\n    # Add the extra characters to the beginning and end of the string\n\
    \    binary_string = \"db\" *> binary_string <* \"db\"\n    return binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpje4uoh0n.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpje4uoh0n.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpf2gsqiw7.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpf2gsqiw7.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf2gsqiw7.jl:25\\ntest set: Test Failed at /tmp/tmpf2gsqiw7.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf2gsqiw7.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf2gsqiw7.jl:25\\ntest set: Test Failed at /tmp/tmpf2gsqiw7.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf2gsqiw7.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf2gsqiw7.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbw5txoyi.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbw5txoyi.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbw5txoyi.jl:25\ntest set: Test Failed at /tmp/tmpbw5txoyi.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbw5txoyi.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbw5txoyi.jl:25\ntest set: Test Failed at /tmp/tmpbw5txoyi.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbw5txoyi.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbw5txoyi.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbw5txoyi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = \"\"\n    while decimal > 0\n\
    \        binary = string(decimal % 2) * binary\n        decimal = decimal \xF7\
    \ 2\n    end\n    # add extra characters\n    return \"db\" * binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wodm8qh.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9wodm8qh.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wodm8qh.jl:26\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wodm8qh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps6qy10yl.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmps6qy10yl.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps6qy10yl.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqi4_47lf.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqi4_47lf.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqi4_47lf.jl:24\ntest set: Test Failed at /tmp/tmpqi4_47lf.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqi4_47lf.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqi4_47lf.jl:24\ntest set: Test Failed at /tmp/tmpqi4_47lf.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqi4_47lf.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqi4_47lf.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqi4_47lf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprn1bsbd4.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprn1bsbd4.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprn1bsbd4.jl:24\ntest set: Test Failed at /tmp/tmprn1bsbd4.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmprn1bsbd4.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprn1bsbd4.jl:24\ntest set: Test Failed at /tmp/tmprn1bsbd4.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmprn1bsbd4.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprn1bsbd4.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprn1bsbd4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfvveg1pz.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfvveg1pz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfvveg1pz.jl:24\ntest set: Test Failed at /tmp/tmpfvveg1pz.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfvveg1pz.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfvveg1pz.jl:24\ntest set: Test Failed at /tmp/tmpfvveg1pz.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfvveg1pz.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfvveg1pz.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfvveg1pz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3n1gikkd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp3n1gikkd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp3n1gikkd.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3n1gikkd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3n1gikkd.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp3n1gikkd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp3n1gikkd.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3n1gikkd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3n1gikkd.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp3n1gikkd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp3n1gikkd.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3n1gikkd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3n1gikkd.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp3n1gikkd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp3n1gikkd.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3n1gikkd.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3n1gikkd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1coce3q1.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1coce3q1.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1coce3q1.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1coce3q1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp9eur_w0.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp9eur_w0.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9eur_w0.jl:24\ntest set: Test Failed at /tmp/tmpp9eur_w0.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp9eur_w0.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9eur_w0.jl:24\ntest set: Test Failed at /tmp/tmpp9eur_w0.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp9eur_w0.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9eur_w0.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9eur_w0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahjck06v.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpahjck06v.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpahjck06v.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahjck06v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = convert(Int64, decimal, base=2)\n\
    \    # convert binary to string\n    binary_string = string(binary)\n    # add\
    \ db to beginning and end of string\n    binary_string = \"db\" * binary_string\
    \ * \"db\"\n    return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9qtst605.jl:26\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:171 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64) at /tmp/tmp9qtst605.jl:14\n\
    \   [2] top-level scope at /tmp/tmp9qtst605.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9qtst605.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9qtst605.jl:27\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type \n    Int64{}\
    \ to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9qtst605.jl:14\n   [2] top-level scope at /tmp/tmp9qtst605.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9qtst605.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9qtst605.jl:28\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type \n   \
    \ Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9qtst605.jl:14\n   [2] top-level scope at /tmp/tmp9qtst605.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9qtst605.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp9qtst605.jl:29\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type \n    Int64{}\
    \ to an object of type \n    Int64{}\n  Closest candidates are:\n    convert(::Type{T},\
    \ ::T) where T<:Number at number.jl:6 got unsupported keyword argument \"base\"\
    \n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::T) where T at essentials.jl:171\
    \ got unsupported keyword argument \"base\"\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9qtst605.jl:14\n   [2] top-level scope at /tmp/tmp9qtst605.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9qtst605.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qtst605.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> string(decimal, base=2) *> \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpktaf40x9.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpktaf40x9.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n  \
    \  bin = reverse(bin)\n    return bin\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3fq1q1vc.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"bdbd\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3fq1q1vc.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3fq1q1vc.jl:26\ntest set: Test Failed at /tmp/tmp3fq1q1vc.jl:28\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"bd100000bd\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3fq1q1vc.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3fq1q1vc.jl:26\ntest set: Test Failed at /tmp/tmp3fq1q1vc.jl:29\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"bd1100111bd\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3fq1q1vc.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3fq1q1vc.jl:26\ntest set: Test Failed at /tmp/tmp3fq1q1vc.jl:30\n\
    \  Expression: candidate(15) == \"db1111db\"\n   Evaluated: \"bd1111bd\" == \"\
    db1111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3fq1q1vc.jl:30\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3fq1q1vc.jl:26\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fq1q1vc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6xg_3tg2.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:529\\n    *(!Matched::Complex{Bool},\
    \ ::Real) at complex.jl:309\\n    *(!Matched::Missing, ::Number) at missing.jl:115\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\\
    n   [2] decimal_to_binary(::Int64) at /tmp/tmp6xg_3tg2.jl:13\\n   [3] top-level\
    \ scope at /tmp/tmp6xg_3tg2.jl:20\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xg_3tg2.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xg_3tg2.jl:21\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp6xg_3tg2.jl:13\\n   [3] top-level scope at /tmp/tmp6xg_3tg2.jl:21\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xg_3tg2.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xg_3tg2.jl:22\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp6xg_3tg2.jl:13\\n   [3] top-level scope at /tmp/tmp6xg_3tg2.jl:22\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp6xg_3tg2.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        if decimal % 2 == 0\n\
    \            binary = \"0\" * binary\n        else\n            binary = \"1\"\
    \ * binary\n        end\n        decimal = decimal \xF7 2\n    end\n    return\
    \ binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk95k7er9.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpk95k7er9.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk95k7er9.jl:28\ntest set: Test Failed at /tmp/tmpk95k7er9.jl:30\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"100000dbdb\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk95k7er9.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk95k7er9.jl:28\ntest set: Test Failed at /tmp/tmpk95k7er9.jl:31\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"1100111dbdb\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk95k7er9.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk95k7er9.jl:28\ntest set: Test Failed at /tmp/tmpk95k7er9.jl:32\n\
    \  Expression: candidate(15) == \"db1111db\"\n   Evaluated: \"1111dbdb\" == \"\
    db1111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpk95k7er9.jl:32\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk95k7er9.jl:28\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk95k7er9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxaplsogl.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxaplsogl.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxaplsogl.jl:24\\ntest set: Test Failed at /tmp/tmpxaplsogl.jl:26\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxaplsogl.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxaplsogl.jl:24\\ntest set: Test Failed at /tmp/tmpxaplsogl.jl:27\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxaplsogl.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxaplsogl.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnffxquzq.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\\n  Stacktrace:\\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmpnffxquzq.jl:14\\n   [2] top-level scope at /tmp/tmpnffxquzq.jl:20\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnffxquzq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnffxquzq.jl:21\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpnffxquzq.jl:14\\n   [2] top-level\
    \ scope at /tmp/tmpnffxquzq.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnffxquzq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnffxquzq.jl:22\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpnffxquzq.jl:14\\n   [2] top-level\
    \ scope at /tmp/tmpnffxquzq.jl:22\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnffxquzq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnffxquzq.jl:23\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpnffxquzq.jl:14\\n   [2] top-level\
    \ scope at /tmp/tmpnffxquzq.jl:23\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnffxquzq.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     4      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf75jef1_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpf75jef1_.jl:13\n   [3] top-level scope at /tmp/tmpf75jef1_.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf75jef1_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf75jef1_.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpf75jef1_.jl:13\n   [3] top-level scope at /tmp/tmpf75jef1_.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf75jef1_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf75jef1_.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpf75jef1_.jl:13\n   [3] top-level scope at /tmp/tmpf75jef1_.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf75jef1_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf75jef1_.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpf75jef1_.jl:13\n\
    \   [3] top-level scope at /tmp/tmpf75jef1_.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf75jef1_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf75jef1_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp20zu78t5.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp20zu78t5.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp20zu78t5.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp91zlp99a.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp91zlp99a.jl:13\n   [3] top-level scope at /tmp/tmp91zlp99a.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp91zlp99a.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp91zlp99a.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp91zlp99a.jl:13\n   [3] top-level scope at /tmp/tmp91zlp99a.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp91zlp99a.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp91zlp99a.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp91zlp99a.jl:13\n   [3] top-level scope at /tmp/tmp91zlp99a.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp91zlp99a.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp91zlp99a.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmp91zlp99a.jl:13\n\
    \   [3] top-level scope at /tmp/tmp91zlp99a.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp91zlp99a.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91zlp99a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeqwrw7h5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpeqwrw7h5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpeqwrw7h5.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeqwrw7h5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeqwrw7h5.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpeqwrw7h5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpeqwrw7h5.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeqwrw7h5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeqwrw7h5.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpeqwrw7h5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpeqwrw7h5.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeqwrw7h5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeqwrw7h5.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpeqwrw7h5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpeqwrw7h5.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeqwrw7h5.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeqwrw7h5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw744lrbl.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpw744lrbl.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpw744lrbl.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw744lrbl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw744lrbl.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpw744lrbl.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpw744lrbl.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw744lrbl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw744lrbl.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpw744lrbl.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpw744lrbl.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw744lrbl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw744lrbl.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpw744lrbl.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpw744lrbl.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw744lrbl.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw744lrbl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpveuyr3_p.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpveuyr3_p.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpveuyr3_p.jl:24\ntest set: Test Failed at /tmp/tmpveuyr3_p.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpveuyr3_p.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpveuyr3_p.jl:24\ntest set: Test Failed at /tmp/tmpveuyr3_p.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpveuyr3_p.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpveuyr3_p.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpveuyr3_p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplhvl_o42.jl:21\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmplhvl_o42.jl:14\n   [3] top-level scope at /tmp/tmplhvl_o42.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplhvl_o42.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplhvl_o42.jl:22\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmplhvl_o42.jl:14\n   [3] top-level scope at /tmp/tmplhvl_o42.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplhvl_o42.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplhvl_o42.jl:23\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmplhvl_o42.jl:14\n   [3] top-level scope at /tmp/tmplhvl_o42.jl:23\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplhvl_o42.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplhvl_o42.jl:24\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmplhvl_o42.jl:14\n\
    \   [3] top-level scope at /tmp/tmplhvl_o42.jl:24\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplhvl_o42.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhvl_o42.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5buyqvo4.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5buyqvo4.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5buyqvo4.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmp5buyqvo4.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp5buyqvo4.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmp5buyqvo4.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5buyqvo4.jl:25\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps_1czxhd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmps_1czxhd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmps_1czxhd.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_1czxhd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmps_1czxhd.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmps_1czxhd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmps_1czxhd.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_1czxhd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmps_1czxhd.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmps_1czxhd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmps_1czxhd.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_1czxhd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmps_1czxhd.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmps_1czxhd.jl:14\n   [2] top-level\
    \ scope at /tmp/tmps_1czxhd.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_1czxhd.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps_1czxhd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgnjjzxyh.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpgnjjzxyh.jl:13\n   [3] top-level scope at /tmp/tmpgnjjzxyh.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgnjjzxyh.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgnjjzxyh.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpgnjjzxyh.jl:13\n   [3] top-level scope at /tmp/tmpgnjjzxyh.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgnjjzxyh.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgnjjzxyh.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpgnjjzxyh.jl:13\n   [3] top-level scope at /tmp/tmpgnjjzxyh.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgnjjzxyh.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgnjjzxyh.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpgnjjzxyh.jl:13\n\
    \   [3] top-level scope at /tmp/tmpgnjjzxyh.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgnjjzxyh.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnjjzxyh.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy0y5bk01.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpy0y5bk01.jl:13\n   [3] top-level scope at /tmp/tmpy0y5bk01.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy0y5bk01.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy0y5bk01.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpy0y5bk01.jl:13\n   [3] top-level scope at /tmp/tmpy0y5bk01.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy0y5bk01.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy0y5bk01.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpy0y5bk01.jl:13\n   [3] top-level scope at /tmp/tmpy0y5bk01.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy0y5bk01.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy0y5bk01.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpy0y5bk01.jl:13\n\
    \   [3] top-level scope at /tmp/tmpy0y5bk01.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpy0y5bk01.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0y5bk01.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplzoreq3j.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplzoreq3j.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzoreq3j.jl:24\ntest set: Test Failed at /tmp/tmplzoreq3j.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmplzoreq3j.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzoreq3j.jl:24\ntest set: Test Failed at /tmp/tmplzoreq3j.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmplzoreq3j.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzoreq3j.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzoreq3j.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe_z6hnnu.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe_z6hnnu.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe_z6hnnu.jl:25\ntest set: Test Failed at /tmp/tmpe_z6hnnu.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe_z6hnnu.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe_z6hnnu.jl:25\ntest set: Test Failed at /tmp/tmpe_z6hnnu.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe_z6hnnu.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe_z6hnnu.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_z6hnnu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5zm0zbek.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5zm0zbek.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5zm0zbek.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmp5zm0zbek.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp5zm0zbek.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmp5zm0zbek.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5zm0zbek.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5zm0zbek.jl:28\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp5zm0zbek.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmp5zm0zbek.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5zm0zbek.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5zm0zbek.jl:29\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp5zm0zbek.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmp5zm0zbek.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5zm0zbek.jl:25\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy1prwgyp.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy1prwgyp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy1prwgyp.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1prwgyp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * decimal % 2\n\
    \        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n    return\
    \ bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb0jq1fsw.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpb0jq1fsw.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb0jq1fsw.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmpb0jq1fsw.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpb0jq1fsw.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpb0jq1fsw.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb0jq1fsw.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpb0jq1fsw.jl:28\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpb0jq1fsw.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpb0jq1fsw.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb0jq1fsw.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpb0jq1fsw.jl:29\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpb0jq1fsw.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpb0jq1fsw.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpb0jq1fsw.jl:25\\n  \\nTest Summary: | Fail\
    \  Error  Total\\ntest set      |    1      3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoxicwod5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoxicwod5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoxicwod5.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoxicwod5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoxicwod5.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoxicwod5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoxicwod5.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoxicwod5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoxicwod5.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoxicwod5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoxicwod5.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoxicwod5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoxicwod5.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoxicwod5.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoxicwod5.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoxicwod5.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoxicwod5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfivjjbiz.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfivjjbiz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfivjjbiz.jl:24\ntest set: Test Failed at /tmp/tmpfivjjbiz.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfivjjbiz.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfivjjbiz.jl:24\ntest set: Test Failed at /tmp/tmpfivjjbiz.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfivjjbiz.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfivjjbiz.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfivjjbiz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbtp_v7nh.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbtp_v7nh.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbtp_v7nh.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbtp_v7nh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * decimal % 2\n\
    \        decimal = decimal \xF7 2\n    end\n    return bin * \"db\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6nluk7cv.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6nluk7cv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6nluk7cv.jl:24\ntest set: Error During Test at\
    \ /tmp/tmp6nluk7cv.jl:26\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp6nluk7cv.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp6nluk7cv.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6nluk7cv.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6nluk7cv.jl:27\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp6nluk7cv.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp6nluk7cv.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6nluk7cv.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp6nluk7cv.jl:28\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmp6nluk7cv.jl:15\n   [2] top-level scope at /tmp/tmp6nluk7cv.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6nluk7cv.jl:24\n  \nTest Summary: | Fail  Error\
    \  Total\ntest set      |    1      3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6nluk7cv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpx5_lrk_d.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpx5_lrk_d.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx5_lrk_d.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n  \
    \  return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp654b06sk.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp654b06sk.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp654b06sk.jl:25\\ntest set: Test Failed at /tmp/tmp654b06sk.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp654b06sk.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp654b06sk.jl:25\\ntest set: Test Failed at /tmp/tmp654b06sk.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp654b06sk.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp654b06sk.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5gwmfmwl.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5gwmfmwl.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5gwmfmwl.jl:24\\ntest set: Test Failed at /tmp/tmp5gwmfmwl.jl:26\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5gwmfmwl.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5gwmfmwl.jl:24\\ntest set: Test Failed at /tmp/tmp5gwmfmwl.jl:27\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5gwmfmwl.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5gwmfmwl.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg_l2qnod.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg_l2qnod.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg_l2qnod.jl:25\ntest set: Test Failed at /tmp/tmpg_l2qnod.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg_l2qnod.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg_l2qnod.jl:25\ntest set: Test Failed at /tmp/tmpg_l2qnod.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpg_l2qnod.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg_l2qnod.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg_l2qnod.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps6tu7znn.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmps6tu7znn.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps6tu7znn.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmps6tu7znn.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmps6tu7znn.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmps6tu7znn.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps6tu7znn.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps6tu7znn.jl:28\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmps6tu7znn.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmps6tu7znn.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps6tu7znn.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps6tu7znn.jl:29\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmps6tu7znn.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmps6tu7znn.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps6tu7znn.jl:25\\n  \\nTest Summary: | Fail\
    \  Error  Total\\ntest set      |    1      3      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9p6p8njd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9p6p8njd.jl:13\n   [3] top-level scope at /tmp/tmp9p6p8njd.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9p6p8njd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9p6p8njd.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9p6p8njd.jl:13\n   [3] top-level scope at /tmp/tmp9p6p8njd.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9p6p8njd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9p6p8njd.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp9p6p8njd.jl:13\n   [3] top-level scope at /tmp/tmp9p6p8njd.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9p6p8njd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9p6p8njd.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmp9p6p8njd.jl:13\n\
    \   [3] top-level scope at /tmp/tmp9p6p8njd.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp9p6p8njd.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9p6p8njd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmsfom27u.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmsfom27u.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmsfom27u.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsfom27u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy1_vzxf3.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy1_vzxf3.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy1_vzxf3.jl:24\ntest set: Test Failed at /tmp/tmpy1_vzxf3.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy1_vzxf3.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy1_vzxf3.jl:24\ntest set: Test Failed at /tmp/tmpy1_vzxf3.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy1_vzxf3.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy1_vzxf3.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1_vzxf3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        if decimal % 2 == 0\n\
    \            binary = binary * \"0\"\n        else\n            binary = binary\
    \ * \"1\"\n        end\n        decimal = decimal \xF7 2\n    end\n    binary\
    \ = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxg58y9yn.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxg58y9yn.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxg58y9yn.jl:29\ntest set: Test Failed at /tmp/tmpxg58y9yn.jl:31\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxg58y9yn.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxg58y9yn.jl:29\ntest set: Test Failed at /tmp/tmpxg58y9yn.jl:32\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxg58y9yn.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxg58y9yn.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxg58y9yn.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqwl23ldb.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqwl23ldb.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwl23ldb.jl:24\ntest set: Test Failed at /tmp/tmpqwl23ldb.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqwl23ldb.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwl23ldb.jl:24\ntest set: Test Failed at /tmp/tmpqwl23ldb.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqwl23ldb.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwl23ldb.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwl23ldb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj6kex4ab.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj6kex4ab.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj6kex4ab.jl:25\ntest set: Test Failed at /tmp/tmpj6kex4ab.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpj6kex4ab.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj6kex4ab.jl:25\ntest set: Test Failed at /tmp/tmpj6kex4ab.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpj6kex4ab.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj6kex4ab.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj6kex4ab.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbw958m5.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphbw958m5.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbw958m5.jl:24\ntest set: Test Failed at /tmp/tmphbw958m5.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmphbw958m5.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbw958m5.jl:24\ntest set: Test Failed at /tmp/tmphbw958m5.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmphbw958m5.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbw958m5.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbw958m5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa11z6hsh.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpa11z6hsh.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa11z6hsh.jl:25\ntest set: Test Failed at /tmp/tmpa11z6hsh.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpa11z6hsh.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa11z6hsh.jl:25\ntest set: Test Failed at /tmp/tmpa11z6hsh.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpa11z6hsh.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa11z6hsh.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa11z6hsh.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpomde3bkr.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpomde3bkr.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpomde3bkr.jl:24\ntest set: Test Failed at /tmp/tmpomde3bkr.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpomde3bkr.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpomde3bkr.jl:24\ntest set: Test Failed at /tmp/tmpomde3bkr.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpomde3bkr.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpomde3bkr.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpomde3bkr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtvburcf.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvtvburcf.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtvburcf.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtvburcf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        rem = decimal % 2\n  \
    \      binary = string(rem) * binary\n        decimal = decimal \xF7 2\n    end\n\
    \    binary = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyc26w6jy.jl:27\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyc26w6jy.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyc26w6jy.jl:26\ntest set: Test Failed at /tmp/tmpyc26w6jy.jl:28\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"100000dbdb\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyc26w6jy.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyc26w6jy.jl:26\ntest set: Test Failed at /tmp/tmpyc26w6jy.jl:29\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"1100111dbdb\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyc26w6jy.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyc26w6jy.jl:26\ntest set: Test Failed at /tmp/tmpyc26w6jy.jl:30\n\
    \  Expression: candidate(15) == \"db1111db\"\n   Evaluated: \"1111dbdb\" == \"\
    db1111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyc26w6jy.jl:30\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyc26w6jy.jl:26\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyc26w6jy.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpawio9l72.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpawio9l72.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpawio9l72.jl:25\ntest set: Test Failed at /tmp/tmpawio9l72.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpawio9l72.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpawio9l72.jl:25\ntest set: Test Failed at /tmp/tmpawio9l72.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpawio9l72.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpawio9l72.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpawio9l72.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gssn5wq.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6gssn5wq.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gssn5wq.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gssn5wq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpymk3g5xz.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpymk3g5xz.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpymk3g5xz.jl:25\ntest set: Test Failed at /tmp/tmpymk3g5xz.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpymk3g5xz.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpymk3g5xz.jl:25\ntest set: Test Failed at /tmp/tmpymk3g5xz.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpymk3g5xz.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpymk3g5xz.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpymk3g5xz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2t_q62qk.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp2t_q62qk.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp2t_q62qk.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t_q62qk.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t_q62qk.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp2t_q62qk.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp2t_q62qk.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t_q62qk.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t_q62qk.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp2t_q62qk.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp2t_q62qk.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t_q62qk.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t_q62qk.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp2t_q62qk.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp2t_q62qk.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t_q62qk.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2t_q62qk.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp94pkm2va.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp94pkm2va.jl:13\n   [3] top-level scope at /tmp/tmp94pkm2va.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp94pkm2va.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp94pkm2va.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp94pkm2va.jl:13\n   [3] top-level scope at /tmp/tmp94pkm2va.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp94pkm2va.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp94pkm2va.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp94pkm2va.jl:13\n   [3] top-level scope at /tmp/tmp94pkm2va.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp94pkm2va.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp94pkm2va.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmp94pkm2va.jl:13\n\
    \   [3] top-level scope at /tmp/tmp94pkm2va.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp94pkm2va.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94pkm2va.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn826ykfi.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpn826ykfi.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn826ykfi.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\n    Convert a decimal number to a binary string\n    \"\"\"\n\
    \    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2ixk3j31.jl:29\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp2ixk3j31.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2ixk3j31.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpibvs2hqp.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpibvs2hqp.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpibvs2hqp.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibvs2hqp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpibvs2hqp.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpibvs2hqp.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpibvs2hqp.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibvs2hqp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpibvs2hqp.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpibvs2hqp.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpibvs2hqp.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibvs2hqp.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpibvs2hqp.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpibvs2hqp.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpibvs2hqp.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibvs2hqp.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibvs2hqp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ahrxpml.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8ahrxpml.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ahrxpml.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ahrxpml.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqrvq0ie6.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqrvq0ie6.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqrvq0ie6.jl:25\ntest set: Error During Test at\
    \ /tmp/tmpqrvq0ie6.jl:27\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpqrvq0ie6.jl:15\n   [2] top-level\
    \ scope at /tmp/tmpqrvq0ie6.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqrvq0ie6.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpqrvq0ie6.jl:28\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpqrvq0ie6.jl:15\n   [2] top-level\
    \ scope at /tmp/tmpqrvq0ie6.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqrvq0ie6.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpqrvq0ie6.jl:29\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] decimal_to_binary(::Int64)\
    \ at /tmp/tmpqrvq0ie6.jl:15\n   [2] top-level scope at /tmp/tmpqrvq0ie6.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqrvq0ie6.jl:25\n  \nTest Summary: | Fail  Error\
    \  Total\ntest set      |    1      3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqrvq0ie6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6sh3pgd3.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6sh3pgd3.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sh3pgd3.jl:25\ntest set: Test Failed at /tmp/tmp6sh3pgd3.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6sh3pgd3.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sh3pgd3.jl:25\ntest set: Test Failed at /tmp/tmp6sh3pgd3.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6sh3pgd3.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6sh3pgd3.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6sh3pgd3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        remainder = decimal % 2\n\
    \        decimal = decimal \xF7 2\n        push!(binary, remainder)\n    end\n\
    \    return \"db\" * join(reverse(binary)) * \"db\"\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl6l0g8ls.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl6l0g8ls.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6l0g8ls.jl:25\ntest set: Error During Test at\
    \ /tmp/tmpl6l0g8ls.jl:27\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching push!(::String, ::Int64)\n\
    \  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at abstractarray.jl:2158\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at abstractarray.jl:2159\n\
    \    push!(!Matched::Array{Any,1}, ::Any) at array.jl:920\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpl6l0g8ls.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpl6l0g8ls.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6l0g8ls.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6l0g8ls.jl:28\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching push!(::String, ::Int64)\n\
    \  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at abstractarray.jl:2158\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at abstractarray.jl:2159\n\
    \    push!(!Matched::Array{Any,1}, ::Any) at array.jl:920\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpl6l0g8ls.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpl6l0g8ls.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6l0g8ls.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6l0g8ls.jl:29\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching push!(::String, ::Int64)\n\
    \  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any) at abstractarray.jl:2158\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at abstractarray.jl:2159\n\
    \    push!(!Matched::Array{Any,1}, ::Any) at array.jl:920\n    ...\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpl6l0g8ls.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpl6l0g8ls.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6l0g8ls.jl:25\n  \nTest Summary: | Fail  Error\
    \  Total\ntest set      |    1      3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6l0g8ls.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzqbfv1_f.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzqbfv1_f.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzqbfv1_f.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqbfv1_f.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxd3yxuqa.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:529\\n    *(!Matched::Complex{Bool},\
    \ ::Real) at complex.jl:309\\n    *(!Matched::Missing, ::Number) at missing.jl:115\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\\
    n   [2] decimal_to_binary(::Int64) at /tmp/tmpxd3yxuqa.jl:13\\n   [3] top-level\
    \ scope at /tmp/tmpxd3yxuqa.jl:20\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpxd3yxuqa.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxd3yxuqa.jl:21\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpxd3yxuqa.jl:13\\n   [3] top-level scope at /tmp/tmpxd3yxuqa.jl:21\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpxd3yxuqa.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxd3yxuqa.jl:22\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpxd3yxuqa.jl:13\\n   [3] top-level scope at /tmp/tmpxd3yxuqa.jl:22\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpxd3yxuqa.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxd3yxuqa.jl:23\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpxd3yxuqa.jl:13\\n   [3] top-level scope at /tmp/tmpxd3yxuqa.jl:23\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpxd3yxuqa.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu3spo5wg.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpu3spo5wg.jl:13\n   [3] top-level scope at /tmp/tmpu3spo5wg.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpu3spo5wg.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3spo5wg.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpu3spo5wg.jl:13\n   [3] top-level scope at /tmp/tmpu3spo5wg.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpu3spo5wg.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3spo5wg.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpu3spo5wg.jl:13\n   [3] top-level scope at /tmp/tmpu3spo5wg.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpu3spo5wg.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3spo5wg.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpu3spo5wg.jl:13\n\
    \   [3] top-level scope at /tmp/tmpu3spo5wg.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpu3spo5wg.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3spo5wg.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzb09f_rx.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzb09f_rx.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzb09f_rx.jl:25\ntest set: Test Failed at /tmp/tmpzb09f_rx.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzb09f_rx.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzb09f_rx.jl:25\ntest set: Test Failed at /tmp/tmpzb09f_rx.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzb09f_rx.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzb09f_rx.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb09f_rx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppa1z61pq.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmppa1z61pq.jl:13\n   [3] top-level scope at /tmp/tmppa1z61pq.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppa1z61pq.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppa1z61pq.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmppa1z61pq.jl:13\n   [3] top-level scope at /tmp/tmppa1z61pq.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppa1z61pq.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppa1z61pq.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmppa1z61pq.jl:13\n   [3] top-level scope at /tmp/tmppa1z61pq.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppa1z61pq.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppa1z61pq.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmppa1z61pq.jl:13\n\
    \   [3] top-level scope at /tmp/tmppa1z61pq.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmppa1z61pq.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppa1z61pq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfztsbpmv.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfztsbpmv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfztsbpmv.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfztsbpmv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiyz36e_0.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpiyz36e_0.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiyz36e_0.jl:24\ntest set: Test Failed at /tmp/tmpiyz36e_0.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpiyz36e_0.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiyz36e_0.jl:24\ntest set: Test Failed at /tmp/tmpiyz36e_0.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpiyz36e_0.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiyz36e_0.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiyz36e_0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23_bfjeg.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp23_bfjeg.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23_bfjeg.jl:25\ntest set: Test Failed at /tmp/tmp23_bfjeg.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp23_bfjeg.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23_bfjeg.jl:25\ntest set: Test Failed at /tmp/tmp23_bfjeg.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp23_bfjeg.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23_bfjeg.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23_bfjeg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpldtob2az.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(0) == \"db0db\"\\n  MethodError: no method\
    \ matching *(::String, ::Int64)\\n  Closest candidates are:\\n    *(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:529\\n    *(!Matched::Complex{Bool},\
    \ ::Real) at complex.jl:309\\n    *(!Matched::Missing, ::Number) at missing.jl:115\\\
    n    ...\\n  Stacktrace:\\n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\\
    n   [2] decimal_to_binary(::Int64) at /tmp/tmpldtob2az.jl:13\\n   [3] top-level\
    \ scope at /tmp/tmpldtob2az.jl:20\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpldtob2az.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpldtob2az.jl:21\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpldtob2az.jl:13\\n   [3] top-level scope at /tmp/tmpldtob2az.jl:21\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpldtob2az.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpldtob2az.jl:22\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpldtob2az.jl:13\\n   [3] top-level scope at /tmp/tmpldtob2az.jl:22\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmpldtob2az.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxzgjxmtr.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxzgjxmtr.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxzgjxmtr.jl:24\\ntest set: Test Failed at /tmp/tmpxzgjxmtr.jl:26\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxzgjxmtr.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxzgjxmtr.jl:24\\ntest set: Test Failed at /tmp/tmpxzgjxmtr.jl:27\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxzgjxmtr.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxzgjxmtr.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2gzfzeqm.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2gzfzeqm.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2gzfzeqm.jl:25\ntest set: Test Failed at /tmp/tmp2gzfzeqm.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2gzfzeqm.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2gzfzeqm.jl:25\ntest set: Test Failed at /tmp/tmp2gzfzeqm.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2gzfzeqm.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2gzfzeqm.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gzfzeqm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1kw_54qp.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1kw_54qp.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1kw_54qp.jl:25\\ntest set: Test Failed at /tmp/tmp1kw_54qp.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1kw_54qp.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1kw_54qp.jl:25\\ntest set: Test Failed at /tmp/tmp1kw_54qp.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1kw_54qp.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1kw_54qp.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw1aiahyo.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpw1aiahyo.jl:13\n   [3] top-level scope at /tmp/tmpw1aiahyo.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw1aiahyo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw1aiahyo.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpw1aiahyo.jl:13\n   [3] top-level scope at /tmp/tmpw1aiahyo.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw1aiahyo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw1aiahyo.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpw1aiahyo.jl:13\n   [3] top-level scope at /tmp/tmpw1aiahyo.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw1aiahyo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpw1aiahyo.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpw1aiahyo.jl:13\n\
    \   [3] top-level scope at /tmp/tmpw1aiahyo.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpw1aiahyo.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1aiahyo.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwzu4opnq.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwzu4opnq.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwzu4opnq.jl:24\ntest set: Test Failed at /tmp/tmpwzu4opnq.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwzu4opnq.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwzu4opnq.jl:24\ntest set: Test Failed at /tmp/tmpwzu4opnq.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwzu4opnq.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwzu4opnq.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwzu4opnq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        if decimal % 2 == 0\n\
    \            binary = binary * \"0\"\n        else\n            binary = binary\
    \ * \"1\"\n        end\n        decimal = decimal \xF7 2\n    end\n    binary\
    \ = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwiuuwveh.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwiuuwveh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwiuuwveh.jl:29\ntest set: Test Failed at /tmp/tmpwiuuwveh.jl:31\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwiuuwveh.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwiuuwveh.jl:29\ntest set: Test Failed at /tmp/tmpwiuuwveh.jl:32\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwiuuwveh.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwiuuwveh.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwiuuwveh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        remainder = decimal %\
    \ 2\n        decimal = decimal \xF7 2\n        binary = string(remainder) * binary\n\
    \    end\n    return binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rywca3n.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8rywca3n.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rywca3n.jl:25\ntest set: Test Failed at /tmp/tmp8rywca3n.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"100000dbdb\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8rywca3n.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rywca3n.jl:25\ntest set: Test Failed at /tmp/tmp8rywca3n.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"1100111dbdb\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8rywca3n.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rywca3n.jl:25\ntest set: Test Failed at /tmp/tmp8rywca3n.jl:29\n\
    \  Expression: candidate(15) == \"db1111db\"\n   Evaluated: \"1111dbdb\" == \"\
    db1111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8rywca3n.jl:29\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8rywca3n.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rywca3n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppj7h5j95.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppj7h5j95.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj7h5j95.jl:24\ntest set: Test Failed at /tmp/tmppj7h5j95.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppj7h5j95.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj7h5j95.jl:24\ntest set: Test Failed at /tmp/tmppj7h5j95.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppj7h5j95.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppj7h5j95.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppj7h5j95.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        if decimal % 2 == 0\n\
    \            binary = binary * \"0\"\n        else\n            binary = binary\
    \ * \"1\"\n        end\n        decimal = decimal / 2\n    end\n    return binary\
    \ * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyq2rk64a.jl:29\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyq2rk64a.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyq2rk64a.jl:28\ntest set: Test Failed at /tmp/tmpyq2rk64a.jl:30\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"dbdb\"\
    \ == \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyq2rk64a.jl:30\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyq2rk64a.jl:28\ntest set: Test Failed at /tmp/tmpyq2rk64a.jl:31\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"dbdb\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyq2rk64a.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyq2rk64a.jl:28\ntest set: Test Failed at /tmp/tmpyq2rk64a.jl:32\n\
    \  Expression: candidate(15) == \"db1111db\"\n   Evaluated: \"dbdb\"\
    \ == \"db1111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyq2rk64a.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyq2rk64a.jl:28\nTest Summary: | Fail  Total\n\
    test set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyq2rk64a.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0g8fqxbf.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0g8fqxbf.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0g8fqxbf.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0g8fqxbf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7_oq8qq_.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7_oq8qq_.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7_oq8qq_.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7_oq8qq_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbrbd74tq.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbrbd74tq.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbrbd74tq.jl:25\\ntest set: Error During Test\
    \ at /tmp/tmpbrbd74tq.jl:27\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpbrbd74tq.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpbrbd74tq.jl:27\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrbd74tq.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrbd74tq.jl:28\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpbrbd74tq.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpbrbd74tq.jl:28\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrbd74tq.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrbd74tq.jl:29\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmpbrbd74tq.jl:15\\n   [2] top-level\
    \ scope at /tmp/tmpbrbd74tq.jl:29\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrbd74tq.jl:25\\n  \\nTest Summary: | Fail\
    \  Error  Total\\ntest set      | '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = \"\"\n    while decimal != 0\n\
    \        binary = string(decimal % 2) * binary\n        decimal = decimal \xF7\
    \ 2\n    end\n    # add extra characters\n    binary = \"db\" * binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplf_xu953.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplf_xu953.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplf_xu953.jl:27\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplf_xu953.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8lzkbfhq.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8lzkbfhq.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lzkbfhq.jl:24\ntest set: Test Failed at /tmp/tmp8lzkbfhq.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8lzkbfhq.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lzkbfhq.jl:24\ntest set: Test Failed at /tmp/tmp8lzkbfhq.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8lzkbfhq.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8lzkbfhq.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lzkbfhq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp425z_nv.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp425z_nv.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp425z_nv.jl:25\ntest set: Test Failed at /tmp/tmpp425z_nv.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp425z_nv.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp425z_nv.jl:25\ntest set: Test Failed at /tmp/tmpp425z_nv.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp425z_nv.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp425z_nv.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp425z_nv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjj3nquss.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjj3nquss.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjj3nquss.jl:24\ntest set: Test Failed at /tmp/tmpjj3nquss.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjj3nquss.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjj3nquss.jl:24\ntest set: Test Failed at /tmp/tmpjj3nquss.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjj3nquss.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjj3nquss.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjj3nquss.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9gn0jgv3.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9gn0jgv3.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9gn0jgv3.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gn0jgv3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = \"db\" *> string(dec2bin(decimal))\
    \ *> \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbh2op9s1.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbh2op9s1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1yt9wzw1.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1yt9wzw1.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yt9wzw1.jl:25\\ntest set: Test Failed at /tmp/tmp1yt9wzw1.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1yt9wzw1.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yt9wzw1.jl:25\\ntest set: Test Failed at /tmp/tmp1yt9wzw1.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1yt9wzw1.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1yt9wzw1.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfc494amh.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpfc494amh.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfc494amh.jl:25\\ntest set: Test Failed at /tmp/tmpfc494amh.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpfc494amh.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfc494amh.jl:25\\ntest set: Test Failed at /tmp/tmpfc494amh.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpfc494amh.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfc494amh.jl:25\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    1     3      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp95gl2gzj.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp95gl2gzj.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95gl2gzj.jl:25\ntest set: Test Failed at /tmp/tmp95gl2gzj.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp95gl2gzj.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95gl2gzj.jl:25\ntest set: Test Failed at /tmp/tmp95gl2gzj.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp95gl2gzj.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95gl2gzj.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95gl2gzj.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8swy2zv.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq8swy2zv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8swy2zv.jl:24\ntest set: Test Failed at /tmp/tmpq8swy2zv.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq8swy2zv.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8swy2zv.jl:24\ntest set: Test Failed at /tmp/tmpq8swy2zv.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq8swy2zv.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq8swy2zv.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8swy2zv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4qlqdueo.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp4qlqdueo.jl:13\n   [3] top-level scope at /tmp/tmp4qlqdueo.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4qlqdueo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp4qlqdueo.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp4qlqdueo.jl:13\n   [3] top-level scope at /tmp/tmp4qlqdueo.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4qlqdueo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp4qlqdueo.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmp4qlqdueo.jl:13\n   [3] top-level scope at /tmp/tmp4qlqdueo.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4qlqdueo.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp4qlqdueo.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmp4qlqdueo.jl:13\n\
    \   [3] top-level scope at /tmp/tmp4qlqdueo.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4qlqdueo.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4qlqdueo.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaeh8lgaq.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaeh8lgaq.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeh8lgaq.jl:25\ntest set: Test Failed at /tmp/tmpaeh8lgaq.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaeh8lgaq.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeh8lgaq.jl:25\ntest set: Test Failed at /tmp/tmpaeh8lgaq.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaeh8lgaq.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeh8lgaq.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaeh8lgaq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxu3zvge5.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxu3zvge5.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxu3zvge5.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7ap2ddgv.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp7ap2ddgv.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7ap2ddgv.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5yycvf1a.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5yycvf1a.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yycvf1a.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5yycvf1a.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpantyzdoy.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpantyzdoy.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpantyzdoy.jl:24\\ntest set: Test Failed at /tmp/tmpantyzdoy.jl:26\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpantyzdoy.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpantyzdoy.jl:24\\ntest set: Test Failed at /tmp/tmpantyzdoy.jl:27\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpantyzdoy.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpantyzdoy.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa4up972t.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpa4up972t.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa4up972t.jl:24\ntest set: Test Failed at /tmp/tmpa4up972t.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpa4up972t.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa4up972t.jl:24\ntest set: Test Failed at /tmp/tmpa4up972t.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpa4up972t.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa4up972t.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4up972t.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplvip6jf1.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplvip6jf1.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplvip6jf1.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplvip6jf1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5yzwptgn.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5yzwptgn.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yzwptgn.jl:25\ntest set: Test Failed at /tmp/tmp5yzwptgn.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5yzwptgn.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yzwptgn.jl:25\ntest set: Test Failed at /tmp/tmp5yzwptgn.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5yzwptgn.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yzwptgn.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5yzwptgn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe2jqmbdm.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpe2jqmbdm.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpe2jqmbdm.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe2jqmbdm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe2jqmbdm.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpe2jqmbdm.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpe2jqmbdm.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe2jqmbdm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe2jqmbdm.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpe2jqmbdm.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpe2jqmbdm.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe2jqmbdm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe2jqmbdm.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpe2jqmbdm.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpe2jqmbdm.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe2jqmbdm.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe2jqmbdm.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt4wbzsn6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpt4wbzsn6.jl:13\n   [3] top-level scope at /tmp/tmpt4wbzsn6.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpt4wbzsn6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt4wbzsn6.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpt4wbzsn6.jl:13\n   [3] top-level scope at /tmp/tmpt4wbzsn6.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpt4wbzsn6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt4wbzsn6.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpt4wbzsn6.jl:13\n   [3] top-level scope at /tmp/tmpt4wbzsn6.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpt4wbzsn6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt4wbzsn6.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpt4wbzsn6.jl:13\n\
    \   [3] top-level scope at /tmp/tmpt4wbzsn6.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpt4wbzsn6.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt4wbzsn6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4mb2hl2.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpo4mb2hl2.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo4mb2hl2.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4mb2hl2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal != 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppyp6j8f7.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmppyp6j8f7.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppyp6j8f7.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp93gf4dwi.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp93gf4dwi.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp93gf4dwi.jl:25\ntest set: Test Failed at /tmp/tmp93gf4dwi.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp93gf4dwi.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp93gf4dwi.jl:25\ntest set: Test Failed at /tmp/tmp93gf4dwi.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp93gf4dwi.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp93gf4dwi.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp93gf4dwi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp919chpmj.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp919chpmj.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp919chpmj.jl:24\ntest set: Test Failed at /tmp/tmp919chpmj.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp919chpmj.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp919chpmj.jl:24\ntest set: Test Failed at /tmp/tmp919chpmj.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp919chpmj.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp919chpmj.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp919chpmj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0\n        return \"db0db\"\n    end\n    binary = \"\"\n\
    \    while decimal > 0\n        binary = string(decimal % 2) * binary\n      \
    \  decimal = decimal \xF7 2\n    end\n    return \"db\" * binary * \"db\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \"\"\"\n    Convert a decimal number to a binary string\n    \"\"\"\n\
    \    binary = \"db\"\n    while decimal > 0\n        binary = binary * decimal\
    \ % 2\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1k_qqypy.jl:29\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1k_qqypy.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1k_qqypy.jl:28\\ntest set: Error During Test\
    \ at /tmp/tmp1k_qqypy.jl:30\\n  Test threw exception\\n  Expression: candidate(32)\
    \ == \"db100000db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp1k_qqypy.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp1k_qqypy.jl:30\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1k_qqypy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1k_qqypy.jl:31\\n  Test threw exception\\n  Expression: candidate(103)\
    \ == \"db1100111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\\
    n  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp1k_qqypy.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp1k_qqypy.jl:31\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1k_qqypy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp1k_qqypy.jl:32\\n  Test threw exception\\n  Expression: candidate(15)\
    \ == \"db1111db\"\\n  MethodError: no method matching *(::String, ::Int64)\\n\
    \  Closest candidates are:\\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\\\
    n    *(!Matched::Missing, ::Number) at missing.jl:115\\n    ...\\n  Stacktrace:\\\
    n   [1] decimal_to_binary(::Int64) at /tmp/tmp1k_qqypy.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp1k_qqypy.jl:32\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp1k_qqypy.jl:28\\n  \\nTest Summary: | Fail\
    \  Error  Total\\ntest set      |    1      3      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpftu17sej.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpftu17sej.jl:13\n   [3] top-level scope at /tmp/tmpftu17sej.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpftu17sej.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpftu17sej.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpftu17sej.jl:13\n   [3] top-level scope at /tmp/tmpftu17sej.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpftu17sej.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpftu17sej.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpftu17sej.jl:13\n   [3] top-level scope at /tmp/tmpftu17sej.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpftu17sej.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpftu17sej.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpftu17sej.jl:13\n\
    \   [3] top-level scope at /tmp/tmpftu17sej.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpftu17sej.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftu17sej.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzbcryg25.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzbcryg25.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbcryg25.jl:25\ntest set: Test Failed at /tmp/tmpzbcryg25.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzbcryg25.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbcryg25.jl:25\ntest set: Test Failed at /tmp/tmpzbcryg25.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzbcryg25.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbcryg25.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzbcryg25.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptvpd9l1d.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmptvpd9l1d.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptvpd9l1d.jl:25\\ntest set: Test Failed at /tmp/tmptvpd9l1d.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmptvpd9l1d.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptvpd9l1d.jl:25\\ntest set: Test Failed at /tmp/tmptvpd9l1d.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmptvpd9l1d.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptvpd9l1d.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy6ish1se.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy6ish1se.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6ish1se.jl:25\ntest set: Test Failed at /tmp/tmpy6ish1se.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy6ish1se.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6ish1se.jl:25\ntest set: Test Failed at /tmp/tmpy6ish1se.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy6ish1se.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6ish1se.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6ish1se.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtr32ooq.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvtr32ooq.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtr32ooq.jl:24\ntest set: Test Failed at /tmp/tmpvtr32ooq.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvtr32ooq.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtr32ooq.jl:24\ntest set: Test Failed at /tmp/tmpvtr32ooq.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvtr32ooq.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtr32ooq.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtr32ooq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpu3q_h75s.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpu3q_h75s.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu3q_h75s.jl:25\\ntest set: Test Failed at /tmp/tmpu3q_h75s.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpu3q_h75s.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu3q_h75s.jl:25\\ntest set: Test Failed at /tmp/tmpu3q_h75s.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpu3q_h75s.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpu3q_h75s.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        if decimal % 2 == 0\n\
    \            binary = binary * \"0\"\n        else\n            binary = binary\
    \ * \"1\"\n        end\n        decimal = decimal \xF7 2\n    end\n    binary\
    \ = binary * \"db\"\n    return binary\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwanstvzk.jl:30\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwanstvzk.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwanstvzk.jl:29\ntest set: Test Failed at /tmp/tmpwanstvzk.jl:31\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwanstvzk.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwanstvzk.jl:29\ntest set: Test Failed at /tmp/tmpwanstvzk.jl:32\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwanstvzk.jl:32\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwanstvzk.jl:29\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwanstvzk.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuxp9wg4t.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpuxp9wg4t.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpuxp9wg4t.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuxp9wg4t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpuxp9wg4t.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpuxp9wg4t.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpuxp9wg4t.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuxp9wg4t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpuxp9wg4t.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpuxp9wg4t.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpuxp9wg4t.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuxp9wg4t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpuxp9wg4t.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpuxp9wg4t.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpuxp9wg4t.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuxp9wg4t.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuxp9wg4t.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7v_vl5q2.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7v_vl5q2.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7v_vl5q2.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7v_vl5q2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1l4vtl1e.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1l4vtl1e.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l4vtl1e.jl:25\ntest set: Test Failed at /tmp/tmp1l4vtl1e.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1l4vtl1e.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l4vtl1e.jl:25\ntest set: Test Failed at /tmp/tmp1l4vtl1e.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1l4vtl1e.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l4vtl1e.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1l4vtl1e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ieyxg6j.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_ieyxg6j.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ieyxg6j.jl:25\ntest set: Test Failed at /tmp/tmp_ieyxg6j.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_ieyxg6j.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ieyxg6j.jl:25\ntest set: Test Failed at /tmp/tmp_ieyxg6j.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_ieyxg6j.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_ieyxg6j.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ieyxg6j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp80yf0db6.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp80yf0db6.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp80yf0db6.jl:25\ntest set: Test Failed at /tmp/tmp80yf0db6.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp80yf0db6.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp80yf0db6.jl:25\ntest set: Test Failed at /tmp/tmp80yf0db6.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp80yf0db6.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp80yf0db6.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80yf0db6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppbtwxags.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppbtwxags.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbtwxags.jl:25\ntest set: Test Failed at /tmp/tmppbtwxags.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppbtwxags.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbtwxags.jl:25\ntest set: Test Failed at /tmp/tmppbtwxags.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppbtwxags.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbtwxags.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbtwxags.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp073bmqv6.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp073bmqv6.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp073bmqv6.jl:25\ntest set: Test Failed at /tmp/tmp073bmqv6.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp073bmqv6.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp073bmqv6.jl:25\ntest set: Test Failed at /tmp/tmp073bmqv6.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp073bmqv6.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp073bmqv6.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp073bmqv6.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n  \
    \  return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5nuws2j_.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5nuws2j_.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5nuws2j_.jl:25\ntest set: Test Failed at /tmp/tmp5nuws2j_.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5nuws2j_.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5nuws2j_.jl:25\ntest set: Test Failed at /tmp/tmp5nuws2j_.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5nuws2j_.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5nuws2j_.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5nuws2j_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm4luwkmx.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm4luwkmx.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm4luwkmx.jl:24\ntest set: Test Failed at /tmp/tmpm4luwkmx.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm4luwkmx.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm4luwkmx.jl:24\ntest set: Test Failed at /tmp/tmpm4luwkmx.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm4luwkmx.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm4luwkmx.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm4luwkmx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb14o3r0o.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpb14o3r0o.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb14o3r0o.jl:25\ntest set: Test Failed at /tmp/tmpb14o3r0o.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb14o3r0o.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb14o3r0o.jl:25\ntest set: Test Failed at /tmp/tmpb14o3r0o.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb14o3r0o.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb14o3r0o.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb14o3r0o.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal != 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpllubj2_h.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpllubj2_h.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpllubj2_h.jl:25\\ntest set: Test Failed at /tmp/tmpllubj2_h.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"db000001db\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpllubj2_h.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpllubj2_h.jl:25\\ntest set: Test Failed at /tmp/tmpllubj2_h.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpllubj2_h.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpllubj2_h.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5ffg_guz.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5ffg_guz.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5ffg_guz.jl:25\ntest set: Test Failed at /tmp/tmp5ffg_guz.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5ffg_guz.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5ffg_guz.jl:25\ntest set: Test Failed at /tmp/tmp5ffg_guz.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5ffg_guz.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5ffg_guz.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ffg_guz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprn2732q7.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprn2732q7.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprn2732q7.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprn2732q7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_s71n585.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_s71n585.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_s71n585.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_s71n585.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi_r3hix_.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi_r3hix_.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi_r3hix_.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi_r3hix_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmjuvii_7.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmjuvii_7.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmjuvii_7.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmjuvii_7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyo7cx9mm.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyo7cx9mm.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyo7cx9mm.jl:25\ntest set: Test Failed at /tmp/tmpyo7cx9mm.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyo7cx9mm.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyo7cx9mm.jl:25\ntest set: Test Failed at /tmp/tmpyo7cx9mm.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyo7cx9mm.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyo7cx9mm.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyo7cx9mm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsawnjmu0.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpsawnjmu0.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsawnjmu0.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpiaoojn6p.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpiaoojn6p.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpiaoojn6p.jl:24\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * decimal * \"db\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg4b3fc0n.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpg4b3fc0n.jl:13\n   [3] top-level scope at /tmp/tmpg4b3fc0n.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg4b3fc0n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpg4b3fc0n.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpg4b3fc0n.jl:13\n   [3] top-level scope at /tmp/tmpg4b3fc0n.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg4b3fc0n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpg4b3fc0n.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: no method matching *(::String, ::Int64)\n\
    \  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] *(::String, ::Int64, ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64)\
    \ at /tmp/tmpg4b3fc0n.jl:13\n   [3] top-level scope at /tmp/tmpg4b3fc0n.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg4b3fc0n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpg4b3fc0n.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: no method matching *(::String, ::Int64)\n  Closest\
    \ candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n    *(!Matched::Missing,\
    \ ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n   [1] *(::String, ::Int64,\
    \ ::String) at ./operators.jl:529\n   [2] decimal_to_binary(::Int64) at /tmp/tmpg4b3fc0n.jl:13\n\
    \   [3] top-level scope at /tmp/tmpg4b3fc0n.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg4b3fc0n.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg4b3fc0n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbwrd3jfi.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbwrd3jfi.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbwrd3jfi.jl:25\ntest set: Test Failed at /tmp/tmpbwrd3jfi.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbwrd3jfi.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbwrd3jfi.jl:25\ntest set: Test Failed at /tmp/tmpbwrd3jfi.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbwrd3jfi.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbwrd3jfi.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbwrd3jfi.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        rem = decimal % 2\n  \
    \      decimal = decimal \xF7 2\n        binary = string(rem) * binary\n    end\n\
    \    return binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppgqx2srn.jl:26\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmppgqx2srn.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgqx2srn.jl:25\\ntest set: Test Failed at /tmp/tmppgqx2srn.jl:27\\\
    n  Expression: candidate(32) == \"db100000db\"\\n   Evaluated: \"100000dbdb\"\
    \ == \"db100000db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmppgqx2srn.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgqx2srn.jl:25\\ntest set: Test Failed at /tmp/tmppgqx2srn.jl:28\\\
    n  Expression: candidate(103) == \"db1100111db\"\\n   Evaluated: \"1100111dbdb\"\
    \ == \"db1100111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmppgqx2srn.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgqx2srn.jl:25\\ntest set: Test Failed at /tmp/tmppgqx2srn.jl:29\\\
    n  Expression: candidate(15) == \"db1111db\"\\n   Evaluated: \"1111dbdb\" == \"\
    db1111db\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmppgqx2srn.jl:29\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppgqx2srn.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    4      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp43vyuyzi.jl:25\\n  Expression: candidate(0)\
    \ == \"db0db\"\\n   Evaluated: \"dbdb\" == \"db0db\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp43vyuyzi.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp43vyuyzi.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpej0xvmhb.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpej0xvmhb.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpej0xvmhb.jl:25\ntest set: Test Failed at /tmp/tmpej0xvmhb.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpej0xvmhb.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpej0xvmhb.jl:25\ntest set: Test Failed at /tmp/tmpej0xvmhb.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpej0xvmhb.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpej0xvmhb.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpej0xvmhb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplfhh4t4b.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplfhh4t4b.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplfhh4t4b.jl:25\ntest set: Test Failed at /tmp/tmplfhh4t4b.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmplfhh4t4b.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplfhh4t4b.jl:25\ntest set: Test Failed at /tmp/tmplfhh4t4b.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmplfhh4t4b.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplfhh4t4b.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfhh4t4b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp85mtls8o.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp85mtls8o.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp85mtls8o.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85mtls8o.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" * string(decimal, base=2) * \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp61tqvoai.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp61tqvoai.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp61tqvoai.jl:24\ntest set: Test Failed at /tmp/tmp61tqvoai.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp61tqvoai.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp61tqvoai.jl:24\ntest set: Test Failed at /tmp/tmp61tqvoai.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp61tqvoai.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp61tqvoai.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp61tqvoai.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp89_fwzhw.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp89_fwzhw.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89_fwzhw.jl:24\ntest set: Test Failed at /tmp/tmp89_fwzhw.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp89_fwzhw.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89_fwzhw.jl:24\ntest set: Test Failed at /tmp/tmp89_fwzhw.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp89_fwzhw.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89_fwzhw.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp89_fwzhw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa7jvljq7.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpa7jvljq7.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7jvljq7.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa7jvljq7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoubhlxwj.jl:20\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoubhlxwj.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoubhlxwj.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoubhlxwj.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoubhlxwj.jl:21\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoubhlxwj.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoubhlxwj.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoubhlxwj.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoubhlxwj.jl:22\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoubhlxwj.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoubhlxwj.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoubhlxwj.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpoubhlxwj.jl:23\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmpoubhlxwj.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpoubhlxwj.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoubhlxwj.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoubhlxwj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpimaenfsa.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpimaenfsa.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpimaenfsa.jl:24\ntest set: Test Failed at /tmp/tmpimaenfsa.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpimaenfsa.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpimaenfsa.jl:24\ntest set: Test Failed at /tmp/tmpimaenfsa.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpimaenfsa.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpimaenfsa.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimaenfsa.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9h51byj.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe9h51byj.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9h51byj.jl:24\ntest set: Test Failed at /tmp/tmpe9h51byj.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe9h51byj.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9h51byj.jl:24\ntest set: Test Failed at /tmp/tmpe9h51byj.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe9h51byj.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9h51byj.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9h51byj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    return \"db\" *> string(decimal, base=2) *> \"db\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpca0emorg.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpca0emorg.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppfl8gzy4.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppfl8gzy4.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfl8gzy4.jl:24\ntest set: Test Failed at /tmp/tmppfl8gzy4.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppfl8gzy4.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfl8gzy4.jl:24\ntest set: Test Failed at /tmp/tmppfl8gzy4.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmppfl8gzy4.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfl8gzy4.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppfl8gzy4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    # add db to beginning and end of string\n\
    \    # return string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5f9_c0_5.jl:22\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp5f9_c0_5.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp5f9_c0_5.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5f9_c0_5.jl:21\n  \ntest set: Error During\
    \ Test at /tmp/tmp5f9_c0_5.jl:23\n  Test threw exception\n  Expression: candidate(32)\
    \ == \"db100000db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp5f9_c0_5.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp5f9_c0_5.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5f9_c0_5.jl:21\n  \ntest set: Error During\
    \ Test at /tmp/tmp5f9_c0_5.jl:24\n  Test threw exception\n  Expression: candidate(103)\
    \ == \"db1100111db\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp5f9_c0_5.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp5f9_c0_5.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5f9_c0_5.jl:21\n  \ntest set: Error During\
    \ Test at /tmp/tmp5f9_c0_5.jl:25\n  Test threw exception\n  Expression: candidate(15)\
    \ == \"db1111db\"\n  MethodError: Cannot `convert` an object of type Nothing to\
    \ an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] decimal_to_binary(::Int64) at /tmp/tmp5f9_c0_5.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp5f9_c0_5.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5f9_c0_5.jl:21\n  \nTest Summary: | Error \
    \ Total\ntest set      |     4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5f9_c0_5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ocafloz.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7ocafloz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ocafloz.jl:24\ntest set: Test Failed at /tmp/tmp7ocafloz.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7ocafloz.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ocafloz.jl:24\ntest set: Test Failed at /tmp/tmp7ocafloz.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7ocafloz.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ocafloz.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ocafloz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    bin = \"db\"\n    while decimal > 0\n        bin = bin * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    bin = bin * \"db\"\n  \
    \  return bin\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmzt2z1gt.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmzt2z1gt.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmzt2z1gt.jl:25\ntest set: Test Failed at /tmp/tmpmzt2z1gt.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmzt2z1gt.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmzt2z1gt.jl:25\ntest set: Test Failed at /tmp/tmpmzt2z1gt.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmzt2z1gt.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmzt2z1gt.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmzt2z1gt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmu7krpis.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmu7krpis.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmu7krpis.jl:25\ntest set: Test Failed at /tmp/tmpmu7krpis.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmu7krpis.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmu7krpis.jl:25\ntest set: Test Failed at /tmp/tmpmu7krpis.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmu7krpis.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmu7krpis.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmu7krpis.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    # convert decimal to binary\n    binary = \"\"\n    while decimal > 0\n\
    \        binary = string(decimal % 2) * binary\n        decimal = decimal \xF7\
    \ 2\n    end\n    # add extra characters\n    binary = \"db\" * binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp49j9dsbb.jl:28\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp49j9dsbb.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp49j9dsbb.jl:27\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp49j9dsbb.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    return binary * \"db\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz3_mppk1.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpz3_mppk1.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_mppk1.jl:24\ntest set: Test Failed at /tmp/tmpz3_mppk1.jl:26\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpz3_mppk1.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_mppk1.jl:24\ntest set: Test Failed at /tmp/tmpz3_mppk1.jl:27\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpz3_mppk1.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz3_mppk1.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz3_mppk1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) * binary\n        decimal = decimal \xF7 2\n    end\n    return \"db\"\
    \ * binary * \"db\"\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphv493_w_.jl:25\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphv493_w_.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphv493_w_.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphv493_w_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\
    \n    decimal_to_binary(32)   # returns \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"db\"\n    while decimal > 0\n        binary = binary * string(decimal\
    \ % 2)\n        decimal = decimal \xF7 2\n    end\n    binary = binary * \"db\"\
    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkd8ylfd0.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"dbdb\" == \"db0db\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkd8ylfd0.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd8ylfd0.jl:25\ntest set: Test Failed at /tmp/tmpkd8ylfd0.jl:27\n\
    \  Expression: candidate(32) == \"db100000db\"\n   Evaluated: \"db000001db\" ==\
    \ \"db100000db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkd8ylfd0.jl:27\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd8ylfd0.jl:25\ntest set: Test Failed at /tmp/tmpkd8ylfd0.jl:28\n\
    \  Expression: candidate(103) == \"db1100111db\"\n   Evaluated: \"db1110011db\"\
    \ == \"db1100111db\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkd8ylfd0.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkd8ylfd0.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkd8ylfd0.jl:23\n"
  exit_code: 1
  status: SyntaxError

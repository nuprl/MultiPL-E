name: HumanEval_54_same_chars
language: julia
results:
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp084rpviw.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp084rpviw.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp084rpviw.jl:31\ntest set: Test Failed at /tmp/tmp084rpviw.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp084rpviw.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp084rpviw.jl:31\ntest set: Test Failed at /tmp/tmp084rpviw.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp084rpviw.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp084rpviw.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp084rpviw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsh8fv4g2.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsh8fv4g2.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsh8fv4g2.jl:31\ntest set: Test Failed at /tmp/tmpsh8fv4g2.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsh8fv4g2.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsh8fv4g2.jl:31\ntest set: Test Failed at /tmp/tmpsh8fv4g2.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsh8fv4g2.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsh8fv4g2.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsh8fv4g2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt33gnqr5.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt33gnqr5.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt33gnqr5.jl:31\ntest set: Test Failed at /tmp/tmpt33gnqr5.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpt33gnqr5.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt33gnqr5.jl:31\ntest set: Test Failed at /tmp/tmpt33gnqr5.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpt33gnqr5.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt33gnqr5.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt33gnqr5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp09r54xr4.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp09r54xr4.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp09r54xr4.jl:31\\ntest set: Test Failed at /tmp/tmp09r54xr4.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp09r54xr4.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp09r54xr4.jl:31\\ntest set: Test Failed at /tmp/tmp09r54xr4.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp09r54xr4.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp09r54xr4.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp31ij3uwz.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp31ij3uwz.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp31ij3uwz.jl:31\ntest set: Test Failed at /tmp/tmp31ij3uwz.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp31ij3uwz.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp31ij3uwz.jl:31\ntest set: Test Failed at /tmp/tmp31ij3uwz.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp31ij3uwz.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp31ij3uwz.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp31ij3uwz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ddqofir.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ddqofir.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ddqofir.jl:31\ntest set: Test Failed at /tmp/tmp0ddqofir.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ddqofir.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ddqofir.jl:31\ntest set: Test Failed at /tmp/tmp0ddqofir.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ddqofir.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ddqofir.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ddqofir.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_4qjg_h.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_4qjg_h.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_4qjg_h.jl:31\ntest set: Test Failed at /tmp/tmph_4qjg_h.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmph_4qjg_h.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_4qjg_h.jl:31\ntest set: Test Failed at /tmp/tmph_4qjg_h.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmph_4qjg_h.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_4qjg_h.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_4qjg_h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu8qtexle.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu8qtexle.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8qtexle.jl:31\ntest set: Test Failed at /tmp/tmpu8qtexle.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpu8qtexle.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8qtexle.jl:31\ntest set: Test Failed at /tmp/tmpu8qtexle.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpu8qtexle.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu8qtexle.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu8qtexle.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn1ybmxwe.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn1ybmxwe.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn1ybmxwe.jl:31\ntest set: Test Failed at /tmp/tmpn1ybmxwe.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpn1ybmxwe.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn1ybmxwe.jl:31\ntest set: Test Failed at /tmp/tmpn1ybmxwe.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpn1ybmxwe.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn1ybmxwe.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn1ybmxwe.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1pkat17p.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1pkat17p.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1pkat17p.jl:31\\ntest set: Test Failed at /tmp/tmp1pkat17p.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1pkat17p.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1pkat17p.jl:31\\ntest set: Test Failed at /tmp/tmp1pkat17p.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1pkat17p.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1pkat17p.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxo4a9l4w.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxo4a9l4w.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxo4a9l4w.jl:31\ntest set: Test Failed at /tmp/tmpxo4a9l4w.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxo4a9l4w.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxo4a9l4w.jl:31\ntest set: Test Failed at /tmp/tmpxo4a9l4w.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxo4a9l4w.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxo4a9l4w.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxo4a9l4w.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdxlhwocy.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpdxlhwocy.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdxlhwocy.jl:31\\ntest set: Test Failed at /tmp/tmpdxlhwocy.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdxlhwocy.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdxlhwocy.jl:31\\ntest set: Test Failed at /tmp/tmpdxlhwocy.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdxlhwocy.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdxlhwocy.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_counts = count_chars(s0)\n    s1_counts\
    \ = count_chars(s1)\n    for (k, v) in s0_counts\n        if s1_counts[k] != v\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6b5xc6a3.jl:34\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp6b5xc6a3.jl:34\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6b5xc6a3.jl:33\\ntest set: Test Failed at /tmp/tmp6b5xc6a3.jl:35\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6b5xc6a3.jl:35\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6b5xc6a3.jl:33\\ntest set: Test Failed at /tmp/tmp6b5xc6a3.jl:36\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6b5xc6a3.jl:36\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6b5xc6a3.jl:33\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    for i in s0\n        if\
    \ !(i in s1)\n            return false\n        end\n    end\n    for i in s1\n\
    \        if !(i in s0)\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9esew153.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9esew153.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9esew153.jl:31\\ntest set: Test Failed at /tmp/tmp9esew153.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9esew153.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9esew153.jl:31\\ntest set: Test Failed at /tmp/tmp9esew153.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9esew153.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9esew153.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1rcs8pxb.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1rcs8pxb.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1rcs8pxb.jl:31\ntest set: Test Failed at /tmp/tmp1rcs8pxb.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp1rcs8pxb.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1rcs8pxb.jl:31\ntest set: Test Failed at /tmp/tmp1rcs8pxb.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp1rcs8pxb.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1rcs8pxb.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1rcs8pxb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwhfs_j4z.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwhfs_j4z.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwhfs_j4z.jl:31\\ntest set: Test Failed at /tmp/tmpwhfs_j4z.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwhfs_j4z.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwhfs_j4z.jl:31\\ntest set: Test Failed at /tmp/tmpwhfs_j4z.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwhfs_j4z.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwhfs_j4z.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0cni8124.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0cni8124.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0cni8124.jl:31\ntest set: Test Failed at /tmp/tmp0cni8124.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0cni8124.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0cni8124.jl:31\ntest set: Test Failed at /tmp/tmp0cni8124.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0cni8124.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0cni8124.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0cni8124.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6jmgqc4i.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Bool\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\n   \
    \ convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\n    ...\n\
    \  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp6jmgqc4i.jl:18\n\
    \   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabc\") == true\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6jmgqc4i.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    aabb\", \"aaccc\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp6jmgqc4i.jl:18\n   [2] top-level scope at /tmp/tmp6jmgqc4i.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6jmgqc4i.jl:23\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jmgqc4i.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3u17vz0u.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3u17vz0u.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u17vz0u.jl:31\ntest set: Test Failed at /tmp/tmp3u17vz0u.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3u17vz0u.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u17vz0u.jl:31\ntest set: Test Failed at /tmp/tmp3u17vz0u.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3u17vz0u.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3u17vz0u.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3u17vz0u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpya6mqeka.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpya6mqeka.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpya6mqeka.jl:31\ntest set: Test Failed at /tmp/tmpya6mqeka.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpya6mqeka.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpya6mqeka.jl:31\ntest set: Test Failed at /tmp/tmpya6mqeka.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpya6mqeka.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpya6mqeka.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpya6mqeka.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ s0 = sort(s0)\n    s1 = sort(s1)\n    if s0 == s1\n        return true\n   \
    \ else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb_77xz83.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabc\") == true\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_77xz83.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    aabb\", \"aaccc\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmpb_77xz83.jl:18\n\
    \   [2] top-level scope at /tmp/tmpb_77xz83.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_77xz83.jl:30\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb_77xz83.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdud9iceb.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpdud9iceb.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdud9iceb.jl:31\\ntest set: Test Failed at /tmp/tmpdud9iceb.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdud9iceb.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdud9iceb.jl:31\\ntest set: Test Failed at /tmp/tmpdud9iceb.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdud9iceb.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdud9iceb.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3mianehm.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3mianehm.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mianehm.jl:31\ntest set: Test Failed at /tmp/tmp3mianehm.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3mianehm.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mianehm.jl:31\ntest set: Test Failed at /tmp/tmp3mianehm.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3mianehm.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3mianehm.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3mianehm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_sorted = sort(collect(s0))\n    s1_sorted\
    \ = sort(collect(s1))\n    for i in 1:length(s0)\n        if s0_sorted[i] != s1_sorted[i]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq17p1z86.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq17p1z86.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq17p1z86.jl:33\ntest set: Test Failed at /tmp/tmpq17p1z86.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpq17p1z86.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq17p1z86.jl:33\ntest set: Test Failed at /tmp/tmpq17p1z86.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpq17p1z86.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq17p1z86.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq17p1z86.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_7fdb1yi.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_7fdb1yi.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_7fdb1yi.jl:31\ntest set: Test Failed at /tmp/tmp_7fdb1yi.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_7fdb1yi.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_7fdb1yi.jl:31\ntest set: Test Failed at /tmp/tmp_7fdb1yi.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_7fdb1yi.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_7fdb1yi.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_7fdb1yi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2mctnmdp.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2mctnmdp.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2mctnmdp.jl:31\\ntest set: Test Failed at /tmp/tmp2mctnmdp.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2mctnmdp.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2mctnmdp.jl:31\\ntest set: Test Failed at /tmp/tmp2mctnmdp.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2mctnmdp.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2mctnmdp.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsr6uxrjf.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsr6uxrjf.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsr6uxrjf.jl:31\ntest set: Test Failed at /tmp/tmpsr6uxrjf.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsr6uxrjf.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsr6uxrjf.jl:31\ntest set: Test Failed at /tmp/tmpsr6uxrjf.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsr6uxrjf.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsr6uxrjf.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsr6uxrjf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghjd5_ba.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpghjd5_ba.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpghjd5_ba.jl:24\ntest set: Test Failed at /tmp/tmpghjd5_ba.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpghjd5_ba.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpghjd5_ba.jl:24\ntest set: Test Failed at /tmp/tmpghjd5_ba.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpghjd5_ba.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpghjd5_ba.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghjd5_ba.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprdm8jb2i.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprdm8jb2i.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprdm8jb2i.jl:31\ntest set: Test Failed at /tmp/tmprdm8jb2i.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprdm8jb2i.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprdm8jb2i.jl:31\ntest set: Test Failed at /tmp/tmprdm8jb2i.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprdm8jb2i.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprdm8jb2i.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdm8jb2i.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps09qiqo0.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmps09qiqo0.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps09qiqo0.jl:31\\ntest set: Test Failed at /tmp/tmps09qiqo0.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmps09qiqo0.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps09qiqo0.jl:31\\ntest set: Test Failed at /tmp/tmps09qiqo0.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmps09qiqo0.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps09qiqo0.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmps8jy88ty.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmps8jy88ty.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps8jy88ty.jl:31\\ntest set: Test Failed at /tmp/tmps8jy88ty.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmps8jy88ty.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps8jy88ty.jl:31\\ntest set: Test Failed at /tmp/tmps8jy88ty.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmps8jy88ty.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmps8jy88ty.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9puelad_.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9puelad_.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9puelad_.jl:31\\ntest set: Test Failed at /tmp/tmp9puelad_.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9puelad_.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9puelad_.jl:31\\ntest set: Test Failed at /tmp/tmp9puelad_.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9puelad_.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9puelad_.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if !(i in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprvr2ugag.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprvr2ugag.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvr2ugag.jl:31\ntest set: Test Failed at /tmp/tmprvr2ugag.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprvr2ugag.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvr2ugag.jl:31\ntest set: Test Failed at /tmp/tmprvr2ugag.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprvr2ugag.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvr2ugag.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvr2ugag.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_7ystfrb.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_7ystfrb.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7ystfrb.jl:31\\ntest set: Test Failed at /tmp/tmp_7ystfrb.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_7ystfrb.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7ystfrb.jl:31\\ntest set: Test Failed at /tmp/tmp_7ystfrb.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_7ystfrb.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_7ystfrb.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjzi68q23.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjzi68q23.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjzi68q23.jl:31\ntest set: Test Failed at /tmp/tmpjzi68q23.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjzi68q23.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjzi68q23.jl:31\ntest set: Test Failed at /tmp/tmpjzi68q23.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjzi68q23.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjzi68q23.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjzi68q23.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2lt80hzu.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2lt80hzu.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2lt80hzu.jl:31\ntest set: Test Failed at /tmp/tmp2lt80hzu.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2lt80hzu.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2lt80hzu.jl:31\ntest set: Test Failed at /tmp/tmp2lt80hzu.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2lt80hzu.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2lt80hzu.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2lt80hzu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmby_oomp.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmby_oomp.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmby_oomp.jl:31\ntest set: Test Failed at /tmp/tmpmby_oomp.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmby_oomp.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmby_oomp.jl:31\ntest set: Test Failed at /tmp/tmpmby_oomp.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmby_oomp.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmby_oomp.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmby_oomp.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmswqgdck.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmswqgdck.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmswqgdck.jl:31\\ntest set: Test Failed at /tmp/tmpmswqgdck.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmswqgdck.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmswqgdck.jl:31\\ntest set: Test Failed at /tmp/tmpmswqgdck.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmswqgdck.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmswqgdck.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # check if the two strings\
    \ have the same characters\n    # (ignoring the order of the characters)\n   \
    \ #\n    # input: two strings\n    # output: True if the two strings have the\
    \ same characters\n    #         False otherwise\n    #\n    # example:\n    #\
    \ >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n    # True\n    # >>> same_chars('abcd',\
    \ 'dddddddabc')\n    # True\n    # >>> same_chars('dddddddabc', 'abcd')\n    #\
    \ True\n    # >>> same_chars('eabcd', 'dddddddabc')\n    # False\n    # >>> same_chars('abcd',\
    \ 'dddddddabce')\n    # False\n    # >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n\
    \    # False\n    #\n    # variables:\n    # s0: first string\n    # s1: second\
    \ string\n    #\n    # algorithm:\n    # 1. sort the two strings\n    # 2. compare\
    \ the two sorted strings\n    # 3. return the result of the comparison\n    \n\
    \    return sort(s0) == sort(s1)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5rqb89q7.jl:54\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ no method matching sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:55\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabc\") == true\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:55\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:56\n  Test threw exception\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:56\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:57\n  Test threw exception\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:57\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:58\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:58\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:59\n  Test threw exception\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false\n  MethodError: no method matching\
    \ sort(::String)\n  Closest candidates are:\n    sort(!Matched::AbstractUnitRange)\
    \ at range.jl:969\n    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:59\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \ntest set: Error During\
    \ Test at /tmp/tmp5rqb89q7.jl:60\n  Test threw exception\n  Expression: candidate(\"\
    aabb\", \"aaccc\") == false\n  MethodError: no method matching sort(::String)\n\
    \  Closest candidates are:\n    sort(!Matched::AbstractUnitRange) at range.jl:969\n\
    \    sort(!Matched::AbstractRange) at range.jl:972\n    sort(!Matched::SparseArrays.SparseVector{Tv,Ti};\
    \ kws...) where {Tv, Ti} at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/SparseArrays/src/sparsevector.jl:1914\n\
    \    ...\n  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp5rqb89q7.jl:47\n\
    \   [2] top-level scope at /tmp/tmp5rqb89q7.jl:60\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5rqb89q7.jl:53\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5rqb89q7.jl:51\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnw470pi5.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnw470pi5.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnw470pi5.jl:31\ntest set: Test Failed at /tmp/tmpnw470pi5.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnw470pi5.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnw470pi5.jl:31\ntest set: Test Failed at /tmp/tmpnw470pi5.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnw470pi5.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnw470pi5.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnw470pi5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps9935hli.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps9935hli.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps9935hli.jl:31\ntest set: Test Failed at /tmp/tmps9935hli.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmps9935hli.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps9935hli.jl:31\ntest set: Test Failed at /tmp/tmps9935hli.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmps9935hli.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps9935hli.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps9935hli.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphx52seln.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphx52seln.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphx52seln.jl:31\ntest set: Test Failed at /tmp/tmphx52seln.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmphx52seln.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphx52seln.jl:31\ntest set: Test Failed at /tmp/tmphx52seln.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmphx52seln.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphx52seln.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphx52seln.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppfzoryax.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppfzoryax.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfzoryax.jl:31\ntest set: Test Failed at /tmp/tmppfzoryax.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmppfzoryax.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfzoryax.jl:31\ntest set: Test Failed at /tmp/tmppfzoryax.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmppfzoryax.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfzoryax.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppfzoryax.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ if length(s0) != length(s1)\n        return false\n    end\n    for i in s0\n\
    \        if count(s0, i) != count(s1, i)\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprq7bsi1s.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprq7bsi1s.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprq7bsi1s.jl:32\ntest set: Test Failed at /tmp/tmprq7bsi1s.jl:34\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprq7bsi1s.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprq7bsi1s.jl:32\ntest set: Test Failed at /tmp/tmprq7bsi1s.jl:35\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprq7bsi1s.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprq7bsi1s.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprq7bsi1s.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp84mwri5z.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp84mwri5z.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp84mwri5z.jl:31\ntest set: Test Failed at /tmp/tmp84mwri5z.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp84mwri5z.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp84mwri5z.jl:31\ntest set: Test Failed at /tmp/tmp84mwri5z.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp84mwri5z.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp84mwri5z.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84mwri5z.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_dict = Dict{Char, Int}()\n    s1_dict =\
    \ Dict{Char, Int}()\n    for c in s0\n        if haskey(s0_dict, c)\n        \
    \    s0_dict[c] += 1\n        else\n            s0_dict[c] = 1\n        end\n\
    \    end\n    for c in s1\n        if haskey(s1_dict, c)\n            s1_dict[c]\
    \ += 1\n        else\n            s1_dict[c] = 1\n        end\n    end\n    for\
    \ (k, v) in s0_dict\n        if !haskey(s1_dict, k) || s1_dict[k] != v\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw11qdgwj.jl:48\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw11qdgwj.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw11qdgwj.jl:47\ntest set: Test Failed at /tmp/tmpw11qdgwj.jl:49\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpw11qdgwj.jl:49\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw11qdgwj.jl:47\ntest set: Test Failed at /tmp/tmpw11qdgwj.jl:50\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpw11qdgwj.jl:50\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw11qdgwj.jl:47\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw11qdgwj.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0c_g8e2l.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0c_g8e2l.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0c_g8e2l.jl:31\ntest set: Test Failed at /tmp/tmp0c_g8e2l.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0c_g8e2l.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0c_g8e2l.jl:31\ntest set: Test Failed at /tmp/tmp0c_g8e2l.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0c_g8e2l.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0c_g8e2l.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0c_g8e2l.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpss52yhmz.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpss52yhmz.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpss52yhmz.jl:31\\ntest set: Test Failed at /tmp/tmpss52yhmz.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpss52yhmz.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpss52yhmz.jl:31\\ntest set: Test Failed at /tmp/tmpss52yhmz.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpss52yhmz.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpss52yhmz.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxjedlkhq.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxjedlkhq.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjedlkhq.jl:31\ntest set: Test Failed at /tmp/tmpxjedlkhq.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxjedlkhq.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjedlkhq.jl:31\ntest set: Test Failed at /tmp/tmpxjedlkhq.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxjedlkhq.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjedlkhq.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjedlkhq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # Check if the two strings\
    \ have the same length\n    if length(s0) != length(s1)\n        return false\n\
    \    end\n    \n    # Check if the two strings have the same characters\n    for\
    \ i in 1:length(s0)\n        if !(s0[i] in s1)\n            return false\n   \
    \     end\n    end\n    \n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvrfx2_yl.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvrfx2_yl.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrfx2_yl.jl:35\ntest set: Test Failed at /tmp/tmpvrfx2_yl.jl:37\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvrfx2_yl.jl:37\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrfx2_yl.jl:35\ntest set: Test Failed at /tmp/tmpvrfx2_yl.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvrfx2_yl.jl:38\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvrfx2_yl.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrfx2_yl.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaqt_eiki.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaqt_eiki.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqt_eiki.jl:31\ntest set: Test Failed at /tmp/tmpaqt_eiki.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpaqt_eiki.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqt_eiki.jl:31\ntest set: Test Failed at /tmp/tmpaqt_eiki.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpaqt_eiki.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaqt_eiki.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaqt_eiki.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpp01_2u7m.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpp01_2u7m.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp01_2u7m.jl:31\\ntest set: Test Failed at /tmp/tmpp01_2u7m.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp01_2u7m.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp01_2u7m.jl:31\\ntest set: Test Failed at /tmp/tmpp01_2u7m.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp01_2u7m.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp01_2u7m.jl:31\\nTest Summary: | '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphck8b9ut.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphck8b9ut.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphck8b9ut.jl:31\ntest set: Test Failed at /tmp/tmphck8b9ut.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmphck8b9ut.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphck8b9ut.jl:31\ntest set: Test Failed at /tmp/tmphck8b9ut.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmphck8b9ut.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphck8b9ut.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphck8b9ut.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9qt117tn.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9qt117tn.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9qt117tn.jl:31\ntest set: Test Failed at /tmp/tmp9qt117tn.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9qt117tn.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9qt117tn.jl:31\ntest set: Test Failed at /tmp/tmp9qt117tn.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9qt117tn.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9qt117tn.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qt117tn.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph3p9typd.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmph3p9typd.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3p9typd.jl:31\\ntest set: Test Failed at /tmp/tmph3p9typd.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3p9typd.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3p9typd.jl:31\\ntest set: Test Failed at /tmp/tmph3p9typd.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3p9typd.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3p9typd.jl:31\\nTest Summary: | '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeycjhgfg.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpeycjhgfg.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeycjhgfg.jl:31\\ntest set: Test Failed at /tmp/tmpeycjhgfg.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeycjhgfg.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeycjhgfg.jl:31\\ntest set: Test Failed at /tmp/tmpeycjhgfg.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeycjhgfg.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeycjhgfg.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp77q7za1j.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp77q7za1j.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77q7za1j.jl:31\ntest set: Test Failed at /tmp/tmp77q7za1j.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp77q7za1j.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77q7za1j.jl:31\ntest set: Test Failed at /tmp/tmp77q7za1j.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp77q7za1j.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77q7za1j.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp77q7za1j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86wzxwy3.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp86wzxwy3.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86wzxwy3.jl:31\ntest set: Test Failed at /tmp/tmp86wzxwy3.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp86wzxwy3.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86wzxwy3.jl:31\ntest set: Test Failed at /tmp/tmp86wzxwy3.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp86wzxwy3.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86wzxwy3.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86wzxwy3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq0i0ysut.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq0i0ysut.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq0i0ysut.jl:31\\ntest set: Test Failed at /tmp/tmpq0i0ysut.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq0i0ysut.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq0i0ysut.jl:31\\ntest set: Test Failed at /tmp/tmpq0i0ysut.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq0i0ysut.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq0i0ysut.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprwx_5c31.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprwx_5c31.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwx_5c31.jl:31\ntest set: Test Failed at /tmp/tmprwx_5c31.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprwx_5c31.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwx_5c31.jl:31\ntest set: Test Failed at /tmp/tmprwx_5c31.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprwx_5c31.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwx_5c31.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwx_5c31.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx8k1i2_f.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx8k1i2_f.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8k1i2_f.jl:31\ntest set: Test Failed at /tmp/tmpx8k1i2_f.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpx8k1i2_f.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8k1i2_f.jl:31\ntest set: Test Failed at /tmp/tmpx8k1i2_f.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpx8k1i2_f.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx8k1i2_f.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx8k1i2_f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp71n9ndno.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp71n9ndno.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71n9ndno.jl:31\ntest set: Test Failed at /tmp/tmp71n9ndno.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp71n9ndno.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71n9ndno.jl:31\ntest set: Test Failed at /tmp/tmp71n9ndno.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp71n9ndno.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71n9ndno.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp71n9ndno.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_sorted = sort(collect(s0))\n\
    \    s1_sorted = sort(collect(s1))\n    return s0_sorted == s1_sorted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpe97j2lw0.jl:26\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpe97j2lw0.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe97j2lw0.jl:25\\ntest set: Test Failed at /tmp/tmpe97j2lw0.jl:27\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpe97j2lw0.jl:27\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe97j2lw0.jl:25\\ntest set: Test Failed at /tmp/tmpe97j2lw0.jl:28\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpe97j2lw0.jl:28\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpe97j2lw0.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoxyqn1by.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoxyqn1by.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoxyqn1by.jl:31\ntest set: Test Failed at /tmp/tmpoxyqn1by.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpoxyqn1by.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoxyqn1by.jl:31\ntest set: Test Failed at /tmp/tmpoxyqn1by.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpoxyqn1by.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoxyqn1by.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoxyqn1by.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    d0 = Dict{Char,Int}()\n\
    \    d1 = Dict{Char,Int}()\n    for c in s0\n        d0[c] = get(d0, c, 0) + 1\n\
    \    end\n    for c in s1\n        d1[c] = get(d1, c, 0) + 1\n    end\n    return\
    \ d0 == d1\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpllurau_g.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpllurau_g.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllurau_g.jl:31\ntest set: Test Failed at /tmp/tmpllurau_g.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpllurau_g.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllurau_g.jl:31\ntest set: Test Failed at /tmp/tmpllurau_g.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpllurau_g.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpllurau_g.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpllurau_g.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplbzh4qf9.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplbzh4qf9.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplbzh4qf9.jl:24\ntest set: Test Failed at /tmp/tmplbzh4qf9.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplbzh4qf9.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplbzh4qf9.jl:24\ntest set: Test Failed at /tmp/tmplbzh4qf9.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplbzh4qf9.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplbzh4qf9.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbzh4qf9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaw86_tfc.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaw86_tfc.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaw86_tfc.jl:31\ntest set: Test Failed at /tmp/tmpaw86_tfc.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpaw86_tfc.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaw86_tfc.jl:31\ntest set: Test Failed at /tmp/tmpaw86_tfc.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpaw86_tfc.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaw86_tfc.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaw86_tfc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppfm0q5t0.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppfm0q5t0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfm0q5t0.jl:31\ntest set: Test Failed at /tmp/tmppfm0q5t0.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmppfm0q5t0.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfm0q5t0.jl:31\ntest set: Test Failed at /tmp/tmppfm0q5t0.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmppfm0q5t0.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppfm0q5t0.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppfm0q5t0.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if s0[i] !=\
    \ s1[i]\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqsinsowi.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqsinsowi.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsinsowi.jl:31\ntest set: Test Failed at /tmp/tmpqsinsowi.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpqsinsowi.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsinsowi.jl:31\ntest set: Test Failed at /tmp/tmpqsinsowi.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpqsinsowi.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqsinsowi.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsinsowi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # TODO: implement this\
    \ function\n    # Hint: you can use the `count` function\n    # Hint: you can\
    \ use the `count` function\n    if length(s0) != length(s1)\n        return false\n\
    \    end\n    for i in s0\n        if count(s0, i) != count(s1, i)\n         \
    \   return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo57al19b.jl:35\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo57al19b.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo57al19b.jl:34\ntest set: Test Failed at /tmp/tmpo57al19b.jl:36\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpo57al19b.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo57al19b.jl:34\ntest set: Test Failed at /tmp/tmpo57al19b.jl:37\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpo57al19b.jl:37\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo57al19b.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo57al19b.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9devwvmu.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9devwvmu.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9devwvmu.jl:31\\ntest set: Test Failed at /tmp/tmp9devwvmu.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9devwvmu.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9devwvmu.jl:31\\ntest set: Test Failed at /tmp/tmp9devwvmu.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9devwvmu.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9devwvmu.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpodvwsu4z.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpodvwsu4z.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpodvwsu4z.jl:31\ntest set: Test Failed at /tmp/tmpodvwsu4z.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpodvwsu4z.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpodvwsu4z.jl:31\ntest set: Test Failed at /tmp/tmpodvwsu4z.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpodvwsu4z.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpodvwsu4z.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpodvwsu4z.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd18p8zr4.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd18p8zr4.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd18p8zr4.jl:31\ntest set: Test Failed at /tmp/tmpd18p8zr4.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpd18p8zr4.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd18p8zr4.jl:31\ntest set: Test Failed at /tmp/tmpd18p8zr4.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpd18p8zr4.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd18p8zr4.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd18p8zr4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1k3w3hcp.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1k3w3hcp.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1k3w3hcp.jl:31\\ntest set: Test Failed at /tmp/tmp1k3w3hcp.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1k3w3hcp.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1k3w3hcp.jl:31\\ntest set: Test Failed at /tmp/tmp1k3w3hcp.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1k3w3hcp.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1k3w3hcp.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv3moknrd.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv3moknrd.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv3moknrd.jl:31\ntest set: Test Failed at /tmp/tmpv3moknrd.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv3moknrd.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv3moknrd.jl:31\ntest set: Test Failed at /tmp/tmpv3moknrd.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv3moknrd.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv3moknrd.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3moknrd.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsj3snvck.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsj3snvck.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj3snvck.jl:31\ntest set: Test Failed at /tmp/tmpsj3snvck.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsj3snvck.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj3snvck.jl:31\ntest set: Test Failed at /tmp/tmpsj3snvck.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsj3snvck.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsj3snvck.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsj3snvck.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_sorted = sort(collect(s0))\n    s1_sorted\
    \ = sort(collect(s1))\n    for i in 1:length(s0)\n        if s0_sorted[i] != s1_sorted[i]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpww6u6six.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpww6u6six.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpww6u6six.jl:33\ntest set: Test Failed at /tmp/tmpww6u6six.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpww6u6six.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpww6u6six.jl:33\ntest set: Test Failed at /tmp/tmpww6u6six.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpww6u6six.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpww6u6six.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpww6u6six.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjbhc1r3i.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpjbhc1r3i.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjbhc1r3i.jl:31\\ntest set: Test Failed at /tmp/tmpjbhc1r3i.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjbhc1r3i.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjbhc1r3i.jl:31\\ntest set: Test Failed at /tmp/tmpjbhc1r3i.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjbhc1r3i.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjbhc1r3i.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ndj3ag2.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ndj3ag2.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ndj3ag2.jl:31\ntest set: Test Failed at /tmp/tmp0ndj3ag2.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ndj3ag2.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ndj3ag2.jl:31\ntest set: Test Failed at /tmp/tmp0ndj3ag2.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ndj3ag2.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ndj3ag2.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ndj3ag2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprg7wj_vt.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprg7wj_vt.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprg7wj_vt.jl:31\ntest set: Test Failed at /tmp/tmprg7wj_vt.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprg7wj_vt.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprg7wj_vt.jl:31\ntest set: Test Failed at /tmp/tmprg7wj_vt.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprg7wj_vt.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprg7wj_vt.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprg7wj_vt.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ae6gt0h.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ae6gt0h.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ae6gt0h.jl:31\ntest set: Test Failed at /tmp/tmp8ae6gt0h.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp8ae6gt0h.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ae6gt0h.jl:31\ntest set: Test Failed at /tmp/tmp8ae6gt0h.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp8ae6gt0h.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ae6gt0h.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ae6gt0h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpetbv5n4_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpetbv5n4_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpetbv5n4_.jl:31\ntest set: Test Failed at /tmp/tmpetbv5n4_.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpetbv5n4_.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpetbv5n4_.jl:31\ntest set: Test Failed at /tmp/tmpetbv5n4_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpetbv5n4_.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpetbv5n4_.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpetbv5n4_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !contains(s1,\
    \ s0[i])\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkoxmjg39.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkoxmjg39.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkoxmjg39.jl:31\ntest set: Test Failed at /tmp/tmpkoxmjg39.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpkoxmjg39.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkoxmjg39.jl:31\ntest set: Test Failed at /tmp/tmpkoxmjg39.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpkoxmjg39.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkoxmjg39.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkoxmjg39.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if s0[i] !=\
    \ s1[i]\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxlmq1rfr.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxlmq1rfr.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxlmq1rfr.jl:31\ntest set: Test Failed at /tmp/tmpxlmq1rfr.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxlmq1rfr.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxlmq1rfr.jl:31\ntest set: Test Failed at /tmp/tmpxlmq1rfr.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpxlmq1rfr.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxlmq1rfr.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxlmq1rfr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgvzhfwpu.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgvzhfwpu.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvzhfwpu.jl:31\ntest set: Test Failed at /tmp/tmpgvzhfwpu.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpgvzhfwpu.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvzhfwpu.jl:31\ntest set: Test Failed at /tmp/tmpgvzhfwpu.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpgvzhfwpu.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgvzhfwpu.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvzhfwpu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmppr0vahow.jl:25\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmppr0vahow.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppr0vahow.jl:24\\ntest set: Test Failed at /tmp/tmppr0vahow.jl:26\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmppr0vahow.jl:26\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppr0vahow.jl:24\\ntest set: Test Failed at /tmp/tmppr0vahow.jl:27\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmppr0vahow.jl:27\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmppr0vahow.jl:24\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3ta73mf.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi3ta73mf.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi3ta73mf.jl:31\ntest set: Test Failed at /tmp/tmpi3ta73mf.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpi3ta73mf.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi3ta73mf.jl:31\ntest set: Test Failed at /tmp/tmpi3ta73mf.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpi3ta73mf.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi3ta73mf.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3ta73mf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp75ca4pfc.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp75ca4pfc.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp75ca4pfc.jl:31\ntest set: Test Failed at /tmp/tmp75ca4pfc.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp75ca4pfc.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp75ca4pfc.jl:31\ntest set: Test Failed at /tmp/tmp75ca4pfc.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp75ca4pfc.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp75ca4pfc.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75ca4pfc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpot4om4pe.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpot4om4pe.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpot4om4pe.jl:31\ntest set: Test Failed at /tmp/tmpot4om4pe.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpot4om4pe.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpot4om4pe.jl:31\ntest set: Test Failed at /tmp/tmpot4om4pe.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpot4om4pe.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpot4om4pe.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpot4om4pe.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnuywfipp.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnuywfipp.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnuywfipp.jl:31\\ntest set: Test Failed at /tmp/tmpnuywfipp.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnuywfipp.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnuywfipp.jl:31\\ntest set: Test Failed at /tmp/tmpnuywfipp.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnuywfipp.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnuywfipp.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5gyxqei_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5gyxqei_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gyxqei_.jl:31\ntest set: Test Failed at /tmp/tmp5gyxqei_.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5gyxqei_.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gyxqei_.jl:31\ntest set: Test Failed at /tmp/tmp5gyxqei_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5gyxqei_.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5gyxqei_.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gyxqei_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1viud7ti.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp1viud7ti.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1viud7ti.jl:31\\ntest set: Test Failed at /tmp/tmp1viud7ti.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1viud7ti.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1viud7ti.jl:31\\ntest set: Test Failed at /tmp/tmp1viud7ti.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1viud7ti.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1viud7ti.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwek2pnj0.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwek2pnj0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwek2pnj0.jl:31\ntest set: Test Failed at /tmp/tmpwek2pnj0.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpwek2pnj0.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwek2pnj0.jl:31\ntest set: Test Failed at /tmp/tmpwek2pnj0.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpwek2pnj0.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwek2pnj0.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwek2pnj0.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpic1eyqg7.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpic1eyqg7.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpic1eyqg7.jl:31\ntest set: Test Failed at /tmp/tmpic1eyqg7.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpic1eyqg7.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpic1eyqg7.jl:31\ntest set: Test Failed at /tmp/tmpic1eyqg7.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpic1eyqg7.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpic1eyqg7.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpic1eyqg7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbv1qcoa9.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpbv1qcoa9.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbv1qcoa9.jl:31\\ntest set: Test Failed at /tmp/tmpbv1qcoa9.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbv1qcoa9.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbv1qcoa9.jl:31\\ntest set: Test Failed at /tmp/tmpbv1qcoa9.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbv1qcoa9.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbv1qcoa9.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0 = sort(s0)\n    s1 = sort(s1)\n    for\
    \ i in 1:length(s0)\n        if s0[i] != s1[i]\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp55txr7mx.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp55txr7mx.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp55txr7mx.jl:33\ntest set: Test Failed at /tmp/tmp55txr7mx.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp55txr7mx.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp55txr7mx.jl:33\ntest set: Test Failed at /tmp/tmp55txr7mx.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp55txr7mx.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp55txr7mx.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55txr7mx.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgqewzjd6.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpgqewzjd6.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgqewzjd6.jl:31\\ntest set: Test Failed at /tmp/tmpgqewzjd6.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgqewzjd6.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgqewzjd6.jl:31\\ntest set: Test Failed at /tmp/tmpgqewzjd6.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgqewzjd6.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgqewzjd6.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    d = Dict{Char, Int}()\n    for c in s0\n \
    \       if haskey(d, c)\n            d[c] += 1\n        else\n            d[c]\
    \ = 1\n        end\n    end\n    for c in s1\n        if haskey(d, c)\n      \
    \      d[c] -= 1\n        else\n            return false\n        end\n    end\n\
    \    for v in values(d)\n        if v != 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa7ngpe6_.jl:47\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa7ngpe6_.jl:47\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7ngpe6_.jl:46\ntest set: Test Failed at /tmp/tmpa7ngpe6_.jl:48\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpa7ngpe6_.jl:48\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7ngpe6_.jl:46\ntest set: Test Failed at /tmp/tmpa7ngpe6_.jl:49\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpa7ngpe6_.jl:49\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa7ngpe6_.jl:46\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa7ngpe6_.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0 = sort(collect(s0))\n    s1 = sort(collect(s1))\n\
    \    for i in 1:length(s0)\n        if s0[i] != s1[i]\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgzhxqxs4.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgzhxqxs4.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgzhxqxs4.jl:33\ntest set: Test Failed at /tmp/tmpgzhxqxs4.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpgzhxqxs4.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgzhxqxs4.jl:33\ntest set: Test Failed at /tmp/tmpgzhxqxs4.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpgzhxqxs4.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgzhxqxs4.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgzhxqxs4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpji11c31f.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpji11c31f.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpji11c31f.jl:31\\ntest set: Test Failed at /tmp/tmpji11c31f.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpji11c31f.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpji11c31f.jl:31\\ntest set: Test Failed at /tmp/tmpji11c31f.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpji11c31f.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpji11c31f.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo8rox98j.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo8rox98j.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo8rox98j.jl:31\ntest set: Test Failed at /tmp/tmpo8rox98j.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpo8rox98j.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo8rox98j.jl:31\ntest set: Test Failed at /tmp/tmpo8rox98j.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpo8rox98j.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo8rox98j.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo8rox98j.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    return sort(collect(s0))\
    \ == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3ric4aqe.jl:24\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3ric4aqe.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3ric4aqe.jl:23\\ntest set: Test Failed at /tmp/tmp3ric4aqe.jl:25\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3ric4aqe.jl:25\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3ric4aqe.jl:23\\ntest set: Test Failed at /tmp/tmp3ric4aqe.jl:26\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3ric4aqe.jl:26\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3ric4aqe.jl:23\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp3ric4aqe.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4snayw_3.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4snayw_3.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4snayw_3.jl:31\ntest set: Test Failed at /tmp/tmp4snayw_3.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp4snayw_3.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4snayw_3.jl:31\ntest set: Test Failed at /tmp/tmp4snayw_3.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp4snayw_3.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4snayw_3.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4snayw_3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprft3fw6k.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprft3fw6k.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprft3fw6k.jl:31\ntest set: Test Failed at /tmp/tmprft3fw6k.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprft3fw6k.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprft3fw6k.jl:31\ntest set: Test Failed at /tmp/tmprft3fw6k.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprft3fw6k.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprft3fw6k.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprft3fw6k.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdo96j1m_.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpdo96j1m_.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdo96j1m_.jl:31\\ntest set: Test Failed at /tmp/tmpdo96j1m_.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdo96j1m_.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdo96j1m_.jl:31\\ntest set: Test Failed at /tmp/tmpdo96j1m_.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdo96j1m_.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdo96j1m_.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyomn7_i9.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyomn7_i9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyomn7_i9.jl:31\ntest set: Test Failed at /tmp/tmpyomn7_i9.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpyomn7_i9.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyomn7_i9.jl:31\ntest set: Test Failed at /tmp/tmpyomn7_i9.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpyomn7_i9.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyomn7_i9.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyomn7_i9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnm2brlei.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnm2brlei.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnm2brlei.jl:31\ntest set: Test Failed at /tmp/tmpnm2brlei.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnm2brlei.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnm2brlei.jl:31\ntest set: Test Failed at /tmp/tmpnm2brlei.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnm2brlei.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnm2brlei.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnm2brlei.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmaisjhma.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmaisjhma.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmaisjhma.jl:31\\ntest set: Test Failed at /tmp/tmpmaisjhma.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmaisjhma.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmaisjhma.jl:31\\ntest set: Test Failed at /tmp/tmpmaisjhma.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmaisjhma.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmaisjhma.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5v3lv18f.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5v3lv18f.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v3lv18f.jl:31\ntest set: Test Failed at /tmp/tmp5v3lv18f.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5v3lv18f.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v3lv18f.jl:31\ntest set: Test Failed at /tmp/tmp5v3lv18f.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5v3lv18f.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5v3lv18f.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5v3lv18f.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !in(s0[i],\
    \ s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ti1o_i9.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ti1o_i9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ti1o_i9.jl:31\ntest set: Test Failed at /tmp/tmp0ti1o_i9.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ti1o_i9.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ti1o_i9.jl:31\ntest set: Test Failed at /tmp/tmp0ti1o_i9.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0ti1o_i9.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ti1o_i9.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ti1o_i9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82o_oicu.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp82o_oicu.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82o_oicu.jl:31\ntest set: Test Failed at /tmp/tmp82o_oicu.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp82o_oicu.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82o_oicu.jl:31\ntest set: Test Failed at /tmp/tmp82o_oicu.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp82o_oicu.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82o_oicu.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82o_oicu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa27vv67o.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa27vv67o.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa27vv67o.jl:31\ntest set: Test Failed at /tmp/tmpa27vv67o.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpa27vv67o.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa27vv67o.jl:31\ntest set: Test Failed at /tmp/tmpa27vv67o.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpa27vv67o.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa27vv67o.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa27vv67o.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy3c4v40i.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy3c4v40i.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy3c4v40i.jl:31\ntest set: Test Failed at /tmp/tmpy3c4v40i.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpy3c4v40i.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy3c4v40i.jl:31\ntest set: Test Failed at /tmp/tmpy3c4v40i.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpy3c4v40i.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy3c4v40i.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3c4v40i.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3cg89gsp.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3cg89gsp.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cg89gsp.jl:31\ntest set: Test Failed at /tmp/tmp3cg89gsp.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3cg89gsp.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cg89gsp.jl:31\ntest set: Test Failed at /tmp/tmp3cg89gsp.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3cg89gsp.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3cg89gsp.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cg89gsp.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9w8z4xj6.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp9w8z4xj6.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9w8z4xj6.jl:31\\ntest set: Test Failed at /tmp/tmp9w8z4xj6.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9w8z4xj6.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9w8z4xj6.jl:31\\ntest set: Test Failed at /tmp/tmp9w8z4xj6.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9w8z4xj6.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9w8z4xj6.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjbp_x4kx.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjbp_x4kx.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_x4kx.jl:31\ntest set: Test Failed at /tmp/tmpjbp_x4kx.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjbp_x4kx.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_x4kx.jl:31\ntest set: Test Failed at /tmp/tmpjbp_x4kx.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjbp_x4kx.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_x4kx.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbp_x4kx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    for c in s0\n        if\
    \ c \u2209 s1\n            return false\n        end\n    end\n    for c in s1\n\
    \        if c \u2209 s0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return sort(collect(s0)) == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps85dm2g_.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps85dm2g_.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps85dm2g_.jl:24\ntest set: Test Failed at /tmp/tmps85dm2g_.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmps85dm2g_.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps85dm2g_.jl:24\ntest set: Test Failed at /tmp/tmps85dm2g_.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmps85dm2g_.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps85dm2g_.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps85dm2g_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsddijw10.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsddijw10.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsddijw10.jl:31\ntest set: Test Failed at /tmp/tmpsddijw10.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsddijw10.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsddijw10.jl:31\ntest set: Test Failed at /tmp/tmpsddijw10.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpsddijw10.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsddijw10.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsddijw10.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp173ihg9n.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp173ihg9n.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp173ihg9n.jl:31\\ntest set: Test Failed at /tmp/tmp173ihg9n.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp173ihg9n.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp173ihg9n.jl:31\\ntest set: Test Failed at /tmp/tmp173ihg9n.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp173ihg9n.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp173ihg9n.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_2ehmv6n.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_2ehmv6n.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_2ehmv6n.jl:31\ntest set: Test Failed at /tmp/tmp_2ehmv6n.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_2ehmv6n.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_2ehmv6n.jl:31\ntest set: Test Failed at /tmp/tmp_2ehmv6n.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_2ehmv6n.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_2ehmv6n.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_2ehmv6n.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    return sort(collect(s0))\
    \ == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpywmlra42.jl:24\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpywmlra42.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpywmlra42.jl:23\\ntest set: Test Failed at /tmp/tmpywmlra42.jl:25\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpywmlra42.jl:25\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpywmlra42.jl:23\\ntest set: Test Failed at /tmp/tmpywmlra42.jl:26\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpywmlra42.jl:26\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpywmlra42.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp89canfwx.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp89canfwx.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89canfwx.jl:31\ntest set: Test Failed at /tmp/tmp89canfwx.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp89canfwx.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89canfwx.jl:31\ntest set: Test Failed at /tmp/tmp89canfwx.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp89canfwx.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp89canfwx.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp89canfwx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if !(i in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpp_c0vlsc.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpp_c0vlsc.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp_c0vlsc.jl:31\\ntest set: Test Failed at /tmp/tmpp_c0vlsc.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp_c0vlsc.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp_c0vlsc.jl:31\\ntest set: Test Failed at /tmp/tmpp_c0vlsc.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp_c0vlsc.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp_c0vlsc.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_dict = Dict{Char, Int}()\n    s1_dict =\
    \ Dict{Char, Int}()\n    for c in s0\n        if haskey(s0_dict, c)\n        \
    \    s0_dict[c] += 1\n        else\n            s0_dict[c] = 1\n        end\n\
    \    end\n    for c in s1\n        if haskey(s1_dict, c)\n            s1_dict[c]\
    \ += 1\n        else\n            s1_dict[c] = 1\n        end\n    end\n    for\
    \ key in keys(s0_dict)\n        if !haskey(s1_dict, key) || s0_dict[key] != s1_dict[key]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3jkxbvwv.jl:48\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3jkxbvwv.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3jkxbvwv.jl:47\ntest set: Test Failed at /tmp/tmp3jkxbvwv.jl:49\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3jkxbvwv.jl:49\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3jkxbvwv.jl:47\ntest set: Test Failed at /tmp/tmp3jkxbvwv.jl:50\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp3jkxbvwv.jl:50\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3jkxbvwv.jl:47\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jkxbvwv.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_sorted = sort(collect(s0))\n    s1_sorted\
    \ = sort(collect(s1))\n    for i in 1:length(s0)\n        if s0_sorted[i] != s1_sorted[i]\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjjb2haxe.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjjb2haxe.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjb2haxe.jl:33\ntest set: Test Failed at /tmp/tmpjjb2haxe.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjjb2haxe.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjb2haxe.jl:33\ntest set: Test Failed at /tmp/tmpjjb2haxe.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjjb2haxe.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjb2haxe.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjb2haxe.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_counts = count_chars(s0)\n    s1_counts\
    \ = count_chars(s1)\n    for (k, v) in s0_counts\n        if s1_counts[k] != v\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2ks1npnv.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2ks1npnv.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2ks1npnv.jl:33\ntest set: Test Failed at /tmp/tmp2ks1npnv.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2ks1npnv.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2ks1npnv.jl:33\ntest set: Test Failed at /tmp/tmp2ks1npnv.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2ks1npnv.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2ks1npnv.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ks1npnv.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpncvk8sbw.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpncvk8sbw.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncvk8sbw.jl:31\ntest set: Test Failed at /tmp/tmpncvk8sbw.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpncvk8sbw.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncvk8sbw.jl:31\ntest set: Test Failed at /tmp/tmpncvk8sbw.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpncvk8sbw.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncvk8sbw.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpncvk8sbw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplzs29j9t.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplzs29j9t.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzs29j9t.jl:31\ntest set: Test Failed at /tmp/tmplzs29j9t.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplzs29j9t.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzs29j9t.jl:31\ntest set: Test Failed at /tmp/tmplzs29j9t.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplzs29j9t.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplzs29j9t.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzs29j9t.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphxr4exfs.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmphxr4exfs.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphxr4exfs.jl:31\\ntest set: Test Failed at /tmp/tmphxr4exfs.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmphxr4exfs.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphxr4exfs.jl:31\\ntest set: Test Failed at /tmp/tmphxr4exfs.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmphxr4exfs.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphxr4exfs.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf3_0eq2d.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf3_0eq2d.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf3_0eq2d.jl:31\ntest set: Test Failed at /tmp/tmpf3_0eq2d.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpf3_0eq2d.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf3_0eq2d.jl:31\ntest set: Test Failed at /tmp/tmpf3_0eq2d.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpf3_0eq2d.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf3_0eq2d.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf3_0eq2d.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_dict = Dict{Char, Int}()\n    s1_dict =\
    \ Dict{Char, Int}()\n    for c in s0\n        if haskey(s0_dict, c)\n        \
    \    s0_dict[c] += 1\n        else\n            s0_dict[c] = 1\n        end\n\
    \    end\n    for c in s1\n        if haskey(s1_dict, c)\n            s1_dict[c]\
    \ += 1\n        else\n            s1_dict[c] = 1\n        end\n    end\n    for\
    \ (k, v) in s0_dict\n        if !haskey(s1_dict, k) || s1_dict[k] != v\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl3qzdqm7.jl:48\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl3qzdqm7.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3qzdqm7.jl:47\ntest set: Test Failed at /tmp/tmpl3qzdqm7.jl:49\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpl3qzdqm7.jl:49\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3qzdqm7.jl:47\ntest set: Test Failed at /tmp/tmpl3qzdqm7.jl:50\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpl3qzdqm7.jl:50\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl3qzdqm7.jl:47\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl3qzdqm7.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplcmpnque.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplcmpnque.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcmpnque.jl:31\ntest set: Test Failed at /tmp/tmplcmpnque.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplcmpnque.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcmpnque.jl:31\ntest set: Test Failed at /tmp/tmplcmpnque.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplcmpnque.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcmpnque.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplcmpnque.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi26sj3w3.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi26sj3w3.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi26sj3w3.jl:31\ntest set: Test Failed at /tmp/tmpi26sj3w3.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpi26sj3w3.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi26sj3w3.jl:31\ntest set: Test Failed at /tmp/tmpi26sj3w3.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpi26sj3w3.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi26sj3w3.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi26sj3w3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtm_loc8.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvtm_loc8.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtm_loc8.jl:31\ntest set: Test Failed at /tmp/tmpvtm_loc8.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvtm_loc8.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtm_loc8.jl:31\ntest set: Test Failed at /tmp/tmpvtm_loc8.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvtm_loc8.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvtm_loc8.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtm_loc8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ if length(s0) != length(s1)\n        return false\n    end\n    for i in 1:length(s0)\n\
    \        if count(s0, s0[i]) != count(s1, s0[i])\n            return false\n \
    \       end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7kcb3dj9.jl:33\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7kcb3dj9.jl:33\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7kcb3dj9.jl:32\ntest set: Test Failed at /tmp/tmp7kcb3dj9.jl:34\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7kcb3dj9.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7kcb3dj9.jl:32\ntest set: Test Failed at /tmp/tmp7kcb3dj9.jl:35\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7kcb3dj9.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7kcb3dj9.jl:32\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7kcb3dj9.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0_counts = count_chars(s0)\n    s1_counts\
    \ = count_chars(s1)\n    for (k, v) in s0_counts\n        if s1_counts[k] != v\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf1o1nh0d.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf1o1nh0d.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf1o1nh0d.jl:33\ntest set: Test Failed at /tmp/tmpf1o1nh0d.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpf1o1nh0d.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf1o1nh0d.jl:33\ntest set: Test Failed at /tmp/tmpf1o1nh0d.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpf1o1nh0d.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf1o1nh0d.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf1o1nh0d.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplhzdvrfy.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplhzdvrfy.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplhzdvrfy.jl:31\ntest set: Test Failed at /tmp/tmplhzdvrfy.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplhzdvrfy.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplhzdvrfy.jl:31\ntest set: Test Failed at /tmp/tmplhzdvrfy.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplhzdvrfy.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplhzdvrfy.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhzdvrfy.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc4hvbrta.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc4hvbrta.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4hvbrta.jl:24\ntest set: Test Failed at /tmp/tmpc4hvbrta.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpc4hvbrta.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4hvbrta.jl:24\ntest set: Test Failed at /tmp/tmpc4hvbrta.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpc4hvbrta.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4hvbrta.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc4hvbrta.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_f55y476.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp_f55y476.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_f55y476.jl:31\\ntest set: Test Failed at /tmp/tmp_f55y476.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_f55y476.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_f55y476.jl:31\\ntest set: Test Failed at /tmp/tmp_f55y476.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_f55y476.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_f55y476.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnie6cx1p.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnie6cx1p.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnie6cx1p.jl:24\ntest set: Test Failed at /tmp/tmpnie6cx1p.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnie6cx1p.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnie6cx1p.jl:24\ntest set: Test Failed at /tmp/tmpnie6cx1p.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnie6cx1p.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnie6cx1p.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnie6cx1p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj9rgv39u.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj9rgv39u.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9rgv39u.jl:31\ntest set: Test Failed at /tmp/tmpj9rgv39u.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpj9rgv39u.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9rgv39u.jl:31\ntest set: Test Failed at /tmp/tmpj9rgv39u.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpj9rgv39u.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9rgv39u.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj9rgv39u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6e6hnu9x.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp6e6hnu9x.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6e6hnu9x.jl:31\\ntest set: Test Failed at /tmp/tmp6e6hnu9x.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6e6hnu9x.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6e6hnu9x.jl:31\\ntest set: Test Failed at /tmp/tmp6e6hnu9x.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6e6hnu9x.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6e6hnu9x.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeff5l_0_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeff5l_0_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeff5l_0_.jl:31\ntest set: Test Failed at /tmp/tmpeff5l_0_.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpeff5l_0_.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeff5l_0_.jl:31\ntest set: Test Failed at /tmp/tmpeff5l_0_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpeff5l_0_.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeff5l_0_.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeff5l_0_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_counts = count_chars(s0)\n\
    \    s1_counts = count_chars(s1)\n    return s0_counts == s1_counts\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbxt5qmub.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ==\
    \ true\\n  UndefVarError: count_chars not defined\\n  Stacktrace:\\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmpbxt5qmub.jl:17\\n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:26\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\", \"dddddddabc\") == true\\n  UndefVarError: count_chars not defined\\n\
    \  Stacktrace:\\n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\\n  UndefVarError: count_chars not defined\\n\
    \  Stacktrace:\\n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\\n  UndefVarError: count_chars not defined\\\
    n  Stacktrace:\\n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\\n  UndefVarError: count_chars not defined\\\
    n  Stacktrace:\\n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false\\n  UndefVarError: count_chars not\
    \ defined\\n  Stacktrace:\\n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbxt5qmub.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxt5qmub.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    aabb\", \"aaccc\") == false\\n  UndefVarError: count_chars not defined\\n  Stacktrace:\\\
    n   [1] same_chars(::String, ::String) at /tmp/tmpbxt5qmub.jl:17\\n   [2] top-level\
    \ scope at /tmp/tmpbxt5qmub.jl:32\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxt5qmub.jl:25\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5no95ro.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr5no95ro.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5no95ro.jl:31\ntest set: Test Failed at /tmp/tmpr5no95ro.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpr5no95ro.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5no95ro.jl:31\ntest set: Test Failed at /tmp/tmpr5no95ro.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpr5no95ro.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr5no95ro.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5no95ro.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpox8qpun7.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpox8qpun7.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox8qpun7.jl:31\ntest set: Test Failed at /tmp/tmpox8qpun7.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpox8qpun7.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox8qpun7.jl:31\ntest set: Test Failed at /tmp/tmpox8qpun7.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpox8qpun7.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpox8qpun7.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpox8qpun7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp909092dp.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Bool\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\n   \
    \ convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\n    ...\n\
    \  Stacktrace:\n   [1] same_chars(::String, ::String) at /tmp/tmp909092dp.jl:18\n\
    \   [2] top-level scope at /tmp/tmp909092dp.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabc\") == true\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    dddddddabc\", \"abcd\") == true\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    eabcd\", \"dddddddabc\") == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:27\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    abcd\", \"dddddddabcf\") == false\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp909092dp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    aabb\", \"aaccc\") == false\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] same_chars(::String,\
    \ ::String) at /tmp/tmp909092dp.jl:18\n   [2] top-level scope at /tmp/tmp909092dp.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp909092dp.jl:23\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp909092dp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp60dl7zi7.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp60dl7zi7.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp60dl7zi7.jl:31\ntest set: Test Failed at /tmp/tmp60dl7zi7.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp60dl7zi7.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp60dl7zi7.jl:31\ntest set: Test Failed at /tmp/tmp60dl7zi7.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp60dl7zi7.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp60dl7zi7.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp60dl7zi7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvzw_tbno.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvzw_tbno.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvzw_tbno.jl:31\\ntest set: Test Failed at /tmp/tmpvzw_tbno.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvzw_tbno.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvzw_tbno.jl:31\\ntest set: Test Failed at /tmp/tmpvzw_tbno.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvzw_tbno.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvzw_tbno.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_chars = sort(collect(s0))\n\
    \    s1_chars = sort(collect(s1))\n    return s0_chars == s1_chars\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ke_1r5f.jl:26\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ke_1r5f.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ke_1r5f.jl:25\ntest set: Test Failed at /tmp/tmp6ke_1r5f.jl:27\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6ke_1r5f.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ke_1r5f.jl:25\ntest set: Test Failed at /tmp/tmp6ke_1r5f.jl:28\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6ke_1r5f.jl:28\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ke_1r5f.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ke_1r5f.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv7epy6ru.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv7epy6ru.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv7epy6ru.jl:31\ntest set: Test Failed at /tmp/tmpv7epy6ru.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv7epy6ru.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv7epy6ru.jl:31\ntest set: Test Failed at /tmp/tmpv7epy6ru.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv7epy6ru.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv7epy6ru.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv7epy6ru.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpor_auk0p.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpor_auk0p.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpor_auk0p.jl:31\\ntest set: Test Failed at /tmp/tmpor_auk0p.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpor_auk0p.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpor_auk0p.jl:31\\ntest set: Test Failed at /tmp/tmpor_auk0p.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpor_auk0p.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpor_auk0p.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpd74oh4on.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpd74oh4on.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd74oh4on.jl:31\\ntest set: Test Failed at /tmp/tmpd74oh4on.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd74oh4on.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd74oh4on.jl:31\\ntest set: Test Failed at /tmp/tmpd74oh4on.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpd74oh4on.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpd74oh4on.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0 = sort(s0)\n    s1 = sort(s1)\n    for\
    \ i in 1:length(s0)\n        if s0[i] != s1[i]\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0rbacm4a.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0rbacm4a.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0rbacm4a.jl:33\ntest set: Test Failed at /tmp/tmp0rbacm4a.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0rbacm4a.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0rbacm4a.jl:33\ntest set: Test Failed at /tmp/tmp0rbacm4a.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0rbacm4a.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0rbacm4a.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rbacm4a.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvjvg2930.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvjvg2930.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjvg2930.jl:31\ntest set: Test Failed at /tmp/tmpvjvg2930.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvjvg2930.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjvg2930.jl:31\ntest set: Test Failed at /tmp/tmpvjvg2930.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpvjvg2930.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvjvg2930.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvjvg2930.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd2kv19vz.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd2kv19vz.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2kv19vz.jl:31\ntest set: Test Failed at /tmp/tmpd2kv19vz.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpd2kv19vz.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2kv19vz.jl:31\ntest set: Test Failed at /tmp/tmpd2kv19vz.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpd2kv19vz.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd2kv19vz.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2kv19vz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1_3cocw0.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1_3cocw0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_3cocw0.jl:31\ntest set: Test Failed at /tmp/tmp1_3cocw0.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp1_3cocw0.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_3cocw0.jl:31\ntest set: Test Failed at /tmp/tmp1_3cocw0.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp1_3cocw0.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_3cocw0.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_3cocw0.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn__nm_gq.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn__nm_gq.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn__nm_gq.jl:31\ntest set: Test Failed at /tmp/tmpn__nm_gq.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpn__nm_gq.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn__nm_gq.jl:31\ntest set: Test Failed at /tmp/tmpn__nm_gq.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpn__nm_gq.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn__nm_gq.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn__nm_gq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfnkdjtx_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfnkdjtx_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfnkdjtx_.jl:31\ntest set: Test Failed at /tmp/tmpfnkdjtx_.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfnkdjtx_.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfnkdjtx_.jl:31\ntest set: Test Failed at /tmp/tmpfnkdjtx_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfnkdjtx_.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfnkdjtx_.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnkdjtx_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7vtaidci.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7vtaidci.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7vtaidci.jl:31\ntest set: Test Failed at /tmp/tmp7vtaidci.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7vtaidci.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7vtaidci.jl:31\ntest set: Test Failed at /tmp/tmp7vtaidci.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7vtaidci.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7vtaidci.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7vtaidci.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz1uadyw1.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz1uadyw1.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz1uadyw1.jl:31\ntest set: Test Failed at /tmp/tmpz1uadyw1.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpz1uadyw1.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz1uadyw1.jl:31\ntest set: Test Failed at /tmp/tmpz1uadyw1.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpz1uadyw1.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz1uadyw1.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz1uadyw1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwds40ftm.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwds40ftm.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwds40ftm.jl:31\ntest set: Test Failed at /tmp/tmpwds40ftm.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpwds40ftm.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwds40ftm.jl:31\ntest set: Test Failed at /tmp/tmpwds40ftm.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpwds40ftm.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwds40ftm.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwds40ftm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_mifowky.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_mifowky.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mifowky.jl:31\ntest set: Test Failed at /tmp/tmp_mifowky.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_mifowky.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mifowky.jl:31\ntest set: Test Failed at /tmp/tmp_mifowky.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp_mifowky.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mifowky.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mifowky.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !contains(s1,\
    \ s0[i])\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9om_ltf_.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9om_ltf_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9om_ltf_.jl:31\ntest set: Test Failed at /tmp/tmp9om_ltf_.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9om_ltf_.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9om_ltf_.jl:31\ntest set: Test Failed at /tmp/tmp9om_ltf_.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9om_ltf_.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9om_ltf_.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9om_ltf_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    s0 = sort(s0)\n    s1 = sort(s1)\n    for\
    \ i in 1:length(s0)\n        if s0[i] != s1[i]\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\
    \t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\"\
    , \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\
    \t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"aaccc\") ==\
    \ false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplwpyk3sz.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplwpyk3sz.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwpyk3sz.jl:33\ntest set: Test Failed at /tmp/tmplwpyk3sz.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplwpyk3sz.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwpyk3sz.jl:33\ntest set: Test Failed at /tmp/tmplwpyk3sz.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmplwpyk3sz.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwpyk3sz.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwpyk3sz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    return sort(collect(s0))\
    \ == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5arvbuvc.jl:24\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5arvbuvc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5arvbuvc.jl:23\ntest set: Test Failed at /tmp/tmp5arvbuvc.jl:25\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5arvbuvc.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5arvbuvc.jl:23\ntest set: Test Failed at /tmp/tmp5arvbuvc.jl:26\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp5arvbuvc.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5arvbuvc.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5arvbuvc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpro_7jxr1.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpro_7jxr1.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpro_7jxr1.jl:31\ntest set: Test Failed at /tmp/tmpro_7jxr1.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpro_7jxr1.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpro_7jxr1.jl:31\ntest set: Test Failed at /tmp/tmpro_7jxr1.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpro_7jxr1.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpro_7jxr1.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpro_7jxr1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_counts = Dict{Char,\
    \ Int}()\n    s1_counts = Dict{Char, Int}()\n    for c in s0\n        if haskey(s0_counts,\
    \ c)\n            s0_counts[c] += 1\n        else\n            s0_counts[c] =\
    \ 1\n        end\n    end\n    for c in s1\n        if haskey(s1_counts, c)\n\
    \            s1_counts[c] += 1\n        else\n            s1_counts[c] = 1\n \
    \       end\n    end\n    return s0_counts == s1_counts\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp050c5_9v.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp050c5_9v.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp050c5_9v.jl:39\ntest set: Test Failed at /tmp/tmp050c5_9v.jl:41\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp050c5_9v.jl:41\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp050c5_9v.jl:39\ntest set: Test Failed at /tmp/tmp050c5_9v.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp050c5_9v.jl:42\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp050c5_9v.jl:39\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp050c5_9v.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpff58spq7.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpff58spq7.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff58spq7.jl:31\ntest set: Test Failed at /tmp/tmpff58spq7.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpff58spq7.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff58spq7.jl:31\ntest set: Test Failed at /tmp/tmpff58spq7.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpff58spq7.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff58spq7.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpff58spq7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptfhn7d5i.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptfhn7d5i.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptfhn7d5i.jl:31\\ntest set: Test Failed at /tmp/tmptfhn7d5i.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmptfhn7d5i.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptfhn7d5i.jl:31\\ntest set: Test Failed at /tmp/tmptfhn7d5i.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmptfhn7d5i.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptfhn7d5i.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqy5eqh1t.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqy5eqh1t.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqy5eqh1t.jl:31\\ntest set: Test Failed at /tmp/tmpqy5eqh1t.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqy5eqh1t.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqy5eqh1t.jl:31\\ntest set: Test Failed at /tmp/tmpqy5eqh1t.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqy5eqh1t.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqy5eqh1t.jl:31\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpul93i003.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpul93i003.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpul93i003.jl:31\ntest set: Test Failed at /tmp/tmpul93i003.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpul93i003.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpul93i003.jl:31\ntest set: Test Failed at /tmp/tmpul93i003.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpul93i003.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpul93i003.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpul93i003.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if i \u2209 s1\n    \
    \        return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0y8d38zd.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0y8d38zd.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0y8d38zd.jl:31\ntest set: Test Failed at /tmp/tmp0y8d38zd.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0y8d38zd.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0y8d38zd.jl:31\ntest set: Test Failed at /tmp/tmp0y8d38zd.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp0y8d38zd.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0y8d38zd.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0y8d38zd.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnybyebnk.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnybyebnk.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnybyebnk.jl:31\ntest set: Test Failed at /tmp/tmpnybyebnk.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnybyebnk.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnybyebnk.jl:31\ntest set: Test Failed at /tmp/tmpnybyebnk.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnybyebnk.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnybyebnk.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnybyebnk.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnri8tlie.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnri8tlie.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnri8tlie.jl:31\ntest set: Test Failed at /tmp/tmpnri8tlie.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnri8tlie.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnri8tlie.jl:31\ntest set: Test Failed at /tmp/tmpnri8tlie.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpnri8tlie.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnri8tlie.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnri8tlie.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmm__fidh.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmm__fidh.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmm__fidh.jl:31\ntest set: Test Failed at /tmp/tmpmm__fidh.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmm__fidh.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmm__fidh.jl:31\ntest set: Test Failed at /tmp/tmpmm__fidh.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmm__fidh.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmm__fidh.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmm__fidh.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw2uvk2wx.jl:32\\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\\n   Evaluated: false == true\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpw2uvk2wx.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw2uvk2wx.jl:31\\ntest set: Test Failed at /tmp/tmpw2uvk2wx.jl:33\\\
    n  Expression: candidate(\"abcd\", \"dddddddabc\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw2uvk2wx.jl:33\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw2uvk2wx.jl:31\\ntest set: Test Failed at /tmp/tmpw2uvk2wx.jl:34\\\
    n  Expression: candidate(\"dddddddabc\", \"abcd\") == true\\n   Evaluated: false\
    \ == true\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw2uvk2wx.jl:34\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw2uvk2wx.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9z5kb4ki.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9z5kb4ki.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9z5kb4ki.jl:31\ntest set: Test Failed at /tmp/tmp9z5kb4ki.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9z5kb4ki.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9z5kb4ki.jl:31\ntest set: Test Failed at /tmp/tmp9z5kb4ki.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp9z5kb4ki.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9z5kb4ki.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9z5kb4ki.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp38vmaqqi.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp38vmaqqi.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp38vmaqqi.jl:24\ntest set: Test Failed at /tmp/tmp38vmaqqi.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp38vmaqqi.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp38vmaqqi.jl:24\ntest set: Test Failed at /tmp/tmp38vmaqqi.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp38vmaqqi.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp38vmaqqi.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp38vmaqqi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpabbrts42.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpabbrts42.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpabbrts42.jl:31\ntest set: Test Failed at /tmp/tmpabbrts42.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpabbrts42.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpabbrts42.jl:31\ntest set: Test Failed at /tmp/tmpabbrts42.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpabbrts42.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpabbrts42.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabbrts42.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return sort(collect(s0)) == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprvbbrru3.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprvbbrru3.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvbbrru3.jl:24\ntest set: Test Failed at /tmp/tmprvbbrru3.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprvbbrru3.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvbbrru3.jl:24\ntest set: Test Failed at /tmp/tmprvbbrru3.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmprvbbrru3.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprvbbrru3.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvbbrru3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ryuvih4.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ryuvih4.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ryuvih4.jl:31\ntest set: Test Failed at /tmp/tmp8ryuvih4.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp8ryuvih4.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ryuvih4.jl:31\ntest set: Test Failed at /tmp/tmp8ryuvih4.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp8ryuvih4.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ryuvih4.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ryuvih4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6i8k2pkl.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6i8k2pkl.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6i8k2pkl.jl:31\ntest set: Test Failed at /tmp/tmp6i8k2pkl.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6i8k2pkl.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6i8k2pkl.jl:31\ntest set: Test Failed at /tmp/tmp6i8k2pkl.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6i8k2pkl.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6i8k2pkl.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6i8k2pkl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7qm6nayc.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7qm6nayc.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qm6nayc.jl:31\ntest set: Test Failed at /tmp/tmp7qm6nayc.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7qm6nayc.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qm6nayc.jl:31\ntest set: Test Failed at /tmp/tmp7qm6nayc.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7qm6nayc.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qm6nayc.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7qm6nayc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # check if the two strings\
    \ have the same length\n    if length(s0) != length(s1)\n        return false\n\
    \    end\n    # sort the two strings\n    s0_sorted = sort(s0)\n    s1_sorted\
    \ = sort(s1)\n    # check if the two strings are the same\n    if s0_sorted ==\
    \ s1_sorted\n        return true\n    else\n        return false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx9elb1ch.jl:36\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9elb1ch.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9elb1ch.jl:35\ntest set: Test Failed at /tmp/tmpx9elb1ch.jl:37\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpx9elb1ch.jl:37\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9elb1ch.jl:35\ntest set: Test Failed at /tmp/tmpx9elb1ch.jl:38\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpx9elb1ch.jl:38\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9elb1ch.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9elb1ch.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv5qqh9i9.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv5qqh9i9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5qqh9i9.jl:31\ntest set: Test Failed at /tmp/tmpv5qqh9i9.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv5qqh9i9.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5qqh9i9.jl:31\ntest set: Test Failed at /tmp/tmpv5qqh9i9.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpv5qqh9i9.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5qqh9i9.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5qqh9i9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if !(c in s1)\n     \
    \       return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfr2dtj04.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfr2dtj04.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfr2dtj04.jl:31\ntest set: Test Failed at /tmp/tmpfr2dtj04.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfr2dtj04.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfr2dtj04.jl:31\ntest set: Test Failed at /tmp/tmpfr2dtj04.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfr2dtj04.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfr2dtj04.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfr2dtj04.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if count(s0,\
    \ s0[i]) != count(s1, s0[i])\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpycnnytnx.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpycnnytnx.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycnnytnx.jl:31\ntest set: Test Failed at /tmp/tmpycnnytnx.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpycnnytnx.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycnnytnx.jl:31\ntest set: Test Failed at /tmp/tmpycnnytnx.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpycnnytnx.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpycnnytnx.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycnnytnx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpola8x8ny.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpola8x8ny.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpola8x8ny.jl:24\ntest set: Test Failed at /tmp/tmpola8x8ny.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpola8x8ny.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpola8x8ny.jl:24\ntest set: Test Failed at /tmp/tmpola8x8ny.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpola8x8ny.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpola8x8ny.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpola8x8ny.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for c in s0\n        if count(s0, c) != count(s1,\
    \ c)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7x64mnvw.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7x64mnvw.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7x64mnvw.jl:31\ntest set: Test Failed at /tmp/tmp7x64mnvw.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7x64mnvw.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7x64mnvw.jl:31\ntest set: Test Failed at /tmp/tmp7x64mnvw.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7x64mnvw.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7x64mnvw.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7x64mnvw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    return sort(collect(s0))\
    \ == sort(collect(s1))\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2oc65f6z.jl:24\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2oc65f6z.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2oc65f6z.jl:23\ntest set: Test Failed at /tmp/tmp2oc65f6z.jl:25\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2oc65f6z.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2oc65f6z.jl:23\ntest set: Test Failed at /tmp/tmp2oc65f6z.jl:26\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp2oc65f6z.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2oc65f6z.jl:23\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2oc65f6z.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq0dy6eet.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq0dy6eet.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq0dy6eet.jl:31\ntest set: Test Failed at /tmp/tmpq0dy6eet.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpq0dy6eet.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq0dy6eet.jl:31\ntest set: Test Failed at /tmp/tmpq0dy6eet.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpq0dy6eet.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq0dy6eet.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0dy6eet.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_counts = Dict{Char,\
    \ Int}()\n    s1_counts = Dict{Char, Int}()\n    for c in s0\n        s0_counts[c]\
    \ = get(s0_counts, c, 0) + 1\n    end\n    for c in s1\n        s1_counts[c] =\
    \ get(s1_counts, c, 0) + 1\n    end\n    return s0_counts == s1_counts\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb96186tu.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb96186tu.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb96186tu.jl:31\ntest set: Test Failed at /tmp/tmpb96186tu.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpb96186tu.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb96186tu.jl:31\ntest set: Test Failed at /tmp/tmpb96186tu.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpb96186tu.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb96186tu.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb96186tu.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if count(s0, i) != count(s1,\
    \ i)\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\"\
    ) == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"\
    eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\
    \t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjeovo01v.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjeovo01v.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjeovo01v.jl:31\ntest set: Test Failed at /tmp/tmpjeovo01v.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjeovo01v.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjeovo01v.jl:31\ntest set: Test Failed at /tmp/tmpjeovo01v.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpjeovo01v.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjeovo01v.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjeovo01v.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in s0\n        if i in s1\n        \
    \    deleteat!(s1, findfirst(s1, i))\n        else\n            return false\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ito5b2p.jl:34\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ito5b2p.jl:34\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ito5b2p.jl:33\ntest set: Test Failed at /tmp/tmp6ito5b2p.jl:35\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6ito5b2p.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ito5b2p.jl:33\ntest set: Test Failed at /tmp/tmp6ito5b2p.jl:36\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp6ito5b2p.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ito5b2p.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ito5b2p.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    s0_counts = Dict{Char,\
    \ Int}()\n    s1_counts = Dict{Char, Int}()\n    for c in s0\n        if haskey(s0_counts,\
    \ c)\n            s0_counts[c] += 1\n        else\n            s0_counts[c] =\
    \ 1\n        end\n    end\n    for c in s1\n        if haskey(s1_counts, c)\n\
    \            s1_counts[c] += 1\n        else\n            s1_counts[c] = 1\n \
    \       end\n    end\n    return s0_counts == s1_counts\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = same_chars;\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true)\n\t@test(candidate(\"abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"\
    dddddddabc\", \"abcd\") == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false)\n\t@test(candidate(\"abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false)\n\t@test(candidate(\"aabb\", \"\
    aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfd4pz5gh.jl:40\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfd4pz5gh.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfd4pz5gh.jl:39\ntest set: Test Failed at /tmp/tmpfd4pz5gh.jl:41\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfd4pz5gh.jl:41\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfd4pz5gh.jl:39\ntest set: Test Failed at /tmp/tmpfd4pz5gh.jl:42\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpfd4pz5gh.jl:42\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfd4pz5gh.jl:39\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfd4pz5gh.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    # YOUR CODE HERE\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = same_chars;\n\
    \t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"\
    abcd\", \"dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\")\
    \ == true)\n\t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"\
    abcd\", \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmlp8oewz.jl:25\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmlp8oewz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlp8oewz.jl:24\ntest set: Test Failed at /tmp/tmpmlp8oewz.jl:26\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmlp8oewz.jl:26\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlp8oewz.jl:24\ntest set: Test Failed at /tmp/tmpmlp8oewz.jl:27\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmpmlp8oewz.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlp8oewz.jl:24\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlp8oewz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n\
    \    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd',\
    \ 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n\
    \    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False\n    \"\"\"\n\
    function same_chars(s0::String, s1::String)::Bool \n    if length(s0) != length(s1)\n\
    \        return false\n    end\n    for i in 1:length(s0)\n        if !(s0[i]\
    \ in s1)\n            return false\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = same_chars;\n\t@test(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true)\n\t@test(candidate(\"abcd\", \"\
    dddddddabc\") == true)\n\t@test(candidate(\"dddddddabc\", \"abcd\") == true)\n\
    \t@test(candidate(\"eabcd\", \"dddddddabc\") == false)\n\t@test(candidate(\"abcd\"\
    , \"dddddddabcf\") == false)\n\t@test(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false)\n\t@test(candidate(\"aabb\", \"aaccc\") == false)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ruvsmh4.jl:32\n  Expression: candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true\n   Evaluated: false == true\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ruvsmh4.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ruvsmh4.jl:31\ntest set: Test Failed at /tmp/tmp7ruvsmh4.jl:33\n\
    \  Expression: candidate(\"abcd\", \"dddddddabc\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7ruvsmh4.jl:33\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ruvsmh4.jl:31\ntest set: Test Failed at /tmp/tmp7ruvsmh4.jl:34\n\
    \  Expression: candidate(\"dddddddabc\", \"abcd\") == true\n   Evaluated: false\
    \ == true\nStacktrace:\n [1] top-level scope at /tmp/tmp7ruvsmh4.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ruvsmh4.jl:31\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ruvsmh4.jl:29\n"
  exit_code: 1
  status: SyntaxError

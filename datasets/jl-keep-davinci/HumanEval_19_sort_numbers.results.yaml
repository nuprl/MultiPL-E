name: HumanEval_19_sort_numbers
language: julia
results:
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_zjbe2fg.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp_zjbe2fg.jl:8\n   [3] top-level scope at /tmp/tmp_zjbe2fg.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_zjbe2fg.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zjbe2fg.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp_zjbe2fg.jl:8\n   [3] top-level scope at /tmp/tmp_zjbe2fg.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_zjbe2fg.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zjbe2fg.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp_zjbe2fg.jl:8\n   [3] top-level scope at /tmp/tmp_zjbe2fg.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_zjbe2fg.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zjbe2fg.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp_zjbe2fg.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp_zjbe2fg.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_zjbe2fg.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zjbe2fg.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp_zjbe2fg.jl:8\n\
    \   [3] top-level scope at /tmp/tmp_zjbe2fg.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp_zjbe2fg.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zjbe2fg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    join(numbers_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzzkzo5l_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzkzo5l_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzkzo5l_.jl:16\ntest set: Test Failed at /tmp/tmpzzkzo5l_.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzkzo5l_.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzkzo5l_.jl:16\ntest set: Test Failed at /tmp/tmpzzkzo5l_.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzkzo5l_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzkzo5l_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzkzo5l_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_4qzet41.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp_4qzet41.jl:9\n\
    \   [8] top-level scope at /tmp/tmp_4qzet41.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_4qzet41.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4qzet41.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp_4qzet41.jl:9\n\
    \   [8] top-level scope at /tmp/tmp_4qzet41.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_4qzet41.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4qzet41.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp_4qzet41.jl:9\n\
    \   [8] top-level scope at /tmp/tmp_4qzet41.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_4qzet41.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4qzet41.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp_4qzet41.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp_4qzet41.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_4qzet41.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_4qzet41.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbs4tbknz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpbs4tbknz.jl:8\n   [3] top-level scope at /tmp/tmpbs4tbknz.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbs4tbknz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpbs4tbknz.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpbs4tbknz.jl:8\n   [3] top-level scope at /tmp/tmpbs4tbknz.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbs4tbknz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpbs4tbknz.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpbs4tbknz.jl:8\n   [3] top-level scope at /tmp/tmpbs4tbknz.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbs4tbknz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpbs4tbknz.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpbs4tbknz.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpbs4tbknz.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbs4tbknz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpbs4tbknz.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpbs4tbknz.jl:8\n\
    \   [3] top-level scope at /tmp/tmpbs4tbknz.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpbs4tbknz.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs4tbknz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4bkov2qa.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4bkov2qa.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4bkov2qa.jl:16\ntest set: Test Failed at /tmp/tmp4bkov2qa.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4bkov2qa.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4bkov2qa.jl:16\ntest set: Test Failed at /tmp/tmp4bkov2qa.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4bkov2qa.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4bkov2qa.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4bkov2qa.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr6_a8s2m.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6_a8s2m.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6_a8s2m.jl:16\ntest set: Test Failed at /tmp/tmpr6_a8s2m.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6_a8s2m.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6_a8s2m.jl:16\ntest set: Test Failed at /tmp/tmpr6_a8s2m.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6_a8s2m.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6_a8s2m.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6_a8s2m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk4og7p33.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk4og7p33.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4og7p33.jl:16\\ntest set: Test Failed at /tmp/tmpk4og7p33.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk4og7p33.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4og7p33.jl:16\\ntest set: Test Failed at /tmp/tmpk4og7p33.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpk4og7p33.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4og7p33.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxzc3twjd.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxzc3twjd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzc3twjd.jl:16\ntest set: Test Failed at /tmp/tmpxzc3twjd.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxzc3twjd.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzc3twjd.jl:16\ntest set: Test Failed at /tmp/tmpxzc3twjd.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxzc3twjd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxzc3twjd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxzc3twjd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    num_list\
    \ = split(numbers, \" \")\n    num_list = map(x -> num_dict[x], num_list)\n  \
    \  sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n    return\
    \ join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphp05i2r3.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] #3 at /tmp/tmphp05i2r3.jl:10\
    \ [inlined]\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"{Dict{String,Int64}}},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [7] sort_numbers(::String) at /tmp/tmphp05i2r3.jl:10\n   [8] top-level scope\
    \ at /tmp/tmphp05i2r3.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphp05i2r3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphp05i2r3.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n   [1] getindex\
    \ at ./dict.jl:477 [inlined]\n   [2] #4 at /tmp/tmphp05i2r3.jl:12 [inlined]\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1},\
    \ ::Base.Generator{Array{Int64,1},var\"#4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar at ./array.jl:607\
    \ [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmphp05i2r3.jl:12\n   [8] top-level scope at /tmp/tmphp05i2r3.jl:21\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphp05i2r3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphp05i2r3.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] #4 at /tmp/tmphp05i2r3.jl:12\
    \ [inlined]\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1},\
    \ ::Base.Generator{Array{Int64,1},var\"#4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar at ./array.jl:607\
    \ [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmphp05i2r3.jl:12\n   [8] top-level scope at /tmp/tmphp05i2r3.jl:22\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphp05i2r3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphp05i2r3.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  KeyError:\
    \ key 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477 [inlined]\n\
    \   [2] #4 at /tmp/tmphp05i2r3.jl:12 [inlined]\n   [3] iterate at ./generator.jl:47\
    \ [inlined]\n   [4] _collect(::Array{Int64,1}, ::Base.Generator{Array{Int64,1},var\"\
    #4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n\
    \   [5] collect_similar at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072\
    \ [inlined]\n   [7] sort_numbers(::String) at /tmp/tmphp05i2r3.jl:12\n   [8] top-level\
    \ scope at /tmp/tmphp05i2r3.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphp05i2r3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphp05i2r3.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  KeyError: key 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477\
    \ [inlined]\n   [2] #4 at /tmp/tmphp05i2r3.jl:12 [inlined]\n   [3] iterate at\
    \ ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1}, ::Base.Generator{Array{Int64,1},var\"\
    #4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n\
    \   [5] collect_similar at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072\
    \ [inlined]\n   [7] sort_numbers(::String) at /tmp/tmphp05i2r3.jl:12\n   [8] top-level\
    \ scope at /tmp/tmphp05i2r3.jl:24\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphp05i2r3.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphp05i2r3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5m5wjk_h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5m5wjk_h.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5m5wjk_h.jl:16\ntest set: Test Failed at /tmp/tmp5m5wjk_h.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5m5wjk_h.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5m5wjk_h.jl:16\ntest set: Test Failed at /tmp/tmp5m5wjk_h.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5m5wjk_h.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5m5wjk_h.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5m5wjk_h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, x) for x in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(x) for x in nums_int]\n    return join(nums_str, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpby4bglk1.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpby4bglk1.jl:9\n\
    \   [8] top-level scope at /tmp/tmpby4bglk1.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpby4bglk1.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpby4bglk1.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpby4bglk1.jl:9\n\
    \   [8] top-level scope at /tmp/tmpby4bglk1.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpby4bglk1.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpby4bglk1.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpby4bglk1.jl:9\n\
    \   [8] top-level scope at /tmp/tmpby4bglk1.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpby4bglk1.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpby4bglk1.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmpby4bglk1.jl:9\n   [8] top-level scope\
    \ at /tmp/tmpby4bglk1.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpby4bglk1.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpby4bglk1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplms79exo.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmplms79exo.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplms79exo.jl:16\ntest set: Test Failed at /tmp/tmplms79exo.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmplms79exo.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplms79exo.jl:16\ntest set: Test Failed at /tmp/tmplms79exo.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmplms79exo.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplms79exo.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplms79exo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprhvjcf2y.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprhvjcf2y.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprhvjcf2y.jl:16\ntest set: Test Failed at /tmp/tmprhvjcf2y.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprhvjcf2y.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprhvjcf2y.jl:16\ntest set: Test Failed at /tmp/tmprhvjcf2y.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprhvjcf2y.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprhvjcf2y.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhvjcf2y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split()\n\
    \    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg5hc3r31.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpg5hc3r31.jl:8\n   [3] top-level scope at /tmp/tmpg5hc3r31.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg5hc3r31.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5hc3r31.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpg5hc3r31.jl:8\n   [3] top-level scope at /tmp/tmpg5hc3r31.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg5hc3r31.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5hc3r31.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpg5hc3r31.jl:8\n   [3] top-level scope at /tmp/tmpg5hc3r31.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg5hc3r31.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5hc3r31.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpg5hc3r31.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpg5hc3r31.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg5hc3r31.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5hc3r31.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpg5hc3r31.jl:8\n\
    \   [3] top-level scope at /tmp/tmpg5hc3r31.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg5hc3r31.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5hc3r31.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp60kxd9gw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmp60kxd9gw.jl:9\n   [2] top-level scope\
    \ at /tmp/tmp60kxd9gw.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp60kxd9gw.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp60kxd9gw.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ sort_numbers(::String) at /tmp/tmp60kxd9gw.jl:9\n   [2] top-level scope at /tmp/tmp60kxd9gw.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp60kxd9gw.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp60kxd9gw.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmp60kxd9gw.jl:9\n   [2]\
    \ top-level scope at /tmp/tmp60kxd9gw.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp60kxd9gw.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp60kxd9gw.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ int not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmp60kxd9gw.jl:9\n\
    \   [2] top-level scope at /tmp/tmp60kxd9gw.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp60kxd9gw.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp60kxd9gw.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmp60kxd9gw.jl:9\n   [2] top-level scope at /tmp/tmp60kxd9gw.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp60kxd9gw.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp60kxd9gw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5_kk85bf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5_kk85bf.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5_kk85bf.jl:16\ntest set: Test Failed at /tmp/tmp5_kk85bf.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5_kk85bf.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5_kk85bf.jl:16\ntest set: Test Failed at /tmp/tmp5_kk85bf.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5_kk85bf.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5_kk85bf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_kk85bf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ttf3bgw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6ttf3bgw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ttf3bgw.jl:16\ntest set: Test Failed at /tmp/tmp6ttf3bgw.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6ttf3bgw.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ttf3bgw.jl:16\ntest set: Test Failed at /tmp/tmp6ttf3bgw.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6ttf3bgw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6ttf3bgw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ttf3bgw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9wkzx9gb.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9wkzx9gb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wkzx9gb.jl:16\ntest set: Test Failed at /tmp/tmp9wkzx9gb.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9wkzx9gb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wkzx9gb.jl:16\ntest set: Test Failed at /tmp/tmp9wkzx9gb.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9wkzx9gb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wkzx9gb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wkzx9gb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5zzxwp6z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5zzxwp6z.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5zzxwp6z.jl:16\ntest set: Test Failed at /tmp/tmp5zzxwp6z.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5zzxwp6z.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5zzxwp6z.jl:16\ntest set: Test Failed at /tmp/tmp5zzxwp6z.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5zzxwp6z.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5zzxwp6z.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zzxwp6z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxdc1a0xm.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpxdc1a0xm.jl:8\n   [3] top-level scope at /tmp/tmpxdc1a0xm.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxdc1a0xm.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdc1a0xm.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpxdc1a0xm.jl:8\n   [3] top-level scope at /tmp/tmpxdc1a0xm.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxdc1a0xm.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdc1a0xm.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpxdc1a0xm.jl:8\n   [3] top-level scope at /tmp/tmpxdc1a0xm.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxdc1a0xm.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdc1a0xm.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpxdc1a0xm.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpxdc1a0xm.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxdc1a0xm.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdc1a0xm.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpxdc1a0xm.jl:8\n\
    \   [3] top-level scope at /tmp/tmpxdc1a0xm.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxdc1a0xm.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdc1a0xm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpdhsvi0p0.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdhsvi0p0.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdhsvi0p0.jl:16\\ntest set: Test Failed at /tmp/tmpdhsvi0p0.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpdhsvi0p0.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdhsvi0p0.jl:16\\ntest set: Test Failed at /tmp/tmpdhsvi0p0.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpdhsvi0p0.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpdhsvi0p0.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp4leg4sh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp4leg4sh.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp4leg4sh.jl:16\ntest set: Test Failed at /tmp/tmpp4leg4sh.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp4leg4sh.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp4leg4sh.jl:16\ntest set: Test Failed at /tmp/tmpp4leg4sh.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp4leg4sh.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp4leg4sh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp4leg4sh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiog9z3ob.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpiog9z3ob.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiog9z3ob.jl:16\ntest set: Test Failed at /tmp/tmpiog9z3ob.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpiog9z3ob.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiog9z3ob.jl:16\ntest set: Test Failed at /tmp/tmpiog9z3ob.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpiog9z3ob.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiog9z3ob.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiog9z3ob.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4b75hc90.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4b75hc90.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4b75hc90.jl:16\ntest set: Test Failed at /tmp/tmp4b75hc90.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4b75hc90.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4b75hc90.jl:16\ntest set: Test Failed at /tmp/tmp4b75hc90.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4b75hc90.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4b75hc90.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4b75hc90.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmph4gizsaj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmph4gizsaj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4gizsaj.jl:16\ntest set: Test Failed at /tmp/tmph4gizsaj.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmph4gizsaj.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4gizsaj.jl:16\ntest set: Test Failed at /tmp/tmph4gizsaj.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmph4gizsaj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph4gizsaj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph4gizsaj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq6ucf8ow.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq6ucf8ow.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6ucf8ow.jl:16\ntest set: Test Failed at /tmp/tmpq6ucf8ow.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq6ucf8ow.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6ucf8ow.jl:16\ntest set: Test Failed at /tmp/tmpq6ucf8ow.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq6ucf8ow.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6ucf8ow.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6ucf8ow.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkmsw2c0d.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkmsw2c0d.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkmsw2c0d.jl:16\ntest set: Test Failed at /tmp/tmpkmsw2c0d.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkmsw2c0d.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkmsw2c0d.jl:16\ntest set: Test Failed at /tmp/tmpkmsw2c0d.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkmsw2c0d.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkmsw2c0d.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkmsw2c0d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into a vector of strings\n    num_vec = split(numbers, \" \")\n    # Convert\
    \ the vector of strings to a vector of integers\n    num_vec = parse.(Int, num_vec)\n\
    \    # Sort the vector of integers\n    sort!(num_vec)\n    # Convert the vector\
    \ of integers to a vector of strings\n    num_vec = string.(num_vec)\n    # Join\
    \ the vector of strings into a single string\n    num_vec = join(num_vec, \" \"\
    )\n    return num_vec\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt_h8m0wr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:95\n \
    \  [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpt_h8m0wr.jl:11\n   [14] top-level scope at /tmp/tmpt_h8m0wr.jl:25\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpt_h8m0wr.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpt_h8m0wr.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't' in \"three\"\
    \n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpt_h8m0wr.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpt_h8m0wr.jl:26\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpt_h8m0wr.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpt_h8m0wr.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpt_h8m0wr.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpt_h8m0wr.jl:27\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpt_h8m0wr.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpt_h8m0wr.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpt_h8m0wr.jl:11\n   [14] top-level scope at /tmp/tmpt_h8m0wr.jl:28\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpt_h8m0wr.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpt_h8m0wr.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpt_h8m0wr.jl:11\n   [14] top-level scope at /tmp/tmpt_h8m0wr.jl:29\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpt_h8m0wr.jl:24\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt_h8m0wr.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpv6czb1lp.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv6czb1lp.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv6czb1lp.jl:16\\ntest set: Test Failed at /tmp/tmpv6czb1lp.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv6czb1lp.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv6czb1lp.jl:16\\ntest set: Test Failed at /tmp/tmpv6czb1lp.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpv6czb1lp.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv6czb1lp.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptb5gdy4k.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmptb5gdy4k.jl:8\n   [3] top-level scope at /tmp/tmptb5gdy4k.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptb5gdy4k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmptb5gdy4k.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmptb5gdy4k.jl:8\n   [3] top-level scope at /tmp/tmptb5gdy4k.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptb5gdy4k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmptb5gdy4k.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmptb5gdy4k.jl:8\n   [3] top-level scope at /tmp/tmptb5gdy4k.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptb5gdy4k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmptb5gdy4k.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmptb5gdy4k.jl:8\n  \
    \ [3] top-level scope at /tmp/tmptb5gdy4k.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptb5gdy4k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmptb5gdy4k.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmptb5gdy4k.jl:8\n\
    \   [3] top-level scope at /tmp/tmptb5gdy4k.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmptb5gdy4k.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptb5gdy4k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkqbr1ixf.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [string(num) for num in nums_int_sorted]\n\
    \    return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3i_j1_q4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:95\n \
    \  [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3i_j1_q4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3i_j1_q4.jl:19\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3i_j1_q4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i_j1_q4.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't' in \"three\"\
    \n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3i_j1_q4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3i_j1_q4.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3i_j1_q4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i_j1_q4.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3i_j1_q4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3i_j1_q4.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3i_j1_q4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i_j1_q4.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3i_j1_q4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3i_j1_q4.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3i_j1_q4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3i_j1_q4.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp3i_j1_q4.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp3i_j1_q4.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3i_j1_q4.jl:18\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3i_j1_q4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmperpsu4bx.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[num] for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [key for (key, value) in nums_dict if value\
    \ in nums_int_sorted]\n    return join(nums_sorted, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn9dpbd9w.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn9dpbd9w.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn9dpbd9w.jl:19\ntest set: Test Failed at /tmp/tmpn9dpbd9w.jl:23\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"zero four eight nine five seven\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn9dpbd9w.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn9dpbd9w.jl:19\ntest set: Test Failed at /tmp/tmpn9dpbd9w.jl:24\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"zero two four six one three five\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpn9dpbd9w.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn9dpbd9w.jl:19\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn9dpbd9w.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzbwyy3f2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzbwyy3f2.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbwyy3f2.jl:16\ntest set: Test Failed at /tmp/tmpzbwyy3f2.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzbwyy3f2.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbwyy3f2.jl:16\ntest set: Test Failed at /tmp/tmpzbwyy3f2.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzbwyy3f2.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzbwyy3f2.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzbwyy3f2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp3fmfiaec.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3fmfiaec.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3fmfiaec.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3fmfiaec.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3fmfiaec.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3fmfiaec.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3fmfiaec.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3fmfiaec.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3fmfiaec.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp3fmfiaec.jl:9\n\
    \   [8] top-level scope at /tmp/tmp3fmfiaec.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3fmfiaec.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp3fmfiaec.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp3fmfiaec.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp3fmfiaec.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp3fmfiaec.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3fmfiaec.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmph2dgxrlp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmph2dgxrlp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2dgxrlp.jl:16\ntest set: Test Failed at /tmp/tmph2dgxrlp.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmph2dgxrlp.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2dgxrlp.jl:16\ntest set: Test Failed at /tmp/tmph2dgxrlp.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmph2dgxrlp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph2dgxrlp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph2dgxrlp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbati7o_7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbati7o_7.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbati7o_7.jl:16\ntest set: Test Failed at /tmp/tmpbati7o_7.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbati7o_7.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbati7o_7.jl:16\ntest set: Test Failed at /tmp/tmpbati7o_7.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbati7o_7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbati7o_7.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbati7o_7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, x) for x in nums]\n    nums_int_sorted =\
    \ sort(nums_int)\n    nums_sorted = [string(x) for x in nums_int_sorted]\n   \
    \ return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp75ooqjw4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:95\n \
    \  [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp75ooqjw4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp75ooqjw4.jl:19\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp75ooqjw4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp75ooqjw4.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't' in \"three\"\
    \n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp75ooqjw4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp75ooqjw4.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp75ooqjw4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp75ooqjw4.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp75ooqjw4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp75ooqjw4.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp75ooqjw4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp75ooqjw4.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp75ooqjw4.jl:9\n\
    \   [8] top-level scope at /tmp/tmp75ooqjw4.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp75ooqjw4.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp75ooqjw4.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp75ooqjw4.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp75ooqjw4.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp75ooqjw4.jl:18\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75ooqjw4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgb_xrxz1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgb_xrxz1.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgb_xrxz1.jl:16\ntest set: Test Failed at /tmp/tmpgb_xrxz1.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgb_xrxz1.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgb_xrxz1.jl:16\ntest set: Test Failed at /tmp/tmpgb_xrxz1.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgb_xrxz1.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgb_xrxz1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgb_xrxz1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeo9_rvrq.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpeo9_rvrq.jl:8\n   [3] top-level scope at /tmp/tmpeo9_rvrq.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpeo9_rvrq.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpeo9_rvrq.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpeo9_rvrq.jl:8\n   [3] top-level scope at /tmp/tmpeo9_rvrq.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpeo9_rvrq.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpeo9_rvrq.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpeo9_rvrq.jl:8\n   [3] top-level scope at /tmp/tmpeo9_rvrq.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpeo9_rvrq.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpeo9_rvrq.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpeo9_rvrq.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpeo9_rvrq.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpeo9_rvrq.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpeo9_rvrq.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpeo9_rvrq.jl:8\n\
    \   [3] top-level scope at /tmp/tmpeo9_rvrq.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpeo9_rvrq.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeo9_rvrq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split()\n\
    \    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyefbqic2.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpyefbqic2.jl:8\n   [3] top-level scope at /tmp/tmpyefbqic2.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyefbqic2.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyefbqic2.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpyefbqic2.jl:8\n   [3] top-level scope at /tmp/tmpyefbqic2.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyefbqic2.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyefbqic2.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpyefbqic2.jl:8\n   [3] top-level scope at /tmp/tmpyefbqic2.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyefbqic2.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyefbqic2.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpyefbqic2.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpyefbqic2.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyefbqic2.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyefbqic2.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpyefbqic2.jl:8\n\
    \   [3] top-level scope at /tmp/tmpyefbqic2.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyefbqic2.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyefbqic2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr6bbf3si.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6bbf3si.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6bbf3si.jl:16\ntest set: Test Failed at /tmp/tmpr6bbf3si.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6bbf3si.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6bbf3si.jl:16\ntest set: Test Failed at /tmp/tmpr6bbf3si.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpr6bbf3si.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr6bbf3si.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6bbf3si.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgf79tvfs.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgf79tvfs.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgf79tvfs.jl:16\\ntest set: Test Failed at /tmp/tmpgf79tvfs.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgf79tvfs.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgf79tvfs.jl:16\\ntest set: Test Failed at /tmp/tmpgf79tvfs.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpgf79tvfs.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgf79tvfs.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpb1iz5ezj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1iz5ezj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1iz5ezj.jl:16\ntest set: Test Failed at /tmp/tmpb1iz5ezj.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1iz5ezj.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1iz5ezj.jl:16\ntest set: Test Failed at /tmp/tmpb1iz5ezj.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1iz5ezj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1iz5ezj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1iz5ezj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq3axn8he.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq3axn8he.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq3axn8he.jl:16\ntest set: Test Failed at /tmp/tmpq3axn8he.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq3axn8he.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq3axn8he.jl:16\ntest set: Test Failed at /tmp/tmpq3axn8he.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpq3axn8he.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq3axn8he.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3axn8he.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the strings\
    \ to integers\n    nums = map(x -> parse(Int, x), nums)\n    # Sort the integers\n\
    \    nums = sort(nums)\n    # Convert the integers to strings\n    nums = map(x\
    \ -> string(x), nums)\n    # Join the strings into a single string\n    nums =\
    \ join(nums, \" \")\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvce3q2r2.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at /tmp/tmpvce3q2r2.jl:11\
    \ [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n   [6] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar at ./array.jl:607\
    \ [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n   [9] sort_numbers(::String)\
    \ at /tmp/tmpvce3q2r2.jl:11\n   [10] top-level scope at /tmp/tmpvce3q2r2.jl:26\n\
    \   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpvce3q2r2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvce3q2r2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at /tmp/tmpvce3q2r2.jl:11 [inlined]\n   [5] iterate at\
    \ ./generator.jl:47 [inlined]\n   [6] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},var\"\
    #3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [9] sort_numbers(::String) at /tmp/tmpvce3q2r2.jl:11\n   [10] top-level scope\
    \ at /tmp/tmpvce3q2r2.jl:27\n   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpvce3q2r2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvce3q2r2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at /tmp/tmpvce3q2r2.jl:11\
    \ [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n   [6] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar at ./array.jl:607\
    \ [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n   [9] sort_numbers(::String)\
    \ at /tmp/tmpvce3q2r2.jl:11\n   [10] top-level scope at /tmp/tmpvce3q2r2.jl:28\n\
    \   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpvce3q2r2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvce3q2r2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at /tmp/tmpvce3q2r2.jl:11 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},var\"\
    #3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [9] sort_numbers(::String) at /tmp/tmpvce3q2r2.jl:11\n   [10] top-level scope\
    \ at /tmp/tmpvce3q2r2.jl:29\n   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpvce3q2r2.jl:24\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvce3q2r2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfjle1rzo.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfjle1rzo.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfjle1rzo.jl:16\ntest set: Test Failed at /tmp/tmpfjle1rzo.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfjle1rzo.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfjle1rzo.jl:16\ntest set: Test Failed at /tmp/tmpfjle1rzo.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfjle1rzo.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfjle1rzo.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfjle1rzo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdtgpvoes.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdtgpvoes.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdtgpvoes.jl:16\ntest set: Test Failed at /tmp/tmpdtgpvoes.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdtgpvoes.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdtgpvoes.jl:16\ntest set: Test Failed at /tmp/tmpdtgpvoes.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdtgpvoes.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdtgpvoes.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdtgpvoes.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4n53nmrc.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\\
    n   [2] sort_numbers(::String) at /tmp/tmp4n53nmrc.jl:8\\n   [3] top-level scope\
    \ at /tmp/tmp4n53nmrc.jl:17\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp4n53nmrc.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4n53nmrc.jl:18\\n  Test threw exception\\n  Expression: candidate(\"\
    three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\n  \
    \ [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp4n53nmrc.jl:8\\n   [3] top-level scope at /tmp/tmp4n53nmrc.jl:18\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp4n53nmrc.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4n53nmrc.jl:19\\n  Test threw exception\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n  type String has no field split\\\
    n  Stacktrace:\\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp4n53nmrc.jl:8\\n   [3] top-level scope at\
    \ /tmp/tmp4n53nmrc.jl:19\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp4n53nmrc.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4n53nmrc.jl:20\\n  Test threw exception\\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\\n \
    \ type String has no field split\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String) at /tmp/tmp4n53nmrc.jl:8\\\
    n   [3] top-level scope at /tmp/tmp4n53nmrc.jl:20\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp4n53nmrc.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4n53nmrc.jl:21\\n  Test threw exception\\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\\\
    n  type String has no field split\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String) at /tmp/tmp4n53nmrc.jl:8\\\
    n   [3] top-level scope at /tmp/tmp4n53nmrc.jl:21\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp4n53nmrc.jl:16\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprwk3gb4b.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprwk3gb4b.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwk3gb4b.jl:16\ntest set: Test Failed at /tmp/tmprwk3gb4b.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprwk3gb4b.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwk3gb4b.jl:16\ntest set: Test Failed at /tmp/tmprwk3gb4b.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprwk3gb4b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwk3gb4b.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwk3gb4b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpge3kzax4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpge3kzax4.jl:11\n   [14] top-level scope at /tmp/tmpge3kzax4.jl:25\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpge3kzax4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpge3kzax4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpge3kzax4.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpge3kzax4.jl:26\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpge3kzax4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpge3kzax4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpge3kzax4.jl:11\n   [14] top-level scope at /tmp/tmpge3kzax4.jl:27\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpge3kzax4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpge3kzax4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpge3kzax4.jl:11\n   [14] top-level scope at /tmp/tmpge3kzax4.jl:28\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpge3kzax4.jl:23\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpge3kzax4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87h5abo7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp87h5abo7.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87h5abo7.jl:16\ntest set: Test Failed at /tmp/tmp87h5abo7.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp87h5abo7.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87h5abo7.jl:16\ntest set: Test Failed at /tmp/tmp87h5abo7.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp87h5abo7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87h5abo7.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87h5abo7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp_c1weasj.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_c1weasj.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_c1weasj.jl:16\\ntest set: Test Failed at /tmp/tmp_c1weasj.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp_c1weasj.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_c1weasj.jl:16\\ntest set: Test Failed at /tmp/tmp_c1weasj.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp_c1weasj.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp_c1weasj.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpugsezlbd.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpugsezlbd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugsezlbd.jl:16\ntest set: Test Failed at /tmp/tmpugsezlbd.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpugsezlbd.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugsezlbd.jl:16\ntest set: Test Failed at /tmp/tmpugsezlbd.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpugsezlbd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugsezlbd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugsezlbd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9f1m7eul.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9f1m7eul.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9f1m7eul.jl:16\ntest set: Test Failed at /tmp/tmp9f1m7eul.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9f1m7eul.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9f1m7eul.jl:16\ntest set: Test Failed at /tmp/tmp9f1m7eul.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9f1m7eul.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9f1m7eul.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9f1m7eul.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the array\
    \ of strings to an array of integers\n    nums = parse.(Int, nums)\n    # Sort\
    \ the array of integers\n    sort!(nums)\n    # Convert the array of integers\
    \ to an array of strings\n    nums = string.(nums)\n    # Join the array of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc9x65jlf.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpc9x65jlf.jl:11\n   [14] top-level scope at /tmp/tmpc9x65jlf.jl:25\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpc9x65jlf.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9x65jlf.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpc9x65jlf.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpc9x65jlf.jl:26\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpc9x65jlf.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9x65jlf.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpc9x65jlf.jl:11\n   [14] top-level scope at /tmp/tmpc9x65jlf.jl:27\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpc9x65jlf.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9x65jlf.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpc9x65jlf.jl:11\n   [14] top-level scope at /tmp/tmpc9x65jlf.jl:28\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpc9x65jlf.jl:23\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9x65jlf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array = split(numbers)\n\
    \    num_array = sort(num_array)\n    return join(num_array)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfpoqy_uf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfpoqy_uf.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfpoqy_uf.jl:16\ntest set: Test Failed at /tmp/tmpfpoqy_uf.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfpoqy_uf.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfpoqy_uf.jl:16\ntest set: Test Failed at /tmp/tmpfpoqy_uf.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfpoqy_uf.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfpoqy_uf.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpoqy_uf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdb3r63ff.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdb3r63ff.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdb3r63ff.jl:16\ntest set: Test Failed at /tmp/tmpdb3r63ff.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdb3r63ff.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdb3r63ff.jl:16\ntest set: Test Failed at /tmp/tmpdb3r63ff.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdb3r63ff.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdb3r63ff.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdb3r63ff.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict('zero'\
    \ => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six'\
    \ => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    num_list = [num_dict[x]\
    \ for x in split(numbers)]\n    return join([key for (key, value) in num_dict\
    \ if value in sort(num_list)], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpg5ogxek4.jl:8\n [2] include(::Module, ::String) at\
    \ ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg5ogxek4.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5luu38o7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5luu38o7.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5luu38o7.jl:16\ntest set: Test Failed at /tmp/tmp5luu38o7.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5luu38o7.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5luu38o7.jl:16\ntest set: Test Failed at /tmp/tmp5luu38o7.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5luu38o7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5luu38o7.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5luu38o7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_hqge17r.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_hqge17r.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hqge17r.jl:16\ntest set: Test Failed at /tmp/tmp_hqge17r.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_hqge17r.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hqge17r.jl:16\ntest set: Test Failed at /tmp/tmp_hqge17r.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_hqge17r.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hqge17r.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hqge17r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsv5l73hg.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsv5l73hg.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsv5l73hg.jl:16\ntest set: Test Failed at /tmp/tmpsv5l73hg.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsv5l73hg.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsv5l73hg.jl:16\ntest set: Test Failed at /tmp/tmpsv5l73hg.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsv5l73hg.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsv5l73hg.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv5l73hg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwrr_edlb.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwrr_edlb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrr_edlb.jl:16\ntest set: Test Failed at /tmp/tmpwrr_edlb.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwrr_edlb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrr_edlb.jl:16\ntest set: Test Failed at /tmp/tmpwrr_edlb.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwrr_edlb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwrr_edlb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwrr_edlb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjimfe_gm.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjimfe_gm.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjimfe_gm.jl:16\\ntest set: Test Failed at /tmp/tmpjimfe_gm.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjimfe_gm.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjimfe_gm.jl:16\\ntest set: Test Failed at /tmp/tmpjimfe_gm.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpjimfe_gm.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjimfe_gm.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxww9z1_a.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxww9z1_a.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxww9z1_a.jl:16\\ntest set: Test Failed at /tmp/tmpxww9z1_a.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxww9z1_a.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxww9z1_a.jl:16\\ntest set: Test Failed at /tmp/tmpxww9z1_a.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpxww9z1_a.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxww9z1_a.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpnxy0xfsk.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpnxy0xfsk.jl:9\n\
    \   [8] top-level scope at /tmp/tmpnxy0xfsk.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpnxy0xfsk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpnxy0xfsk.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpnxy0xfsk.jl:9\n\
    \   [8] top-level scope at /tmp/tmpnxy0xfsk.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpnxy0xfsk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpnxy0xfsk.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpnxy0xfsk.jl:9\n\
    \   [8] top-level scope at /tmp/tmpnxy0xfsk.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpnxy0xfsk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpnxy0xfsk.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmpnxy0xfsk.jl:9\n   [8] top-level scope\
    \ at /tmp/tmpnxy0xfsk.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpnxy0xfsk.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnxy0xfsk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the array\
    \ of strings to an array of integers\n    nums = parse.(Int, nums)\n    # Sort\
    \ the array of integers\n    nums = sort(nums)\n    # Convert the array of integers\
    \ to an array of strings\n    nums = string.(nums)\n    # Join the array of strings\
    \ into a single string\n    nums = join(nums, \" \")\n    # Return the string\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7ysoona.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpg7ysoona.jl:11\n   [14] top-level scope at /tmp/tmpg7ysoona.jl:27\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpg7ysoona.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ysoona.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpg7ysoona.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpg7ysoona.jl:28\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpg7ysoona.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ysoona.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpg7ysoona.jl:11\n   [14] top-level scope at /tmp/tmpg7ysoona.jl:29\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpg7ysoona.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpg7ysoona.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpg7ysoona.jl:11\n   [14] top-level scope at /tmp/tmpg7ysoona.jl:30\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpg7ysoona.jl:25\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7ysoona.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp07n41ufv.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp07n41ufv.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp07n41ufv.jl:16\ntest set: Test Failed at /tmp/tmp07n41ufv.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp07n41ufv.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp07n41ufv.jl:16\ntest set: Test Failed at /tmp/tmp07n41ufv.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp07n41ufv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp07n41ufv.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp07n41ufv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[i] for i in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [key for (key, value) in nums_dict if value\
    \ in nums_int_sorted]\n    return join(nums_sorted, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu__mij9o.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu__mij9o.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu__mij9o.jl:19\ntest set: Test Failed at /tmp/tmpu__mij9o.jl:23\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"zero four eight nine five seven\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu__mij9o.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu__mij9o.jl:19\ntest set: Test Failed at /tmp/tmpu__mij9o.jl:24\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"zero two four six one three five\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu__mij9o.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu__mij9o.jl:19\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu__mij9o.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return \" \".join(nums_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdub48y5_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmpdub48y5_.jl:9\n   [2] top-level scope\
    \ at /tmp/tmpdub48y5_.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdub48y5_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpdub48y5_.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ sort_numbers(::String) at /tmp/tmpdub48y5_.jl:9\n   [2] top-level scope at /tmp/tmpdub48y5_.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdub48y5_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpdub48y5_.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpdub48y5_.jl:9\n   [2]\
    \ top-level scope at /tmp/tmpdub48y5_.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdub48y5_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpdub48y5_.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ int not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpdub48y5_.jl:9\n\
    \   [2] top-level scope at /tmp/tmpdub48y5_.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdub48y5_.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpdub48y5_.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpdub48y5_.jl:9\n   [2] top-level scope at /tmp/tmpdub48y5_.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdub48y5_.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdub48y5_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprggo9d42.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprggo9d42.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprggo9d42.jl:16\ntest set: Test Failed at /tmp/tmprggo9d42.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprggo9d42.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprggo9d42.jl:16\ntest set: Test Failed at /tmp/tmprggo9d42.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprggo9d42.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprggo9d42.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprggo9d42.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzkjbj4p9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzkjbj4p9.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkjbj4p9.jl:16\ntest set: Test Failed at /tmp/tmpzkjbj4p9.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzkjbj4p9.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkjbj4p9.jl:16\ntest set: Test Failed at /tmp/tmpzkjbj4p9.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzkjbj4p9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkjbj4p9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzkjbj4p9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpia3emdbh.jl:20\\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\\n \
    \  Evaluated: \"five zero four seven nine eight\" == \"zero four five seven eight\
    \ nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpia3emdbh.jl:20\\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpia3emdbh.jl:16\\ntest set: Test Failed at /tmp/tmpia3emdbh.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"six five four three two one zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpia3emdbh.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpia3emdbh.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmp48vyslwx.jl:17\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp48vyslwx.jl:17\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp48vyslwx.jl:14\\ntest set: Test Failed at /tmp/tmp48vyslwx.jl:18\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmp48vyslwx.jl:18\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp48vyslwx.jl:14\\ntest set: Test Failed at /tmp/tmp48vyslwx.jl:19\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp48vyslwx.jl:19\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp48vyslwx.jl:14\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbp3hewai.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbp3hewai.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbp3hewai.jl:16\ntest set: Test Failed at /tmp/tmpbp3hewai.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbp3hewai.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbp3hewai.jl:16\ntest set: Test Failed at /tmp/tmpbp3hewai.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbp3hewai.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbp3hewai.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbp3hewai.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkftl4r_l.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkftl4r_l.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkftl4r_l.jl:16\\ntest set: Test Failed at /tmp/tmpkftl4r_l.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkftl4r_l.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkftl4r_l.jl:16\\ntest set: Test Failed at /tmp/tmpkftl4r_l.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpkftl4r_l.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkftl4r_l.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7y13o36i.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7y13o36i.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7y13o36i.jl:16\ntest set: Test Failed at /tmp/tmp7y13o36i.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7y13o36i.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7y13o36i.jl:16\ntest set: Test Failed at /tmp/tmp7y13o36i.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7y13o36i.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7y13o36i.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7y13o36i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpuzpunl8n.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpuzpunl8n.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuzpunl8n.jl:16\ntest set: Test Failed at /tmp/tmpuzpunl8n.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpuzpunl8n.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuzpunl8n.jl:16\ntest set: Test Failed at /tmp/tmpuzpunl8n.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpuzpunl8n.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuzpunl8n.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuzpunl8n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpp9kj37oh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp9kj37oh.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9kj37oh.jl:16\ntest set: Test Failed at /tmp/tmpp9kj37oh.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp9kj37oh.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9kj37oh.jl:16\ntest set: Test Failed at /tmp/tmpp9kj37oh.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp9kj37oh.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp9kj37oh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9kj37oh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp0u9etncz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp0u9etncz.jl:8\n   [3] top-level scope at /tmp/tmp0u9etncz.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0u9etncz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp0u9etncz.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp0u9etncz.jl:8\n   [3] top-level scope at /tmp/tmp0u9etncz.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0u9etncz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp0u9etncz.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp0u9etncz.jl:8\n   [3] top-level scope at /tmp/tmp0u9etncz.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0u9etncz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp0u9etncz.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp0u9etncz.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp0u9etncz.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0u9etncz.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp0u9etncz.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp0u9etncz.jl:8\n\
    \   [3] top-level scope at /tmp/tmp0u9etncz.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp0u9etncz.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0u9etncz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzzhxb3ha.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzhxb3ha.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzhxb3ha.jl:16\ntest set: Test Failed at /tmp/tmpzzhxb3ha.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzhxb3ha.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzhxb3ha.jl:16\ntest set: Test Failed at /tmp/tmpzzhxb3ha.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzzhxb3ha.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzzhxb3ha.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzhxb3ha.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgpao4gec.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpgpao4gec.jl:8\n   [3] top-level scope at /tmp/tmpgpao4gec.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgpao4gec.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpgpao4gec.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpgpao4gec.jl:8\n   [3] top-level scope at /tmp/tmpgpao4gec.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgpao4gec.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpgpao4gec.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpgpao4gec.jl:8\n   [3] top-level scope at /tmp/tmpgpao4gec.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgpao4gec.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpgpao4gec.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpgpao4gec.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpgpao4gec.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgpao4gec.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpgpao4gec.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpgpao4gec.jl:8\n\
    \   [3] top-level scope at /tmp/tmpgpao4gec.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpgpao4gec.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgpao4gec.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp12viwmlq.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp12viwmlq.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12viwmlq.jl:16\ntest set: Test Failed at /tmp/tmp12viwmlq.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp12viwmlq.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12viwmlq.jl:16\ntest set: Test Failed at /tmp/tmp12viwmlq.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp12viwmlq.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp12viwmlq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12viwmlq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmt8sx4mw.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmt8sx4mw.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmt8sx4mw.jl:16\\ntest set: Test Failed at /tmp/tmpmt8sx4mw.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmt8sx4mw.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmt8sx4mw.jl:16\\ntest set: Test Failed at /tmp/tmpmt8sx4mw.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpmt8sx4mw.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmt8sx4mw.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9_p09sqa.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9_p09sqa.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_p09sqa.jl:16\ntest set: Test Failed at /tmp/tmp9_p09sqa.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9_p09sqa.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_p09sqa.jl:16\ntest set: Test Failed at /tmp/tmp9_p09sqa.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9_p09sqa.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9_p09sqa.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9_p09sqa.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmppbv24z6y.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppbv24z6y.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbv24z6y.jl:14\ntest set: Test Failed at /tmp/tmppbv24z6y.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppbv24z6y.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbv24z6y.jl:14\ntest set: Test Failed at /tmp/tmppbv24z6y.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmppbv24z6y.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppbv24z6y.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbv24z6y.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxpkpyoyz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxpkpyoyz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxpkpyoyz.jl:16\ntest set: Test Failed at /tmp/tmpxpkpyoyz.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxpkpyoyz.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxpkpyoyz.jl:16\ntest set: Test Failed at /tmp/tmpxpkpyoyz.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxpkpyoyz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxpkpyoyz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpkpyoyz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpe57pt41f.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpe57pt41f.jl:8\n   [3] top-level scope at /tmp/tmpe57pt41f.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpe57pt41f.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpe57pt41f.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpe57pt41f.jl:8\n   [3] top-level scope at /tmp/tmpe57pt41f.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpe57pt41f.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpe57pt41f.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpe57pt41f.jl:8\n   [3] top-level scope at /tmp/tmpe57pt41f.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpe57pt41f.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpe57pt41f.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpe57pt41f.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpe57pt41f.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpe57pt41f.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpe57pt41f.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpe57pt41f.jl:8\n\
    \   [3] top-level scope at /tmp/tmpe57pt41f.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpe57pt41f.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe57pt41f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmlj0ms2x.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmlj0ms2x.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlj0ms2x.jl:16\ntest set: Test Failed at /tmp/tmpmlj0ms2x.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmlj0ms2x.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlj0ms2x.jl:16\ntest set: Test Failed at /tmp/tmpmlj0ms2x.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmlj0ms2x.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmlj0ms2x.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmlj0ms2x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptusl2vpw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmptusl2vpw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptusl2vpw.jl:16\ntest set: Test Failed at /tmp/tmptusl2vpw.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmptusl2vpw.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptusl2vpw.jl:16\ntest set: Test Failed at /tmp/tmptusl2vpw.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmptusl2vpw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptusl2vpw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptusl2vpw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpym3pgkye.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpym3pgkye.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpym3pgkye.jl:16\ntest set: Test Failed at /tmp/tmpym3pgkye.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpym3pgkye.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpym3pgkye.jl:16\ntest set: Test Failed at /tmp/tmpym3pgkye.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpym3pgkye.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpym3pgkye.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpym3pgkye.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0s353co0.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0s353co0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0s353co0.jl:16\ntest set: Test Failed at /tmp/tmp0s353co0.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0s353co0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0s353co0.jl:16\ntest set: Test Failed at /tmp/tmp0s353co0.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0s353co0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0s353co0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0s353co0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    sort!(num_list)\n    return join(num_list)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuxnh9m55.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxnh9m55.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxnh9m55.jl:16\\ntest set: Test Failed at /tmp/tmpuxnh9m55.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero\
    \ four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxnh9m55.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxnh9m55.jl:16\\ntest set: Test Failed at /tmp/tmpuxnh9m55.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxnh9m55.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxnh9m55.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3spg9kwd.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3spg9kwd.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3spg9kwd.jl:14\ntest set: Test Failed at /tmp/tmp3spg9kwd.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3spg9kwd.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3spg9kwd.jl:14\ntest set: Test Failed at /tmp/tmp3spg9kwd.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3spg9kwd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3spg9kwd.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3spg9kwd.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list_int = []\n    for num in num_list\n        push!(num_list_int,\
    \ number_to_int(num))\n    end\n    num_list_int = sort(num_list_int)\n    num_list_str\
    \ = []\n    for num in num_list_int\n        push!(num_list_str, int_to_number(num))\n\
    \    end\n    return join(num_list_str, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1eq8bzlh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp1eq8bzlh.jl:8\n   [3] top-level scope at /tmp/tmp1eq8bzlh.jl:25\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1eq8bzlh.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eq8bzlh.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp1eq8bzlh.jl:8\n   [3] top-level scope at /tmp/tmp1eq8bzlh.jl:26\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1eq8bzlh.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eq8bzlh.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp1eq8bzlh.jl:8\n   [3] top-level scope at /tmp/tmp1eq8bzlh.jl:27\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1eq8bzlh.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eq8bzlh.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp1eq8bzlh.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp1eq8bzlh.jl:28\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1eq8bzlh.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eq8bzlh.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp1eq8bzlh.jl:8\n\
    \   [3] top-level scope at /tmp/tmp1eq8bzlh.jl:29\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp1eq8bzlh.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1eq8bzlh.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpp3z8gjc5.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp3z8gjc5.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp3z8gjc5.jl:16\\ntest set: Test Failed at /tmp/tmpp3z8gjc5.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpp3z8gjc5.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp3z8gjc5.jl:16\\ntest set: Test Failed at /tmp/tmpp3z8gjc5.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpp3z8gjc5.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpp3z8gjc5.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprqlxtloj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprqlxtloj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprqlxtloj.jl:16\ntest set: Test Failed at /tmp/tmprqlxtloj.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprqlxtloj.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprqlxtloj.jl:16\ntest set: Test Failed at /tmp/tmprqlxtloj.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprqlxtloj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprqlxtloj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprqlxtloj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3o6h1vnc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3o6h1vnc.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3o6h1vnc.jl:16\ntest set: Test Failed at /tmp/tmp3o6h1vnc.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3o6h1vnc.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3o6h1vnc.jl:16\ntest set: Test Failed at /tmp/tmp3o6h1vnc.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3o6h1vnc.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3o6h1vnc.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3o6h1vnc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpszfceshz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpszfceshz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpszfceshz.jl:16\ntest set: Test Failed at /tmp/tmpszfceshz.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpszfceshz.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpszfceshz.jl:16\ntest set: Test Failed at /tmp/tmpszfceshz.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpszfceshz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpszfceshz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpszfceshz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    nums = join(nums, \" \")\n    return nums\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6a0rrjfs.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6a0rrjfs.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6a0rrjfs.jl:17\ntest set: Test Failed at /tmp/tmp6a0rrjfs.jl:21\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6a0rrjfs.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6a0rrjfs.jl:17\ntest set: Test Failed at /tmp/tmp6a0rrjfs.jl:22\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6a0rrjfs.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6a0rrjfs.jl:17\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6a0rrjfs.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprpdtg65i.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprpdtg65i.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpdtg65i.jl:16\ntest set: Test Failed at /tmp/tmprpdtg65i.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprpdtg65i.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpdtg65i.jl:16\ntest set: Test Failed at /tmp/tmprpdtg65i.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprpdtg65i.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprpdtg65i.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprpdtg65i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptpq5_4m0.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmptpq5_4m0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptpq5_4m0.jl:16\ntest set: Test Failed at /tmp/tmptpq5_4m0.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmptpq5_4m0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptpq5_4m0.jl:16\ntest set: Test Failed at /tmp/tmptpq5_4m0.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmptpq5_4m0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptpq5_4m0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptpq5_4m0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcpsdz6va.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcpsdz6va.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcpsdz6va.jl:16\\ntest set: Test Failed at /tmp/tmpcpsdz6va.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcpsdz6va.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcpsdz6va.jl:16\\ntest set: Test Failed at /tmp/tmpcpsdz6va.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpcpsdz6va.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcpsdz6va.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    nums = sort(nums)\n    nums = map(x\
    \ -> string(x), nums)\n    nums = join(nums, \" \")\n    return nums\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpe1c7edzi.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at /tmp/tmpe1c7edzi.jl:9\
    \ [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n   [6] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar at ./array.jl:607\
    \ [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n   [9] sort_numbers(::String)\
    \ at /tmp/tmpe1c7edzi.jl:9\n   [10] top-level scope at /tmp/tmpe1c7edzi.jl:21\n\
    \   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpe1c7edzi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1c7edzi.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at /tmp/tmpe1c7edzi.jl:9 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},var\"\
    #3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [9] sort_numbers(::String) at /tmp/tmpe1c7edzi.jl:9\n   [10] top-level scope\
    \ at /tmp/tmpe1c7edzi.jl:22\n   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpe1c7edzi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1c7edzi.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at /tmp/tmpe1c7edzi.jl:9\
    \ [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n   [6] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar at ./array.jl:607\
    \ [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n   [9] sort_numbers(::String)\
    \ at /tmp/tmpe1c7edzi.jl:9\n   [10] top-level scope at /tmp/tmpe1c7edzi.jl:23\n\
    \   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpe1c7edzi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpe1c7edzi.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at /tmp/tmpe1c7edzi.jl:9 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},var\"\
    #3#5\"}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [7] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [8] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [9] sort_numbers(::String) at /tmp/tmpe1c7edzi.jl:9\n   [10] top-level scope\
    \ at /tmp/tmpe1c7edzi.jl:24\n   [11] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [12] top-level scope at /tmp/tmpe1c7edzi.jl:19\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1c7edzi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpff0f0lm1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpff0f0lm1.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff0f0lm1.jl:16\ntest set: Test Failed at /tmp/tmpff0f0lm1.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpff0f0lm1.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff0f0lm1.jl:16\ntest set: Test Failed at /tmp/tmpff0f0lm1.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpff0f0lm1.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpff0f0lm1.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpff0f0lm1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9y3k5i_b.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9y3k5i_b.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y3k5i_b.jl:16\ntest set: Test Failed at /tmp/tmp9y3k5i_b.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9y3k5i_b.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y3k5i_b.jl:16\ntest set: Test Failed at /tmp/tmp9y3k5i_b.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9y3k5i_b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9y3k5i_b.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9y3k5i_b.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of words\n    words = split(numbers)\n    # Convert the words\
    \ to numbers\n    numbers = [word2num(word) for word in words]\n    # Sort the\
    \ numbers\n    sorted_numbers = sort(numbers)\n    # Convert the numbers back\
    \ to words\n    words = [num2word(num) for num in sorted_numbers]\n    # Join\
    \ the words back into a string\n    return join(words)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfig9b1ju.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpfig9b1ju.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpfig9b1ju.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfig9b1ju.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfig9b1ju.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmpfig9b1ju.jl:11\n   [2] top-level scope\
    \ at /tmp/tmpfig9b1ju.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfig9b1ju.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfig9b1ju.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpfig9b1ju.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpfig9b1ju.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfig9b1ju.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfig9b1ju.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpfig9b1ju.jl:11\n\
    \   [2] top-level scope at /tmp/tmpfig9b1ju.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfig9b1ju.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfig9b1ju.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpfig9b1ju.jl:11\n   [2] top-level scope at /tmp/tmpfig9b1ju.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfig9b1ju.jl:23\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfig9b1ju.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    sort!(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgq7sqypz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgq7sqypz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgq7sqypz.jl:16\ntest set: Test Failed at /tmp/tmpgq7sqypz.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgq7sqypz.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgq7sqypz.jl:16\ntest set: Test Failed at /tmp/tmpgq7sqypz.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpgq7sqypz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgq7sqypz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgq7sqypz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcdbxq2a3.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcdbxq2a3.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdbxq2a3.jl:16\ntest set: Test Failed at /tmp/tmpcdbxq2a3.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcdbxq2a3.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdbxq2a3.jl:16\ntest set: Test Failed at /tmp/tmpcdbxq2a3.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpcdbxq2a3.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdbxq2a3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcdbxq2a3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwl6mn3jp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwl6mn3jp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwl6mn3jp.jl:16\ntest set: Test Failed at /tmp/tmpwl6mn3jp.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwl6mn3jp.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwl6mn3jp.jl:16\ntest set: Test Failed at /tmp/tmpwl6mn3jp.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwl6mn3jp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwl6mn3jp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwl6mn3jp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbhoxl0kp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbhoxl0kp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhoxl0kp.jl:16\ntest set: Test Failed at /tmp/tmpbhoxl0kp.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbhoxl0kp.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhoxl0kp.jl:16\ntest set: Test Failed at /tmp/tmpbhoxl0kp.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbhoxl0kp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhoxl0kp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhoxl0kp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpc6czu9kk.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmpc6czu9kk.jl:9\n   [2] top-level scope\
    \ at /tmp/tmpc6czu9kk.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc6czu9kk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpc6czu9kk.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]\
    \ sort_numbers(::String) at /tmp/tmpc6czu9kk.jl:9\n   [2] top-level scope at /tmp/tmpc6czu9kk.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc6czu9kk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpc6czu9kk.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpc6czu9kk.jl:9\n   [2]\
    \ top-level scope at /tmp/tmpc6czu9kk.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc6czu9kk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpc6czu9kk.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ int not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpc6czu9kk.jl:9\n\
    \   [2] top-level scope at /tmp/tmpc6czu9kk.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc6czu9kk.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpc6czu9kk.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpc6czu9kk.jl:9\n   [2] top-level scope at /tmp/tmpc6czu9kk.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc6czu9kk.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6czu9kk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp23cyw902.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp23cyw902.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23cyw902.jl:14\ntest set: Test Failed at /tmp/tmp23cyw902.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp23cyw902.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23cyw902.jl:14\ntest set: Test Failed at /tmp/tmp23cyw902.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp23cyw902.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23cyw902.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23cyw902.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeuwy31sx.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpeuwy31sx.jl:11\n   [14] top-level scope at /tmp/tmpeuwy31sx.jl:25\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpeuwy31sx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpeuwy31sx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpeuwy31sx.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpeuwy31sx.jl:26\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpeuwy31sx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpeuwy31sx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpeuwy31sx.jl:11\n   [14] top-level scope at /tmp/tmpeuwy31sx.jl:27\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpeuwy31sx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpeuwy31sx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpeuwy31sx.jl:11\n   [14] top-level scope at /tmp/tmpeuwy31sx.jl:28\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpeuwy31sx.jl:23\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeuwy31sx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm7t3vud3.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm7t3vud3.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7t3vud3.jl:16\ntest set: Test Failed at /tmp/tmpm7t3vud3.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm7t3vud3.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7t3vud3.jl:16\ntest set: Test Failed at /tmp/tmpm7t3vud3.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpm7t3vud3.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm7t3vud3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7t3vud3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb1y6570c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1y6570c.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1y6570c.jl:16\ntest set: Test Failed at /tmp/tmpb1y6570c.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1y6570c.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1y6570c.jl:16\ntest set: Test Failed at /tmp/tmpb1y6570c.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb1y6570c.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb1y6570c.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1y6570c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    num_list = join(num_list, \" \")\n \
    \   return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplzg5zc7p.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmplzg5zc7p.jl:8\n   [3] top-level scope at /tmp/tmplzg5zc7p.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplzg5zc7p.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmplzg5zc7p.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmplzg5zc7p.jl:8\n   [3] top-level scope at /tmp/tmplzg5zc7p.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplzg5zc7p.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmplzg5zc7p.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmplzg5zc7p.jl:8\n   [3] top-level scope at /tmp/tmplzg5zc7p.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplzg5zc7p.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmplzg5zc7p.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmplzg5zc7p.jl:8\n  \
    \ [3] top-level scope at /tmp/tmplzg5zc7p.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplzg5zc7p.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmplzg5zc7p.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmplzg5zc7p.jl:8\n\
    \   [3] top-level scope at /tmp/tmplzg5zc7p.jl:22\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmplzg5zc7p.jl:17\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzg5zc7p.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_dict = Dict()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"] = 1\n\
    \    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"four\"\
    ] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = map(num_dict, num_list)\n    num_list = sort(num_list)\n    num_list = map(num_dict,\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk8xg1hmv.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  MethodError: objects of type\
    \ Dict{Any,Any} are not callable\n  Stacktrace:\n   [1] iterate at ./generator.jl:47\
    \ [inlined]\n   [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},Dict{Any,Any}},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] sort_numbers(::String) at /tmp/tmpk8xg1hmv.jl:20\n   [6] top-level scope\
    \ at /tmp/tmpk8xg1hmv.jl:31\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpk8xg1hmv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk8xg1hmv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  MethodError: objects of type Dict{Any,Any}\
    \ are not callable\n  Stacktrace:\n   [1] iterate at ./generator.jl:47 [inlined]\n\
    \   [2] _collect(::Array{SubString{String},1}, ::Base.Generator{Array{SubString{String},1},Dict{Any,Any}},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [5] sort_numbers(::String) at /tmp/tmpk8xg1hmv.jl:20\n   [6] top-level scope\
    \ at /tmp/tmpk8xg1hmv.jl:32\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpk8xg1hmv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk8xg1hmv.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  MethodError:\
    \ objects of type Dict{Any,Any} are not callable\n  Stacktrace:\n   [1] iterate\
    \ at ./generator.jl:47 [inlined]\n   [2] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},Dict{Any,Any}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar at ./array.jl:607\
    \ [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n   [5] sort_numbers(::String)\
    \ at /tmp/tmpk8xg1hmv.jl:20\n   [6] top-level scope at /tmp/tmpk8xg1hmv.jl:33\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpk8xg1hmv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpk8xg1hmv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  MethodError: objects of type Dict{Any,Any} are not callable\n  Stacktrace:\n\
    \   [1] iterate at ./generator.jl:47 [inlined]\n   [2] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},Dict{Any,Any}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [3] collect_similar at ./array.jl:607\
    \ [inlined]\n   [4] map at ./abstractarray.jl:2072 [inlined]\n   [5] sort_numbers(::String)\
    \ at /tmp/tmpk8xg1hmv.jl:20\n   [6] top-level scope at /tmp/tmpk8xg1hmv.jl:34\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpk8xg1hmv.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk8xg1hmv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc4v7i9n3.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc4v7i9n3.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4v7i9n3.jl:16\ntest set: Test Failed at /tmp/tmpc4v7i9n3.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc4v7i9n3.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4v7i9n3.jl:16\ntest set: Test Failed at /tmp/tmpc4v7i9n3.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc4v7i9n3.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc4v7i9n3.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc4v7i9n3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8l2n2y51.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8l2n2y51.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8l2n2y51.jl:14\ntest set: Test Failed at /tmp/tmp8l2n2y51.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8l2n2y51.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8l2n2y51.jl:14\ntest set: Test Failed at /tmp/tmp8l2n2y51.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8l2n2y51.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8l2n2y51.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8l2n2y51.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a list of words\n    words = split(numbers)\n    # convert the words to\
    \ numbers\n    numbers = [word2num(w) for w in words]\n    # sort the numbers\n\
    \    sorted_numbers = sort(numbers)\n    # convert the numbers back to words\n\
    \    sorted_words = [num2word(n) for n in sorted_numbers]\n    # join the words\
    \ back into a string\n    sorted_numbers = join(sorted_words, \" \")\n    return\
    \ sorted_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc0znhze5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpc0znhze5.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpc0znhze5.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0znhze5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0znhze5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmpc0znhze5.jl:11\n   [2] top-level scope\
    \ at /tmp/tmpc0znhze5.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0znhze5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0znhze5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpc0znhze5.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpc0znhze5.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0znhze5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0znhze5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpc0znhze5.jl:11\n\
    \   [2] top-level scope at /tmp/tmpc0znhze5.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0znhze5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0znhze5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpc0znhze5.jl:11\n   [2] top-level scope at /tmp/tmpc0znhze5.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0znhze5.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc0znhze5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into an array of numbers\n    nums = split(numbers)\n    # convert the words\
    \ to numbers\n    nums = [word2num(n) for n in nums]\n    # sort the numbers\n\
    \    sort!(nums)\n    # convert the numbers back to words\n    nums = [num2word(n)\
    \ for n in nums]\n    # join the words back into a string\n    return join(nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpp9vx8r4a.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpp9vx8r4a.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpp9vx8r4a.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9vx8r4a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9vx8r4a.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(::String) at /tmp/tmpp9vx8r4a.jl:11\n   [2] top-level scope\
    \ at /tmp/tmpp9vx8r4a.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9vx8r4a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9vx8r4a.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpp9vx8r4a.jl:11\n   [2]\
    \ top-level scope at /tmp/tmpp9vx8r4a.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9vx8r4a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9vx8r4a.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmpp9vx8r4a.jl:11\n\
    \   [2] top-level scope at /tmp/tmpp9vx8r4a.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9vx8r4a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9vx8r4a.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpp9vx8r4a.jl:11\n   [2] top-level scope at /tmp/tmpp9vx8r4a.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9vx8r4a.jl:23\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9vx8r4a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9xjhjgxw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9xjhjgxw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9xjhjgxw.jl:16\ntest set: Test Failed at /tmp/tmp9xjhjgxw.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9xjhjgxw.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9xjhjgxw.jl:16\ntest set: Test Failed at /tmp/tmp9xjhjgxw.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp9xjhjgxw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9xjhjgxw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9xjhjgxw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeu9f7uin.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpeu9f7uin.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu9f7uin.jl:16\ntest set: Test Failed at /tmp/tmpeu9f7uin.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpeu9f7uin.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu9f7uin.jl:16\ntest set: Test Failed at /tmp/tmpeu9f7uin.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpeu9f7uin.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeu9f7uin.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeu9f7uin.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfxymwcyd.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfxymwcyd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfxymwcyd.jl:16\ntest set: Test Failed at /tmp/tmpfxymwcyd.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfxymwcyd.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfxymwcyd.jl:16\ntest set: Test Failed at /tmp/tmpfxymwcyd.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfxymwcyd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfxymwcyd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfxymwcyd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpyqq9iijd.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyqq9iijd.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqq9iijd.jl:16\ntest set: Test Failed at /tmp/tmpyqq9iijd.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyqq9iijd.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqq9iijd.jl:16\ntest set: Test Failed at /tmp/tmpyqq9iijd.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyqq9iijd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyqq9iijd.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyqq9iijd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt1b53hsw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpt1b53hsw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1b53hsw.jl:16\ntest set: Test Failed at /tmp/tmpt1b53hsw.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpt1b53hsw.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1b53hsw.jl:16\ntest set: Test Failed at /tmp/tmpt1b53hsw.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpt1b53hsw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1b53hsw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1b53hsw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmaub025a.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmaub025a.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmaub025a.jl:16\ntest set: Test Failed at /tmp/tmpmaub025a.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmaub025a.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmaub025a.jl:16\ntest set: Test Failed at /tmp/tmpmaub025a.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpmaub025a.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmaub025a.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmaub025a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2m3j169h.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2m3j169h.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2m3j169h.jl:14\ntest set: Test Failed at /tmp/tmp2m3j169h.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2m3j169h.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2m3j169h.jl:14\ntest set: Test Failed at /tmp/tmp2m3j169h.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2m3j169h.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2m3j169h.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2m3j169h.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnjtlen4y.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjtlen4y.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjtlen4y.jl:16\ntest set: Test Failed at /tmp/tmpnjtlen4y.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjtlen4y.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjtlen4y.jl:16\ntest set: Test Failed at /tmp/tmpnjtlen4y.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjtlen4y.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjtlen4y.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjtlen4y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    sort!(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1igj6f8q.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1igj6f8q.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1igj6f8q.jl:16\ntest set: Test Failed at /tmp/tmp1igj6f8q.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1igj6f8q.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1igj6f8q.jl:16\ntest set: Test Failed at /tmp/tmp1igj6f8q.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1igj6f8q.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1igj6f8q.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1igj6f8q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    num_list\
    \ = split(numbers, \" \")\n    num_list = map(x -> num_dict[x], num_list)\n  \
    \  num_list = sort(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_mieu6ak.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] #3 at /tmp/tmp_mieu6ak.jl:10\
    \ [inlined]\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{SubString{String},1},\
    \ ::Base.Generator{Array{SubString{String},1},var\"#3#5\"{Dict{String,Int64}}},\
    \ ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar\
    \ at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n\
    \   [7] sort_numbers(::String) at /tmp/tmp_mieu6ak.jl:10\n   [8] top-level scope\
    \ at /tmp/tmp_mieu6ak.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_mieu6ak.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mieu6ak.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n   [1] getindex\
    \ at ./dict.jl:477 [inlined]\n   [2] #4 at /tmp/tmp_mieu6ak.jl:12 [inlined]\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1},\
    \ ::Base.Generator{Array{Int64,1},var\"#4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar at ./array.jl:607\
    \ [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmp_mieu6ak.jl:12\n   [8] top-level scope at /tmp/tmp_mieu6ak.jl:21\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_mieu6ak.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mieu6ak.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] #4 at /tmp/tmp_mieu6ak.jl:12\
    \ [inlined]\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1},\
    \ ::Base.Generator{Array{Int64,1},var\"#4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown,\
    \ ::Base.HasShape{1}) at ./array.jl:678\n   [5] collect_similar at ./array.jl:607\
    \ [inlined]\n   [6] map at ./abstractarray.jl:2072 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmp_mieu6ak.jl:12\n   [8] top-level scope at /tmp/tmp_mieu6ak.jl:22\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_mieu6ak.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mieu6ak.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  KeyError:\
    \ key 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477 [inlined]\n\
    \   [2] #4 at /tmp/tmp_mieu6ak.jl:12 [inlined]\n   [3] iterate at ./generator.jl:47\
    \ [inlined]\n   [4] _collect(::Array{Int64,1}, ::Base.Generator{Array{Int64,1},var\"\
    #4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n\
    \   [5] collect_similar at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072\
    \ [inlined]\n   [7] sort_numbers(::String) at /tmp/tmp_mieu6ak.jl:12\n   [8] top-level\
    \ scope at /tmp/tmp_mieu6ak.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_mieu6ak.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mieu6ak.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  KeyError: key 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477\
    \ [inlined]\n   [2] #4 at /tmp/tmp_mieu6ak.jl:12 [inlined]\n   [3] iterate at\
    \ ./generator.jl:47 [inlined]\n   [4] _collect(::Array{Int64,1}, ::Base.Generator{Array{Int64,1},var\"\
    #4#6\"{Dict{String,Int64}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:678\n\
    \   [5] collect_similar at ./array.jl:607 [inlined]\n   [6] map at ./abstractarray.jl:2072\
    \ [inlined]\n   [7] sort_numbers(::String) at /tmp/tmp_mieu6ak.jl:12\n   [8] top-level\
    \ scope at /tmp/tmp_mieu6ak.jl:24\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp_mieu6ak.jl:19\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mieu6ak.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list.sort()\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5g3pfto3.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp5g3pfto3.jl:8\n   [3] top-level scope at /tmp/tmp5g3pfto3.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5g3pfto3.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp5g3pfto3.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp5g3pfto3.jl:8\n   [3] top-level scope at /tmp/tmp5g3pfto3.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5g3pfto3.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp5g3pfto3.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp5g3pfto3.jl:8\n   [3] top-level scope at /tmp/tmp5g3pfto3.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5g3pfto3.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp5g3pfto3.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp5g3pfto3.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp5g3pfto3.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5g3pfto3.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp5g3pfto3.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp5g3pfto3.jl:8\n\
    \   [3] top-level scope at /tmp/tmp5g3pfto3.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp5g3pfto3.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5g3pfto3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(x) for x in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(x) for x in nums_int_sorted]\n    return \" \".join(nums_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd5x6rlo6.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: int not\
    \ defined\\n  Stacktrace:\\n   [1] sort_numbers(::String) at /tmp/tmpd5x6rlo6.jl:9\\\
    n   [2] top-level scope at /tmp/tmpd5x6rlo6.jl:19\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd5x6rlo6.jl:18\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd5x6rlo6.jl:20\\n  Test threw exception\\n  Expression: candidate(\"\
    three\") == \"three\"\\n  UndefVarError: int not defined\\n  Stacktrace:\\n  \
    \ [1] sort_numbers(::String) at /tmp/tmpd5x6rlo6.jl:9\\n   [2] top-level scope\
    \ at /tmp/tmpd5x6rlo6.jl:20\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd5x6rlo6.jl:18\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd5x6rlo6.jl:21\\n  Test threw exception\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n  UndefVarError: int not defined\\\
    n  Stacktrace:\\n   [1] sort_numbers(::String) at /tmp/tmpd5x6rlo6.jl:9\\n   [2]\
    \ top-level scope at /tmp/tmpd5x6rlo6.jl:21\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd5x6rlo6.jl:18\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd5x6rlo6.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\\n \
    \ UndefVarError: int not defined\\n  Stacktrace:\\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpd5x6rlo6.jl:9\\n   [2] top-level scope at /tmp/tmpd5x6rlo6.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd5x6rlo6.jl:18\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd5x6rlo6.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\\\
    n  UndefVarError: int not defined\\n  Stacktrace:\\n   [1] sort_numbers(::String)\
    \ at /tmp/tmpd5x6rlo6.jl:9\\n   [2] top-level scope at /tmp/tmpd5x6rlo6.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd5x6rlo6.jl:18\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1v1kwv9o.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp1v1kwv9o.jl:9\n\
    \   [8] top-level scope at /tmp/tmp1v1kwv9o.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp1v1kwv9o.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1v1kwv9o.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp1v1kwv9o.jl:9\n\
    \   [8] top-level scope at /tmp/tmp1v1kwv9o.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp1v1kwv9o.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1v1kwv9o.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp1v1kwv9o.jl:9\n\
    \   [8] top-level scope at /tmp/tmp1v1kwv9o.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp1v1kwv9o.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp1v1kwv9o.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp1v1kwv9o.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp1v1kwv9o.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp1v1kwv9o.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1v1kwv9o.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukhyv0d9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpukhyv0d9.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukhyv0d9.jl:16\ntest set: Test Failed at /tmp/tmpukhyv0d9.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpukhyv0d9.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukhyv0d9.jl:16\ntest set: Test Failed at /tmp/tmpukhyv0d9.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpukhyv0d9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukhyv0d9.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukhyv0d9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpncit40bb.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpncit40bb.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncit40bb.jl:16\ntest set: Test Failed at /tmp/tmpncit40bb.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpncit40bb.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncit40bb.jl:16\ntest set: Test Failed at /tmp/tmpncit40bb.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpncit40bb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpncit40bb.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpncit40bb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd4hq_9sq.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd4hq_9sq.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd4hq_9sq.jl:16\ntest set: Test Failed at /tmp/tmpd4hq_9sq.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd4hq_9sq.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd4hq_9sq.jl:16\ntest set: Test Failed at /tmp/tmpd4hq_9sq.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd4hq_9sq.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd4hq_9sq.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4hq_9sq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[x] for x in nums]\n    sort!(nums_int)\n\
    \    nums_str = [key for (key, value) in nums_dict if value in nums_int]\n   \
    \ return join(nums_str, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16cgjdzu.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16cgjdzu.jl:22\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16cgjdzu.jl:19\ntest set: Test Failed at /tmp/tmp16cgjdzu.jl:23\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"zero four eight nine five seven\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16cgjdzu.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16cgjdzu.jl:19\ntest set: Test Failed at /tmp/tmp16cgjdzu.jl:24\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"zero two four six one three five\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16cgjdzu.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16cgjdzu.jl:19\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16cgjdzu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc0cyss3q.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc0cyss3q.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc0cyss3q.jl:16\ntest set: Test Failed at /tmp/tmpc0cyss3q.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc0cyss3q.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc0cyss3q.jl:16\ntest set: Test Failed at /tmp/tmpc0cyss3q.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc0cyss3q.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc0cyss3q.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc0cyss3q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict()\n    for num in nums\n        nums_dict[num] = get_number(num)\n\
    \    end\n    sorted_nums = sort(collect(keys(nums_dict)))\n    return join(sorted_nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp47fkv03q.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: get_number\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmp47fkv03q.jl:11\n\
    \   [2] top-level scope at /tmp/tmp47fkv03q.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47fkv03q.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp47fkv03q.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  UndefVarError: get_number not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmp47fkv03q.jl:11\n   [2]\
    \ top-level scope at /tmp/tmp47fkv03q.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47fkv03q.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp47fkv03q.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  UndefVarError:\
    \ get_number not defined\n  Stacktrace:\n   [1] sort_numbers(::String) at /tmp/tmp47fkv03q.jl:11\n\
    \   [2] top-level scope at /tmp/tmp47fkv03q.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47fkv03q.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp47fkv03q.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  UndefVarError: get_number not defined\n  Stacktrace:\n   [1] sort_numbers(::String)\
    \ at /tmp/tmp47fkv03q.jl:11\n   [2] top-level scope at /tmp/tmp47fkv03q.jl:25\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47fkv03q.jl:20\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47fkv03q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp86smn1wr.jl:17\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  type String has no field\
    \ split\\n  Stacktrace:\\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\\
    n   [2] sort_numbers(::String) at /tmp/tmp86smn1wr.jl:8\\n   [3] top-level scope\
    \ at /tmp/tmp86smn1wr.jl:17\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp86smn1wr.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp86smn1wr.jl:18\\n  Test threw exception\\n  Expression: candidate(\"\
    three\") == \"three\"\\n  type String has no field split\\n  Stacktrace:\\n  \
    \ [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp86smn1wr.jl:8\\n   [3] top-level scope at /tmp/tmp86smn1wr.jl:18\\\
    n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp86smn1wr.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp86smn1wr.jl:19\\n  Test threw exception\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n  type String has no field split\\\
    n  Stacktrace:\\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp86smn1wr.jl:8\\n   [3] top-level scope at\
    \ /tmp/tmp86smn1wr.jl:19\\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp86smn1wr.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp86smn1wr.jl:20\\n  Test threw exception\\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\\n \
    \ type String has no field split\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String) at /tmp/tmp86smn1wr.jl:8\\\
    n   [3] top-level scope at /tmp/tmp86smn1wr.jl:20\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp86smn1wr.jl:16\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp86smn1wr.jl:21\\n  Test threw exception\\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\\\
    n  type String has no field split\\n  Stacktrace:\\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\\n   [2] sort_numbers(::String) at /tmp/tmp86smn1wr.jl:8\\\
    n   [3] top-level scope at /tmp/tmp86smn1wr.jl:21\\n   [4] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [5] top-level scope at /tmp/tmp86smn1wr.jl:16\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxedcp1s0.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpxedcp1s0.jl:8\n   [3] top-level scope at /tmp/tmpxedcp1s0.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxedcp1s0.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxedcp1s0.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpxedcp1s0.jl:8\n   [3] top-level scope at /tmp/tmpxedcp1s0.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxedcp1s0.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxedcp1s0.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpxedcp1s0.jl:8\n   [3] top-level scope at /tmp/tmpxedcp1s0.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxedcp1s0.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxedcp1s0.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpxedcp1s0.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpxedcp1s0.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxedcp1s0.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpxedcp1s0.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpxedcp1s0.jl:8\n\
    \   [3] top-level scope at /tmp/tmpxedcp1s0.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpxedcp1s0.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxedcp1s0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3qw8to08.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3qw8to08.jl:17\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qw8to08.jl:14\ntest set: Test Failed at /tmp/tmp3qw8to08.jl:18\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3qw8to08.jl:18\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qw8to08.jl:14\ntest set: Test Failed at /tmp/tmp3qw8to08.jl:19\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp3qw8to08.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qw8to08.jl:14\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qw8to08.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdxcwl9k9.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpdxcwl9k9.jl:8\n   [3] top-level scope at /tmp/tmpdxcwl9k9.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdxcwl9k9.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpdxcwl9k9.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpdxcwl9k9.jl:8\n   [3] top-level scope at /tmp/tmpdxcwl9k9.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdxcwl9k9.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpdxcwl9k9.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpdxcwl9k9.jl:8\n   [3] top-level scope at /tmp/tmpdxcwl9k9.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdxcwl9k9.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpdxcwl9k9.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpdxcwl9k9.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpdxcwl9k9.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdxcwl9k9.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpdxcwl9k9.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpdxcwl9k9.jl:8\n\
    \   [3] top-level scope at /tmp/tmpdxcwl9k9.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpdxcwl9k9.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxcwl9k9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfzlwj3pm.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfzlwj3pm.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfzlwj3pm.jl:16\ntest set: Test Failed at /tmp/tmpfzlwj3pm.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfzlwj3pm.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfzlwj3pm.jl:16\ntest set: Test Failed at /tmp/tmpfzlwj3pm.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfzlwj3pm.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfzlwj3pm.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfzlwj3pm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4wkf5lc0.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4wkf5lc0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wkf5lc0.jl:16\ntest set: Test Failed at /tmp/tmp4wkf5lc0.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4wkf5lc0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wkf5lc0.jl:16\ntest set: Test Failed at /tmp/tmp4wkf5lc0.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4wkf5lc0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wkf5lc0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4wkf5lc0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_mg8_qfi.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_mg8_qfi.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mg8_qfi.jl:16\ntest set: Test Failed at /tmp/tmp_mg8_qfi.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_mg8_qfi.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mg8_qfi.jl:16\ntest set: Test Failed at /tmp/tmp_mg8_qfi.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_mg8_qfi.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mg8_qfi.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mg8_qfi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppozc8_co.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppozc8_co.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppozc8_co.jl:16\ntest set: Test Failed at /tmp/tmppozc8_co.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppozc8_co.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppozc8_co.jl:16\ntest set: Test Failed at /tmp/tmppozc8_co.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmppozc8_co.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppozc8_co.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppozc8_co.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppklj17yj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppklj17yj.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppklj17yj.jl:16\ntest set: Test Failed at /tmp/tmppklj17yj.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmppklj17yj.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppklj17yj.jl:16\ntest set: Test Failed at /tmp/tmppklj17yj.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmppklj17yj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppklj17yj.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppklj17yj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdy7_dq_t.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdy7_dq_t.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdy7_dq_t.jl:16\ntest set: Test Failed at /tmp/tmpdy7_dq_t.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdy7_dq_t.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdy7_dq_t.jl:16\ntest set: Test Failed at /tmp/tmpdy7_dq_t.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdy7_dq_t.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdy7_dq_t.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdy7_dq_t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_dict = Dict()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"\
    ] = 1\n    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"\
    four\"] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = sort(num_list, by=num_dict)\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7znz91gc.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n  MethodError:\
    \ objects of type Dict{Any,Any} are not callable\n  Stacktrace:\n   [1] lt(::Base.Order.By{Dict{Any,Any}},\
    \ ::SubString{String}, ::SubString{String}) at ./ordering.jl:52\n   [2] sort!\
    \ at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1}, ::Int64,\
    \ ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{Any,Any}}, ::Array{SubString{String},1})\
    \ at ./sort.jl:565\n   [4] sort! at ./sort.jl:564 [inlined]\n   [5] sort! at ./sort.jl:655\
    \ [inlined]\n   [6] #sort!#7 at ./sort.jl:715 [inlined]\n   [7] #sort#8 at ./sort.jl:763\
    \ [inlined]\n   [8] sort_numbers(::String) at /tmp/tmp7znz91gc.jl:20\n   [9] top-level\
    \ scope at /tmp/tmp7znz91gc.jl:30\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp7znz91gc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp7znz91gc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  MethodError:\
    \ objects of type Dict{Any,Any} are not callable\n  Stacktrace:\n   [1] lt(::Base.Order.By{Dict{Any,Any}},\
    \ ::SubString{String}, ::SubString{String}) at ./ordering.jl:52\n   [2] sort!\
    \ at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1}, ::Int64,\
    \ ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{Any,Any}}, ::Array{SubString{String},1})\
    \ at ./sort.jl:565\n   [4] sort! at ./sort.jl:564 [inlined]\n   [5] sort! at ./sort.jl:655\
    \ [inlined]\n   [6] #sort!#7 at ./sort.jl:715 [inlined]\n   [7] #sort#8 at ./sort.jl:763\
    \ [inlined]\n   [8] sort_numbers(::String) at /tmp/tmp7znz91gc.jl:20\n   [9] top-level\
    \ scope at /tmp/tmp7znz91gc.jl:31\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp7znz91gc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp7znz91gc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  MethodError: objects of type Dict{Any,Any} are not callable\n  Stacktrace:\n\
    \   [1] lt(::Base.Order.By{Dict{Any,Any}}, ::SubString{String}, ::SubString{String})\
    \ at ./ordering.jl:52\n   [2] sort! at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1},\
    \ ::Int64, ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{Any,Any}},\
    \ ::Array{SubString{String},1}) at ./sort.jl:565\n   [4] sort! at ./sort.jl:564\
    \ [inlined]\n   [5] sort! at ./sort.jl:655 [inlined]\n   [6] #sort!#7 at ./sort.jl:715\
    \ [inlined]\n   [7] #sort#8 at ./sort.jl:763 [inlined]\n   [8] sort_numbers(::String)\
    \ at /tmp/tmp7znz91gc.jl:20\n   [9] top-level scope at /tmp/tmp7znz91gc.jl:32\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmp7znz91gc.jl:27\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    2      3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7znz91gc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0_z9fq3_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_z9fq3_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_z9fq3_.jl:16\ntest set: Test Failed at /tmp/tmp0_z9fq3_.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_z9fq3_.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_z9fq3_.jl:16\ntest set: Test Failed at /tmp/tmp0_z9fq3_.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0_z9fq3_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0_z9fq3_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0_z9fq3_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphww5bmaq.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmphww5bmaq.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphww5bmaq.jl:16\\ntest set: Test Failed at /tmp/tmphww5bmaq.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmphww5bmaq.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphww5bmaq.jl:16\\ntest set: Test Failed at /tmp/tmphww5bmaq.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmphww5bmaq.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphww5bmaq.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4rr21kaf.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp4rr21kaf.jl:8\n   [3] top-level scope at /tmp/tmp4rr21kaf.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4rr21kaf.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rr21kaf.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp4rr21kaf.jl:8\n   [3] top-level scope at /tmp/tmp4rr21kaf.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4rr21kaf.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rr21kaf.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp4rr21kaf.jl:8\n   [3] top-level scope at /tmp/tmp4rr21kaf.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4rr21kaf.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rr21kaf.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp4rr21kaf.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp4rr21kaf.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4rr21kaf.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp4rr21kaf.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp4rr21kaf.jl:8\n\
    \   [3] top-level scope at /tmp/tmp4rr21kaf.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4rr21kaf.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4rr21kaf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpg15po_h4.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpg15po_h4.jl:8\n   [3] top-level scope at /tmp/tmpg15po_h4.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg15po_h4.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg15po_h4.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpg15po_h4.jl:8\n   [3] top-level scope at /tmp/tmpg15po_h4.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg15po_h4.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg15po_h4.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpg15po_h4.jl:8\n   [3] top-level scope at /tmp/tmpg15po_h4.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg15po_h4.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg15po_h4.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpg15po_h4.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpg15po_h4.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg15po_h4.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpg15po_h4.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpg15po_h4.jl:8\n\
    \   [3] top-level scope at /tmp/tmpg15po_h4.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpg15po_h4.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg15po_h4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgmap7l48.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgmap7l48.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgmap7l48.jl:16\\ntest set: Test Failed at /tmp/tmpgmap7l48.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgmap7l48.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgmap7l48.jl:16\\ntest set: Test Failed at /tmp/tmpgmap7l48.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpgmap7l48.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgmap7l48.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n       \
    \ \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"five\"\
    \ => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" =>\
    \ 8,\n        \"nine\" => 9\n    )\n    num_list = sort(num_list, by=num_dict)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppdcq3zal.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n  MethodError:\
    \ objects of type Dict{String,Int64} are not callable\n  Stacktrace:\n   [1] lt(::Base.Order.By{Dict{String,Int64}},\
    \ ::SubString{String}, ::SubString{String}) at ./ordering.jl:52\n   [2] sort!\
    \ at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1}, ::Int64,\
    \ ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{String,Int64}}, ::Array{SubString{String},1})\
    \ at ./sort.jl:565\n   [4] sort! at ./sort.jl:564 [inlined]\n   [5] sort! at ./sort.jl:655\
    \ [inlined]\n   [6] #sort!#7 at ./sort.jl:715 [inlined]\n   [7] #sort#8 at ./sort.jl:763\
    \ [inlined]\n   [8] sort_numbers(::String) at /tmp/tmppdcq3zal.jl:21\n   [9] top-level\
    \ scope at /tmp/tmppdcq3zal.jl:31\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppdcq3zal.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmppdcq3zal.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  MethodError:\
    \ objects of type Dict{String,Int64} are not callable\n  Stacktrace:\n   [1] lt(::Base.Order.By{Dict{String,Int64}},\
    \ ::SubString{String}, ::SubString{String}) at ./ordering.jl:52\n   [2] sort!\
    \ at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1}, ::Int64,\
    \ ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{String,Int64}}, ::Array{SubString{String},1})\
    \ at ./sort.jl:565\n   [4] sort! at ./sort.jl:564 [inlined]\n   [5] sort! at ./sort.jl:655\
    \ [inlined]\n   [6] #sort!#7 at ./sort.jl:715 [inlined]\n   [7] #sort#8 at ./sort.jl:763\
    \ [inlined]\n   [8] sort_numbers(::String) at /tmp/tmppdcq3zal.jl:21\n   [9] top-level\
    \ scope at /tmp/tmppdcq3zal.jl:32\n   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppdcq3zal.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmppdcq3zal.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  MethodError: objects of type Dict{String,Int64} are not callable\n  Stacktrace:\n\
    \   [1] lt(::Base.Order.By{Dict{String,Int64}}, ::SubString{String}, ::SubString{String})\
    \ at ./ordering.jl:52\n   [2] sort! at ./sort.jl:480 [inlined]\n   [3] sort!(::Array{SubString{String},1},\
    \ ::Int64, ::Int64, ::Base.Sort.MergeSortAlg, ::Base.Order.By{Dict{String,Int64}},\
    \ ::Array{SubString{String},1}) at ./sort.jl:565\n   [4] sort! at ./sort.jl:564\
    \ [inlined]\n   [5] sort! at ./sort.jl:655 [inlined]\n   [6] #sort!#7 at ./sort.jl:715\
    \ [inlined]\n   [7] #sort#8 at ./sort.jl:763 [inlined]\n   [8] sort_numbers(::String)\
    \ at /tmp/tmppdcq3zal.jl:21\n   [9] top-level scope at /tmp/tmppdcq3zal.jl:33\n\
    \   [10] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [11] top-level scope at /tmp/tmppdcq3zal.jl:28\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    2      3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdcq3zal.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpakbruecj.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpakbruecj.jl:8\n   [3] top-level scope at /tmp/tmpakbruecj.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpakbruecj.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpakbruecj.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpakbruecj.jl:8\n   [3] top-level scope at /tmp/tmpakbruecj.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpakbruecj.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpakbruecj.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpakbruecj.jl:8\n   [3] top-level scope at /tmp/tmpakbruecj.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpakbruecj.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpakbruecj.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpakbruecj.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpakbruecj.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpakbruecj.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpakbruecj.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpakbruecj.jl:8\n\
    \   [3] top-level scope at /tmp/tmpakbruecj.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpakbruecj.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakbruecj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_lb5apao.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_lb5apao.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_lb5apao.jl:16\ntest set: Test Failed at /tmp/tmp_lb5apao.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_lb5apao.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_lb5apao.jl:16\ntest set: Test Failed at /tmp/tmp_lb5apao.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp_lb5apao.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_lb5apao.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_lb5apao.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqvdmuqpz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqvdmuqpz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqvdmuqpz.jl:16\ntest set: Test Failed at /tmp/tmpqvdmuqpz.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqvdmuqpz.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqvdmuqpz.jl:16\ntest set: Test Failed at /tmp/tmpqvdmuqpz.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqvdmuqpz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqvdmuqpz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqvdmuqpz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2qv8bjw.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2qv8bjw.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2qv8bjw.jl:16\ntest set: Test Failed at /tmp/tmpc2qv8bjw.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2qv8bjw.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2qv8bjw.jl:16\ntest set: Test Failed at /tmp/tmpc2qv8bjw.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2qv8bjw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2qv8bjw.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2qv8bjw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyg7q_fg_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyg7q_fg_.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyg7q_fg_.jl:16\ntest set: Test Failed at /tmp/tmpyg7q_fg_.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyg7q_fg_.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyg7q_fg_.jl:16\ntest set: Test Failed at /tmp/tmpyg7q_fg_.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyg7q_fg_.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyg7q_fg_.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyg7q_fg_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpnjg4obwx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjg4obwx.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjg4obwx.jl:16\ntest set: Test Failed at /tmp/tmpnjg4obwx.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjg4obwx.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjg4obwx.jl:16\ntest set: Test Failed at /tmp/tmpnjg4obwx.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnjg4obwx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnjg4obwx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjg4obwx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpykowkt2q.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpykowkt2q.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykowkt2q.jl:16\ntest set: Test Failed at /tmp/tmpykowkt2q.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpykowkt2q.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykowkt2q.jl:16\ntest set: Test Failed at /tmp/tmpykowkt2q.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpykowkt2q.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpykowkt2q.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpykowkt2q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4rsm7e7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpo4rsm7e7.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo4rsm7e7.jl:16\ntest set: Test Failed at /tmp/tmpo4rsm7e7.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpo4rsm7e7.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo4rsm7e7.jl:16\ntest set: Test Failed at /tmp/tmpo4rsm7e7.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpo4rsm7e7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo4rsm7e7.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4rsm7e7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaabzhffd.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpaabzhffd.jl:8\n   [3] top-level scope at /tmp/tmpaabzhffd.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpaabzhffd.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpaabzhffd.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpaabzhffd.jl:8\n   [3] top-level scope at /tmp/tmpaabzhffd.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpaabzhffd.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpaabzhffd.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpaabzhffd.jl:8\n   [3] top-level scope at /tmp/tmpaabzhffd.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpaabzhffd.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpaabzhffd.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpaabzhffd.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpaabzhffd.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpaabzhffd.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpaabzhffd.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpaabzhffd.jl:8\n\
    \   [3] top-level scope at /tmp/tmpaabzhffd.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpaabzhffd.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaabzhffd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe4x79l0w.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe4x79l0w.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4x79l0w.jl:16\ntest set: Test Failed at /tmp/tmpe4x79l0w.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero four\
    \ five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe4x79l0w.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4x79l0w.jl:16\ntest set: Test Failed at /tmp/tmpe4x79l0w.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpe4x79l0w.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe4x79l0w.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe4x79l0w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\"\
    \ => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\"\
    \ => 8, \"nine\" => 9)\n    num_list = [num_dict[i] for i in num_list]\n    num_list\
    \ = sort(num_list)\n    num_list = [key for (key, value) in num_dict if value\
    \ in num_list]\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfalblwps.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] #3 at ./none:0 [inlined]\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#6\"{Dict{String,Int64}}}) at ./array.jl:665\n   [5] sort_numbers(::String)\
    \ at /tmp/tmpfalblwps.jl:10\n   [6] top-level scope at /tmp/tmpfalblwps.jl:20\n\
    \   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmpfalblwps.jl:19\n  \ntest set: Test Failed at\
    \ /tmp/tmpfalblwps.jl:22\n  Expression: candidate(\"three five nine\") == \"three\
    \ five nine\"\n   Evaluated: \"nine three five\" == \"three five nine\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfalblwps.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfalblwps.jl:19\ntest set: Test Failed at /tmp/tmpfalblwps.jl:23\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"zero four eight nine five seven\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfalblwps.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfalblwps.jl:19\ntest set: Test Failed at /tmp/tmpfalblwps.jl:24\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"zero two four six one three five\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfalblwps.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfalblwps.jl:19\nTest Summary: | Pass  Fail  Error\
    \  Total\ntest set      |    1     3      1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfalblwps.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpudlmmfh8.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpudlmmfh8.jl:8\n   [3] top-level scope at /tmp/tmpudlmmfh8.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpudlmmfh8.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpudlmmfh8.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpudlmmfh8.jl:8\n   [3] top-level scope at /tmp/tmpudlmmfh8.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpudlmmfh8.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpudlmmfh8.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpudlmmfh8.jl:8\n   [3] top-level scope at /tmp/tmpudlmmfh8.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpudlmmfh8.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpudlmmfh8.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpudlmmfh8.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpudlmmfh8.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpudlmmfh8.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpudlmmfh8.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpudlmmfh8.jl:8\n\
    \   [3] top-level scope at /tmp/tmpudlmmfh8.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpudlmmfh8.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpudlmmfh8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj6mzau7j.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpj6mzau7j.jl:8\n   [3] top-level scope at /tmp/tmpj6mzau7j.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpj6mzau7j.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpj6mzau7j.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpj6mzau7j.jl:8\n   [3] top-level scope at /tmp/tmpj6mzau7j.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpj6mzau7j.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpj6mzau7j.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpj6mzau7j.jl:8\n   [3] top-level scope at /tmp/tmpj6mzau7j.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpj6mzau7j.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpj6mzau7j.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpj6mzau7j.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpj6mzau7j.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpj6mzau7j.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpj6mzau7j.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpj6mzau7j.jl:8\n\
    \   [3] top-level scope at /tmp/tmpj6mzau7j.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpj6mzau7j.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj6mzau7j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpf329ii31.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf329ii31.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf329ii31.jl:16\ntest set: Test Failed at /tmp/tmpf329ii31.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf329ii31.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf329ii31.jl:16\ntest set: Test Failed at /tmp/tmpf329ii31.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpf329ii31.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf329ii31.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf329ii31.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkdk4l4d2.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkdk4l4d2.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkdk4l4d2.jl:16\\ntest set: Test Failed at /tmp/tmpkdk4l4d2.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eightfivefourninesevenzero\" == \"zero\
    \ four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkdk4l4d2.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkdk4l4d2.jl:16\\ntest set: Test Failed at /tmp/tmpkdk4l4d2.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"fivefouronesixthreetwozero\" == \"zero\
    \ one two three four five six\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkdk4l4d2.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkdk4l4d2.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyso8_npu.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyso8_npu.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyso8_npu.jl:16\ntest set: Test Failed at /tmp/tmpyso8_npu.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyso8_npu.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyso8_npu.jl:16\ntest set: Test Failed at /tmp/tmpyso8_npu.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyso8_npu.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyso8_npu.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyso8_npu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdpxept3c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdpxept3c.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdpxept3c.jl:16\ntest set: Test Failed at /tmp/tmpdpxept3c.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdpxept3c.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdpxept3c.jl:16\ntest set: Test Failed at /tmp/tmpdpxept3c.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpdpxept3c.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdpxept3c.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdpxept3c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzw5hnsy7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzw5hnsy7.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzw5hnsy7.jl:16\ntest set: Test Failed at /tmp/tmpzw5hnsy7.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzw5hnsy7.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzw5hnsy7.jl:16\ntest set: Test Failed at /tmp/tmpzw5hnsy7.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzw5hnsy7.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzw5hnsy7.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzw5hnsy7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjjsoagx6.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjjsoagx6.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjsoagx6.jl:16\ntest set: Test Failed at /tmp/tmpjjsoagx6.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjjsoagx6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjsoagx6.jl:16\ntest set: Test Failed at /tmp/tmpjjsoagx6.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpjjsoagx6.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjjsoagx6.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjsoagx6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ik1_7kr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8ik1_7kr.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ik1_7kr.jl:16\ntest set: Test Failed at /tmp/tmp8ik1_7kr.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8ik1_7kr.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ik1_7kr.jl:16\ntest set: Test Failed at /tmp/tmp8ik1_7kr.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8ik1_7kr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8ik1_7kr.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ik1_7kr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprheok68r.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprheok68r.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprheok68r.jl:16\ntest set: Test Failed at /tmp/tmprheok68r.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmprheok68r.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprheok68r.jl:16\ntest set: Test Failed at /tmp/tmprheok68r.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmprheok68r.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprheok68r.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprheok68r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpr70f1968.jl:19\\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\\n   Evaluated: \"five nine three\"\
    \ == \"three five nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpr70f1968.jl:19\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr70f1968.jl:16\\ntest set: Test Failed at /tmp/tmpr70f1968.jl:20\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpr70f1968.jl:20\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr70f1968.jl:16\\ntest set: Test Failed at /tmp/tmpr70f1968.jl:21\\\
    n  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpr70f1968.jl:21\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpr70f1968.jl:16\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     3      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphydg1gcx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmphydg1gcx.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphydg1gcx.jl:16\ntest set: Test Failed at /tmp/tmphydg1gcx.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmphydg1gcx.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphydg1gcx.jl:16\ntest set: Test Failed at /tmp/tmphydg1gcx.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmphydg1gcx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphydg1gcx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphydg1gcx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, n) for n in nums]\n    sorted_nums = sort(nums_int)\n\
    \    sorted_nums_str = [string(n) for n in sorted_nums]\n    return join(sorted_nums_str,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8ybp78u2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp8ybp78u2.jl:9\n\
    \   [8] top-level scope at /tmp/tmp8ybp78u2.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8ybp78u2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8ybp78u2.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp8ybp78u2.jl:9\n\
    \   [8] top-level scope at /tmp/tmp8ybp78u2.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8ybp78u2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8ybp78u2.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmp8ybp78u2.jl:9\n\
    \   [8] top-level scope at /tmp/tmp8ybp78u2.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8ybp78u2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp8ybp78u2.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmp8ybp78u2.jl:9\n   [8] top-level scope\
    \ at /tmp/tmp8ybp78u2.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmp8ybp78u2.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ybp78u2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfsh6zfp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyfsh6zfp.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfsh6zfp.jl:16\ntest set: Test Failed at /tmp/tmpyfsh6zfp.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyfsh6zfp.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfsh6zfp.jl:16\ntest set: Test Failed at /tmp/tmpyfsh6zfp.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyfsh6zfp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfsh6zfp.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfsh6zfp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16u70qt0.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16u70qt0.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16u70qt0.jl:16\ntest set: Test Failed at /tmp/tmp16u70qt0.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16u70qt0.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16u70qt0.jl:16\ntest set: Test Failed at /tmp/tmp16u70qt0.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp16u70qt0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16u70qt0.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16u70qt0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj90tp2zz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpj90tp2zz.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj90tp2zz.jl:16\ntest set: Test Failed at /tmp/tmpj90tp2zz.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpj90tp2zz.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj90tp2zz.jl:16\ntest set: Test Failed at /tmp/tmpj90tp2zz.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpj90tp2zz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj90tp2zz.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj90tp2zz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyzej37qx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyzej37qx.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzej37qx.jl:16\ntest set: Test Failed at /tmp/tmpyzej37qx.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyzej37qx.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzej37qx.jl:16\ntest set: Test Failed at /tmp/tmpyzej37qx.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpyzej37qx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyzej37qx.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzej37qx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpynsq80uc.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpynsq80uc.jl:8\n   [3] top-level scope at /tmp/tmpynsq80uc.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpynsq80uc.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpynsq80uc.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmpynsq80uc.jl:8\n   [3] top-level scope at /tmp/tmpynsq80uc.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpynsq80uc.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpynsq80uc.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmpynsq80uc.jl:8\n   [3] top-level scope at /tmp/tmpynsq80uc.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpynsq80uc.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpynsq80uc.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpynsq80uc.jl:8\n  \
    \ [3] top-level scope at /tmp/tmpynsq80uc.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpynsq80uc.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpynsq80uc.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmpynsq80uc.jl:8\n\
    \   [3] top-level scope at /tmp/tmpynsq80uc.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpynsq80uc.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpynsq80uc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnp9nlkgs.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnp9nlkgs.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnp9nlkgs.jl:16\ntest set: Test Failed at /tmp/tmpnp9nlkgs.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnp9nlkgs.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnp9nlkgs.jl:16\ntest set: Test Failed at /tmp/tmpnp9nlkgs.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpnp9nlkgs.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnp9nlkgs.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnp9nlkgs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyy7n_rg9.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpyy7n_rg9.jl:9\n\
    \   [8] top-level scope at /tmp/tmpyy7n_rg9.jl:20\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpyy7n_rg9.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpyy7n_rg9.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpyy7n_rg9.jl:9\n\
    \   [8] top-level scope at /tmp/tmpyy7n_rg9.jl:21\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpyy7n_rg9.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpyy7n_rg9.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpyy7n_rg9.jl:9\n\
    \   [8] top-level scope at /tmp/tmpyy7n_rg9.jl:22\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpyy7n_rg9.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpyy7n_rg9.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmpyy7n_rg9.jl:9\n   [8] top-level scope\
    \ at /tmp/tmpyy7n_rg9.jl:23\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpyy7n_rg9.jl:18\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyy7n_rg9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwpsvhf1h.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpwpsvhf1h.jl:11\n   [14] top-level scope at /tmp/tmpwpsvhf1h.jl:25\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpwpsvhf1h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwpsvhf1h.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n\
    \   [5] _broadcast_getindex at ./broadcast.jl:614 [inlined]\n   [6] getindex at\
    \ ./broadcast.jl:564 [inlined]\n   [7] macro expansion at ./broadcast.jl:910 [inlined]\n\
    \   [8] macro expansion at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909\
    \ [inlined]\n   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at\
    \ ./broadcast.jl:840 [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n\
    \   [13] sort_numbers(::String) at /tmp/tmpwpsvhf1h.jl:11\n   [14] top-level scope\
    \ at /tmp/tmpwpsvhf1h.jl:26\n   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpwpsvhf1h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwpsvhf1h.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] _broadcast_getindex_evalf at\
    \ ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex at ./broadcast.jl:614\
    \ [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n   [7] macro expansion\
    \ at ./broadcast.jl:910 [inlined]\n   [8] macro expansion at ./simdloop.jl:77\
    \ [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n   [10] copyto! at\
    \ ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840 [inlined]\n\
    \   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpwpsvhf1h.jl:11\n   [14] top-level scope at /tmp/tmpwpsvhf1h.jl:27\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpwpsvhf1h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwpsvhf1h.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] _broadcast_getindex_evalf at ./broadcast.jl:631 [inlined]\n   [5] _broadcast_getindex\
    \ at ./broadcast.jl:614 [inlined]\n   [6] getindex at ./broadcast.jl:564 [inlined]\n\
    \   [7] macro expansion at ./broadcast.jl:910 [inlined]\n   [8] macro expansion\
    \ at ./simdloop.jl:77 [inlined]\n   [9] copyto! at ./broadcast.jl:909 [inlined]\n\
    \   [10] copyto! at ./broadcast.jl:864 [inlined]\n   [11] copy at ./broadcast.jl:840\
    \ [inlined]\n   [12] materialize at ./broadcast.jl:820 [inlined]\n   [13] sort_numbers(::String)\
    \ at /tmp/tmpwpsvhf1h.jl:11\n   [14] top-level scope at /tmp/tmpwpsvhf1h.jl:28\n\
    \   [15] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [16] top-level scope at /tmp/tmpwpsvhf1h.jl:23\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpsvhf1h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n      \
    \  \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"\
    five\" => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\"\
    \ => 8,\n        \"nine\" => 9\n    )\n    nums_int = [nums_dict[n] for n in nums]\n\
    \    nums_int_sorted = sort(nums_int)\n    nums_sorted = [nums[i] for i in nums_int_sorted]\n\
    \    return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphc62ilec.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  BoundsError: attempt to access\
    \ 1-element Array{SubString{String},1} at index [3]\n  Stacktrace:\n   [1] getindex\
    \ at ./array.jl:788 [inlined]\n   [2] #4 at ./none:0 [inlined]\n   [3] iterate\
    \ at ./generator.jl:47 [inlined]\n   [4] collect at ./array.jl:665 [inlined]\n\
    \   [5] sort_numbers(::String) at /tmp/tmphc62ilec.jl:23\n   [6] top-level scope\
    \ at /tmp/tmphc62ilec.jl:32\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphc62ilec.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphc62ilec.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  BoundsError: attempt to access 3-element\
    \ Array{SubString{String},1} at index [5]\n  Stacktrace:\n   [1] getindex at ./array.jl:788\
    \ [inlined]\n   [2] #4 at ./none:0 [inlined]\n   [3] iterate at ./generator.jl:47\
    \ [inlined]\n   [4] collect_to! at ./array.jl:711 [inlined]\n   [5] collect_to_with_first!(::Array{SubString{String},1},\
    \ ::SubString{String}, ::Base.Generator{Array{Int64,1},var\"#4#6\"{Array{SubString{String},1}}},\
    \ ::Int64) at ./array.jl:689\n   [6] collect at ./array.jl:670 [inlined]\n   [7]\
    \ sort_numbers(::String) at /tmp/tmphc62ilec.jl:23\n   [8] top-level scope at\
    \ /tmp/tmphc62ilec.jl:33\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmphc62ilec.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphc62ilec.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  BoundsError:\
    \ attempt to access 6-element Array{SubString{String},1} at index [0]\n  Stacktrace:\n\
    \   [1] getindex at ./array.jl:788 [inlined]\n   [2] #4 at ./none:0 [inlined]\n\
    \   [3] iterate at ./generator.jl:47 [inlined]\n   [4] collect at ./array.jl:665\
    \ [inlined]\n   [5] sort_numbers(::String) at /tmp/tmphc62ilec.jl:23\n   [6] top-level\
    \ scope at /tmp/tmphc62ilec.jl:34\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphc62ilec.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphc62ilec.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  BoundsError: attempt to access 7-element Array{SubString{String},1} at index\
    \ [0]\n  Stacktrace:\n   [1] getindex at ./array.jl:788 [inlined]\n   [2] #4 at\
    \ ./none:0 [inlined]\n   [3] iterate at ./generator.jl:47 [inlined]\n   [4] collect\
    \ at ./array.jl:665 [inlined]\n   [5] sort_numbers(::String) at /tmp/tmphc62ilec.jl:23\n\
    \   [6] top-level scope at /tmp/tmphc62ilec.jl:35\n   [7] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [8] top-level scope at /tmp/tmphc62ilec.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphc62ilec.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzqt5d91u.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzqt5d91u.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzqt5d91u.jl:16\ntest set: Test Failed at /tmp/tmpzqt5d91u.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzqt5d91u.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzqt5d91u.jl:16\ntest set: Test Failed at /tmp/tmpzqt5d91u.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzqt5d91u.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzqt5d91u.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqt5d91u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    num_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n       \
    \ \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"five\"\
    \ => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" =>\
    \ 8,\n        \"nine\" => 9\n    )\n    nums = [num_dict[n] for n in nums]\n \
    \   nums = sort(nums)\n    nums = [key for key in num_dict if num_dict[key] in\
    \ nums]\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe5fji05e.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"zero\" => 0 not found\n\
    \  Stacktrace:\n   [1] getindex at ./dict.jl:477 [inlined]\n   [2] (::var\"#4#6\"\
    {Dict{String,Int64}})(::Pair{String,Int64}) at ./none:0\n   [3] iterate(::Base.Iterators.Filter{var\"\
    #4#6\"{Dict{String,Int64}},Dict{String,Int64}}) at ./iterators.jl:430\n   [4]\
    \ iterate at ./generator.jl:44 [inlined]\n   [5] grow_to!(::Array{Pair{String,Int64},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#4#6\"{Dict{String,Int64}},Dict{String,Int64}},typeof(identity)})\
    \ at ./array.jl:726\n   [6] collect at ./array.jl:663 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmpe5fji05e.jl:23\n   [8] top-level scope at /tmp/tmpe5fji05e.jl:31\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpe5fji05e.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5fji05e.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  KeyError: key \"zero\" => 0 not found\n  Stacktrace:\n\
    \   [1] getindex at ./dict.jl:477 [inlined]\n   [2] (::var\"#4#6\"{Dict{String,Int64}})(::Pair{String,Int64})\
    \ at ./none:0\n   [3] iterate(::Base.Iterators.Filter{var\"#4#6\"{Dict{String,Int64}},Dict{String,Int64}})\
    \ at ./iterators.jl:430\n   [4] iterate at ./generator.jl:44 [inlined]\n   [5]\
    \ grow_to!(::Array{Pair{String,Int64},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #4#6\"{Dict{String,Int64}},Dict{String,Int64}},typeof(identity)}) at ./array.jl:726\n\
    \   [6] collect at ./array.jl:663 [inlined]\n   [7] sort_numbers(::String) at\
    \ /tmp/tmpe5fji05e.jl:23\n   [8] top-level scope at /tmp/tmpe5fji05e.jl:32\n \
    \  [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpe5fji05e.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5fji05e.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  KeyError: key \"zero\" => 0 not found\n\
    \  Stacktrace:\n   [1] getindex at ./dict.jl:477 [inlined]\n   [2] (::var\"#4#6\"\
    {Dict{String,Int64}})(::Pair{String,Int64}) at ./none:0\n   [3] iterate(::Base.Iterators.Filter{var\"\
    #4#6\"{Dict{String,Int64}},Dict{String,Int64}}) at ./iterators.jl:430\n   [4]\
    \ iterate at ./generator.jl:44 [inlined]\n   [5] grow_to!(::Array{Pair{String,Int64},1},\
    \ ::Base.Generator{Base.Iterators.Filter{var\"#4#6\"{Dict{String,Int64}},Dict{String,Int64}},typeof(identity)})\
    \ at ./array.jl:726\n   [6] collect at ./array.jl:663 [inlined]\n   [7] sort_numbers(::String)\
    \ at /tmp/tmpe5fji05e.jl:23\n   [8] top-level scope at /tmp/tmpe5fji05e.jl:33\n\
    \   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpe5fji05e.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5fji05e.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  KeyError:\
    \ key \"zero\" => 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477\
    \ [inlined]\n   [2] (::var\"#4#6\"{Dict{String,Int64}})(::Pair{String,Int64})\
    \ at ./none:0\n   [3] iterate(::Base.Iterators.Filter{var\"#4#6\"{Dict{String,Int64}},Dict{String,Int64}})\
    \ at ./iterators.jl:430\n   [4] iterate at ./generator.jl:44 [inlined]\n   [5]\
    \ grow_to!(::Array{Pair{String,Int64},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #4#6\"{Dict{String,Int64}},Dict{String,Int64}},typeof(identity)}) at ./array.jl:726\n\
    \   [6] collect at ./array.jl:663 [inlined]\n   [7] sort_numbers(::String) at\
    \ /tmp/tmpe5fji05e.jl:23\n   [8] top-level scope at /tmp/tmpe5fji05e.jl:34\n \
    \  [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpe5fji05e.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5fji05e.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  KeyError: key \"zero\" => 0 not found\n  Stacktrace:\n   [1] getindex at ./dict.jl:477\
    \ [inlined]\n   [2] (::var\"#4#6\"{Dict{String,Int64}})(::Pair{String,Int64})\
    \ at ./none:0\n   [3] iterate(::Base.Iterators.Filter{var\"#4#6\"{Dict{String,Int64}},Dict{String,Int64}})\
    \ at ./iterators.jl:430\n   [4] iterate at ./generator.jl:44 [inlined]\n   [5]\
    \ grow_to!(::Array{Pair{String,Int64},1}, ::Base.Generator{Base.Iterators.Filter{var\"\
    #4#6\"{Dict{String,Int64}},Dict{String,Int64}},typeof(identity)}) at ./array.jl:726\n\
    \   [6] collect at ./array.jl:663 [inlined]\n   [7] sort_numbers(::String) at\
    \ /tmp/tmpe5fji05e.jl:23\n   [8] top-level scope at /tmp/tmpe5fji05e.jl:35\n \
    \  [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpe5fji05e.jl:30\n  \nTest Summary: | Error\
    \  Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5fji05e.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n      \
    \  \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"\
    five\" => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\"\
    \ => 8,\n        \"nine\" => 9\n    )\n    nums_int = [nums_dict[x] for x in nums]\n\
    \    sort!(nums_int)\n    nums_str = [key for (key, value) in nums_dict if value\
    \ in nums_int]\n    return join(nums_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpybql4_t2.jl:33\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpybql4_t2.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpybql4_t2.jl:30\ntest set: Test Failed at /tmp/tmpybql4_t2.jl:34\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"zero four eight nine five seven\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpybql4_t2.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpybql4_t2.jl:30\ntest set: Test Failed at /tmp/tmpybql4_t2.jl:35\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"zero two four six one three five\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpybql4_t2.jl:35\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpybql4_t2.jl:30\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpybql4_t2.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw2qnpvgl.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw2qnpvgl.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2qnpvgl.jl:16\ntest set: Test Failed at /tmp/tmpw2qnpvgl.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw2qnpvgl.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2qnpvgl.jl:16\ntest set: Test Failed at /tmp/tmpw2qnpvgl.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpw2qnpvgl.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw2qnpvgl.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2qnpvgl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    num_list = join(num_list, \" \")\n \
    \   return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4f214py1.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp4f214py1.jl:8\n   [3] top-level scope at /tmp/tmp4f214py1.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4f214py1.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp4f214py1.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String)\
    \ at /tmp/tmp4f214py1.jl:8\n   [3] top-level scope at /tmp/tmp4f214py1.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4f214py1.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp4f214py1.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  type String has no field split\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ sort_numbers(::String) at /tmp/tmp4f214py1.jl:8\n   [3] top-level scope at /tmp/tmp4f214py1.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4f214py1.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp4f214py1.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  type\
    \ String has no field split\n  Stacktrace:\n   [1] getproperty(::String, ::Symbol)\
    \ at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp4f214py1.jl:8\n  \
    \ [3] top-level scope at /tmp/tmp4f214py1.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4f214py1.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp4f214py1.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  type String has no field split\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] sort_numbers(::String) at /tmp/tmp4f214py1.jl:8\n\
    \   [3] top-level scope at /tmp/tmp4f214py1.jl:22\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp4f214py1.jl:17\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4f214py1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpma1pttj6.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpma1pttj6.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpma1pttj6.jl:16\ntest set: Test Failed at /tmp/tmpma1pttj6.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmpma1pttj6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpma1pttj6.jl:16\ntest set: Test Failed at /tmp/tmpma1pttj6.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmpma1pttj6.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpma1pttj6.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpma1pttj6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5kkhizjh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5kkhizjh.jl:19\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5kkhizjh.jl:16\ntest set: Test Failed at /tmp/tmp5kkhizjh.jl:20\n\
    \  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\n   Evaluated: \"eight five four nine seven zero\" == \"\
    zero four five seven eight nine\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5kkhizjh.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5kkhizjh.jl:16\ntest set: Test Failed at /tmp/tmp5kkhizjh.jl:21\n\
    \  Expression: candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\"\n   Evaluated: \"five four one six three two zero\" ==\
    \ \"zero one two three four five six\"\nStacktrace:\n [1] top-level scope at /tmp/tmp5kkhizjh.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5kkhizjh.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5kkhizjh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into a vector of strings\n    numbers_vec = split(numbers)\n    # Convert the\
    \ vector of strings to a vector of integers\n    numbers_int = [parse(Int, x)\
    \ for x in numbers_vec]\n    # Sort the vector of integers\n    sort!(numbers_int)\n\
    \    # Convert the vector of integers to a vector of strings\n    numbers_str\
    \ = [string(x) for x in numbers_int]\n    # Join the vector of strings into a\
    \ single string\n    return join(numbers_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpscfsam_9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpscfsam_9.jl:11\n\
    \   [8] top-level scope at /tmp/tmpscfsam_9.jl:25\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpscfsam_9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpscfsam_9.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n  ArgumentError: invalid base 10 digit\
    \ 't' in \"three\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64}, ::SubString{String},\
    \ ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64},\
    \ ::SubString{String}; base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238\
    \ [inlined]\n   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47\
    \ [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpscfsam_9.jl:11\n\
    \   [8] top-level scope at /tmp/tmpscfsam_9.jl:26\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpscfsam_9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpscfsam_9.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  ArgumentError:\
    \ invalid base 10 digit 'f' in \"five\"\n  Stacktrace:\n   [1] tryparse_internal(::Type{Int64},\
    \ ::SubString{String}, ::Int64, ::Int64, ::Int64, ::Bool) at ./parse.jl:132\n\
    \   [2] parse(::Type{Int64}, ::SubString{String}; base::Nothing) at ./parse.jl:238\n\
    \   [3] parse at ./parse.jl:238 [inlined]\n   [4] #3 at ./none:0 [inlined]\n \
    \  [5] iterate at ./generator.jl:47 [inlined]\n   [6] collect(::Base.Generator{Array{SubString{String},1},var\"\
    #3#4\"}) at ./array.jl:665\n   [7] sort_numbers(::String) at /tmp/tmpscfsam_9.jl:11\n\
    \   [8] top-level scope at /tmp/tmpscfsam_9.jl:27\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpscfsam_9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpscfsam_9.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\"\n\
    \  ArgumentError: invalid base 10 digit 's' in \"six\"\n  Stacktrace:\n   [1]\
    \ tryparse_internal(::Type{Int64}, ::SubString{String}, ::Int64, ::Int64, ::Int64,\
    \ ::Bool) at ./parse.jl:132\n   [2] parse(::Type{Int64}, ::SubString{String};\
    \ base::Nothing) at ./parse.jl:238\n   [3] parse at ./parse.jl:238 [inlined]\n\
    \   [4] #3 at ./none:0 [inlined]\n   [5] iterate at ./generator.jl:47 [inlined]\n\
    \   [6] collect(::Base.Generator{Array{SubString{String},1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [7] sort_numbers(::String) at /tmp/tmpscfsam_9.jl:11\n   [8] top-level scope\
    \ at /tmp/tmpscfsam_9.jl:28\n   [9] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [10] top-level scope at /tmp/tmpscfsam_9.jl:23\n  \nTest Summary: | Pass \
    \ Error  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpscfsam_9.jl:21\n"
  exit_code: 1
  status: SyntaxError

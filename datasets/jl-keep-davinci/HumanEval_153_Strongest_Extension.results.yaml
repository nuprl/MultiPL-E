name: HumanEval_153_Strongest_Extension
language: julia
results:
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbiq2n6z9.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpbiq2n6z9.jl:21\n   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpbiq2n6z9.jl:21\n   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbiq2n6z9.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbiq2n6z9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbiq2n6z9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbiq2n6z9.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbiq2n6z9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp5a9_v4yo.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5a9_v4yo.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5my7yye1.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5my7yye1.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\n   [2] top-level scope at /tmp/tmp5my7yye1.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5my7yye1.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5my7yye1.jl:21\\n   [2] top-level scope at /tmp/tmp5my7yye1.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5my7yye1.jl:21\\n   [2] top-level scope at /tmp/tmp5my7yye1.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5my7yye1.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\n   [2] top-level scope at /tmp/tmp5my7yye1.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5my7yye1.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5my7yye1.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5my7yye1.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5my7yye1.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5my7yye1.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        CAP = sum(isupper.(extensions[i]))\n\
    \        SM = sum(islower.(extensions[i]))\n        if CAP - SM > strength\n \
    \           strength = CAP - SM\n            strongest = extensions[i]\n     \
    \   end\n    end\n    return class_name * \".\" * strongest\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpueqvc3gc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpueqvc3gc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n   [2] top-level scope at /tmp/tmpueqvc3gc.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpueqvc3gc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpueqvc3gc.jl:21\n   [2] top-level scope at /tmp/tmpueqvc3gc.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpueqvc3gc.jl:21\n   [2] top-level scope at /tmp/tmpueqvc3gc.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpueqvc3gc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n   [2] top-level scope at /tmp/tmpueqvc3gc.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpueqvc3gc.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpueqvc3gc.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpueqvc3gc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpueqvc3gc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpueqvc3gc.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpueqvc3gc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2dlrricc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2dlrricc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n   [2] top-level scope at /tmp/tmp2dlrricc.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2dlrricc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp2dlrricc.jl:21\n   [2] top-level scope at /tmp/tmp2dlrricc.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp2dlrricc.jl:21\n   [2] top-level scope at /tmp/tmp2dlrricc.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2dlrricc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n   [2] top-level scope at /tmp/tmp2dlrricc.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2dlrricc.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp2dlrricc.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2dlrricc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp2dlrricc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2dlrricc.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2dlrricc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdm3n5bxh.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\\
    n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\\
    n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpdm3n5bxh.jl:21\\n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpdm3n5bxh.jl:21\\n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\\
    n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\\
    n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpdm3n5bxh.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdm3n5bxh.jl:21\\\
    n   [2] top-level scope at /tmp/tmpdm3n5bxh.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpdm3n5bxh.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprc1t81ym.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n\
    \   [2] top-level scope at /tmp/tmprc1t81ym.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n   [2] top-level scope at /tmp/tmprc1t81ym.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n\
    \   [2] top-level scope at /tmp/tmprc1t81ym.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprc1t81ym.jl:21\n   [2] top-level scope at /tmp/tmprc1t81ym.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprc1t81ym.jl:21\n   [2] top-level scope at /tmp/tmprc1t81ym.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n\
    \   [2] top-level scope at /tmp/tmprc1t81ym.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n   [2] top-level scope at /tmp/tmprc1t81ym.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n\
    \   [2] top-level scope at /tmp/tmprc1t81ym.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmprc1t81ym.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprc1t81ym.jl:21\n\
    \   [2] top-level scope at /tmp/tmprc1t81ym.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprc1t81ym.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprc1t81ym.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8haagk5l.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8haagk5l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n   [2] top-level scope at /tmp/tmp8haagk5l.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8haagk5l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp8haagk5l.jl:21\n   [2] top-level scope at /tmp/tmp8haagk5l.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp8haagk5l.jl:21\n   [2] top-level scope at /tmp/tmp8haagk5l.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8haagk5l.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n   [2] top-level scope at /tmp/tmp8haagk5l.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8haagk5l.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp8haagk5l.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8haagk5l.jl:21\n\
    \   [2] top-level scope at /tmp/tmp8haagk5l.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8haagk5l.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8haagk5l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpamj80xbn.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n   [2] top-level scope at /tmp/tmpamj80xbn.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n   [2] top-level scope at /tmp/tmpamj80xbn.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n   [2] top-level scope at /tmp/tmpamj80xbn.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpamj80xbn.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpamj80xbn.jl:19\n\
    \   [2] top-level scope at /tmp/tmpamj80xbn.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpamj80xbn.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamj80xbn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfpfcv32j.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfpfcv32j.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n   [2] top-level scope at /tmp/tmpfpfcv32j.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfpfcv32j.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfpfcv32j.jl:21\n   [2] top-level scope at /tmp/tmpfpfcv32j.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfpfcv32j.jl:21\n   [2] top-level scope at /tmp/tmpfpfcv32j.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfpfcv32j.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n   [2] top-level scope at /tmp/tmpfpfcv32j.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfpfcv32j.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpfcv32j.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfpfcv32j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfpfcv32j.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpfcv32j.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpfcv32j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpryfwxero.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpryfwxero.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpryfwxero.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpryfwxero.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\ntest set: Test Failed at /tmp/tmpryfwxero.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpryfwxero.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpryfwxero.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpryfwxero.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        ext = extensions[i]\n        CAP\
    \ = sum(isupper.(ext))\n        SM = sum(islower.(ext))\n        if CAP - SM >\
    \ strength\n            strength = CAP - SM\n            strongest = ext\n   \
    \     end\n    end\n    return class_name * \".\" * strongest\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2t37jxbq.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n\
    \   [2] top-level scope at /tmp/tmp2t37jxbq.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n   [2] top-level scope at /tmp/tmp2t37jxbq.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n\
    \   [2] top-level scope at /tmp/tmp2t37jxbq.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp2t37jxbq.jl:22\n   [2] top-level scope at /tmp/tmp2t37jxbq.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp2t37jxbq.jl:22\n   [2] top-level scope at /tmp/tmp2t37jxbq.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n\
    \   [2] top-level scope at /tmp/tmp2t37jxbq.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n   [2] top-level scope at /tmp/tmp2t37jxbq.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n\
    \   [2] top-level scope at /tmp/tmp2t37jxbq.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp2t37jxbq.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2t37jxbq.jl:22\n\
    \   [2] top-level scope at /tmp/tmp2t37jxbq.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2t37jxbq.jl:35\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2t37jxbq.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp05sxep9.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpp05sxep9.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp05sxep9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp05sxep9.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\ntest set: Test Failed at /tmp/tmpp05sxep9.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp05sxep9.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp05sxep9.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp05sxep9.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest = \"\
    \"\n    for i in 1:length(extensions)\n        ext = extensions[i]\n        CAP\
    \ = sum(isupper.(ext))\n        SM = sum(islower.(ext))\n        if CAP - SM >\
    \ strength\n            strength = CAP - SM\n            strongest = ext\n   \
    \     end\n    end\n    return class_name * \".\" * strongest\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptg9mcrdi.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n\
    \   [2] top-level scope at /tmp/tmptg9mcrdi.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n   [2] top-level scope at /tmp/tmptg9mcrdi.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n\
    \   [2] top-level scope at /tmp/tmptg9mcrdi.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmptg9mcrdi.jl:22\n   [2] top-level scope at /tmp/tmptg9mcrdi.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmptg9mcrdi.jl:22\n   [2] top-level scope at /tmp/tmptg9mcrdi.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n\
    \   [2] top-level scope at /tmp/tmptg9mcrdi.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n   [2] top-level scope at /tmp/tmptg9mcrdi.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n\
    \   [2] top-level scope at /tmp/tmptg9mcrdi.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmptg9mcrdi.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptg9mcrdi.jl:22\n\
    \   [2] top-level scope at /tmp/tmptg9mcrdi.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptg9mcrdi.jl:35\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptg9mcrdi.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo6yqvb3e.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6yqvb3e.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpo6yqvb3e.jl:19\n\
    \   [2] top-level scope at /tmp/tmpo6yqvb3e.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6yqvb3e.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6yqvb3e.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps7ssata1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n\
    \   [2] top-level scope at /tmp/tmps7ssata1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n   [2] top-level scope at /tmp/tmps7ssata1.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n\
    \   [2] top-level scope at /tmp/tmps7ssata1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmps7ssata1.jl:21\n   [2] top-level scope at /tmp/tmps7ssata1.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmps7ssata1.jl:21\n   [2] top-level scope at /tmp/tmps7ssata1.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n\
    \   [2] top-level scope at /tmp/tmps7ssata1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n   [2] top-level scope at /tmp/tmps7ssata1.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n\
    \   [2] top-level scope at /tmp/tmps7ssata1.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps7ssata1.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps7ssata1.jl:21\n\
    \   [2] top-level scope at /tmp/tmps7ssata1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps7ssata1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7ssata1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxl8uoz80.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxl8uoz80.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n   [2] top-level scope at /tmp/tmpxl8uoz80.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxl8uoz80.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpxl8uoz80.jl:21\n   [2] top-level scope at /tmp/tmpxl8uoz80.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpxl8uoz80.jl:21\n   [2] top-level scope at /tmp/tmpxl8uoz80.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxl8uoz80.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n   [2] top-level scope at /tmp/tmpxl8uoz80.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxl8uoz80.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpxl8uoz80.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpxl8uoz80.jl:21\n\
    \   [2] top-level scope at /tmp/tmpxl8uoz80.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxl8uoz80.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxl8uoz80.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsmh2wx5_.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpsmh2wx5_.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsmh2wx5_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsmh2wx5_.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\ntest set: Test Failed at /tmp/tmpsmh2wx5_.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsmh2wx5_.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsmh2wx5_.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsmh2wx5_.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnlhzx48v.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnlhzx48v.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n   [2] top-level scope at /tmp/tmpnlhzx48v.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnlhzx48v.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpnlhzx48v.jl:21\n   [2] top-level scope at /tmp/tmpnlhzx48v.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpnlhzx48v.jl:21\n   [2] top-level scope at /tmp/tmpnlhzx48v.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnlhzx48v.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n   [2] top-level scope at /tmp/tmpnlhzx48v.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnlhzx48v.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpnlhzx48v.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpnlhzx48v.jl:21\n\
    \   [2] top-level scope at /tmp/tmpnlhzx48v.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnlhzx48v.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlhzx48v.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0geyelm9.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0geyelm9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n   [2] top-level scope at /tmp/tmp0geyelm9.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0geyelm9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp0geyelm9.jl:21\n   [2] top-level scope at /tmp/tmp0geyelm9.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp0geyelm9.jl:21\n   [2] top-level scope at /tmp/tmp0geyelm9.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0geyelm9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n   [2] top-level scope at /tmp/tmp0geyelm9.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0geyelm9.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0geyelm9.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0geyelm9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0geyelm9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0geyelm9.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0geyelm9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpodi6fqro.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpodi6fqro.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy3rkmf93.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3rkmf93.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n   [2] top-level scope at /tmp/tmpy3rkmf93.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3rkmf93.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy3rkmf93.jl:21\n   [2] top-level scope at /tmp/tmpy3rkmf93.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy3rkmf93.jl:21\n   [2] top-level scope at /tmp/tmpy3rkmf93.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3rkmf93.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n   [2] top-level scope at /tmp/tmpy3rkmf93.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3rkmf93.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3rkmf93.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3rkmf93.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3rkmf93.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3rkmf93.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3rkmf93.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7cebkpli.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp7cebkpli.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7cebkpli.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7cebkpli.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\ntest set: Test Failed at /tmp/tmp7cebkpli.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7cebkpli.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7cebkpli.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7cebkpli.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4a8mssf3.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\\
    n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\\
    n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4a8mssf3.jl:21\\n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4a8mssf3.jl:21\\n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\\
    n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\\
    n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4a8mssf3.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4a8mssf3.jl:21\\\
    n   [2] top-level scope at /tmp/tmp4a8mssf3.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4a8mssf3.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh1qh6k5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh1qh6k5.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvh1qh6k5.jl:19\n\
    \   [2] top-level scope at /tmp/tmpvh1qh6k5.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvh1qh6k5.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh1qh6k5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return class_name\
    \ * \".\" * \"AA\"\nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\
    \t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\
    )\n\t@test(candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
    ]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\
    )\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\
    )\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"\
    __HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"\
    WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\t@test(candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\
    \t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps60ae9br.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"Watashi.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmps60ae9br.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"Boku123.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmps60ae9br.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    __YESIMHERE.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmps60ae9br.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"K.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmps60ae9br.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps60ae9br.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"YameRore.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmps60ae9br.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"finNNalLLly.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmps60ae9br.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmps60ae9br.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\ntest set: Test Failed at /tmp/tmps60ae9br.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmps60ae9br.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps60ae9br.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps60ae9br.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpn29qbxp1.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn29qbxp1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpza481ofp.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpza481ofp.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpza481ofp.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpza481ofp.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpza481ofp.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpza481ofp.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpza481ofp.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpza481ofp.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpza481ofp.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\ntest set: Test Failed at /tmp/tmpza481ofp.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpza481ofp.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpza481ofp.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpza481ofp.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        if extension == \"\"\n    \
    \        continue\n        end\n        cap = 0\n        sm = 0\n        for letter\
    \ in extension\n            if letter in string(uppercase(letter))\n         \
    \       cap += 1\n            else\n                sm += 1\n            end\n\
    \        end\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplznk1zix.jl:47\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.123NoooneB321\" == \"\
    __YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmplznk1zix.jl:47\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplznk1zix.jl:44\ntest set: Test Failed at /tmp/tmplznk1zix.jl:49\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.781345\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplznk1zix.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplznk1zix.jl:44\ntest set: Test Failed at /tmp/tmplznk1zix.jl:52\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.91245\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmplznk1zix.jl:52\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplznk1zix.jl:44\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     3      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplznk1zix.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"\
    tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp44x8jnjk.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp44x8jnjk.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpesainesq.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpesainesq.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpesainesq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpesainesq.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\ntest set: Test Failed at /tmp/tmpesainesq.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesainesq.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesainesq.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesainesq.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp90v55qic.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp90v55qic.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpssm6x39d.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpssm6x39d.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n   [2] top-level scope at /tmp/tmpssm6x39d.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpssm6x39d.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpssm6x39d.jl:21\n   [2] top-level scope at /tmp/tmpssm6x39d.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpssm6x39d.jl:21\n   [2] top-level scope at /tmp/tmpssm6x39d.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpssm6x39d.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n   [2] top-level scope at /tmp/tmpssm6x39d.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpssm6x39d.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpssm6x39d.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpssm6x39d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpssm6x39d.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpssm6x39d.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpssm6x39d.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength_list = []\n    for i in 1:length(extensions)\n\
    \        strength_list = [strength_list; strength(extensions[i])]\n    end\n \
    \   strongest_extension = extensions[findmax(strength_list)[2]]\n    return class_name\
    \ * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyyho0tp5.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: strength not defined\n  Stacktrace:\n  \
    \ [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n\
    \   [2] top-level scope at /tmp/tmpyyho0tp5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: strength not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n   [2] top-level scope at /tmp/tmpyyho0tp5.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: strength not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n\
    \   [2] top-level scope at /tmp/tmpyyho0tp5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ strength not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyyho0tp5.jl:20\n   [2] top-level scope at /tmp/tmpyyho0tp5.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ strength not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyyho0tp5.jl:20\n   [2] top-level scope at /tmp/tmpyyho0tp5.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: strength not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n\
    \   [2] top-level scope at /tmp/tmpyyho0tp5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: strength not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n   [2] top-level scope at /tmp/tmpyyho0tp5.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: strength not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n\
    \   [2] top-level scope at /tmp/tmpyyho0tp5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpyyho0tp5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: strength not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyyho0tp5.jl:20\n\
    \   [2] top-level scope at /tmp/tmpyyho0tp5.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyyho0tp5.jl:29\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyyho0tp5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_4to7_d1.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n   [2] top-level scope at /tmp/tmp_4to7_d1.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n   [2] top-level scope at /tmp/tmp_4to7_d1.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n   [2] top-level scope at /tmp/tmp_4to7_d1.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4to7_d1.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4to7_d1.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_4to7_d1.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4to7_d1.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_4to7_d1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfr98jovk.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\\
    n   [2] top-level scope at /tmp/tmpfr98jovk.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\n   [2] top-level scope at /tmp/tmpfr98jovk.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\\
    n   [2] top-level scope at /tmp/tmpfr98jovk.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfr98jovk.jl:21\\n   [2] top-level scope at /tmp/tmpfr98jovk.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfr98jovk.jl:21\\n   [2] top-level scope at /tmp/tmpfr98jovk.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\\
    n   [2] top-level scope at /tmp/tmpfr98jovk.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\n   [2] top-level scope at /tmp/tmpfr98jovk.jl:40\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\\
    n   [2] top-level scope at /tmp/tmpfr98jovk.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfr98jovk.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfr98jovk.jl:21\\\
    n   [2] top-level scope at /tmp/tmpfr98jovk.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfr98jovk.jl:33\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuxmp7p96.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpuxmp7p96.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxmp7p96.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpuxmp7p96.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpuxmp7p96.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpuxmp7p96.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxmp7p96.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxmp7p96.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxmp7p96.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\ntest set: Test Failed at /tmp/tmpuxmp7p96.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuxmp7p96.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuxmp7p96.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ol3lstx.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp4ol3lstx.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp4ol3lstx.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp4ol3lstx.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ol3lstx.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ol3lstx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4ol3lstx.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp4ol3lstx.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4ol3lstx.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\ntest set: Test Failed at /tmp/tmp4ol3lstx.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4ol3lstx.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ol3lstx.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ol3lstx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpljz0bxrw.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n\
    \   [2] top-level scope at /tmp/tmpljz0bxrw.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n   [2] top-level scope at /tmp/tmpljz0bxrw.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n\
    \   [2] top-level scope at /tmp/tmpljz0bxrw.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpljz0bxrw.jl:21\n   [2] top-level scope at /tmp/tmpljz0bxrw.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpljz0bxrw.jl:21\n   [2] top-level scope at /tmp/tmpljz0bxrw.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n\
    \   [2] top-level scope at /tmp/tmpljz0bxrw.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n   [2] top-level scope at /tmp/tmpljz0bxrw.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n\
    \   [2] top-level scope at /tmp/tmpljz0bxrw.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpljz0bxrw.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljz0bxrw.jl:21\n\
    \   [2] top-level scope at /tmp/tmpljz0bxrw.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpljz0bxrw.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljz0bxrw.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        CAP = sum(isupper.(extension))\n\
    \        SM = sum(islower.(extension))\n        if CAP - SM > strength\n     \
    \       strength = CAP - SM\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp23ivm6dc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp23ivm6dc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n   [2] top-level scope at /tmp/tmp23ivm6dc.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp23ivm6dc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp23ivm6dc.jl:21\n   [2] top-level scope at /tmp/tmp23ivm6dc.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp23ivm6dc.jl:21\n   [2] top-level scope at /tmp/tmp23ivm6dc.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp23ivm6dc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n   [2] top-level scope at /tmp/tmp23ivm6dc.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp23ivm6dc.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp23ivm6dc.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp23ivm6dc.jl:21\n\
    \   [2] top-level scope at /tmp/tmp23ivm6dc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp23ivm6dc.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23ivm6dc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7e3xey5b.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7e3xey5b.jl:21\\n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7e3xey5b.jl:21\\n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7e3xey5b.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7e3xey5b.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7e3xey5b.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7e3xey5b.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplw0b246j.jl:44\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmplw0b246j.jl:44\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw0b246j.jl:41\ntest set: Test Failed at /tmp/tmplw0b246j.jl:46\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplw0b246j.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw0b246j.jl:41\ntest set: Test Failed at /tmp/tmplw0b246j.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmplw0b246j.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw0b246j.jl:41\ntest set: Test Failed at /tmp/tmplw0b246j.jl:50\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmplw0b246j.jl:50\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplw0b246j.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplw0b246j.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpljq3p1qo.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\\
    n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\\
    n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpljq3p1qo.jl:21\\n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpljq3p1qo.jl:21\\n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\\
    n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\\
    n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpljq3p1qo.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpljq3p1qo.jl:21\\\
    n   [2] top-level scope at /tmp/tmpljq3p1qo.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpljq3p1qo.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5gg_i9o8.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5gg_i9o8.jl:21\n   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5gg_i9o8.jl:21\n   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmp5gg_i9o8.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5gg_i9o8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp5gg_i9o8.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5gg_i9o8.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gg_i9o8.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptkzeqq8s.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n\
    \   [2] top-level scope at /tmp/tmptkzeqq8s.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n   [2] top-level scope at /tmp/tmptkzeqq8s.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n\
    \   [2] top-level scope at /tmp/tmptkzeqq8s.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmptkzeqq8s.jl:21\n   [2] top-level scope at /tmp/tmptkzeqq8s.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmptkzeqq8s.jl:21\n   [2] top-level scope at /tmp/tmptkzeqq8s.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n\
    \   [2] top-level scope at /tmp/tmptkzeqq8s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n   [2] top-level scope at /tmp/tmptkzeqq8s.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n\
    \   [2] top-level scope at /tmp/tmptkzeqq8s.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmptkzeqq8s.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmptkzeqq8s.jl:21\n\
    \   [2] top-level scope at /tmp/tmptkzeqq8s.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptkzeqq8s.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptkzeqq8s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_4mzl3t5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp_4mzl3t5.jl:21\n   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp_4mzl3t5.jl:21\n   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_4mzl3t5.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_4mzl3t5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_4mzl3t5.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_4mzl3t5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_4mzl3t5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx9wg722u.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n   [2] top-level scope at /tmp/tmpx9wg722u.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n   [2] top-level scope at /tmp/tmpx9wg722u.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n   [2] top-level scope at /tmp/tmpx9wg722u.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9wg722u.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpx9wg722u.jl:19\n\
    \   [2] top-level scope at /tmp/tmpx9wg722u.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9wg722u.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9wg722u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplaq9il68.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n\
    \   [2] top-level scope at /tmp/tmplaq9il68.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n   [2] top-level scope at /tmp/tmplaq9il68.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n\
    \   [2] top-level scope at /tmp/tmplaq9il68.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplaq9il68.jl:21\n   [2] top-level scope at /tmp/tmplaq9il68.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplaq9il68.jl:21\n   [2] top-level scope at /tmp/tmplaq9il68.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n\
    \   [2] top-level scope at /tmp/tmplaq9il68.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n   [2] top-level scope at /tmp/tmplaq9il68.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n\
    \   [2] top-level scope at /tmp/tmplaq9il68.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplaq9il68.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplaq9il68.jl:21\n\
    \   [2] top-level scope at /tmp/tmplaq9il68.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplaq9il68.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplaq9il68.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        extension = extensions[i]\n\
    \        CAP = sum(isupper.(extension))\n        SM = sum(islower.(extension))\n\
    \        if CAP - SM > strength\n            strength = CAP - SM\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4s5qaoaj.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n\
    \   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n\
    \   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4s5qaoaj.jl:22\n   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4s5qaoaj.jl:22\n   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n\
    \   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n\
    \   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmp4s5qaoaj.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4s5qaoaj.jl:22\n\
    \   [2] top-level scope at /tmp/tmp4s5qaoaj.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4s5qaoaj.jl:35\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4s5qaoaj.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63wiicwc.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp63wiicwc.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp63wiicwc.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp63wiicwc.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp63wiicwc.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp63wiicwc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp63wiicwc.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp63wiicwc.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp63wiicwc.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\ntest set: Test Failed at /tmp/tmp63wiicwc.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp63wiicwc.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp63wiicwc.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63wiicwc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7lxwyrdg.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7lxwyrdg.jl:21\\n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7lxwyrdg.jl:21\\n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lxwyrdg.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7lxwyrdg.jl:21\\\
    n   [2] top-level scope at /tmp/tmp7lxwyrdg.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lxwyrdg.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        current_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if current_strength > strength\n       \
    \     strength = current_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy7nf_tcf.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy7nf_tcf.jl:21\n   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy7nf_tcf.jl:21\n   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpy7nf_tcf.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy7nf_tcf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy7nf_tcf.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy7nf_tcf.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy7nf_tcf.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgwjgso4i.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgwjgso4i.jl:21\\n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgwjgso4i.jl:21\\n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwjgso4i.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgwjgso4i.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgwjgso4i.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwjgso4i.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9kz2ptvf.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp9kz2ptvf.jl:21\n   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp9kz2ptvf.jl:21\n   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9kz2ptvf.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9kz2ptvf.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9kz2ptvf.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9kz2ptvf.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9kz2ptvf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn9oyv3_x.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpn9oyv3_x.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpn9oyv3_x.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpn9oyv3_x.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\ntest set: Test Failed at /tmp/tmpn9oyv3_x.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpn9oyv3_x.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn9oyv3_x.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    9      9\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpio7lg0np.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n\
    \   [2] top-level scope at /tmp/tmpio7lg0np.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n   [2] top-level scope at /tmp/tmpio7lg0np.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n\
    \   [2] top-level scope at /tmp/tmpio7lg0np.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpio7lg0np.jl:21\n   [2] top-level scope at /tmp/tmpio7lg0np.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpio7lg0np.jl:21\n   [2] top-level scope at /tmp/tmpio7lg0np.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n\
    \   [2] top-level scope at /tmp/tmpio7lg0np.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n   [2] top-level scope at /tmp/tmpio7lg0np.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n\
    \   [2] top-level scope at /tmp/tmpio7lg0np.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpio7lg0np.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpio7lg0np.jl:21\n\
    \   [2] top-level scope at /tmp/tmpio7lg0np.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpio7lg0np.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpio7lg0np.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq8qs169h.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq8qs169h.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n   [2] top-level scope at /tmp/tmpq8qs169h.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq8qs169h.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq8qs169h.jl:21\n   [2] top-level scope at /tmp/tmpq8qs169h.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq8qs169h.jl:21\n   [2] top-level scope at /tmp/tmpq8qs169h.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq8qs169h.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n   [2] top-level scope at /tmp/tmpq8qs169h.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq8qs169h.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq8qs169h.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq8qs169h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq8qs169h.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq8qs169h.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8qs169h.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy3fttp7n.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3fttp7n.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n   [2] top-level scope at /tmp/tmpy3fttp7n.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3fttp7n.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy3fttp7n.jl:21\n   [2] top-level scope at /tmp/tmpy3fttp7n.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpy3fttp7n.jl:21\n   [2] top-level scope at /tmp/tmpy3fttp7n.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3fttp7n.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n   [2] top-level scope at /tmp/tmpy3fttp7n.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3fttp7n.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpy3fttp7n.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpy3fttp7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpy3fttp7n.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy3fttp7n.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3fttp7n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp0opctel.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp0opctel.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n   [2] top-level scope at /tmp/tmpp0opctel.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp0opctel.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpp0opctel.jl:21\n   [2] top-level scope at /tmp/tmpp0opctel.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpp0opctel.jl:21\n   [2] top-level scope at /tmp/tmpp0opctel.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp0opctel.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n   [2] top-level scope at /tmp/tmpp0opctel.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp0opctel.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpp0opctel.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp0opctel.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp0opctel.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp0opctel.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp0opctel.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"\
    tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpf3n6vqgt.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf3n6vqgt.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2b13pqd.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpc2b13pqd.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc2b13pqd.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpc2b13pqd.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc2b13pqd.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc2b13pqd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2b13pqd.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc2b13pqd.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2b13pqd.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\ntest set: Test Failed at /tmp/tmpc2b13pqd.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2b13pqd.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2b13pqd.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2b13pqd.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbl9hwt8m.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpbl9hwt8m.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpbl9hwt8m.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpbl9hwt8m.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbl9hwt8m.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbl9hwt8m.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbl9hwt8m.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpbl9hwt8m.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbl9hwt8m.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\ntest set: Test Failed at /tmp/tmpbl9hwt8m.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbl9hwt8m.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbl9hwt8m.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbl9hwt8m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6za60sv_.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\\
    n   [2] top-level scope at /tmp/tmp6za60sv_.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\n   [2] top-level scope at /tmp/tmp6za60sv_.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\\
    n   [2] top-level scope at /tmp/tmp6za60sv_.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp6za60sv_.jl:21\\n   [2] top-level scope at /tmp/tmp6za60sv_.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp6za60sv_.jl:21\\n   [2] top-level scope at /tmp/tmp6za60sv_.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\\
    n   [2] top-level scope at /tmp/tmp6za60sv_.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\n   [2] top-level scope at /tmp/tmp6za60sv_.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\\
    n   [2] top-level scope at /tmp/tmp6za60sv_.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6za60sv_.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6za60sv_.jl:21\\\
    n   [2] top-level scope at /tmp/tmp6za60sv_.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6za60sv_.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsaqf_n1c.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpsaqf_n1c.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpsaqf_n1c.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpsaqf_n1c.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsaqf_n1c.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsaqf_n1c.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsaqf_n1c.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpsaqf_n1c.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsaqf_n1c.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\ntest set: Test Failed at /tmp/tmpsaqf_n1c.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpsaqf_n1c.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsaqf_n1c.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsaqf_n1c.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc1_5d98w.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpc1_5d98w.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc1_5d98w.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc1_5d98w.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\ntest set: Test Failed at /tmp/tmpc1_5d98w.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc1_5d98w.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc1_5d98w.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1_5d98w.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqso02cc4.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqso02cc4.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n   [2] top-level scope at /tmp/tmpqso02cc4.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqso02cc4.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqso02cc4.jl:21\n   [2] top-level scope at /tmp/tmpqso02cc4.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqso02cc4.jl:21\n   [2] top-level scope at /tmp/tmpqso02cc4.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqso02cc4.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n   [2] top-level scope at /tmp/tmpqso02cc4.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqso02cc4.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpqso02cc4.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqso02cc4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqso02cc4.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqso02cc4.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqso02cc4.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6e_6pb30.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp6e_6pb30.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp6e_6pb30.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp6e_6pb30.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6e_6pb30.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6e_6pb30.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6e_6pb30.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp6e_6pb30.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6e_6pb30.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\ntest set: Test Failed at /tmp/tmp6e_6pb30.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp6e_6pb30.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6e_6pb30.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6e_6pb30.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2gkgnf1h.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp2gkgnf1h.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp2gkgnf1h.jl:19\n\
    \   [2] top-level scope at /tmp/tmp2gkgnf1h.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2gkgnf1h.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2gkgnf1h.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('A':'Z')\n  \
    \              cap += 1\n            elseif letter in string('a':'z')\n      \
    \          sm += 1\n            end\n        end\n        if cap - sm > strength\n\
    \            strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpesgref30.jl:42\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"Watashi.\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpesgref30.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesgref30.jl:41\ntest set: Test Failed at /tmp/tmpesgref30.jl:43\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"Boku123.32145tggg\" ==\
    \ \"Boku123.YEs.WeCaNe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesgref30.jl:43\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesgref30.jl:41\ntest set: Test Failed at /tmp/tmpesgref30.jl:44\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    __YESIMHERE.123NoooneB321\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpesgref30.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesgref30.jl:41\ntest set: Test Failed at /tmp/tmpesgref30.jl:48\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"finNNalLLly.\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpesgref30.jl:48\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesgref30.jl:41\ntest set: Test Failed at /tmp/tmpesgref30.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.91245\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpesgref30.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesgref30.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     5      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesgref30.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnnipylul.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpnnipylul.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnnipylul.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpnnipylul.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnnipylul.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnnipylul.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnnipylul.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpnnipylul.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnnipylul.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\ntest set: Test Failed at /tmp/tmpnnipylul.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnnipylul.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnnipylul.jl:25\\nTest Summary: | Fail  Total\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        strength_extension = 0\n  \
    \      for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                strength_extension += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                strength_extension -= 1\n            end\n        end\n     \
    \   if strength_extension > strength\n            strength = strength_extension\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpk5zhbfc3.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk5zhbfc3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz2tgbpa5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpz2tgbpa5.jl:21\n   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpz2tgbpa5.jl:21\n   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpz2tgbpa5.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpz2tgbpa5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpz2tgbpa5.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz2tgbpa5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2tgbpa5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = count(isupper, extension)\n\
    \        sm = count(islower, extension)\n        if cap - sm > strength\n    \
    \        strength = cap - sm\n            strongest_extension = extension\n  \
    \      end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw54uoh7n.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpw54uoh7n.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n   [2] top-level scope at /tmp/tmpw54uoh7n.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpw54uoh7n.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpw54uoh7n.jl:21\n   [2] top-level scope at /tmp/tmpw54uoh7n.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpw54uoh7n.jl:21\n   [2] top-level scope at /tmp/tmpw54uoh7n.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpw54uoh7n.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n   [2] top-level scope at /tmp/tmpw54uoh7n.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpw54uoh7n.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpw54uoh7n.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpw54uoh7n.jl:21\n\
    \   [2] top-level scope at /tmp/tmpw54uoh7n.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw54uoh7n.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw54uoh7n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgsbld1cz.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgsbld1cz.jl:21\\n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgsbld1cz.jl:21\\n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:40\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgsbld1cz.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgsbld1cz.jl:21\\\
    n   [2] top-level scope at /tmp/tmpgsbld1cz.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgsbld1cz.jl:33\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        cap = 0\n        sm = 0\n       \
    \ for j in 1:length(extensions[i])\n            if isupper(extensions[i][j])\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest = extensions[i]\n        end\n    end\n    return\
    \ \"$class_name.$strongest\"\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp02113xu2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n\
    \   [2] top-level scope at /tmp/tmp02113xu2.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n   [2] top-level scope at /tmp/tmp02113xu2.jl:43\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n\
    \   [2] top-level scope at /tmp/tmp02113xu2.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp02113xu2.jl:24\n   [2] top-level scope at /tmp/tmp02113xu2.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp02113xu2.jl:24\n   [2] top-level scope at /tmp/tmp02113xu2.jl:46\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n\
    \   [2] top-level scope at /tmp/tmp02113xu2.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:48\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n   [2] top-level scope at /tmp/tmp02113xu2.jl:48\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n\
    \   [2] top-level scope at /tmp/tmp02113xu2.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmp02113xu2.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp02113xu2.jl:24\n\
    \   [2] top-level scope at /tmp/tmp02113xu2.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp02113xu2.jl:41\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp02113xu2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5oeumwal.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n   [2] top-level scope at /tmp/tmp5oeumwal.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n   [2] top-level scope at /tmp/tmp5oeumwal.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n   [2] top-level scope at /tmp/tmp5oeumwal.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeumwal.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5oeumwal.jl:19\n\
    \   [2] top-level scope at /tmp/tmp5oeumwal.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeumwal.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5oeumwal.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkiz7ll74.jl:44\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpkiz7ll74.jl:44\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkiz7ll74.jl:41\ntest set: Test Failed at /tmp/tmpkiz7ll74.jl:46\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkiz7ll74.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkiz7ll74.jl:41\ntest set: Test Failed at /tmp/tmpkiz7ll74.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkiz7ll74.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkiz7ll74.jl:41\ntest set: Test Failed at /tmp/tmpkiz7ll74.jl:50\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkiz7ll74.jl:50\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkiz7ll74.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkiz7ll74.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if isupper(letter)\n            \
    \    cap += 1\n            elseif islower(letter)\n                sm += 1\n \
    \           end\n        end\n        if cap - sm > strength\n            strength\
    \ = cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"\
    tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzf40hewe.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzf40hewe.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n   [2] top-level scope at /tmp/tmpzf40hewe.jl:43\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzf40hewe.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzf40hewe.jl:24\n   [2] top-level scope at /tmp/tmpzf40hewe.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzf40hewe.jl:24\n   [2] top-level scope at /tmp/tmpzf40hewe.jl:46\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzf40hewe.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:48\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n   [2] top-level scope at /tmp/tmpzf40hewe.jl:48\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzf40hewe.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpzf40hewe.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzf40hewe.jl:24\n\
    \   [2] top-level scope at /tmp/tmpzf40hewe.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzf40hewe.jl:41\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzf40hewe.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3l8rorlc.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp3l8rorlc.jl:21\\n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp3l8rorlc.jl:21\\n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3l8rorlc.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3l8rorlc.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3l8rorlc.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3l8rorlc.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        ext = extensions[i]\n   \
    \     cap = sum(isupper.(ext))\n        sm = sum(islower.(ext))\n        if cap\
    \ - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = ext\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4ly1brhk.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\\
    n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\\
    n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4ly1brhk.jl:22\\n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp4ly1brhk.jl:22\\n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:40\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\\
    n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:42\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\\
    n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4ly1brhk.jl:44\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp4ly1brhk.jl:22\\\
    n   [2] top-level scope at /tmp/tmp4ly1brhk.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4ly1brhk.jl:35\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -1\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqnxope1u.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqnxope1u.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n   [2] top-level scope at /tmp/tmpqnxope1u.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqnxope1u.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqnxope1u.jl:21\n   [2] top-level scope at /tmp/tmpqnxope1u.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqnxope1u.jl:21\n   [2] top-level scope at /tmp/tmpqnxope1u.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqnxope1u.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n   [2] top-level scope at /tmp/tmpqnxope1u.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqnxope1u.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqnxope1u.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqnxope1u.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqnxope1u.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqnxope1u.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqnxope1u.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqwp3hbbv.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpqwp3hbbv.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpqwp3hbbv.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpqwp3hbbv.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqwp3hbbv.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqwp3hbbv.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqwp3hbbv.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpqwp3hbbv.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqwp3hbbv.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\ntest set: Test Failed at /tmp/tmpqwp3hbbv.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqwp3hbbv.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqwp3hbbv.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwp3hbbv.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaxi8fnjw.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\\
    n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\\
    n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpaxi8fnjw.jl:21\\n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpaxi8fnjw.jl:21\\n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\\
    n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\\
    n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxi8fnjw.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpaxi8fnjw.jl:21\\\
    n   [2] top-level scope at /tmp/tmpaxi8fnjw.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxi8fnjw.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprzw0abh1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n\
    \   [2] top-level scope at /tmp/tmprzw0abh1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n   [2] top-level scope at /tmp/tmprzw0abh1.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n\
    \   [2] top-level scope at /tmp/tmprzw0abh1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprzw0abh1.jl:21\n   [2] top-level scope at /tmp/tmprzw0abh1.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprzw0abh1.jl:21\n   [2] top-level scope at /tmp/tmprzw0abh1.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n\
    \   [2] top-level scope at /tmp/tmprzw0abh1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n   [2] top-level scope at /tmp/tmprzw0abh1.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n\
    \   [2] top-level scope at /tmp/tmprzw0abh1.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprzw0abh1.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprzw0abh1.jl:21\n\
    \   [2] top-level scope at /tmp/tmprzw0abh1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprzw0abh1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprzw0abh1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpy2yumd6f.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpy2yumd6f.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpy2yumd6f.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpy2yumd6f.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpy2yumd6f.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpy2yumd6f.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpy2yumd6f.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpy2yumd6f.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpy2yumd6f.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\ntest set: Test Failed at /tmp/tmpy2yumd6f.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpy2yumd6f.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpy2yumd6f.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuuffcpp8.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuuffcpp8.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n   [2] top-level scope at /tmp/tmpuuffcpp8.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuuffcpp8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpuuffcpp8.jl:21\n   [2] top-level scope at /tmp/tmpuuffcpp8.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpuuffcpp8.jl:21\n   [2] top-level scope at /tmp/tmpuuffcpp8.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuuffcpp8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n   [2] top-level scope at /tmp/tmpuuffcpp8.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuuffcpp8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpuuffcpp8.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpuuffcpp8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpuuffcpp8.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuuffcpp8.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuffcpp8.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpelb8t3fj.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpelb8t3fj.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n   [2] top-level scope at /tmp/tmpelb8t3fj.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpelb8t3fj.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpelb8t3fj.jl:21\n   [2] top-level scope at /tmp/tmpelb8t3fj.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpelb8t3fj.jl:21\n   [2] top-level scope at /tmp/tmpelb8t3fj.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpelb8t3fj.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n   [2] top-level scope at /tmp/tmpelb8t3fj.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpelb8t3fj.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpelb8t3fj.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpelb8t3fj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpelb8t3fj.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpelb8t3fj.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpelb8t3fj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqd4ha6u9.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqd4ha6u9.jl:21\n   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqd4ha6u9.jl:21\n   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpqd4ha6u9.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqd4ha6u9.jl:21\n\
    \   [2] top-level scope at /tmp/tmpqd4ha6u9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqd4ha6u9.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqd4ha6u9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3bn5vidw.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp3bn5vidw.jl:21\\n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp3bn5vidw.jl:21\\n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:40\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3bn5vidw.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3bn5vidw.jl:21\\\
    n   [2] top-level scope at /tmp/tmp3bn5vidw.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3bn5vidw.jl:33\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        if strength < (sum(isupper.(extensions[i]))\
    \ - sum(islower.(extensions[i])))\n            strength = sum(isupper.(extensions[i]))\
    \ - sum(islower.(extensions[i]))\n            strongest_extension = extensions[i]\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp5ypx3_j.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpp5ypx3_j.jl:21\n   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpp5ypx3_j.jl:21\n   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpp5ypx3_j.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpp5ypx3_j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpp5ypx3_j.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp5ypx3_j.jl:32\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp5ypx3_j.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkjggqdlq.jl:44\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpkjggqdlq.jl:44\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkjggqdlq.jl:41\ntest set: Test Failed at /tmp/tmpkjggqdlq.jl:46\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkjggqdlq.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkjggqdlq.jl:41\ntest set: Test Failed at /tmp/tmpkjggqdlq.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkjggqdlq.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkjggqdlq.jl:41\ntest set: Test Failed at /tmp/tmpkjggqdlq.jl:50\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpkjggqdlq.jl:50\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkjggqdlq.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkjggqdlq.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count_upper(extension)\
    \ - count_lower(extension)\n        if extension_strength > strength\n       \
    \     strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbr7qs8va.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbr7qs8va.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n   [2] top-level scope at /tmp/tmpbr7qs8va.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbr7qs8va.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n   [2] top-level scope at /tmp/tmpbr7qs8va.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n   [2] top-level scope at /tmp/tmpbr7qs8va.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbr7qs8va.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n   [2] top-level scope at /tmp/tmpbr7qs8va.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: count_upper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbr7qs8va.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbr7qs8va.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr7qs8va.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: count_upper not\
    \ defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpbr7qs8va.jl:21\n   [2] top-level scope at /tmp/tmpbr7qs8va.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr7qs8va.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbr7qs8va.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_e9z2zjn.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_e9z2zjn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpocmmg32f.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpocmmg32f.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n   [2] top-level scope at /tmp/tmpocmmg32f.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpocmmg32f.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpocmmg32f.jl:21\n   [2] top-level scope at /tmp/tmpocmmg32f.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpocmmg32f.jl:21\n   [2] top-level scope at /tmp/tmpocmmg32f.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpocmmg32f.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n   [2] top-level scope at /tmp/tmpocmmg32f.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpocmmg32f.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpocmmg32f.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpocmmg32f.jl:21\n\
    \   [2] top-level scope at /tmp/tmpocmmg32f.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpocmmg32f.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocmmg32f.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5m6cwoar.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5m6cwoar.jl:21\\n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp5m6cwoar.jl:21\\n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5m6cwoar.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp5m6cwoar.jl:21\\\
    n   [2] top-level scope at /tmp/tmp5m6cwoar.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5m6cwoar.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzuyh4ys8.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzuyh4ys8.jl:21\n   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzuyh4ys8.jl:21\n   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzuyh4ys8.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzuyh4ys8.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzuyh4ys8.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzuyh4ys8.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzuyh4ys8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfyz4cz_4.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfyz4cz_4.jl:21\n   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfyz4cz_4.jl:21\n   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfyz4cz_4.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfyz4cz_4.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfyz4cz_4.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfyz4cz_4.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfyz4cz_4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbvfwble2.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbvfwble2.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n   [2] top-level scope at /tmp/tmpbvfwble2.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbvfwble2.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpbvfwble2.jl:21\n   [2] top-level scope at /tmp/tmpbvfwble2.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpbvfwble2.jl:21\n   [2] top-level scope at /tmp/tmpbvfwble2.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbvfwble2.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n   [2] top-level scope at /tmp/tmpbvfwble2.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbvfwble2.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvfwble2.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpbvfwble2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpbvfwble2.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvfwble2.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvfwble2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for ext in extensions\n        cap = 0\n        sm = 0\n        for c in\
    \ ext\n            if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            elseif c in 'abcdefghijklmnopqrstuvwxyz'\n                sm\
    \ += 1\n            end\n        end\n        if cap - sm > strength\n       \
    \     strength = cap - sm\n            strongest = ext\n        end\n    end\n\
    \    return \"$class_name.$strongest\"\nend\nusing Test\n\n@testset begin\n\n\
    candidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgvcnl4_l.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgvcnl4_l.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq0ix73c2.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq0ix73c2.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n   [2] top-level scope at /tmp/tmpq0ix73c2.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq0ix73c2.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq0ix73c2.jl:21\n   [2] top-level scope at /tmp/tmpq0ix73c2.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq0ix73c2.jl:21\n   [2] top-level scope at /tmp/tmpq0ix73c2.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq0ix73c2.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n   [2] top-level scope at /tmp/tmpq0ix73c2.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq0ix73c2.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0ix73c2.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq0ix73c2.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq0ix73c2.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0ix73c2.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0ix73c2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmptuqghj1e.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptuqghj1e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvv8x9qis.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpvv8x9qis.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpvv8x9qis.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpvv8x9qis.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvv8x9qis.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvv8x9qis.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvv8x9qis.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpvv8x9qis.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvv8x9qis.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\ntest set: Test Failed at /tmp/tmpvv8x9qis.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpvv8x9qis.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvv8x9qis.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvv8x9qis.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplcu_n39d.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmplcu_n39d.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmplcu_n39d.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmplcu_n39d.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplcu_n39d.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplcu_n39d.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmplcu_n39d.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmplcu_n39d.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmplcu_n39d.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\ntest set: Test Failed at /tmp/tmplcu_n39d.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmplcu_n39d.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplcu_n39d.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplcu_n39d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        if strength < (count_upper(extension)\
    \ - count_lower(extension))\n            strength = count_upper(extension) - count_lower(extension)\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3izruow8.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp3izruow8.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n   [2] top-level scope at /tmp/tmp3izruow8.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp3izruow8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n   [2] top-level scope at /tmp/tmp3izruow8.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n   [2] top-level scope at /tmp/tmp3izruow8.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp3izruow8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n   [2] top-level scope at /tmp/tmp3izruow8.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: count_upper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp3izruow8.jl:21\n\
    \   [2] top-level scope at /tmp/tmp3izruow8.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3izruow8.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: count_upper not\
    \ defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp3izruow8.jl:21\n   [2] top-level scope at /tmp/tmp3izruow8.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3izruow8.jl:32\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3izruow8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in extensions\n        if count_upper(i) - count_lower(i) > strength\n\
    \            strength = count_upper(i) - count_lower(i)\n            strongest\
    \ = i\n        end\n    end\n    return class_name * \".\" * strongest\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp24p03lyk.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n\
    \   [2] top-level scope at /tmp/tmp24p03lyk.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n   [2] top-level scope at /tmp/tmp24p03lyk.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n\
    \   [2] top-level scope at /tmp/tmp24p03lyk.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n   [2] top-level scope at /tmp/tmp24p03lyk.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n   [2] top-level scope at /tmp/tmp24p03lyk.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: count_upper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n\
    \   [2] top-level scope at /tmp/tmp24p03lyk.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: count_upper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n   [2] top-level scope at /tmp/tmp24p03lyk.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: count_upper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp24p03lyk.jl:21\n\
    \   [2] top-level scope at /tmp/tmp24p03lyk.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp24p03lyk.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: count_upper not\
    \ defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp24p03lyk.jl:21\n   [2] top-level scope at /tmp/tmp24p03lyk.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24p03lyk.jl:32\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp24p03lyk.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp6ddguqxj.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6ddguqxj.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return \"$class_name.$strongest_extension\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzds3qyea.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzds3qyea.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n   [2] top-level scope at /tmp/tmpzds3qyea.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzds3qyea.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzds3qyea.jl:21\n   [2] top-level scope at /tmp/tmpzds3qyea.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzds3qyea.jl:21\n   [2] top-level scope at /tmp/tmpzds3qyea.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzds3qyea.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n   [2] top-level scope at /tmp/tmpzds3qyea.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzds3qyea.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzds3qyea.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzds3qyea.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzds3qyea.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzds3qyea.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzds3qyea.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = []\n    for i in extensions\n\
    \        strength = push!(strength, count(isupper, i) - count(islower, i))\n \
    \   end\n    return class_name * \".\" * extensions[argmax(strength)]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpce1zxb7l.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n\
    \   [2] top-level scope at /tmp/tmpce1zxb7l.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n   [2] top-level scope at /tmp/tmpce1zxb7l.jl:30\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n\
    \   [2] top-level scope at /tmp/tmpce1zxb7l.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpce1zxb7l.jl:20\n   [2] top-level scope at /tmp/tmpce1zxb7l.jl:32\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpce1zxb7l.jl:20\n   [2] top-level scope at /tmp/tmpce1zxb7l.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n\
    \   [2] top-level scope at /tmp/tmpce1zxb7l.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n   [2] top-level scope at /tmp/tmpce1zxb7l.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n\
    \   [2] top-level scope at /tmp/tmpce1zxb7l.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpce1zxb7l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpce1zxb7l.jl:20\n\
    \   [2] top-level scope at /tmp/tmpce1zxb7l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpce1zxb7l.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpce1zxb7l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmeh5t99d.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmeh5t99d.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n   [2] top-level scope at /tmp/tmpmeh5t99d.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmeh5t99d.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpmeh5t99d.jl:21\n   [2] top-level scope at /tmp/tmpmeh5t99d.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpmeh5t99d.jl:21\n   [2] top-level scope at /tmp/tmpmeh5t99d.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmeh5t99d.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n   [2] top-level scope at /tmp/tmpmeh5t99d.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmeh5t99d.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmeh5t99d.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmeh5t99d.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmeh5t99d.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmeh5t99d.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmeh5t99d.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strengths = [sum(isupper.(ext)) -\
    \ sum(islower.(ext)) for ext in extensions]\n    strongest_ext = extensions[argmax(strengths)]\n\
    \    return \"$class_name.$strongest_ext\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpffukj_i7.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#3#4\")(::String) at ./none:0\\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at\
    \ ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1}) at\
    \ /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:27\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] (::var\"#3#4\"\
    )(::String) at ./none:0\\n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3]\
    \ collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at ./array.jl:665\\n\
    \   [4] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpffukj_i7.jl:18\\\
    n   [5] top-level scope at /tmp/tmpffukj_i7.jl:28\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#3#4\")(::String) at ./none:0\\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at\
    \ ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1}) at\
    \ /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:29\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] (::var\"#3#4\")(::String) at ./none:0\\\
    n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:30\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] (::var\"#3#4\")(::String) at ./none:0\\\
    n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:31\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] (::var\"#3#4\")(::String) at ./none:0\\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at\
    \ ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1}) at\
    \ /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:32\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] (::var\"#3#4\"\
    )(::String) at ./none:0\\n   [2] iterate at ./generator.jl:47 [inlined]\\n   [3]\
    \ collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at ./array.jl:665\\n\
    \   [4] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpffukj_i7.jl:18\\\
    n   [5] top-level scope at /tmp/tmpffukj_i7.jl:33\\n   [6] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] (::var\"#3#4\")(::String) at ./none:0\\n   [2] iterate\
    \ at ./generator.jl:47 [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:34\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpffukj_i7.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] (::var\"#3#4\")(::String) at ./none:0\\n   [2] iterate\
    \ at ./generator.jl:47 [inlined]\\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpffukj_i7.jl:18\\n   [5] top-level scope at /tmp/tmpffukj_i7.jl:35\\\
    n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [7] top-level scope at /tmp/tmpffukj_i7.jl:26\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('A':'Z')\n  \
    \              cap += 1\n            elseif letter in string('a':'z')\n      \
    \          sm += 1\n            end\n        end\n        if cap - sm > strength\n\
    \            strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return \"$class_name.$strongest_extension\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpakd83i_z.jl:42\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"Watashi.\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpakd83i_z.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpakd83i_z.jl:41\ntest set: Test Failed at /tmp/tmpakd83i_z.jl:43\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"Boku123.32145tggg\" ==\
    \ \"Boku123.YEs.WeCaNe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpakd83i_z.jl:43\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpakd83i_z.jl:41\ntest set: Test Failed at /tmp/tmpakd83i_z.jl:44\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    __YESIMHERE.123NoooneB321\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpakd83i_z.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpakd83i_z.jl:41\ntest set: Test Failed at /tmp/tmpakd83i_z.jl:48\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"finNNalLLly.\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpakd83i_z.jl:48\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpakd83i_z.jl:41\ntest set: Test Failed at /tmp/tmpakd83i_z.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.91245\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpakd83i_z.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpakd83i_z.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     5      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakd83i_z.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcl06tsyb.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpcl06tsyb.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n   [2] top-level scope at /tmp/tmpcl06tsyb.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpcl06tsyb.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpcl06tsyb.jl:21\n   [2] top-level scope at /tmp/tmpcl06tsyb.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpcl06tsyb.jl:21\n   [2] top-level scope at /tmp/tmpcl06tsyb.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpcl06tsyb.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n   [2] top-level scope at /tmp/tmpcl06tsyb.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpcl06tsyb.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpcl06tsyb.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcl06tsyb.jl:21\n\
    \   [2] top-level scope at /tmp/tmpcl06tsyb.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcl06tsyb.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcl06tsyb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp51frnfcv.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp51frnfcv.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n   [2] top-level scope at /tmp/tmp51frnfcv.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp51frnfcv.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp51frnfcv.jl:21\n   [2] top-level scope at /tmp/tmp51frnfcv.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp51frnfcv.jl:21\n   [2] top-level scope at /tmp/tmp51frnfcv.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp51frnfcv.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n   [2] top-level scope at /tmp/tmp51frnfcv.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp51frnfcv.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp51frnfcv.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp51frnfcv.jl:21\n\
    \   [2] top-level scope at /tmp/tmp51frnfcv.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp51frnfcv.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51frnfcv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq1pxbmzd.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpq1pxbmzd.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpq1pxbmzd.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpq1pxbmzd.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\ntest set: Test Failed at /tmp/tmpq1pxbmzd.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq1pxbmzd.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq1pxbmzd.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk90ne0d5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk90ne0d5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n   [2] top-level scope at /tmp/tmpk90ne0d5.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk90ne0d5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpk90ne0d5.jl:21\n   [2] top-level scope at /tmp/tmpk90ne0d5.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpk90ne0d5.jl:21\n   [2] top-level scope at /tmp/tmpk90ne0d5.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk90ne0d5.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n   [2] top-level scope at /tmp/tmpk90ne0d5.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk90ne0d5.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpk90ne0d5.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpk90ne0d5.jl:21\n\
    \   [2] top-level scope at /tmp/tmpk90ne0d5.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk90ne0d5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk90ne0d5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwng1vjpm.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:27\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    \" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:28\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpwng1vjpm.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"\" == \"__HAHA.123\"\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpwng1vjpm.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:31\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwng1vjpm.jl:32\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\ntest set: Test Failed at /tmp/tmpwng1vjpm.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwng1vjpm.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwng1vjpm.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    9      9\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjjcq4f1k.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpjjcq4f1k.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpjjcq4f1k.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpjjcq4f1k.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\ntest set: Test Failed at /tmp/tmpjjcq4f1k.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjjcq4f1k.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjjcq4f1k.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmph3bwu_1o.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph3bwu_1o.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        if extension[1] in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \            cap = length(extension)\n        else\n            cap = 0\n    \
    \    end\n        if extension[1] in string('abcdefghijklmnopqrstuvwxyz')\n  \
    \          sm = length(extension)\n        else\n            sm = 0\n        end\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpqdfcrogd.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqdfcrogd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ulz7bco.jl:44\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp0ulz7bco.jl:44\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ulz7bco.jl:41\ntest set: Test Failed at /tmp/tmp0ulz7bco.jl:46\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ulz7bco.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ulz7bco.jl:41\ntest set: Test Failed at /tmp/tmp0ulz7bco.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0ulz7bco.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ulz7bco.jl:41\ntest set: Test Failed at /tmp/tmp0ulz7bco.jl:50\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp0ulz7bco.jl:50\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ulz7bco.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ulz7bco.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        current_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if current_strength > strength\n       \
    \     strength = current_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplv8x5p51.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n\
    \   [2] top-level scope at /tmp/tmplv8x5p51.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n   [2] top-level scope at /tmp/tmplv8x5p51.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n\
    \   [2] top-level scope at /tmp/tmplv8x5p51.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplv8x5p51.jl:21\n   [2] top-level scope at /tmp/tmplv8x5p51.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplv8x5p51.jl:21\n   [2] top-level scope at /tmp/tmplv8x5p51.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n\
    \   [2] top-level scope at /tmp/tmplv8x5p51.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n   [2] top-level scope at /tmp/tmplv8x5p51.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n\
    \   [2] top-level scope at /tmp/tmplv8x5p51.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmplv8x5p51.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplv8x5p51.jl:21\n\
    \   [2] top-level scope at /tmp/tmplv8x5p51.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplv8x5p51.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplv8x5p51.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpek9_5k7y.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\\
    n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:35\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\\
    n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpek9_5k7y.jl:21\\n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:37\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpek9_5k7y.jl:21\\n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\\
    n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:40\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\\
    n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpek9_5k7y.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpek9_5k7y.jl:21\\\
    n   [2] top-level scope at /tmp/tmpek9_5k7y.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpek9_5k7y.jl:33\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq18g_o0t.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq18g_o0t.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n   [2] top-level scope at /tmp/tmpq18g_o0t.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq18g_o0t.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq18g_o0t.jl:21\n   [2] top-level scope at /tmp/tmpq18g_o0t.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq18g_o0t.jl:21\n   [2] top-level scope at /tmp/tmpq18g_o0t.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq18g_o0t.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n   [2] top-level scope at /tmp/tmpq18g_o0t.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq18g_o0t.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq18g_o0t.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq18g_o0t.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq18g_o0t.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq18g_o0t.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq18g_o0t.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ze7oq6i.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp1ze7oq6i.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp1ze7oq6i.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp1ze7oq6i.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1ze7oq6i.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ze7oq6i.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ze7oq6i.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp1ze7oq6i.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ze7oq6i.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\ntest set: Test Failed at /tmp/tmp1ze7oq6i.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ze7oq6i.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ze7oq6i.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ze7oq6i.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfsvm28h6.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfsvm28h6.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n   [2] top-level scope at /tmp/tmpfsvm28h6.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfsvm28h6.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfsvm28h6.jl:21\n   [2] top-level scope at /tmp/tmpfsvm28h6.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpfsvm28h6.jl:21\n   [2] top-level scope at /tmp/tmpfsvm28h6.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfsvm28h6.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n   [2] top-level scope at /tmp/tmpfsvm28h6.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfsvm28h6.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsvm28h6.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpfsvm28h6.jl:21\n\
    \   [2] top-level scope at /tmp/tmpfsvm28h6.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsvm28h6.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsvm28h6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpil3jealv.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpil3jealv.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n   [2] top-level scope at /tmp/tmpil3jealv.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpil3jealv.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpil3jealv.jl:21\n   [2] top-level scope at /tmp/tmpil3jealv.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpil3jealv.jl:21\n   [2] top-level scope at /tmp/tmpil3jealv.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpil3jealv.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n   [2] top-level scope at /tmp/tmpil3jealv.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpil3jealv.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpil3jealv.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpil3jealv.jl:21\n\
    \   [2] top-level scope at /tmp/tmpil3jealv.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpil3jealv.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpil3jealv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu00ujmwc.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpu00ujmwc.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpu00ujmwc.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpu00ujmwc.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu00ujmwc.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu00ujmwc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu00ujmwc.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpu00ujmwc.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu00ujmwc.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\ntest set: Test Failed at /tmp/tmpu00ujmwc.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpu00ujmwc.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu00ujmwc.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu00ujmwc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd0lmsd4e.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpd0lmsd4e.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpd0lmsd4e.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpd0lmsd4e.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd0lmsd4e.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd0lmsd4e.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd0lmsd4e.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpd0lmsd4e.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd0lmsd4e.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\ntest set: Test Failed at /tmp/tmpd0lmsd4e.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpd0lmsd4e.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd0lmsd4e.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd0lmsd4e.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9yg0jtpx.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp9yg0jtpx.jl:21\n   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp9yg0jtpx.jl:21\n   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp9yg0jtpx.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp9yg0jtpx.jl:21\n\
    \   [2] top-level scope at /tmp/tmp9yg0jtpx.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9yg0jtpx.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yg0jtpx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb5v_6km3.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb5v_6km3.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n   [2] top-level scope at /tmp/tmpb5v_6km3.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb5v_6km3.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpb5v_6km3.jl:21\n   [2] top-level scope at /tmp/tmpb5v_6km3.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpb5v_6km3.jl:21\n   [2] top-level scope at /tmp/tmpb5v_6km3.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb5v_6km3.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n   [2] top-level scope at /tmp/tmpb5v_6km3.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb5v_6km3.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpb5v_6km3.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpb5v_6km3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpb5v_6km3.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb5v_6km3.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5v_6km3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvijor8m1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvijor8m1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n   [2] top-level scope at /tmp/tmpvijor8m1.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvijor8m1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvijor8m1.jl:21\n   [2] top-level scope at /tmp/tmpvijor8m1.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvijor8m1.jl:21\n   [2] top-level scope at /tmp/tmpvijor8m1.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvijor8m1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n   [2] top-level scope at /tmp/tmpvijor8m1.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvijor8m1.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpvijor8m1.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvijor8m1.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvijor8m1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvijor8m1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvijor8m1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph3zxepf3.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmph3zxepf3.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3zxepf3.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmph3zxepf3.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmph3zxepf3.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmph3zxepf3.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3zxepf3.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmph3zxepf3.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3zxepf3.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\ntest set: Test Failed at /tmp/tmph3zxepf3.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmph3zxepf3.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmph3zxepf3.jl:25\\nTest Summary: | Fail  Total\\\
    ntest set      |    9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmuaq7_3j.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpmuaq7_3j.jl:21\n   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpmuaq7_3j.jl:21\n   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpmuaq7_3j.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpmuaq7_3j.jl:21\n\
    \   [2] top-level scope at /tmp/tmpmuaq7_3j.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmuaq7_3j.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmuaq7_3j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        CAP = sum(isupper.(extension))\n\
    \        SM = sum(islower.(extension))\n        if CAP - SM > strength\n     \
    \       strength = CAP - SM\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprp6ofg__.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n\
    \   [2] top-level scope at /tmp/tmprp6ofg__.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n   [2] top-level scope at /tmp/tmprp6ofg__.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n\
    \   [2] top-level scope at /tmp/tmprp6ofg__.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprp6ofg__.jl:21\n   [2] top-level scope at /tmp/tmprp6ofg__.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmprp6ofg__.jl:21\n   [2] top-level scope at /tmp/tmprp6ofg__.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n\
    \   [2] top-level scope at /tmp/tmprp6ofg__.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n   [2] top-level scope at /tmp/tmprp6ofg__.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n\
    \   [2] top-level scope at /tmp/tmprp6ofg__.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmprp6ofg__.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmprp6ofg__.jl:21\n\
    \   [2] top-level scope at /tmp/tmprp6ofg__.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprp6ofg__.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprp6ofg__.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpezk_8q0b.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpezk_8q0b.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpezk_8q0b.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpezk_8q0b.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpezk_8q0b.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpezk_8q0b.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpezk_8q0b.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpezk_8q0b.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpezk_8q0b.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\ntest set: Test Failed at /tmp/tmpezk_8q0b.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpezk_8q0b.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpezk_8q0b.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        extension = extensions[i]\n\
    \        cap = 0\n        sm = 0\n        for j in 1:length(extension)\n     \
    \       if extension[j] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            else\n                sm += 1\n            end\n        end\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_hf7g0_b.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_hf7g0_b.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzpytxz2m.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzpytxz2m.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n   [2] top-level scope at /tmp/tmpzpytxz2m.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzpytxz2m.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzpytxz2m.jl:21\n   [2] top-level scope at /tmp/tmpzpytxz2m.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpzpytxz2m.jl:21\n   [2] top-level scope at /tmp/tmpzpytxz2m.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzpytxz2m.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n   [2] top-level scope at /tmp/tmpzpytxz2m.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzpytxz2m.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpzpytxz2m.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpzpytxz2m.jl:21\n\
    \   [2] top-level scope at /tmp/tmpzpytxz2m.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzpytxz2m.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzpytxz2m.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpclxpqg1g.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\\
    n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\\
    n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpclxpqg1g.jl:21\\n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpclxpqg1g.jl:21\\n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\\
    n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\\
    n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpclxpqg1g.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpclxpqg1g.jl:21\\\
    n   [2] top-level scope at /tmp/tmpclxpqg1g.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpclxpqg1g.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpzh6m0xvv.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzh6m0xvv.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkrkt509h.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkrkt509h.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n   [2] top-level scope at /tmp/tmpkrkt509h.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkrkt509h.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpkrkt509h.jl:21\n   [2] top-level scope at /tmp/tmpkrkt509h.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpkrkt509h.jl:21\n   [2] top-level scope at /tmp/tmpkrkt509h.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkrkt509h.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n   [2] top-level scope at /tmp/tmpkrkt509h.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkrkt509h.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrkt509h.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpkrkt509h.jl:21\n\
    \   [2] top-level scope at /tmp/tmpkrkt509h.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrkt509h.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrkt509h.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ne4_4m5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp1ne4_4m5.jl:21\n   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp1ne4_4m5.jl:21\n   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ne4_4m5.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp1ne4_4m5.jl:21\n\
    \   [2] top-level scope at /tmp/tmp1ne4_4m5.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ne4_4m5.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ne4_4m5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplflyg2wl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n\
    \   [2] top-level scope at /tmp/tmplflyg2wl.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n   [2] top-level scope at /tmp/tmplflyg2wl.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n\
    \   [2] top-level scope at /tmp/tmplflyg2wl.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplflyg2wl.jl:21\n   [2] top-level scope at /tmp/tmplflyg2wl.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmplflyg2wl.jl:21\n   [2] top-level scope at /tmp/tmplflyg2wl.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n\
    \   [2] top-level scope at /tmp/tmplflyg2wl.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n   [2] top-level scope at /tmp/tmplflyg2wl.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n\
    \   [2] top-level scope at /tmp/tmplflyg2wl.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmplflyg2wl.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplflyg2wl.jl:21\n\
    \   [2] top-level scope at /tmp/tmplflyg2wl.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplflyg2wl.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplflyg2wl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyrmjk1vo.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyrmjk1vo.jl:21\n   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyrmjk1vo.jl:21\n   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyrmjk1vo.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyrmjk1vo.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyrmjk1vo.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyrmjk1vo.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyrmjk1vo.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ikujtue.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp1ikujtue.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1ikujtue.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ikujtue.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\ntest set: Test Failed at /tmp/tmp1ikujtue.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1ikujtue.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1ikujtue.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ikujtue.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        cap = 0\n        sm = 0\n       \
    \ for j in 1:length(extensions[i])\n            if isupper(extensions[i][j])\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest = extensions[i]\n        end\n    end\n    return\
    \ class_name * \".\" * strongest\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyty7ck8e.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n\
    \   [2] top-level scope at /tmp/tmpyty7ck8e.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n   [2] top-level scope at /tmp/tmpyty7ck8e.jl:43\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n\
    \   [2] top-level scope at /tmp/tmpyty7ck8e.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyty7ck8e.jl:24\n   [2] top-level scope at /tmp/tmpyty7ck8e.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyty7ck8e.jl:24\n   [2] top-level scope at /tmp/tmpyty7ck8e.jl:46\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n\
    \   [2] top-level scope at /tmp/tmpyty7ck8e.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:48\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n   [2] top-level scope at /tmp/tmpyty7ck8e.jl:48\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n\
    \   [2] top-level scope at /tmp/tmpyty7ck8e.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpyty7ck8e.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyty7ck8e.jl:24\n\
    \   [2] top-level scope at /tmp/tmpyty7ck8e.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyty7ck8e.jl:41\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyty7ck8e.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq65tuidj.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq65tuidj.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n   [2] top-level scope at /tmp/tmpq65tuidj.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq65tuidj.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq65tuidj.jl:21\n   [2] top-level scope at /tmp/tmpq65tuidj.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpq65tuidj.jl:21\n   [2] top-level scope at /tmp/tmpq65tuidj.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq65tuidj.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n   [2] top-level scope at /tmp/tmpq65tuidj.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq65tuidj.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpq65tuidj.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpq65tuidj.jl:21\n\
    \   [2] top-level scope at /tmp/tmpq65tuidj.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq65tuidj.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq65tuidj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = length(filter(isupper,\
    \ extension))\n        sm = length(filter(islower, extension))\n        if cap\
    \ - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm4490uc7.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm4490uc7.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n   [2] top-level scope at /tmp/tmpm4490uc7.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm4490uc7.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpm4490uc7.jl:21\n   [2] top-level scope at /tmp/tmpm4490uc7.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpm4490uc7.jl:21\n   [2] top-level scope at /tmp/tmpm4490uc7.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm4490uc7.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n   [2] top-level scope at /tmp/tmpm4490uc7.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm4490uc7.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpm4490uc7.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm4490uc7.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm4490uc7.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm4490uc7.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm4490uc7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc5961wrl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n\
    \   [2] top-level scope at /tmp/tmpc5961wrl.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n   [2] top-level scope at /tmp/tmpc5961wrl.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n\
    \   [2] top-level scope at /tmp/tmpc5961wrl.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpc5961wrl.jl:21\n   [2] top-level scope at /tmp/tmpc5961wrl.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpc5961wrl.jl:21\n   [2] top-level scope at /tmp/tmpc5961wrl.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n\
    \   [2] top-level scope at /tmp/tmpc5961wrl.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n   [2] top-level scope at /tmp/tmpc5961wrl.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n\
    \   [2] top-level scope at /tmp/tmpc5961wrl.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpc5961wrl.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc5961wrl.jl:21\n\
    \   [2] top-level scope at /tmp/tmpc5961wrl.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc5961wrl.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc5961wrl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc0byedkz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n   [2] top-level scope at /tmp/tmpc0byedkz.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n   [2] top-level scope at /tmp/tmpc0byedkz.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n   [2] top-level scope at /tmp/tmpc0byedkz.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpc0byedkz.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpc0byedkz.jl:19\n\
    \   [2] top-level scope at /tmp/tmpc0byedkz.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc0byedkz.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc0byedkz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6yudecq9.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6yudecq9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n   [2] top-level scope at /tmp/tmp6yudecq9.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6yudecq9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp6yudecq9.jl:21\n   [2] top-level scope at /tmp/tmp6yudecq9.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp6yudecq9.jl:21\n   [2] top-level scope at /tmp/tmp6yudecq9.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6yudecq9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n   [2] top-level scope at /tmp/tmp6yudecq9.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6yudecq9.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp6yudecq9.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp6yudecq9.jl:21\n\
    \   [2] top-level scope at /tmp/tmp6yudecq9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6yudecq9.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6yudecq9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpegy_2zs3.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpegy_2zs3.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n   [2] top-level scope at /tmp/tmpegy_2zs3.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpegy_2zs3.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpegy_2zs3.jl:21\n   [2] top-level scope at /tmp/tmpegy_2zs3.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpegy_2zs3.jl:21\n   [2] top-level scope at /tmp/tmpegy_2zs3.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpegy_2zs3.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n   [2] top-level scope at /tmp/tmpegy_2zs3.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpegy_2zs3.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpegy_2zs3.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpegy_2zs3.jl:21\n\
    \   [2] top-level scope at /tmp/tmpegy_2zs3.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpegy_2zs3.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpegy_2zs3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if isupper(letter)\n            \
    \    cap += 1\n            else\n                sm += 1\n            end\n  \
    \      end\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvfbqbjdf.jl:42\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:43\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:45\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvfbqbjdf.jl:24\n   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:46\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvfbqbjdf.jl:24\n   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:46\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:47\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:48\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:48\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:49\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfbqbjdf.jl:50\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvfbqbjdf.jl:24\n\
    \   [2] top-level scope at /tmp/tmpvfbqbjdf.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfbqbjdf.jl:41\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfbqbjdf.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpao3tee3v.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\\
    n   [2] top-level scope at /tmp/tmpao3tee3v.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\n   [2] top-level scope at /tmp/tmpao3tee3v.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\\
    n   [2] top-level scope at /tmp/tmpao3tee3v.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpao3tee3v.jl:21\\n   [2] top-level scope at /tmp/tmpao3tee3v.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpao3tee3v.jl:21\\n   [2] top-level scope at /tmp/tmpao3tee3v.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\\
    n   [2] top-level scope at /tmp/tmpao3tee3v.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\n   [2] top-level scope at /tmp/tmpao3tee3v.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\\
    n   [2] top-level scope at /tmp/tmpao3tee3v.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpao3tee3v.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpao3tee3v.jl:21\\\
    n   [2] top-level scope at /tmp/tmpao3tee3v.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpao3tee3v.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_tvpznv4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n   [2] top-level scope at /tmp/tmp_tvpznv4.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n   [2] top-level scope at /tmp/tmp_tvpznv4.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n   [2] top-level scope at /tmp/tmp_tvpznv4.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp_tvpznv4.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_tvpznv4.jl:19\n\
    \   [2] top-level scope at /tmp/tmp_tvpznv4.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_tvpznv4.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_tvpznv4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwu5gnqvc.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpwu5gnqvc.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpwu5gnqvc.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpwu5gnqvc.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwu5gnqvc.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwu5gnqvc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwu5gnqvc.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpwu5gnqvc.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwu5gnqvc.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\ntest set: Test Failed at /tmp/tmpwu5gnqvc.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpwu5gnqvc.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwu5gnqvc.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwu5gnqvc.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4jp03gu3.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp4jp03gu3.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp4jp03gu3.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp4jp03gu3.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4jp03gu3.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4jp03gu3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4jp03gu3.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp4jp03gu3.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4jp03gu3.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\ntest set: Test Failed at /tmp/tmp4jp03gu3.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4jp03gu3.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4jp03gu3.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4jp03gu3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        cap = 0\n        sm = 0\n       \
    \ for j in 1:length(extensions[i])\n            if isupper(extensions[i][j])\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest = extensions[i]\n        end\n    end\n    return\
    \ class_name * \".\" * strongest\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"\
    eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\", [\"nani\"\
    , \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\"\
    , \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\",\
    \ \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\
    )\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) ==\
    \ \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\
    )\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj2xucoyu.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:43\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:44\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:45\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpj2xucoyu.jl:24\\n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:45\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:46\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpj2xucoyu.jl:24\\n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:46\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:47\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:47\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:48\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:48\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:49\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:49\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj2xucoyu.jl:50\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpj2xucoyu.jl:24\\\
    n   [2] top-level scope at /tmp/tmpj2xucoyu.jl:50\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj2xucoyu.jl:41\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strengths = [sum(isupper.(ext)) -\
    \ sum(islower.(ext)) for ext in extensions]\n    strongest_ext = extensions[argmax(strengths)]\n\
    \    return \"$class_name.$strongest_ext\"\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"tEN\", \"\
    niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"Boku123\"\
    , [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppt959aln.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ (::var\"#3#4\")(::String) at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n\
    \   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at ./array.jl:665\n\
    \   [4] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppt959aln.jl:18\n\
    \   [5] top-level scope at /tmp/tmppt959aln.jl:27\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:28\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at\
    \ ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppt959aln.jl:18\n\
    \   [5] top-level scope at /tmp/tmppt959aln.jl:29\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n\
    \   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:30\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n\
    \   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:31\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] (::var\"#3#4\")(::String) at ./none:0\n   [2] iterate at ./generator.jl:47\
    \ [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"#3#4\"}) at\
    \ ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppt959aln.jl:18\n\
    \   [5] top-level scope at /tmp/tmppt959aln.jl:32\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] (::var\"#3#4\")(::String)\
    \ at ./none:0\n   [2] iterate at ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:33\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2] iterate at\
    \ ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:34\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppt959aln.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] (::var\"#3#4\")(::String) at ./none:0\n   [2] iterate at\
    \ ./generator.jl:47 [inlined]\n   [3] collect(::Base.Generator{Array{String,1},var\"\
    #3#4\"}) at ./array.jl:665\n   [4] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppt959aln.jl:18\n   [5] top-level scope at /tmp/tmppt959aln.jl:35\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmppt959aln.jl:26\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppt959aln.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        if strength < count_uppercase(extensions[i])\
    \ - count_lowercase(extensions[i])\n            strength = count_uppercase(extensions[i])\
    \ - count_lowercase(extensions[i])\n            strongest = extensions[i]\n  \
    \      end\n    end\n    return \"$class_name.$strongest\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeywcvh3r.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: count_uppercase not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpeywcvh3r.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: count_uppercase not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n   [2] top-level scope at /tmp/tmpeywcvh3r.jl:34\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: count_uppercase not defined\n \
    \ Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpeywcvh3r.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ count_uppercase not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n   [2] top-level scope at /tmp/tmpeywcvh3r.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ count_uppercase not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n   [2] top-level scope at /tmp/tmpeywcvh3r.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: count_uppercase not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpeywcvh3r.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: count_uppercase not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n   [2] top-level scope at /tmp/tmpeywcvh3r.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: count_uppercase not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpeywcvh3r.jl:21\n\
    \   [2] top-level scope at /tmp/tmpeywcvh3r.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpeywcvh3r.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: count_uppercase\
    \ not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpeywcvh3r.jl:21\n   [2] top-level scope at /tmp/tmpeywcvh3r.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeywcvh3r.jl:32\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeywcvh3r.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp3o_uqzf1.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3o_uqzf1.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0e5494q1.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0e5494q1.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n   [2] top-level scope at /tmp/tmp0e5494q1.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0e5494q1.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp0e5494q1.jl:21\n   [2] top-level scope at /tmp/tmp0e5494q1.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp0e5494q1.jl:21\n   [2] top-level scope at /tmp/tmp0e5494q1.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0e5494q1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n   [2] top-level scope at /tmp/tmp0e5494q1.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0e5494q1.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp0e5494q1.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp0e5494q1.jl:21\n\
    \   [2] top-level scope at /tmp/tmp0e5494q1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0e5494q1.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0e5494q1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazqro3dt.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpazqro3dt.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n   [2] top-level scope at /tmp/tmpazqro3dt.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpazqro3dt.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpazqro3dt.jl:21\n   [2] top-level scope at /tmp/tmpazqro3dt.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpazqro3dt.jl:21\n   [2] top-level scope at /tmp/tmpazqro3dt.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpazqro3dt.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n   [2] top-level scope at /tmp/tmpazqro3dt.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpazqro3dt.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpazqro3dt.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpazqro3dt.jl:21\n\
    \   [2] top-level scope at /tmp/tmpazqro3dt.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazqro3dt.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazqro3dt.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3rdo2vs.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpp3rdo2vs.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpp3rdo2vs.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpp3rdo2vs.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp3rdo2vs.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp3rdo2vs.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp3rdo2vs.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpp3rdo2vs.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp3rdo2vs.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\ntest set: Test Failed at /tmp/tmpp3rdo2vs.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpp3rdo2vs.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp3rdo2vs.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3rdo2vs.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplpcfzzu5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n   [2] top-level scope at /tmp/tmplpcfzzu5.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n   [2] top-level scope at /tmp/tmplpcfzzu5.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n   [2] top-level scope at /tmp/tmplpcfzzu5.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmplpcfzzu5.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmplpcfzzu5.jl:19\n\
    \   [2] top-level scope at /tmp/tmplpcfzzu5.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplpcfzzu5.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplpcfzzu5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpokt1wzbw.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpokt1wzbw.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return class_name\
    \ * \".\" * \"AA\"\nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\
    \t@test(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\
    )\n\t@test(candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
    ]) == \"Boku123.YEs.WeCaNe\")\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\
    )\n\t@test(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\
    )\n\t@test(candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"\
    __HAHA.123\")\n\t@test(candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"\
    WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\t@test(candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\
    \t@test(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2_d6h9us.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"Watashi.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp2_d6h9us.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"Boku123.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp2_d6h9us.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    __YESIMHERE.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp2_d6h9us.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"K.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp2_d6h9us.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2_d6h9us.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"YameRore.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2_d6h9us.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"finNNalLLly.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp2_d6h9us.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2_d6h9us.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\ntest set: Test Failed at /tmp/tmp2_d6h9us.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp2_d6h9us.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_d6h9us.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_d6h9us.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpz_kkzvd3.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpz_kkzvd3.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpz_kkzvd3.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpz_kkzvd3.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\ntest set: Test Failed at /tmp/tmpz_kkzvd3.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpz_kkzvd3.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz_kkzvd3.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppb1l4odz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppb1l4odz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n   [2] top-level scope at /tmp/tmppb1l4odz.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppb1l4odz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppb1l4odz.jl:21\n   [2] top-level scope at /tmp/tmppb1l4odz.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppb1l4odz.jl:21\n   [2] top-level scope at /tmp/tmppb1l4odz.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppb1l4odz.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n   [2] top-level scope at /tmp/tmppb1l4odz.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppb1l4odz.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppb1l4odz.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppb1l4odz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppb1l4odz.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppb1l4odz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppb1l4odz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppz7d092f.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n\
    \   [2] top-level scope at /tmp/tmppz7d092f.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n   [2] top-level scope at /tmp/tmppz7d092f.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n\
    \   [2] top-level scope at /tmp/tmppz7d092f.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppz7d092f.jl:21\n   [2] top-level scope at /tmp/tmppz7d092f.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppz7d092f.jl:21\n   [2] top-level scope at /tmp/tmppz7d092f.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n\
    \   [2] top-level scope at /tmp/tmppz7d092f.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n   [2] top-level scope at /tmp/tmppz7d092f.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n\
    \   [2] top-level scope at /tmp/tmppz7d092f.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmppz7d092f.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppz7d092f.jl:21\n\
    \   [2] top-level scope at /tmp/tmppz7d092f.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppz7d092f.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppz7d092f.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        CAP = sum(isupper.(extension))\n\
    \        SM = sum(islower.(extension))\n        if CAP - SM > strength\n     \
    \       strength = CAP - SM\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqu15jb49.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\\
    n   [2] top-level scope at /tmp/tmpqu15jb49.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\n   [2] top-level scope at /tmp/tmpqu15jb49.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\\
    n   [2] top-level scope at /tmp/tmpqu15jb49.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqu15jb49.jl:21\\n   [2] top-level scope at /tmp/tmpqu15jb49.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpqu15jb49.jl:21\\n   [2] top-level scope at /tmp/tmpqu15jb49.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\\
    n   [2] top-level scope at /tmp/tmpqu15jb49.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\n   [2] top-level scope at /tmp/tmpqu15jb49.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\\
    n   [2] top-level scope at /tmp/tmpqu15jb49.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpqu15jb49.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpqu15jb49.jl:21\\\
    n   [2] top-level scope at /tmp/tmpqu15jb49.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpqu15jb49.jl:34\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     9      9\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7x57w7t7.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7x57w7t7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdf6xs1l_.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpdf6xs1l_.jl:21\n   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpdf6xs1l_.jl:21\n   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpdf6xs1l_.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpdf6xs1l_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpdf6xs1l_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdf6xs1l_.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdf6xs1l_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmptbv9n0fr.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptbv9n0fr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn5x3str7.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
    ]) == \"Watashi.eIGHt8OKe\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\\
    n   [2] top-level scope at /tmp/tmpn5x3str7.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \\n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\n   [2] top-level scope at /tmp/tmpn5x3str7.jl:36\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\\
    n   [2] top-level scope at /tmp/tmpn5x3str7.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:38\\n  Test threw exception\\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpn5x3str7.jl:21\\n   [2] top-level scope at /tmp/tmpn5x3str7.jl:38\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:39\\n  Test threw exception\\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\\n  UndefVarError:\
    \ isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpn5x3str7.jl:21\\n   [2] top-level scope at /tmp/tmpn5x3str7.jl:39\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:40\\n  Test threw exception\\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\\
    n   [2] top-level scope at /tmp/tmpn5x3str7.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:41\\n  Test threw exception\\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\\\
    n  UndefVarError: isupper not defined\\n  Stacktrace:\\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\n   [2] top-level scope at /tmp/tmpn5x3str7.jl:41\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:42\\n  Test threw exception\\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\\
    n   [2] top-level scope at /tmp/tmpn5x3str7.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpn5x3str7.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n  UndefVarError: isupper not defined\\\
    n  Stacktrace:\\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpn5x3str7.jl:21\\\
    n   [2] top-level scope at /tmp/tmpn5x3str7.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpn5x3str7.jl:34\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\", [\"\
    tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpz36hfyq7.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz36hfyq7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppugoxdtz.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppugoxdtz.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n   [2] top-level scope at /tmp/tmppugoxdtz.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppugoxdtz.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppugoxdtz.jl:21\n   [2] top-level scope at /tmp/tmppugoxdtz.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppugoxdtz.jl:21\n   [2] top-level scope at /tmp/tmppugoxdtz.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppugoxdtz.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n   [2] top-level scope at /tmp/tmppugoxdtz.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppugoxdtz.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppugoxdtz.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppugoxdtz.jl:21\n\
    \   [2] top-level scope at /tmp/tmppugoxdtz.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppugoxdtz.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppugoxdtz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -1\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm8_6fe9a.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpm8_6fe9a.jl:21\n   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpm8_6fe9a.jl:21\n   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpm8_6fe9a.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpm8_6fe9a.jl:21\n\
    \   [2] top-level scope at /tmp/tmpm8_6fe9a.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm8_6fe9a.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8_6fe9a.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        cap = sum(isupper.(extensions[i]))\n\
    \        sm = sum(islower.(extensions[i]))\n        if cap - sm > strength\n \
    \           strength = cap - sm\n            strongest_extension = extensions[i]\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyep0y924.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyep0y924.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n   [2] top-level scope at /tmp/tmpyep0y924.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyep0y924.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyep0y924.jl:21\n   [2] top-level scope at /tmp/tmpyep0y924.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyep0y924.jl:21\n   [2] top-level scope at /tmp/tmpyep0y924.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyep0y924.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n   [2] top-level scope at /tmp/tmpyep0y924.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyep0y924.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyep0y924.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyep0y924.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyep0y924.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyep0y924.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyep0y924.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpctomvuqy.jl:44\\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpctomvuqy.jl:44\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpctomvuqy.jl:41\\ntest set: Test Failed at /tmp/tmpctomvuqy.jl:46\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpctomvuqy.jl:46\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpctomvuqy.jl:41\\ntest set: Test Failed at /tmp/tmpctomvuqy.jl:49\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpctomvuqy.jl:49\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpctomvuqy.jl:41\\ntest set: Test Failed at /tmp/tmpctomvuqy.jl:50\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpctomvuqy.jl:50\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpctomvuqy.jl:41\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -1\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps3d02m4l.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n\
    \   [2] top-level scope at /tmp/tmps3d02m4l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n   [2] top-level scope at /tmp/tmps3d02m4l.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n\
    \   [2] top-level scope at /tmp/tmps3d02m4l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmps3d02m4l.jl:21\n   [2] top-level scope at /tmp/tmps3d02m4l.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmps3d02m4l.jl:21\n   [2] top-level scope at /tmp/tmps3d02m4l.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n\
    \   [2] top-level scope at /tmp/tmps3d02m4l.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n   [2] top-level scope at /tmp/tmps3d02m4l.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n\
    \   [2] top-level scope at /tmp/tmps3d02m4l.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmps3d02m4l.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmps3d02m4l.jl:21\n\
    \   [2] top-level scope at /tmp/tmps3d02m4l.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3d02m4l.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3d02m4l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        if extension == \"\"\n    \
    \        continue\n        end\n        cap = 0\n        sm = 0\n        for char\
    \ in extension\n            if char in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \                cap += 1\n            elseif char in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpua7rjvi1.jl:47\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpua7rjvi1.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpua7rjvi1.jl:44\ntest set: Test Failed at /tmp/tmpua7rjvi1.jl:49\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpua7rjvi1.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpua7rjvi1.jl:44\ntest set: Test Failed at /tmp/tmpua7rjvi1.jl:52\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpua7rjvi1.jl:52\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpua7rjvi1.jl:44\ntest set: Test Failed at /tmp/tmpua7rjvi1.jl:53\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpua7rjvi1.jl:53\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpua7rjvi1.jl:44\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpua7rjvi1.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1q8cr71r.jl:44\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp1q8cr71r.jl:44\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1q8cr71r.jl:41\ntest set: Test Failed at /tmp/tmp1q8cr71r.jl:46\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1q8cr71r.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1q8cr71r.jl:41\ntest set: Test Failed at /tmp/tmp1q8cr71r.jl:49\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1q8cr71r.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1q8cr71r.jl:41\ntest set: Test Failed at /tmp/tmp1q8cr71r.jl:50\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp1q8cr71r.jl:50\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1q8cr71r.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1q8cr71r.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = 0\n  \
    \      for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                extension_strength += 1\n            elseif letter in string(\"\
    abcdefghijklmnopqrstuvwxyz\")\n                extension_strength -= 1\n     \
    \       end\n        end\n        if extension_strength > strength\n         \
    \   strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptmcdw6bq.jl:43\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"__YESIMHERE.\" == \"__YESIMHERE.NuLl__\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmptmcdw6bq.jl:43\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptmcdw6bq.jl:40\ntest set: Test Failed at /tmp/tmptmcdw6bq.jl:45\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"__HAHA.\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptmcdw6bq.jl:45\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptmcdw6bq.jl:40\ntest set: Test Failed at /tmp/tmptmcdw6bq.jl:48\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"_.\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmptmcdw6bq.jl:48\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptmcdw6bq.jl:40\ntest set: Test Failed at /tmp/tmptmcdw6bq.jl:49\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"Sp.\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmptmcdw6bq.jl:49\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptmcdw6bq.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptmcdw6bq.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # Your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpv2rt8a93.jl:26\\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpv2rt8a93.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:27\\\
    n  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\\n   Evaluated: \"my_class.AA\" == \"\
    Boku123.YEs.WeCaNe\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv2rt8a93.jl:27\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:28\\\
    n  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpv2rt8a93.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:29\\\
    n  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpv2rt8a93.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:30\\\
    n  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpv2rt8a93.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:31\\\
    n  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv2rt8a93.jl:31\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:32\\\
    n  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \\nStacktrace:\\n [1] top-level scope at /tmp/tmpv2rt8a93.jl:32\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:33\\\
    n  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv2rt8a93.jl:33\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\ntest set: Test Failed at /tmp/tmpv2rt8a93.jl:34\\\
    n  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpv2rt8a93.jl:34\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpv2rt8a93.jl:25\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpy8ntqr2_.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy8ntqr2_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppvbadjgf.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n\
    \   [2] top-level scope at /tmp/tmppvbadjgf.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n   [2] top-level scope at /tmp/tmppvbadjgf.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n\
    \   [2] top-level scope at /tmp/tmppvbadjgf.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppvbadjgf.jl:21\n   [2] top-level scope at /tmp/tmppvbadjgf.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmppvbadjgf.jl:21\n   [2] top-level scope at /tmp/tmppvbadjgf.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n\
    \   [2] top-level scope at /tmp/tmppvbadjgf.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n   [2] top-level scope at /tmp/tmppvbadjgf.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n\
    \   [2] top-level scope at /tmp/tmppvbadjgf.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmppvbadjgf.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmppvbadjgf.jl:21\n\
    \   [2] top-level scope at /tmp/tmppvbadjgf.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppvbadjgf.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppvbadjgf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgr713eh_.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgr713eh_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n   [2] top-level scope at /tmp/tmpgr713eh_.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgr713eh_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgr713eh_.jl:21\n   [2] top-level scope at /tmp/tmpgr713eh_.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpgr713eh_.jl:21\n   [2] top-level scope at /tmp/tmpgr713eh_.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgr713eh_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n   [2] top-level scope at /tmp/tmpgr713eh_.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgr713eh_.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpgr713eh_.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpgr713eh_.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgr713eh_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgr713eh_.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgr713eh_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = -1\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvnmmf6sz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:35\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvnmmf6sz.jl:21\n   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpvnmmf6sz.jl:21\n   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:40\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnmmf6sz.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpvnmmf6sz.jl:21\n\
    \   [2] top-level scope at /tmp/tmpvnmmf6sz.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnmmf6sz.jl:33\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvnmmf6sz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8t7t3own.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n   [2] top-level scope at /tmp/tmp8t7t3own.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n   [2] top-level scope at /tmp/tmp8t7t3own.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n   [2] top-level scope at /tmp/tmp8t7t3own.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp8t7t3own.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp8t7t3own.jl:19\n\
    \   [2] top-level scope at /tmp/tmp8t7t3own.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8t7t3own.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8t7t3own.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoalazhsq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpoalazhsq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n   [2] top-level scope at /tmp/tmpoalazhsq.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpoalazhsq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpoalazhsq.jl:21\n   [2] top-level scope at /tmp/tmpoalazhsq.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpoalazhsq.jl:21\n   [2] top-level scope at /tmp/tmpoalazhsq.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpoalazhsq.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n   [2] top-level scope at /tmp/tmpoalazhsq.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpoalazhsq.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpoalazhsq.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpoalazhsq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpoalazhsq.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoalazhsq.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoalazhsq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ljotiss.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7ljotiss.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n   [2] top-level scope at /tmp/tmp7ljotiss.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7ljotiss.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7ljotiss.jl:21\n   [2] top-level scope at /tmp/tmp7ljotiss.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp7ljotiss.jl:21\n   [2] top-level scope at /tmp/tmp7ljotiss.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7ljotiss.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n   [2] top-level scope at /tmp/tmp7ljotiss.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7ljotiss.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ljotiss.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp7ljotiss.jl:21\n\
    \   [2] top-level scope at /tmp/tmp7ljotiss.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ljotiss.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ljotiss.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"\"\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2pu0c6t.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\"\
    \ == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:28\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"\" == \"K.TAR\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpc2pu0c6t.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"\" == \"__HAHA.123\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc2pu0c6t.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"\" == \"YameRore.okIWILL123\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"\" == \"finNNalLLly.WoW\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc2pu0c6t.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\ntest set: Test Failed at /tmp/tmpc2pu0c6t.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpc2pu0c6t.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc2pu0c6t.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2pu0c6t.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_svze4l6.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_svze4l6.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n   [2] top-level scope at /tmp/tmp_svze4l6.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_svze4l6.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp_svze4l6.jl:21\n   [2] top-level scope at /tmp/tmp_svze4l6.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmp_svze4l6.jl:21\n   [2] top-level scope at /tmp/tmp_svze4l6.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_svze4l6.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n   [2] top-level scope at /tmp/tmp_svze4l6.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_svze4l6.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmp_svze4l6.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmp_svze4l6.jl:21\n\
    \   [2] top-level scope at /tmp/tmp_svze4l6.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_svze4l6.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_svze4l6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsujm12gq.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpsujm12gq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n   [2] top-level scope at /tmp/tmpsujm12gq.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpsujm12gq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpsujm12gq.jl:21\n   [2] top-level scope at /tmp/tmpsujm12gq.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpsujm12gq.jl:21\n   [2] top-level scope at /tmp/tmpsujm12gq.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpsujm12gq.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n   [2] top-level scope at /tmp/tmpsujm12gq.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpsujm12gq.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpsujm12gq.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpsujm12gq.jl:21\n\
    \   [2] top-level scope at /tmp/tmpsujm12gq.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsujm12gq.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsujm12gq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv26tuwel.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpv26tuwel.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpv26tuwel.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpv26tuwel.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpv26tuwel.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv26tuwel.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv26tuwel.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpv26tuwel.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv26tuwel.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\ntest set: Test Failed at /tmp/tmpv26tuwel.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpv26tuwel.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv26tuwel.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv26tuwel.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend\n\
    using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyma0ocnc.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1]\
    \ Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyma0ocnc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n   [2] top-level scope at /tmp/tmpyma0ocnc.jl:36\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyma0ocnc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyma0ocnc.jl:21\n   [2] top-level scope at /tmp/tmpyma0ocnc.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  UndefVarError:\
    \ isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1})\
    \ at /tmp/tmpyma0ocnc.jl:21\n   [2] top-level scope at /tmp/tmpyma0ocnc.jl:39\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:40\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  UndefVarError: isupper not defined\n  Stacktrace:\n \
    \  [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyma0ocnc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:41\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  UndefVarError: isupper not defined\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n   [2] top-level scope at /tmp/tmpyma0ocnc.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyma0ocnc.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpyma0ocnc.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpyma0ocnc.jl:21\n\
    \   [2] top-level scope at /tmp/tmpyma0ocnc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyma0ocnc.jl:34\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyma0ocnc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7u0al5zm.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp7u0al5zm.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp7u0al5zm.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmp7u0al5zm.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7u0al5zm.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7u0al5zm.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7u0al5zm.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmp7u0al5zm.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7u0al5zm.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\ntest set: Test Failed at /tmp/tmp7u0al5zm.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmp7u0al5zm.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u0al5zm.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7u0al5zm.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaeaems30.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpaeaems30.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpaeaems30.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpaeaems30.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaeaems30.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaeaems30.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaeaems30.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpaeaems30.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaeaems30.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\ntest set: Test Failed at /tmp/tmpaeaems30.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpaeaems30.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaeaems30.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaeaems30.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\n    return \"my_class.AA\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxkvk1g0g.jl:26\n  Expression: candidate(\"\
    Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Watashi.eIGHt8OKe\"\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpxkvk1g0g.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:27\n\
    \  Expression: candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"\
    32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\n   Evaluated: \"my_class.AA\" == \"Boku123.YEs.WeCaNe\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpxkvk1g0g.jl:27\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:28\n\
    \  Expression: candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\"\n   Evaluated: \"\
    my_class.AA\" == \"__YESIMHERE.NuLl__\"\nStacktrace:\n [1] top-level scope at\
    \ /tmp/tmpxkvk1g0g.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:29\n\
    \  Expression: candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"\
    K.TAR\"\n   Evaluated: \"my_class.AA\" == \"K.TAR\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxkvk1g0g.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:30\n\
    \  Expression: candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"])\
    \ == \"__HAHA.123\"\n   Evaluated: \"my_class.AA\" == \"__HAHA.123\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxkvk1g0g.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:31\n\
    \  Expression: candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\"\
    , \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\"\n   Evaluated: \"my_class.AA\"\
    \ == \"YameRore.okIWILL123\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxkvk1g0g.jl:31\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:32\n\
    \  Expression: candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"\
    ]) == \"finNNalLLly.WoW\"\n   Evaluated: \"my_class.AA\" == \"finNNalLLly.WoW\"\
    \nStacktrace:\n [1] top-level scope at /tmp/tmpxkvk1g0g.jl:32\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:33\n\
    \  Expression: candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n   Evaluated:\
    \ \"my_class.AA\" == \"_.Bb\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxkvk1g0g.jl:33\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\ntest set: Test Failed at /tmp/tmpxkvk1g0g.jl:34\n\
    \  Expression: candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n   Evaluated:\
    \ \"my_class.AA\" == \"Sp.671235\"\nStacktrace:\n [1] top-level scope at /tmp/tmpxkvk1g0g.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxkvk1g0g.jl:25\nTest Summary: | Fail  Total\n\
    test set      |    9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 9 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxkvk1g0g.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
    \    The extensions are to be used to load additional classes to the class. The\n\
    \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
    \    letters in the extension's name, and let SM be the number of lowercase letters\
    \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
    \ \n    You should find the strongest extension and return a string in this \n\
    \    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
    \ with the same strength, you should\n    choose the one that comes first in the\
    \ list.\n    For example, if you are given \"Slices\" as the class and a list\
    \ of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
    \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
    \ extensions::Vector{String})::String \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"Watashi\"\
    , [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
    , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\"\
    , \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\"\
    , \"91245\"]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) ==\
    \ \"Sp.671235\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcq_kujmt.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"\
    Watashi.eIGHt8OKe\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n   [2] top-level scope at /tmp/tmpcq_kujmt.jl:26\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    __YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    ]) == \"__YESIMHERE.NuLl__\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\"\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n   [2] top-level scope at /tmp/tmpcq_kujmt.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
    YameRore.okIWILL123\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\"\n\
    \  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] Strongest_Extension(::String,\
    \ ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n   [2] top-level scope at /tmp/tmpcq_kujmt.jl:31\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    _\", [\"Bb\", \"91245\"]) == \"_.Bb\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpcq_kujmt.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] Strongest_Extension(::String, ::Array{String,1}) at /tmp/tmpcq_kujmt.jl:19\n\
    \   [2] top-level scope at /tmp/tmpcq_kujmt.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcq_kujmt.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     9      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcq_kujmt.jl:22\n"
  exit_code: 1
  status: SyntaxError

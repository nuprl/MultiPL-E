name: HumanEval_117_select_words
language: julia
results:
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc8d6oedt.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpc8d6oedt.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc8d6oedt.jl:34\ntest set: Test Failed at /tmp/tmpc8d6oedt.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc8d6oedt.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc8d6oedt.jl:34\ntest set: Test Failed at /tmp/tmpc8d6oedt.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc8d6oedt.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc8d6oedt.jl:34\ntest set: Test Failed at /tmp/tmpc8d6oedt.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpc8d6oedt.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc8d6oedt.jl:34\ntest set: Test Failed at /tmp/tmpc8d6oedt.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpc8d6oedt.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpc8d6oedt.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8d6oedt.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp32bmfrjt.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp32bmfrjt.jl:17\\n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32bmfrjt.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp32bmfrjt.jl:17\\\
    n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32bmfrjt.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp32bmfrjt.jl:17\\\
    n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32bmfrjt.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp32bmfrjt.jl:17\\\
    n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32bmfrjt.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp32bmfrjt.jl:17\\\
    n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32bmfrjt.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp32bmfrjt.jl:17\\\
    n   [2] top-level scope at /tmp/tmp32bmfrjt.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32bmfrjt.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    words_with_n_consonants = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(words_with_n_consonants,\
    \ word)\n        end\n    end\n    return words_with_n_consonants\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary\
    \ had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
    , 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"\
    ])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\"\
    , 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\",\
    \ \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpujdjuuos.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpujdjuuos.jl:17\n   [2] top-level scope at /tmp/tmpujdjuuos.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpujdjuuos.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpujdjuuos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpujdjuuos.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpujdjuuos.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpujdjuuos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpujdjuuos.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpujdjuuos.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpujdjuuos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpujdjuuos.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpujdjuuos.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpujdjuuos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpujdjuuos.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpujdjuuos.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpujdjuuos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpujdjuuos.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpujdjuuos.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpujdjuuos.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqpu7fegv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpqpu7fegv.jl:17\n   [2] top-level scope at /tmp/tmpqpu7fegv.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpqpu7fegv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpqpu7fegv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpqpu7fegv.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqpu7fegv.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpu7fegv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe7arymw3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpe7arymw3.jl:17\n   [2] top-level scope at /tmp/tmpe7arymw3.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe7arymw3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe7arymw3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe7arymw3.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe7arymw3.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe7arymw3.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n  \
    \      count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ezec244.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ezec244.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ezec244.jl:34\ntest set: Test Failed at /tmp/tmp4ezec244.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ezec244.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ezec244.jl:34\ntest set: Test Failed at /tmp/tmp4ezec244.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ezec244.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ezec244.jl:34\ntest set: Test Failed at /tmp/tmp4ezec244.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ezec244.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ezec244.jl:34\ntest set: Test Failed at /tmp/tmp4ezec244.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ezec244.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ezec244.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ezec244.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkpkxy4hf.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpkxy4hf.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\\
    n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpkxy4hf.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\\
    n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpkxy4hf.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\\
    n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpkxy4hf.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\\
    n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkpkxy4hf.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpkpkxy4hf.jl:17\\\
    n   [2] top-level scope at /tmp/tmpkpkxy4hf.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkpkxy4hf.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   return split(s) |> filter(x -> length(x) == n)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt10uh3ar.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ no method matching filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n\
    \    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: no method\
    \ matching filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any,\
    \ !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: no method matching\
    \ filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpt10uh3ar.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: no method matching\
    \ filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt10uh3ar.jl:14\n\
    \   [2] top-level scope at /tmp/tmpt10uh3ar.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt10uh3ar.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt10uh3ar.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk42s27vw.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk42s27vw.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk42s27vw.jl:34\\ntest set: Test Failed at /tmp/tmpk42s27vw.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpk42s27vw.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk42s27vw.jl:34\\ntest set: Test Failed at /tmp/tmpk42s27vw.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk42s27vw.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk42s27vw.jl:34\\ntest set: Test Failed at /tmp/tmpk42s27vw.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk42s27vw.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk42s27vw.jl:34\\ntest set: Test Failed at /tmp/tmpk42s27vw.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpk42s27vw.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk42s27vw.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     5      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd_8me0yv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpd_8me0yv.jl:17\n   [2] top-level scope at /tmp/tmpd_8me0yv.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd_8me0yv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd_8me0yv.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd_8me0yv.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd_8me0yv.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_8me0yv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1wxim08o.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp1wxim08o.jl:17\n   [2] top-level scope at /tmp/tmp1wxim08o.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1wxim08o.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1wxim08o.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1wxim08o.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1wxim08o.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1wxim08o.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1wxim08o.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1wxim08o.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1wxim08o.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1wxim08o.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1wxim08o.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1wxim08o.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1wxim08o.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1wxim08o.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1wxim08o.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1wxim08o.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1wxim08o.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wxim08o.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        count =\
    \ 0\n        for letter in word\n            if letter in \"aeiou\"\n        \
    \        count += 1\n            end\n        end\n        if count == n\n   \
    \         push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvqp3tjes.jl:34\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpvqp3tjes.jl:34\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\ntest set: Test Failed at /tmp/tmpvqp3tjes.jl:35\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvqp3tjes.jl:35\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\ntest set: Test Failed at /tmp/tmpvqp3tjes.jl:36\n\
    \  Expression: candidate(\"simple white space\", 2) == Vector{String}([])\n  \
    \ Evaluated: [\"simple\", \"white\", \"space\"] == String[]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvqp3tjes.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\ntest set: Test Failed at /tmp/tmpvqp3tjes.jl:37\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvqp3tjes.jl:37\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\ntest set: Test Failed at /tmp/tmpvqp3tjes.jl:38\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvqp3tjes.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\ntest set: Test Failed at /tmp/tmpvqp3tjes.jl:40\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: [\"a\", \"e\"] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvqp3tjes.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqp3tjes.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqp3tjes.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgk3in890.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpgk3in890.jl:17\n   [2] top-level scope at /tmp/tmpgk3in890.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk3in890.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgk3in890.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgk3in890.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk3in890.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgk3in890.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgk3in890.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk3in890.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgk3in890.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgk3in890.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk3in890.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgk3in890.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgk3in890.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk3in890.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgk3in890.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgk3in890.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk3in890.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgk3in890.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        num_consonants = 0\n        for letter\
    \ in word\n            if letter in consonants\n                num_consonants\
    \ += 1\n            end\n        end\n        if num_consonants == n\n       \
    \     push!(selected_words, word)\n        end\n    end\n    return selected_words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6ieikc8k.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn20pamh4.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpn20pamh4.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn20pamh4.jl:34\ntest set: Test Failed at /tmp/tmpn20pamh4.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn20pamh4.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn20pamh4.jl:34\ntest set: Test Failed at /tmp/tmpn20pamh4.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpn20pamh4.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn20pamh4.jl:34\ntest set: Test Failed at /tmp/tmpn20pamh4.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpn20pamh4.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn20pamh4.jl:34\ntest set: Test Failed at /tmp/tmpn20pamh4.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn20pamh4.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn20pamh4.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn20pamh4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsnpk_uy3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpsnpk_uy3.jl:17\n   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnpk_uy3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnpk_uy3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnpk_uy3.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnpk_uy3.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsnpk_uy3.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n  \
    \      num_consonants = 0\n        for letter in word\n            if letter in\
    \ consonants\n                num_consonants += 1\n            end\n        end\n\
    \        if num_consonants == n\n            push!(selected_words, word)\n   \
    \     end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvhpb3en2.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvhpb3en2.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvhpb3en2.jl:34\\ntest set: Test Failed at /tmp/tmpvhpb3en2.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvhpb3en2.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvhpb3en2.jl:34\\ntest set: Test Failed at /tmp/tmpvhpb3en2.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvhpb3en2.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvhpb3en2.jl:34\\ntest set: Test Failed at /tmp/tmpvhpb3en2.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvhpb3en2.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvhpb3en2.jl:34\\ntest set: Test Failed at /tmp/tmpvhpb3en2.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvhpb3en2.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvhpb3en2.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     5      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxm6orz6g.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpxm6orz6g.jl:17\n   [2] top-level scope at /tmp/tmpxm6orz6g.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxm6orz6g.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxm6orz6g.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxm6orz6g.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxm6orz6g.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxm6orz6g.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxm6orz6g.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxm6orz6g.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxm6orz6g.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxm6orz6g.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxm6orz6g.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxm6orz6g.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxm6orz6g.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxm6orz6g.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxm6orz6g.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxm6orz6g.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxm6orz6g.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxm6orz6g.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv_4728d7.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpv_4728d7.jl:17\n   [2] top-level scope at /tmp/tmpv_4728d7.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpv_4728d7.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpv_4728d7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpv_4728d7.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv_4728d7.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv_4728d7.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph_68eta5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmph_68eta5.jl:17\n   [2] top-level scope at /tmp/tmph_68eta5.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph_68eta5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph_68eta5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph_68eta5.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph_68eta5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph_68eta5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph_68eta5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph_68eta5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph_68eta5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph_68eta5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph_68eta5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph_68eta5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph_68eta5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph_68eta5.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph_68eta5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph_68eta5.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph_68eta5.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_68eta5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzj0skdjq.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpzj0skdjq.jl:17\n   [2] top-level scope at /tmp/tmpzj0skdjq.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzj0skdjq.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzj0skdjq.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzj0skdjq.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzj0skdjq.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzj0skdjq.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzj0skdjq.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzj0skdjq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzj0skdjq.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzj0skdjq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzj0skdjq.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzj0skdjq.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzj0skdjq.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzj0skdjq.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzj0skdjq.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzj0skdjq.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzj0skdjq.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzj0skdjq.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm63hvezg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpm63hvezg.jl:17\n   [2] top-level scope at /tmp/tmpm63hvezg.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm63hvezg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm63hvezg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm63hvezg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm63hvezg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm63hvezg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm63hvezg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm63hvezg.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm63hvezg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm63hvezg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm63hvezg.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm63hvezg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm63hvezg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm63hvezg.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm63hvezg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm63hvezg.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm63hvezg.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm63hvezg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuukqm695.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpuukqm695.jl:17\n   [2] top-level scope at /tmp/tmpuukqm695.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuukqm695.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuukqm695.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuukqm695.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuukqm695.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuukqm695.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuukqm695.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuukqm695.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuukqm695.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuukqm695.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuukqm695.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuukqm695.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuukqm695.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuukqm695.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuukqm695.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuukqm695.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuukqm695.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuukqm695.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvpg3qp0a.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpvpg3qp0a.jl:17\n   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvpg3qp0a.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvpg3qp0a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvpg3qp0a.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvpg3qp0a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvpg3qp0a.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvpg3qp0a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvpg3qp0a.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvpg3qp0a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvpg3qp0a.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvpg3qp0a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvpg3qp0a.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvpg3qp0a.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvpg3qp0a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2sx2p53m.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp2sx2p53m.jl:17\n   [2] top-level scope at /tmp/tmp2sx2p53m.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2sx2p53m.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2sx2p53m.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2sx2p53m.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2sx2p53m.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2sx2p53m.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp12z_dm90.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp12z_dm90.jl:17\n   [2] top-level scope at /tmp/tmp12z_dm90.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp12z_dm90.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp12z_dm90.jl:17\n\
    \   [2] top-level scope at /tmp/tmp12z_dm90.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp12z_dm90.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp12z_dm90.jl:17\n\
    \   [2] top-level scope at /tmp/tmp12z_dm90.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp12z_dm90.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp12z_dm90.jl:17\n\
    \   [2] top-level scope at /tmp/tmp12z_dm90.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp12z_dm90.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp12z_dm90.jl:17\n\
    \   [2] top-level scope at /tmp/tmp12z_dm90.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp12z_dm90.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp12z_dm90.jl:17\n\
    \   [2] top-level scope at /tmp/tmp12z_dm90.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp12z_dm90.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12z_dm90.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplnxcmqvo.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmplnxcmqvo.jl:17\n   [2] top-level scope at /tmp/tmplnxcmqvo.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplnxcmqvo.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplnxcmqvo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplnxcmqvo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplnxcmqvo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplnxcmqvo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplnxcmqvo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplnxcmqvo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplnxcmqvo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplnxcmqvo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplnxcmqvo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplnxcmqvo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplnxcmqvo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplnxcmqvo.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplnxcmqvo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplnxcmqvo.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnxcmqvo.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplnxcmqvo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplu19hhb1.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmplu19hhb1.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplu19hhb1.jl:15\n\
    \   [2] top-level scope at /tmp/tmplu19hhb1.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplu19hhb1.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplu19hhb1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsrkef399.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpsrkef399.jl:17\\n   [2] top-level scope at /tmp/tmpsrkef399.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsrkef399.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpsrkef399.jl:17\\\
    n   [2] top-level scope at /tmp/tmpsrkef399.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsrkef399.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpsrkef399.jl:17\\\
    n   [2] top-level scope at /tmp/tmpsrkef399.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsrkef399.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpsrkef399.jl:17\\\
    n   [2] top-level scope at /tmp/tmpsrkef399.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsrkef399.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpsrkef399.jl:17\\\
    n   [2] top-level scope at /tmp/tmpsrkef399.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsrkef399.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpsrkef399.jl:17\\\
    n   [2] top-level scope at /tmp/tmpsrkef399.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsrkef399.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzqvo0vz5.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  MethodError: Cannot `convert` an object of type Nothing to an object of\
    \ type Array{String,1}\\n  Closest candidates are:\\n    convert(::Type{Array{String,1}},\
    \ !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:21\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:22\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\\n  Closest candidates\
    \ are:\\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:22\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:23\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\\n  Closest candidates\
    \ are:\\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:23\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:24\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\\n  Closest candidates are:\\\
    n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:24\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:25\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\\n  Closest candidates are:\\\
    n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\\n  Closest candidates are:\\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzqvo0vz5.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\\n  Closest candidates\
    \ are:\\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqvo0vz5.jl:15\\\
    n   [2] top-level scope at /tmp/tmpzqvo0vz5.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzqvo0vz5.jl:20\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt1f82cwg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpt1f82cwg.jl:17\n   [2] top-level scope at /tmp/tmpt1f82cwg.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpt1f82cwg.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpt1f82cwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpt1f82cwg.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt1f82cwg.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1f82cwg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpphcc75i9.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpphcc75i9.jl:17\n   [2] top-level scope at /tmp/tmpphcc75i9.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpphcc75i9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpphcc75i9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpphcc75i9.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpphcc75i9.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpphcc75i9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpphcc75i9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpphcc75i9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpphcc75i9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpphcc75i9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpphcc75i9.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpphcc75i9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpphcc75i9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpphcc75i9.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpphcc75i9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpphcc75i9.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphcc75i9.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphcc75i9.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxe5b84a3.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpxe5b84a3.jl:17\n   [2] top-level scope at /tmp/tmpxe5b84a3.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxe5b84a3.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxe5b84a3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxe5b84a3.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxe5b84a3.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxe5b84a3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxe5b84a3.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxe5b84a3.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxe5b84a3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxe5b84a3.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxe5b84a3.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxe5b84a3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxe5b84a3.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpxe5b84a3.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxe5b84a3.jl:17\n\
    \   [2] top-level scope at /tmp/tmpxe5b84a3.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxe5b84a3.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxe5b84a3.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdc_mbh4p.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpdc_mbh4p.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdc_mbh4p.jl:15\n\
    \   [2] top-level scope at /tmp/tmpdc_mbh4p.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdc_mbh4p.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc_mbh4p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxgspu4q8.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpxgspu4q8.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpxgspu4q8.jl:15\n\
    \   [2] top-level scope at /tmp/tmpxgspu4q8.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxgspu4q8.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxgspu4q8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6m65ay9p.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp6m65ay9p.jl:17\\n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6m65ay9p.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp6m65ay9p.jl:17\\\
    n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6m65ay9p.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp6m65ay9p.jl:17\\\
    n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6m65ay9p.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp6m65ay9p.jl:17\\\
    n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6m65ay9p.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp6m65ay9p.jl:17\\\
    n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6m65ay9p.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp6m65ay9p.jl:17\\\
    n   [2] top-level scope at /tmp/tmp6m65ay9p.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6m65ay9p.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8oy8r496.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp8oy8r496.jl:17\n   [2] top-level scope at /tmp/tmp8oy8r496.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8oy8r496.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8oy8r496.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8oy8r496.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8oy8r496.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8oy8r496.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8oy8r496.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8oy8r496.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8oy8r496.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8oy8r496.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8oy8r496.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8oy8r496.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8oy8r496.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8oy8r496.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8oy8r496.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8oy8r496.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8oy8r496.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8oy8r496.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptzq3y8nu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmptzq3y8nu.jl:17\n   [2] top-level scope at /tmp/tmptzq3y8nu.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptzq3y8nu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptzq3y8nu.jl:17\n\
    \   [2] top-level scope at /tmp/tmptzq3y8nu.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptzq3y8nu.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptzq3y8nu.jl:17\n\
    \   [2] top-level scope at /tmp/tmptzq3y8nu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptzq3y8nu.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptzq3y8nu.jl:17\n\
    \   [2] top-level scope at /tmp/tmptzq3y8nu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptzq3y8nu.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptzq3y8nu.jl:17\n\
    \   [2] top-level scope at /tmp/tmptzq3y8nu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptzq3y8nu.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptzq3y8nu.jl:17\n\
    \   [2] top-level scope at /tmp/tmptzq3y8nu.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzq3y8nu.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzq3y8nu.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl2or0orp.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpl2or0orp.jl:17\n   [2] top-level scope at /tmp/tmpl2or0orp.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpl2or0orp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpl2or0orp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpl2or0orp.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl2or0orp.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2or0orp.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptxoccs4h.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmptxoccs4h.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptxoccs4h.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxoccs4h.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    selected_words = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpggg5ia8_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpggg5ia8_.jl:17\\n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpggg5ia8_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpggg5ia8_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpggg5ia8_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpggg5ia8_.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiczg3cjl.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpiczg3cjl.jl:17\n   [2] top-level scope at /tmp/tmpiczg3cjl.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiczg3cjl.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiczg3cjl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiczg3cjl.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiczg3cjl.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiczg3cjl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiczg3cjl.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiczg3cjl.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiczg3cjl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiczg3cjl.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiczg3cjl.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiczg3cjl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiczg3cjl.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiczg3cjl.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiczg3cjl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiczg3cjl.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiczg3cjl.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiczg3cjl.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazbrj_na.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpazbrj_na.jl:17\n   [2] top-level scope at /tmp/tmpazbrj_na.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpazbrj_na.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpazbrj_na.jl:17\n\
    \   [2] top-level scope at /tmp/tmpazbrj_na.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpazbrj_na.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpazbrj_na.jl:17\n\
    \   [2] top-level scope at /tmp/tmpazbrj_na.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpazbrj_na.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpazbrj_na.jl:17\n\
    \   [2] top-level scope at /tmp/tmpazbrj_na.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpazbrj_na.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpazbrj_na.jl:17\n\
    \   [2] top-level scope at /tmp/tmpazbrj_na.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpazbrj_na.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpazbrj_na.jl:17\n\
    \   [2] top-level scope at /tmp/tmpazbrj_na.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazbrj_na.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazbrj_na.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3e95rmu_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp3e95rmu_.jl:17\\n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3e95rmu_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3e95rmu_.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3e95rmu_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3e95rmu_.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3e95rmu_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3e95rmu_.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3e95rmu_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3e95rmu_.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3e95rmu_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3e95rmu_.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3e95rmu_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3e95rmu_.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpualfch2k.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpualfch2k.jl:17\n   [2] top-level scope at /tmp/tmpualfch2k.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpualfch2k.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpualfch2k.jl:17\n\
    \   [2] top-level scope at /tmp/tmpualfch2k.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpualfch2k.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpualfch2k.jl:17\n\
    \   [2] top-level scope at /tmp/tmpualfch2k.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpualfch2k.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpualfch2k.jl:17\n\
    \   [2] top-level scope at /tmp/tmpualfch2k.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpualfch2k.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpualfch2k.jl:17\n\
    \   [2] top-level scope at /tmp/tmpualfch2k.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpualfch2k.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpualfch2k.jl:17\n\
    \   [2] top-level scope at /tmp/tmpualfch2k.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpualfch2k.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpualfch2k.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr28ng4ja.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpr28ng4ja.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr28ng4ja.jl:15\n\
    \   [2] top-level scope at /tmp/tmpr28ng4ja.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr28ng4ja.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr28ng4ja.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgq9ybtie.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpgq9ybtie.jl:17\n   [2] top-level scope at /tmp/tmpgq9ybtie.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgq9ybtie.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgq9ybtie.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgq9ybtie.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgq9ybtie.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgq9ybtie.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgq9ybtie.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgq9ybtie.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgq9ybtie.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgq9ybtie.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgq9ybtie.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgq9ybtie.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgq9ybtie.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgq9ybtie.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgq9ybtie.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgq9ybtie.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgq9ybtie.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgq9ybtie.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(selected, word)\n        end\n    end\n    return selected\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9dgv34gs.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp9dgv34gs.jl:17\n   [2] top-level scope at /tmp/tmp9dgv34gs.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgv34gs.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9dgv34gs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9dgv34gs.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgv34gs.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9dgv34gs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9dgv34gs.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgv34gs.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9dgv34gs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9dgv34gs.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgv34gs.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9dgv34gs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9dgv34gs.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgv34gs.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9dgv34gs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9dgv34gs.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgv34gs.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9dgv34gs.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf9godaf0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpf9godaf0.jl:17\n   [2] top-level scope at /tmp/tmpf9godaf0.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf9godaf0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf9godaf0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpf9godaf0.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf9godaf0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf9godaf0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpf9godaf0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf9godaf0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf9godaf0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpf9godaf0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf9godaf0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf9godaf0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpf9godaf0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpf9godaf0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf9godaf0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpf9godaf0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf9godaf0.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf9godaf0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxh7nmu6x.jl:22\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpxh7nmu6x.jl:22\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxh7nmu6x.jl:21\ntest set: Test Failed at /tmp/tmpxh7nmu6x.jl:23\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxh7nmu6x.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxh7nmu6x.jl:21\ntest set: Test Failed at /tmp/tmpxh7nmu6x.jl:25\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpxh7nmu6x.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxh7nmu6x.jl:21\ntest set: Test Failed at /tmp/tmpxh7nmu6x.jl:26\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpxh7nmu6x.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxh7nmu6x.jl:21\ntest set: Test Failed at /tmp/tmpxh7nmu6x.jl:28\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxh7nmu6x.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxh7nmu6x.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxh7nmu6x.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfmkxr3n0.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfmkxr3n0.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpfmkxr3n0.jl:17\\\
    n   [2] top-level scope at /tmp/tmpfmkxr3n0.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfmkxr3n0.jl:27\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuzxcjjyg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpuzxcjjyg.jl:17\n   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuzxcjjyg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuzxcjjyg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuzxcjjyg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuzxcjjyg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuzxcjjyg.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuzxcjjyg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuzxcjjyg.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuzxcjjyg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuzxcjjyg.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuzxcjjyg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuzxcjjyg.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuzxcjjyg.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuzxcjjyg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    words_with_n_consonants = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(words_with_n_consonants,\
    \ word)\n        end\n    end\n    return words_with_n_consonants\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary\
    \ had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
    , 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"\
    ])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\"\
    , 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\",\
    \ \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgotn7lhh.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpgotn7lhh.jl:17\n   [2] top-level scope at /tmp/tmpgotn7lhh.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgotn7lhh.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgotn7lhh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgotn7lhh.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgotn7lhh.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgotn7lhh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgotn7lhh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgotn7lhh.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgotn7lhh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgotn7lhh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgotn7lhh.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgotn7lhh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgotn7lhh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgotn7lhh.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpgotn7lhh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpgotn7lhh.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgotn7lhh.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgotn7lhh.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr6jf20u1.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpr6jf20u1.jl:17\n   [2] top-level scope at /tmp/tmpr6jf20u1.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpr6jf20u1.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr6jf20u1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpr6jf20u1.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpr6jf20u1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr6jf20u1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpr6jf20u1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpr6jf20u1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr6jf20u1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpr6jf20u1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpr6jf20u1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr6jf20u1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpr6jf20u1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpr6jf20u1.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpr6jf20u1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpr6jf20u1.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr6jf20u1.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6jf20u1.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # Your code here\n    # You can add more functions as you need.\n    # You\
    \ can also change the return type of the function.\n    # You can also change\
    \ the function signature.\n    # You can also add more arguments to the function.\n\
    \    # You can also change the name of the function.\n    # You can also change\
    \ the name of the arguments.\n    # You can also change the order of the arguments.\n\
    \    # You can also change the type of the arguments.\n    # You can also change\
    \ the type of the return value.\n    # You can also change the name of the return\
    \ value.\n    # You can also change the order of the return value.\n    # You\
    \ can also change the type of the return value.\n    # You can also change the\
    \ name of the return value.\n    # You can also change the order of the return\
    \ value.\n    # You can also change the type of the return value.\n    # You can\
    \ also change the name of the return value.\n    # You can also change the order\
    \ of the return value.\n    # You can also change the type of the return value.\n\
    \    # You can also change the name of the return value.\n    # You can also change\
    \ the order of the return value.\n    # You can also change the type of the return\
    \ value.\n    # You can also change the name of the return value.\n    # You can\
    \ also change the order of the return value.\n    # You can also change the type\
    \ of the return value.\n    # You can also change the name of the return value.\n\
    \    # You can also change the order of the return value.\n    # You can also\
    \ change the type of the return value.\n    # You can also change the name of\
    \ the return value.\n    # You can also change the order of the return value.\n\
    \    # You can also change the type of the return value.\n    # You can also change\
    \ the name of the return value.\n    # You can also change the order of the return\
    \ value.\n    # You can also change the type of the return value.\n    # You can\
    \ also change the name of the return value.\n    # You can also change the order\
    \ of the return value.\n    # You can also change the type of the return value.\n\
    \    # You can also change the name of the return\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppi2hp7pq.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmppi2hp7pq.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmppi2hp7pq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppou2gkjo.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmppou2gkjo.jl:17\n   [2] top-level scope at /tmp/tmppou2gkjo.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppou2gkjo.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppou2gkjo.jl:17\n\
    \   [2] top-level scope at /tmp/tmppou2gkjo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppou2gkjo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppou2gkjo.jl:17\n\
    \   [2] top-level scope at /tmp/tmppou2gkjo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppou2gkjo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppou2gkjo.jl:17\n\
    \   [2] top-level scope at /tmp/tmppou2gkjo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppou2gkjo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppou2gkjo.jl:17\n\
    \   [2] top-level scope at /tmp/tmppou2gkjo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppou2gkjo.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppou2gkjo.jl:17\n\
    \   [2] top-level scope at /tmp/tmppou2gkjo.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppou2gkjo.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppou2gkjo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_et0lq_p.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp_et0lq_p.jl:17\n   [2] top-level scope at /tmp/tmp_et0lq_p.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_et0lq_p.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_et0lq_p.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_et0lq_p.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_et0lq_p.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_et0lq_p.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4d3r1_e_.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4d3r1_e_.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4d3r1_e_.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     1      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0fxgweak.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp0fxgweak.jl:17\\n   [2] top-level scope at /tmp/tmp0fxgweak.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fxgweak.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp0fxgweak.jl:17\\\
    n   [2] top-level scope at /tmp/tmp0fxgweak.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fxgweak.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp0fxgweak.jl:17\\\
    n   [2] top-level scope at /tmp/tmp0fxgweak.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fxgweak.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp0fxgweak.jl:17\\\
    n   [2] top-level scope at /tmp/tmp0fxgweak.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fxgweak.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp0fxgweak.jl:17\\\
    n   [2] top-level scope at /tmp/tmp0fxgweak.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0fxgweak.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp0fxgweak.jl:17\\\
    n   [2] top-level scope at /tmp/tmp0fxgweak.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0fxgweak.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvn38cp76.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpvn38cp76.jl:17\n   [2] top-level scope at /tmp/tmpvn38cp76.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvn38cp76.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvn38cp76.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvn38cp76.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvn38cp76.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvn38cp76.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvn38cp76.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvn38cp76.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvn38cp76.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvn38cp76.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvn38cp76.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvn38cp76.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvn38cp76.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvn38cp76.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvn38cp76.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvn38cp76.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvn38cp76.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvn38cp76.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpex7a6tld.jl:22\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpex7a6tld.jl:22\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpex7a6tld.jl:21\ntest set: Test Failed at /tmp/tmpex7a6tld.jl:23\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpex7a6tld.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpex7a6tld.jl:21\ntest set: Test Failed at /tmp/tmpex7a6tld.jl:25\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpex7a6tld.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpex7a6tld.jl:21\ntest set: Test Failed at /tmp/tmpex7a6tld.jl:26\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpex7a6tld.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpex7a6tld.jl:21\ntest set: Test Failed at /tmp/tmpex7a6tld.jl:28\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpex7a6tld.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpex7a6tld.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpex7a6tld.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplbqph0gy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmplbqph0gy.jl:17\n   [2] top-level scope at /tmp/tmplbqph0gy.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplbqph0gy.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplbqph0gy.jl:17\n\
    \   [2] top-level scope at /tmp/tmplbqph0gy.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbqph0gy.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbqph0gy.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb7vp6pgx.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7vp6pgx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpb7vp6pgx.jl:15\n\
    \   [2] top-level scope at /tmp/tmpb7vp6pgx.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7vp6pgx.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb7vp6pgx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnxd9v8ay.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnxd9v8ay.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\\
    n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnxd9v8ay.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\\
    n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnxd9v8ay.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\\
    n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnxd9v8ay.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\\
    n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnxd9v8ay.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpnxd9v8ay.jl:17\\\
    n   [2] top-level scope at /tmp/tmpnxd9v8ay.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnxd9v8ay.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoowgjdjh.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpoowgjdjh.jl:17\n   [2] top-level scope at /tmp/tmpoowgjdjh.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpoowgjdjh.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpoowgjdjh.jl:17\n\
    \   [2] top-level scope at /tmp/tmpoowgjdjh.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoowgjdjh.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoowgjdjh.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpuexfn4rl.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpuexfn4rl.jl:17\\n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuexfn4rl.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpuexfn4rl.jl:17\\\
    n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuexfn4rl.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpuexfn4rl.jl:17\\\
    n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuexfn4rl.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpuexfn4rl.jl:17\\\
    n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuexfn4rl.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpuexfn4rl.jl:17\\\
    n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpuexfn4rl.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpuexfn4rl.jl:17\\\
    n   [2] top-level scope at /tmp/tmpuexfn4rl.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpuexfn4rl.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpksmhzkx6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpksmhzkx6.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpksmhzkx6.jl:15\n\
    \   [2] top-level scope at /tmp/tmpksmhzkx6.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpksmhzkx6.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpksmhzkx6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwvnbzhpi.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpwvnbzhpi.jl:17\n   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpwvnbzhpi.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpwvnbzhpi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpwvnbzhpi.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwvnbzhpi.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwvnbzhpi.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjac3g_to.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjac3g_to.jl:17\n   [2] top-level scope at /tmp/tmpjac3g_to.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjac3g_to.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjac3g_to.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjac3g_to.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjac3g_to.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjac3g_to.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjac3g_to.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjac3g_to.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjac3g_to.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjac3g_to.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjac3g_to.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjac3g_to.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjac3g_to.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjac3g_to.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjac3g_to.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjac3g_to.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjac3g_to.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjac3g_to.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpapbkwzd0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpapbkwzd0.jl:17\n   [2] top-level scope at /tmp/tmpapbkwzd0.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbkwzd0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpapbkwzd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpapbkwzd0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbkwzd0.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapbkwzd0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuldr23im.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpuldr23im.jl:17\n   [2] top-level scope at /tmp/tmpuldr23im.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuldr23im.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuldr23im.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuldr23im.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuldr23im.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuldr23im.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuldr23im.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuldr23im.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuldr23im.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuldr23im.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuldr23im.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuldr23im.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuldr23im.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpuldr23im.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpuldr23im.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuldr23im.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuldr23im.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuldr23im.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpezw2vutu.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpezw2vutu.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpezw2vutu.jl:15\n\
    \   [2] top-level scope at /tmp/tmpezw2vutu.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpezw2vutu.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpezw2vutu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiwwtytku.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpiwwtytku.jl:17\n   [2] top-level scope at /tmp/tmpiwwtytku.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiwwtytku.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiwwtytku.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiwwtytku.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiwwtytku.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiwwtytku.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiwwtytku.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiwwtytku.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiwwtytku.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiwwtytku.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiwwtytku.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiwwtytku.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiwwtytku.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpiwwtytku.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpiwwtytku.jl:17\n\
    \   [2] top-level scope at /tmp/tmpiwwtytku.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiwwtytku.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwwtytku.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvo82dky_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpvo82dky_.jl:17\n   [2] top-level scope at /tmp/tmpvo82dky_.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo82dky_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvo82dky_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvo82dky_.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo82dky_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvo82dky_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvo82dky_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo82dky_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvo82dky_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvo82dky_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo82dky_.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvo82dky_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvo82dky_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpvo82dky_.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpvo82dky_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpvo82dky_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvo82dky_.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo82dky_.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqkb71jd6.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqkb71jd6.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqkb71jd6.jl:34\\ntest set: Test Failed at /tmp/tmpqkb71jd6.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqkb71jd6.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqkb71jd6.jl:34\\ntest set: Test Failed at /tmp/tmpqkb71jd6.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqkb71jd6.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqkb71jd6.jl:34\\ntest set: Test Failed at /tmp/tmpqkb71jd6.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqkb71jd6.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqkb71jd6.jl:34\\ntest set: Test Failed at /tmp/tmpqkb71jd6.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqkb71jd6.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqkb71jd6.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp306u02d6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp306u02d6.jl:17\n   [2] top-level scope at /tmp/tmp306u02d6.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp306u02d6.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp306u02d6.jl:17\n\
    \   [2] top-level scope at /tmp/tmp306u02d6.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp306u02d6.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp306u02d6.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2pyyp_ow.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp2pyyp_ow.jl:17\n   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pyyp_ow.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2pyyp_ow.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pyyp_ow.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2pyyp_ow.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pyyp_ow.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2pyyp_ow.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pyyp_ow.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2pyyp_ow.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pyyp_ow.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2pyyp_ow.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2pyyp_ow.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pyyp_ow.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2pyyp_ow.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5u4s1mat.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp5u4s1mat.jl:17\\n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5u4s1mat.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5u4s1mat.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5u4s1mat.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5u4s1mat.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5u4s1mat.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5u4s1mat.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5u4s1mat.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5u4s1mat.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5u4s1mat.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5u4s1mat.jl:17\\\
    n   [2] top-level scope at /tmp/tmp5u4s1mat.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5u4s1mat.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(selected, word)\n        end\n    end\n    return selected\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbaks94bg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpbaks94bg.jl:17\n   [2] top-level scope at /tmp/tmpbaks94bg.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbaks94bg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbaks94bg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbaks94bg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbaks94bg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbaks94bg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbaks94bg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbaks94bg.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbaks94bg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbaks94bg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbaks94bg.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbaks94bg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbaks94bg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbaks94bg.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbaks94bg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbaks94bg.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbaks94bg.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbaks94bg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphneeihqy.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmphneeihqy.jl:17\\n   [2] top-level scope at /tmp/tmphneeihqy.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphneeihqy.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmphneeihqy.jl:17\\\
    n   [2] top-level scope at /tmp/tmphneeihqy.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphneeihqy.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmphneeihqy.jl:17\\\
    n   [2] top-level scope at /tmp/tmphneeihqy.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphneeihqy.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmphneeihqy.jl:17\\\
    n   [2] top-level scope at /tmp/tmphneeihqy.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphneeihqy.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmphneeihqy.jl:17\\\
    n   [2] top-level scope at /tmp/tmphneeihqy.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphneeihqy.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmphneeihqy.jl:17\\\
    n   [2] top-level scope at /tmp/tmphneeihqy.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphneeihqy.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc9ch04s9.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpc9ch04s9.jl:17\n   [2] top-level scope at /tmp/tmpc9ch04s9.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9ch04s9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpc9ch04s9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpc9ch04s9.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9ch04s9.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpc9ch04s9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpc9ch04s9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9ch04s9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpc9ch04s9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpc9ch04s9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9ch04s9.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpc9ch04s9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpc9ch04s9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpc9ch04s9.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpc9ch04s9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpc9ch04s9.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc9ch04s9.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9ch04s9.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8r68mozc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp8r68mozc.jl:17\n   [2] top-level scope at /tmp/tmp8r68mozc.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8r68mozc.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8r68mozc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8r68mozc.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8r68mozc.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8r68mozc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8r68mozc.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8r68mozc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8r68mozc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8r68mozc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8r68mozc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8r68mozc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8r68mozc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8r68mozc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8r68mozc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8r68mozc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8r68mozc.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8r68mozc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe61ma1e2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpe61ma1e2.jl:17\n   [2] top-level scope at /tmp/tmpe61ma1e2.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe61ma1e2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe61ma1e2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe61ma1e2.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe61ma1e2.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe61ma1e2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe61ma1e2.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe61ma1e2.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe61ma1e2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe61ma1e2.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe61ma1e2.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe61ma1e2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe61ma1e2.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpe61ma1e2.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpe61ma1e2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpe61ma1e2.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe61ma1e2.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe61ma1e2.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(selected, word)\n        end\n    end\n    return selected\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu78xajra.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpu78xajra.jl:17\n   [2] top-level scope at /tmp/tmpu78xajra.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpu78xajra.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpu78xajra.jl:17\n\
    \   [2] top-level scope at /tmp/tmpu78xajra.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpu78xajra.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpu78xajra.jl:17\n\
    \   [2] top-level scope at /tmp/tmpu78xajra.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpu78xajra.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpu78xajra.jl:17\n\
    \   [2] top-level scope at /tmp/tmpu78xajra.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpu78xajra.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpu78xajra.jl:17\n\
    \   [2] top-level scope at /tmp/tmpu78xajra.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpu78xajra.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpu78xajra.jl:17\n\
    \   [2] top-level scope at /tmp/tmpu78xajra.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu78xajra.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu78xajra.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9asvocll.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp9asvocll.jl:17\n   [2] top-level scope at /tmp/tmp9asvocll.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9asvocll.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9asvocll.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9asvocll.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9asvocll.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9asvocll.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnmerrej7.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpnmerrej7.jl:17\n   [2] top-level scope at /tmp/tmpnmerrej7.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnmerrej7.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnmerrej7.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnmerrej7.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnmerrej7.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmerrej7.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpayilchd0.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpayilchd0.jl:17\n   [2] top-level scope at /tmp/tmpayilchd0.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpayilchd0.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpayilchd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpayilchd0.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpayilchd0.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpayilchd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpayilchd0.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpayilchd0.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpayilchd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpayilchd0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpayilchd0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpayilchd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpayilchd0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpayilchd0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpayilchd0.jl:17\n\
    \   [2] top-level scope at /tmp/tmpayilchd0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpayilchd0.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpayilchd0.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbvghbxm7.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpbvghbxm7.jl:17\\n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbvghbxm7.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpbvghbxm7.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbvghbxm7.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpbvghbxm7.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbvghbxm7.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpbvghbxm7.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbvghbxm7.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpbvghbxm7.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbvghbxm7.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpbvghbxm7.jl:17\\\
    n   [2] top-level scope at /tmp/tmpbvghbxm7.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbvghbxm7.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp90bjl0_o.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp90bjl0_o.jl:17\\n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp90bjl0_o.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp90bjl0_o.jl:17\\\
    n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp90bjl0_o.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp90bjl0_o.jl:17\\\
    n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp90bjl0_o.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp90bjl0_o.jl:17\\\
    n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp90bjl0_o.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp90bjl0_o.jl:17\\\
    n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp90bjl0_o.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp90bjl0_o.jl:17\\\
    n   [2] top-level scope at /tmp/tmp90bjl0_o.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp90bjl0_o.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9h9nf4st.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp9h9nf4st.jl:17\n   [2] top-level scope at /tmp/tmp9h9nf4st.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9h9nf4st.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9h9nf4st.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9h9nf4st.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9h9nf4st.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9h9nf4st.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9h9nf4st.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9h9nf4st.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9h9nf4st.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9h9nf4st.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9h9nf4st.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9h9nf4st.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9h9nf4st.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp9h9nf4st.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9h9nf4st.jl:17\n\
    \   [2] top-level scope at /tmp/tmp9h9nf4st.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9h9nf4st.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9h9nf4st.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpam0ym2l6.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpam0ym2l6.jl:17\n   [2] top-level scope at /tmp/tmpam0ym2l6.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpam0ym2l6.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpam0ym2l6.jl:17\n\
    \   [2] top-level scope at /tmp/tmpam0ym2l6.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpam0ym2l6.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpam0ym2l6.jl:17\n\
    \   [2] top-level scope at /tmp/tmpam0ym2l6.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpam0ym2l6.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpam0ym2l6.jl:17\n\
    \   [2] top-level scope at /tmp/tmpam0ym2l6.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpam0ym2l6.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpam0ym2l6.jl:17\n\
    \   [2] top-level scope at /tmp/tmpam0ym2l6.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpam0ym2l6.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpam0ym2l6.jl:17\n\
    \   [2] top-level scope at /tmp/tmpam0ym2l6.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpam0ym2l6.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpam0ym2l6.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   return split(s) .|> x -> length(filter(x -> !(x in \"aeiou\"), x)) == n\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3gxjagde.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Bool to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString\
    \ at strings/basic.jl:209\n    convert(::Type{T}, !Matched::AbstractString) where\
    \ T<:AbstractString at strings/basic.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T at essentials.jl:171\n  Stacktrace:\n   [1] setindex!(::Array{String,1},\
    \ ::Bool, ::Int64) at ./array.jl:826\n   [2] Array at ./bitarray.jl:491 [inlined]\n\
    \   [3] convert at ./array.jl:533 [inlined]\n   [4] select_words(::String, ::Int64)\
    \ at /tmp/tmp3gxjagde.jl:14\n   [5] top-level scope at /tmp/tmp3gxjagde.jl:21\n\
    \   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3gxjagde.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Bool to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Array{String,1}, ::Bool, ::Int64) at ./array.jl:826\n   [2]\
    \ Array at ./bitarray.jl:491 [inlined]\n   [3] convert at ./array.jl:533 [inlined]\n\
    \   [4] select_words(::String, ::Int64) at /tmp/tmp3gxjagde.jl:14\n   [5] top-level\
    \ scope at /tmp/tmp3gxjagde.jl:22\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3gxjagde.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Bool to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Array{String,1}, ::Bool, ::Int64) at ./array.jl:826\n   [2]\
    \ Array at ./bitarray.jl:491 [inlined]\n   [3] convert at ./array.jl:533 [inlined]\n\
    \   [4] select_words(::String, ::Int64) at /tmp/tmp3gxjagde.jl:14\n   [5] top-level\
    \ scope at /tmp/tmp3gxjagde.jl:23\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3gxjagde.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Bool to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Array{String,1}, ::Bool, ::Int64) at ./array.jl:826\n   [2]\
    \ Array at ./bitarray.jl:491 [inlined]\n   [3] convert at ./array.jl:533 [inlined]\n\
    \   [4] select_words(::String, ::Int64) at /tmp/tmp3gxjagde.jl:14\n   [5] top-level\
    \ scope at /tmp/tmp3gxjagde.jl:24\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3gxjagde.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Bool to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Array{String,1}, ::Bool, ::Int64) at ./array.jl:826\n   [2]\
    \ Array at ./bitarray.jl:491 [inlined]\n   [3] convert at ./array.jl:533 [inlined]\n\
    \   [4] select_words(::String, ::Int64) at /tmp/tmp3gxjagde.jl:14\n   [5] top-level\
    \ scope at /tmp/tmp3gxjagde.jl:25\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3gxjagde.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Bool to an object of type String\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] setindex!(::Array{String,1}, ::Bool, ::Int64) at ./array.jl:826\n   [2]\
    \ Array at ./bitarray.jl:491 [inlined]\n   [3] convert at ./array.jl:533 [inlined]\n\
    \   [4] select_words(::String, ::Int64) at /tmp/tmp3gxjagde.jl:14\n   [5] top-level\
    \ scope at /tmp/tmp3gxjagde.jl:27\n   [6] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [7] top-level scope at /tmp/tmp3gxjagde.jl:20\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3gxjagde.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl7rwdh2_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpl7rwdh2_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpl7rwdh2_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpl7rwdh2_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpl7rwdh2_.jl:27\\n  \\nTest Summary: | Error\
    \  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplg637iyz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmplg637iyz.jl:17\n   [2] top-level scope at /tmp/tmplg637iyz.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplg637iyz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplg637iyz.jl:17\n\
    \   [2] top-level scope at /tmp/tmplg637iyz.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplg637iyz.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplg637iyz.jl:17\n\
    \   [2] top-level scope at /tmp/tmplg637iyz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplg637iyz.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplg637iyz.jl:17\n\
    \   [2] top-level scope at /tmp/tmplg637iyz.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplg637iyz.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplg637iyz.jl:17\n\
    \   [2] top-level scope at /tmp/tmplg637iyz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplg637iyz.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplg637iyz.jl:17\n\
    \   [2] top-level scope at /tmp/tmplg637iyz.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplg637iyz.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplg637iyz.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    res = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(res, word)\n        end\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_llys7s4.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp_llys7s4.jl:17\n   [2] top-level scope at /tmp/tmp_llys7s4.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_llys7s4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_llys7s4.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_llys7s4.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_llys7s4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_llys7s4.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_llys7s4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_llys7s4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_llys7s4.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_llys7s4.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_llys7s4.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_llys7s4.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_llys7s4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_llys7s4.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_llys7s4.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_llys7s4.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_llys7s4.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_llys7s4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptd_1eqwk.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptd_1eqwk.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptd_1eqwk.jl:34\\ntest set: Test Failed at /tmp/tmptd_1eqwk.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmptd_1eqwk.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptd_1eqwk.jl:34\\ntest set: Test Failed at /tmp/tmptd_1eqwk.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptd_1eqwk.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptd_1eqwk.jl:34\\ntest set: Test Failed at /tmp/tmptd_1eqwk.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmptd_1eqwk.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptd_1eqwk.jl:34\\ntest set: Test Failed at /tmp/tmptd_1eqwk.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmptd_1eqwk.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptd_1eqwk.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzmv7a3_1.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpzmv7a3_1.jl:17\n   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzmv7a3_1.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzmv7a3_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzmv7a3_1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzmv7a3_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzmv7a3_1.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzmv7a3_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzmv7a3_1.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzmv7a3_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzmv7a3_1.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzmv7a3_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzmv7a3_1.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzmv7a3_1.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzmv7a3_1.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa5vzmlu9.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpa5vzmlu9.jl:17\n   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa5vzmlu9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa5vzmlu9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa5vzmlu9.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa5vzmlu9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa5vzmlu9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa5vzmlu9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa5vzmlu9.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa5vzmlu9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa5vzmlu9.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa5vzmlu9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa5vzmlu9.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa5vzmlu9.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa5vzmlu9.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code goes here\n    words = split(s)\n    result = []\n    for word\
    \ in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5i2l6ouy.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:29\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5i2l6ouy.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\\
    n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5i2l6ouy.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\\
    n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5i2l6ouy.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\\
    n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5i2l6ouy.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\\
    n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5i2l6ouy.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp5i2l6ouy.jl:18\\\
    n   [2] top-level scope at /tmp/tmp5i2l6ouy.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5i2l6ouy.jl:28\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp91199wyw.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp91199wyw.jl:17\\n   [2] top-level scope at /tmp/tmp91199wyw.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp91199wyw.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp91199wyw.jl:17\\\
    n   [2] top-level scope at /tmp/tmp91199wyw.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp91199wyw.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp91199wyw.jl:17\\\
    n   [2] top-level scope at /tmp/tmp91199wyw.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp91199wyw.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp91199wyw.jl:17\\\
    n   [2] top-level scope at /tmp/tmp91199wyw.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp91199wyw.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp91199wyw.jl:17\\\
    n   [2] top-level scope at /tmp/tmp91199wyw.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp91199wyw.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp91199wyw.jl:17\\\
    n   [2] top-level scope at /tmp/tmp91199wyw.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp91199wyw.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpta4p89c_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpta4p89c_.jl:17\\n   [2] top-level scope at /tmp/tmpta4p89c_.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta4p89c_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpta4p89c_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpta4p89c_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta4p89c_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpta4p89c_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpta4p89c_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta4p89c_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpta4p89c_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpta4p89c_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta4p89c_.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpta4p89c_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpta4p89c_.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta4p89c_.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpta4p89c_.jl:17\\\
    n   [2] top-level scope at /tmp/tmpta4p89c_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta4p89c_.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe_5trsxp.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpe_5trsxp.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe_5trsxp.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_5trsxp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfcckar6n.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpfcckar6n.jl:17\n   [2] top-level scope at /tmp/tmpfcckar6n.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfcckar6n.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfcckar6n.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfcckar6n.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfcckar6n.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfcckar6n.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfcckar6n.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfcckar6n.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfcckar6n.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfcckar6n.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfcckar6n.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfcckar6n.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfcckar6n.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfcckar6n.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfcckar6n.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfcckar6n.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfcckar6n.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcckar6n.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprj7g5kou.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmprj7g5kou.jl:17\n   [2] top-level scope at /tmp/tmprj7g5kou.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmprj7g5kou.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmprj7g5kou.jl:17\n\
    \   [2] top-level scope at /tmp/tmprj7g5kou.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmprj7g5kou.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmprj7g5kou.jl:17\n\
    \   [2] top-level scope at /tmp/tmprj7g5kou.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmprj7g5kou.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmprj7g5kou.jl:17\n\
    \   [2] top-level scope at /tmp/tmprj7g5kou.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmprj7g5kou.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmprj7g5kou.jl:17\n\
    \   [2] top-level scope at /tmp/tmprj7g5kou.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmprj7g5kou.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmprj7g5kou.jl:17\n\
    \   [2] top-level scope at /tmp/tmprj7g5kou.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprj7g5kou.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj7g5kou.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmper1hojoz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmper1hojoz.jl:17\n   [2] top-level scope at /tmp/tmper1hojoz.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmper1hojoz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmper1hojoz.jl:17\n\
    \   [2] top-level scope at /tmp/tmper1hojoz.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmper1hojoz.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmper1hojoz.jl:17\n\
    \   [2] top-level scope at /tmp/tmper1hojoz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmper1hojoz.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmper1hojoz.jl:17\n\
    \   [2] top-level scope at /tmp/tmper1hojoz.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmper1hojoz.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmper1hojoz.jl:17\n\
    \   [2] top-level scope at /tmp/tmper1hojoz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmper1hojoz.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmper1hojoz.jl:17\n\
    \   [2] top-level scope at /tmp/tmper1hojoz.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmper1hojoz.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmper1hojoz.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4p7mgmus.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp4p7mgmus.jl:17\n   [2] top-level scope at /tmp/tmp4p7mgmus.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4p7mgmus.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4p7mgmus.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4p7mgmus.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4p7mgmus.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4p7mgmus.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcuq2trpl.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpcuq2trpl.jl:17\n   [2] top-level scope at /tmp/tmpcuq2trpl.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcuq2trpl.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpcuq2trpl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcuq2trpl.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcuq2trpl.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpcuq2trpl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcuq2trpl.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcuq2trpl.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpcuq2trpl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcuq2trpl.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcuq2trpl.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpcuq2trpl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcuq2trpl.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcuq2trpl.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpcuq2trpl.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcuq2trpl.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcuq2trpl.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcuq2trpl.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8as88doo.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp8as88doo.jl:17\n   [2] top-level scope at /tmp/tmp8as88doo.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8as88doo.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8as88doo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8as88doo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8as88doo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8as88doo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8as88doo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8as88doo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8as88doo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8as88doo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8as88doo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8as88doo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8as88doo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8as88doo.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8as88doo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8as88doo.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8as88doo.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8as88doo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptg906i4r.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmptg906i4r.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptg906i4r.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptg906i4r.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code goes here\n    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8mv3dm5q.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp8mv3dm5q.jl:18\n   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mv3dm5q.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp8mv3dm5q.jl:18\n\
    \   [2] top-level scope at /tmp/tmp8mv3dm5q.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mv3dm5q.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8mv3dm5q.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz3_z0_8v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpz3_z0_8v.jl:17\n   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz3_z0_8v.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz3_z0_8v.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz3_z0_8v.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz3_z0_8v.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz3_z0_8v.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz3_z0_8v.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz3_z0_8v.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz3_z0_8v.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz3_z0_8v.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz3_z0_8v.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz3_z0_8v.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz3_z0_8v.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz3_z0_8v.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3808g6y5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp3808g6y5.jl:17\n   [2] top-level scope at /tmp/tmp3808g6y5.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3808g6y5.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3808g6y5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3808g6y5.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3808g6y5.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3808g6y5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3jbknmqj.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp3jbknmqj.jl:17\n   [2] top-level scope at /tmp/tmp3jbknmqj.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jbknmqj.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jbknmqj.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jbknmqj.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jbknmqj.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jbknmqj.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjy3hmqll.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjy3hmqll.jl:17\n   [2] top-level scope at /tmp/tmpjy3hmqll.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjy3hmqll.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjy3hmqll.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjy3hmqll.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjy3hmqll.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjy3hmqll.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5b_s93zn.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp5b_s93zn.jl:17\n   [2] top-level scope at /tmp/tmp5b_s93zn.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5b_s93zn.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp5b_s93zn.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5b_s93zn.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5b_s93zn.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp5b_s93zn.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5b_s93zn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5b_s93zn.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp5b_s93zn.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5b_s93zn.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5b_s93zn.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp5b_s93zn.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5b_s93zn.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5b_s93zn.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp5b_s93zn.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5b_s93zn.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5b_s93zn.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5b_s93zn.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp30ocq60u.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp30ocq60u.jl:17\\n   [2] top-level scope at /tmp/tmp30ocq60u.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp30ocq60u.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp30ocq60u.jl:17\\\
    n   [2] top-level scope at /tmp/tmp30ocq60u.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp30ocq60u.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp30ocq60u.jl:17\\\
    n   [2] top-level scope at /tmp/tmp30ocq60u.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp30ocq60u.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp30ocq60u.jl:17\\\
    n   [2] top-level scope at /tmp/tmp30ocq60u.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp30ocq60u.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp30ocq60u.jl:17\\\
    n   [2] top-level scope at /tmp/tmp30ocq60u.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp30ocq60u.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp30ocq60u.jl:17\\\
    n   [2] top-level scope at /tmp/tmp30ocq60u.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp30ocq60u.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpn6c4efqv.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpn6c4efqv.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpn6c4efqv.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     1      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7lvmjw88.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp7lvmjw88.jl:17\\n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lvmjw88.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp7lvmjw88.jl:17\\\
    n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lvmjw88.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp7lvmjw88.jl:17\\\
    n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lvmjw88.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp7lvmjw88.jl:17\\\
    n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lvmjw88.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp7lvmjw88.jl:17\\\
    n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp7lvmjw88.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp7lvmjw88.jl:17\\\
    n   [2] top-level scope at /tmp/tmp7lvmjw88.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp7lvmjw88.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjqv6lwde.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjqv6lwde.jl:17\n   [2] top-level scope at /tmp/tmpjqv6lwde.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjqv6lwde.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjqv6lwde.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjqv6lwde.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjqv6lwde.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjqv6lwde.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjqv6lwde.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjqv6lwde.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjqv6lwde.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjqv6lwde.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjqv6lwde.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjqv6lwde.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjqv6lwde.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjqv6lwde.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjqv6lwde.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjqv6lwde.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjqv6lwde.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqv6lwde.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpau0in82f.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpau0in82f.jl:17\n   [2] top-level scope at /tmp/tmpau0in82f.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpau0in82f.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpau0in82f.jl:17\n\
    \   [2] top-level scope at /tmp/tmpau0in82f.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpau0in82f.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpau0in82f.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n\
    \        num_consonants = 0\n        for letter in word\n            if letter\
    \ in consonants\n                num_consonants += 1\n            end\n      \
    \  end\n        if num_consonants == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvogxh68n.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpvogxh68n.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvogxh68n.jl:34\ntest set: Test Failed at /tmp/tmpvogxh68n.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvogxh68n.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvogxh68n.jl:34\ntest set: Test Failed at /tmp/tmpvogxh68n.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvogxh68n.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvogxh68n.jl:34\ntest set: Test Failed at /tmp/tmpvogxh68n.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpvogxh68n.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvogxh68n.jl:34\ntest set: Test Failed at /tmp/tmpvogxh68n.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvogxh68n.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvogxh68n.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvogxh68n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1a6rn7fc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp1a6rn7fc.jl:17\n   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1a6rn7fc.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1a6rn7fc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1a6rn7fc.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1a6rn7fc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1a6rn7fc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1a6rn7fc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1a6rn7fc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1a6rn7fc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp1a6rn7fc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp1a6rn7fc.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1a6rn7fc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1a6rn7fc.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1a6rn7fc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code goes here\n    words = split(s)\n    consonants = [\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    result = []\n \
    \   for word in words\n        count = 0\n        for letter in word\n       \
    \     if letter in consonants\n                count += 1\n            end\n \
    \       end\n        if count == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg5jmp3r8.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpg5jmp3r8.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jmp3r8.jl:35\ntest set: Test Failed at /tmp/tmpg5jmp3r8.jl:37\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg5jmp3r8.jl:37\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jmp3r8.jl:35\ntest set: Test Failed at /tmp/tmpg5jmp3r8.jl:39\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpg5jmp3r8.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jmp3r8.jl:35\ntest set: Test Failed at /tmp/tmpg5jmp3r8.jl:40\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpg5jmp3r8.jl:40\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jmp3r8.jl:35\ntest set: Test Failed at /tmp/tmpg5jmp3r8.jl:42\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg5jmp3r8.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jmp3r8.jl:35\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5jmp3r8.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp75mv2r6h.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp75mv2r6h.jl:17\n   [2] top-level scope at /tmp/tmp75mv2r6h.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp75mv2r6h.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp75mv2r6h.jl:17\n\
    \   [2] top-level scope at /tmp/tmp75mv2r6h.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp75mv2r6h.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp75mv2r6h.jl:17\n\
    \   [2] top-level scope at /tmp/tmp75mv2r6h.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp75mv2r6h.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp75mv2r6h.jl:17\n\
    \   [2] top-level scope at /tmp/tmp75mv2r6h.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp75mv2r6h.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp75mv2r6h.jl:17\n\
    \   [2] top-level scope at /tmp/tmp75mv2r6h.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp75mv2r6h.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp75mv2r6h.jl:17\n\
    \   [2] top-level scope at /tmp/tmp75mv2r6h.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp75mv2r6h.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75mv2r6h.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd3gzypua.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpd3gzypua.jl:17\n   [2] top-level scope at /tmp/tmpd3gzypua.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd3gzypua.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3gzypua.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd3gzypua.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd3gzypua.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3gzypua.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd3gzypua.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd3gzypua.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3gzypua.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd3gzypua.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd3gzypua.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3gzypua.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd3gzypua.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpd3gzypua.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3gzypua.jl:17\n\
    \   [2] top-level scope at /tmp/tmpd3gzypua.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd3gzypua.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd3gzypua.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpylemo51u.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpylemo51u.jl:17\n   [2] top-level scope at /tmp/tmpylemo51u.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpylemo51u.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpylemo51u.jl:17\n\
    \   [2] top-level scope at /tmp/tmpylemo51u.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpylemo51u.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpylemo51u.jl:17\n\
    \   [2] top-level scope at /tmp/tmpylemo51u.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpylemo51u.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpylemo51u.jl:17\n\
    \   [2] top-level scope at /tmp/tmpylemo51u.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpylemo51u.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpylemo51u.jl:17\n\
    \   [2] top-level scope at /tmp/tmpylemo51u.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpylemo51u.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpylemo51u.jl:17\n\
    \   [2] top-level scope at /tmp/tmpylemo51u.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpylemo51u.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylemo51u.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplfiey0a0.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmplfiey0a0.jl:17\\n   [2] top-level scope at /tmp/tmplfiey0a0.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplfiey0a0.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmplfiey0a0.jl:17\\\
    n   [2] top-level scope at /tmp/tmplfiey0a0.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplfiey0a0.jl:27\\n  \\nTest Summary: | Error\
    \  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz7ejxvo9.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpz7ejxvo9.jl:17\n   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpz7ejxvo9.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpz7ejxvo9.jl:17\n\
    \   [2] top-level scope at /tmp/tmpz7ejxvo9.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz7ejxvo9.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7ejxvo9.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgy857m5t.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpgy857m5t.jl:17\\n   [2] top-level scope at /tmp/tmpgy857m5t.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgy857m5t.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpgy857m5t.jl:17\\\
    n   [2] top-level scope at /tmp/tmpgy857m5t.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgy857m5t.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpgy857m5t.jl:17\\\
    n   [2] top-level scope at /tmp/tmpgy857m5t.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgy857m5t.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpgy857m5t.jl:17\\\
    n   [2] top-level scope at /tmp/tmpgy857m5t.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgy857m5t.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpgy857m5t.jl:17\\\
    n   [2] top-level scope at /tmp/tmpgy857m5t.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgy857m5t.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpgy857m5t.jl:17\\\
    n   [2] top-level scope at /tmp/tmpgy857m5t.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgy857m5t.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg5v7p01a.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpg5v7p01a.jl:17\n   [2] top-level scope at /tmp/tmpg5v7p01a.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5v7p01a.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpg5v7p01a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpg5v7p01a.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5v7p01a.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpg5v7p01a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpg5v7p01a.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5v7p01a.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpg5v7p01a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpg5v7p01a.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5v7p01a.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpg5v7p01a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpg5v7p01a.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpg5v7p01a.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpg5v7p01a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpg5v7p01a.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg5v7p01a.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5v7p01a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpz4p_kqqy.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpz4p_kqqy.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpz4p_kqqy.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     1  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptcn6l034.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmptcn6l034.jl:17\n   [2] top-level scope at /tmp/tmptcn6l034.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmptcn6l034.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmptcn6l034.jl:17\n\
    \   [2] top-level scope at /tmp/tmptcn6l034.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptcn6l034.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptcn6l034.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbr_am4va.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpbr_am4va.jl:17\n   [2] top-level scope at /tmp/tmpbr_am4va.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr_am4va.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbr_am4va.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbr_am4va.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr_am4va.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbr_am4va.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbr_am4va.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr_am4va.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbr_am4va.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbr_am4va.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr_am4va.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbr_am4va.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbr_am4va.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbr_am4va.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpbr_am4va.jl:17\n\
    \   [2] top-level scope at /tmp/tmpbr_am4va.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbr_am4va.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbr_am4va.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_p5rm6ga.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp_p5rm6ga.jl:17\n   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p5rm6ga.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_p5rm6ga.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p5rm6ga.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_p5rm6ga.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p5rm6ga.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_p5rm6ga.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p5rm6ga.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_p5rm6ga.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_p5rm6ga.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_p5rm6ga.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_p5rm6ga.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_p5rm6ga.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p5rm6ga.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, r\"\\s+\")\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\
    \    result = []\n    for word in words\n        if length(word) == n\n      \
    \      if all(word[i] in consonants for i in 1:n)\n                push!(result,\
    \ word)\n            end\n        end\n    end\n    return result\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary\
    \ had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little\
    \ lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\"\
    , 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"\
    ])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\"\
    , 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\",\
    \ \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqu8p7ee0.jl:31\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpqu8p7ee0.jl:31\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu8p7ee0.jl:30\ntest set: Test Failed at /tmp/tmpqu8p7ee0.jl:32\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqu8p7ee0.jl:32\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu8p7ee0.jl:30\ntest set: Test Failed at /tmp/tmpqu8p7ee0.jl:34\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqu8p7ee0.jl:34\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu8p7ee0.jl:30\ntest set: Test Failed at /tmp/tmpqu8p7ee0.jl:35\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpqu8p7ee0.jl:35\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu8p7ee0.jl:30\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu8p7ee0.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx4go5ka4.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpx4go5ka4.jl:17\n   [2] top-level scope at /tmp/tmpx4go5ka4.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpx4go5ka4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpx4go5ka4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpx4go5ka4.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpx4go5ka4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpx4go5ka4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpx4go5ka4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpx4go5ka4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpx4go5ka4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpx4go5ka4.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpx4go5ka4.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpx4go5ka4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpx4go5ka4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpx4go5ka4.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpx4go5ka4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpx4go5ka4.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx4go5ka4.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx4go5ka4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn5xg0jhp.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpn5xg0jhp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpn5xg0jhp.jl:15\n\
    \   [2] top-level scope at /tmp/tmpn5xg0jhp.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn5xg0jhp.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5xg0jhp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnvjmcdh5.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnvjmcdh5.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvjmcdh5.jl:34\\ntest set: Test Failed at /tmp/tmpnvjmcdh5.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnvjmcdh5.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvjmcdh5.jl:34\\ntest set: Test Failed at /tmp/tmpnvjmcdh5.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnvjmcdh5.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvjmcdh5.jl:34\\ntest set: Test Failed at /tmp/tmpnvjmcdh5.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnvjmcdh5.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvjmcdh5.jl:34\\ntest set: Test Failed at /tmp/tmpnvjmcdh5.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnvjmcdh5.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvjmcdh5.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     5      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd3xklr5z.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpd3xklr5z.jl:17\\n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd3xklr5z.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3xklr5z.jl:17\\\
    n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd3xklr5z.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3xklr5z.jl:17\\\
    n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd3xklr5z.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3xklr5z.jl:17\\\
    n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd3xklr5z.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3xklr5z.jl:17\\\
    n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpd3xklr5z.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpd3xklr5z.jl:17\\\
    n   [2] top-level scope at /tmp/tmpd3xklr5z.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpd3xklr5z.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjn0zd8cn.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjn0zd8cn.jl:17\n   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjn0zd8cn.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjn0zd8cn.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjn0zd8cn.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjn0zd8cn.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjn0zd8cn.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjn0zd8cn.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjn0zd8cn.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjn0zd8cn.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjn0zd8cn.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjn0zd8cn.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjn0zd8cn.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjn0zd8cn.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjn0zd8cn.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpita_jovw.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpita_jovw.jl:17\n   [2] top-level scope at /tmp/tmpita_jovw.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpita_jovw.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpita_jovw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpita_jovw.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpita_jovw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpita_jovw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpita_jovw.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpita_jovw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpita_jovw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpita_jovw.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpita_jovw.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpita_jovw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpita_jovw.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpita_jovw.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpita_jovw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpita_jovw.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpita_jovw.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpita_jovw.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0qrca9mr.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0qrca9mr.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0qrca9mr.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3jxvwbab.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp3jxvwbab.jl:17\n   [2] top-level scope at /tmp/tmp3jxvwbab.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jxvwbab.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jxvwbab.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jxvwbab.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jxvwbab.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jxvwbab.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jxvwbab.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jxvwbab.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jxvwbab.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jxvwbab.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jxvwbab.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jxvwbab.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jxvwbab.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jxvwbab.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3jxvwbab.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3jxvwbab.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jxvwbab.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jxvwbab.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjk9k6aa_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjk9k6aa_.jl:17\n   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjk9k6aa_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjk9k6aa_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjk9k6aa_.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjk9k6aa_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjk9k6aa_.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjk9k6aa_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjk9k6aa_.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjk9k6aa_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjk9k6aa_.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjk9k6aa_.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjk9k6aa_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjk9k6aa_.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjk9k6aa_.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3d1_8m_t.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp3d1_8m_t.jl:17\n   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp3d1_8m_t.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3d1_8m_t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3d1_8m_t.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3d1_8m_t.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3d1_8m_t.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4q_wljfs.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp4q_wljfs.jl:17\n   [2] top-level scope at /tmp/tmp4q_wljfs.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4q_wljfs.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4q_wljfs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4q_wljfs.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4q_wljfs.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4q_wljfs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4q_wljfs.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4q_wljfs.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4q_wljfs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4q_wljfs.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4q_wljfs.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4q_wljfs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4q_wljfs.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4q_wljfs.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp4q_wljfs.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4q_wljfs.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4q_wljfs.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4q_wljfs.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, r\"\\s+\")\n    result = []\n    for word in words\n    \
    \    if count_consonants(word) == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsuyxsnqy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpsuyxsnqy.jl:17\n   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsuyxsnqy.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsuyxsnqy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsuyxsnqy.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsuyxsnqy.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsuyxsnqy.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq4xk6bti.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpq4xk6bti.jl:17\n   [2] top-level scope at /tmp/tmpq4xk6bti.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpq4xk6bti.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpq4xk6bti.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq4xk6bti.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq4xk6bti.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq4xk6bti.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqzdw54rj.jl:22\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqzdw54rj.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqzdw54rj.jl:21\\ntest set: Test Failed at /tmp/tmpqzdw54rj.jl:23\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqzdw54rj.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqzdw54rj.jl:21\\ntest set: Test Failed at /tmp/tmpqzdw54rj.jl:25\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqzdw54rj.jl:25\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqzdw54rj.jl:21\\ntest set: Test Failed at /tmp/tmpqzdw54rj.jl:26\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqzdw54rj.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqzdw54rj.jl:21\\ntest set: Test Failed at /tmp/tmpqzdw54rj.jl:28\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqzdw54rj.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqzdw54rj.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n  \
    \      count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbn2843f7.jl:35\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbn2843f7.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbn2843f7.jl:34\\ntest set: Test Failed at /tmp/tmpbn2843f7.jl:36\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbn2843f7.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbn2843f7.jl:34\\ntest set: Test Failed at /tmp/tmpbn2843f7.jl:38\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbn2843f7.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbn2843f7.jl:34\\ntest set: Test Failed at /tmp/tmpbn2843f7.jl:39\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbn2843f7.jl:39\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbn2843f7.jl:34\\ntest set: Test Failed at /tmp/tmpbn2843f7.jl:41\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbn2843f7.jl:41\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbn2843f7.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa0fat9tz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpa0fat9tz.jl:17\n   [2] top-level scope at /tmp/tmpa0fat9tz.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0fat9tz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa0fat9tz.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa0fat9tz.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0fat9tz.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa0fat9tz.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa0fat9tz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0fat9tz.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa0fat9tz.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa0fat9tz.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0fat9tz.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa0fat9tz.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa0fat9tz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0fat9tz.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpa0fat9tz.jl:17\n\
    \   [2] top-level scope at /tmp/tmpa0fat9tz.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0fat9tz.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0fat9tz.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnbo_4utp.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpnbo_4utp.jl:17\n   [2] top-level scope at /tmp/tmpnbo_4utp.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnbo_4utp.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnbo_4utp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnbo_4utp.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnbo_4utp.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnbo_4utp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnbo_4utp.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnbo_4utp.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnbo_4utp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnbo_4utp.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnbo_4utp.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnbo_4utp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnbo_4utp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnbo_4utp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnbo_4utp.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnbo_4utp.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnbo_4utp.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnbo_4utp.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9lbznrf_.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9lbznrf_.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9lbznrf_.jl:34\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    6     1      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp81h3qn6t.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp81h3qn6t.jl:17\n   [2] top-level scope at /tmp/tmp81h3qn6t.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp81h3qn6t.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp81h3qn6t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp81h3qn6t.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp81h3qn6t.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp81h3qn6t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp81h3qn6t.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp81h3qn6t.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp81h3qn6t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp81h3qn6t.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp81h3qn6t.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp81h3qn6t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp81h3qn6t.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp81h3qn6t.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp81h3qn6t.jl:17\n\
    \   [2] top-level scope at /tmp/tmp81h3qn6t.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp81h3qn6t.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81h3qn6t.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfv966pos.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpfv966pos.jl:17\n   [2] top-level scope at /tmp/tmpfv966pos.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfv966pos.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfv966pos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfv966pos.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfv966pos.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfv966pos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfv966pos.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfv966pos.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfv966pos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfv966pos.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfv966pos.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfv966pos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfv966pos.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpfv966pos.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpfv966pos.jl:17\n\
    \   [2] top-level scope at /tmp/tmpfv966pos.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfv966pos.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfv966pos.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnd6jysdu.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpnd6jysdu.jl:17\n   [2] top-level scope at /tmp/tmpnd6jysdu.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnd6jysdu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnd6jysdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnd6jysdu.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnd6jysdu.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnd6jysdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnd6jysdu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnd6jysdu.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnd6jysdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnd6jysdu.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnd6jysdu.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnd6jysdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnd6jysdu.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnd6jysdu.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpnd6jysdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnd6jysdu.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnd6jysdu.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnd6jysdu.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp85amy5p_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp85amy5p_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp85amy5p_.jl:15\n\
    \   [2] top-level scope at /tmp/tmp85amy5p_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp85amy5p_.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85amy5p_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpspdi2qro.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpspdi2qro.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspdi2qro.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpspdi2qro.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxk6umk4p.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxk6umk4p.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxk6umk4p.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpht01vccf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpht01vccf.jl:17\n   [2] top-level scope at /tmp/tmpht01vccf.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpht01vccf.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpht01vccf.jl:17\n\
    \   [2] top-level scope at /tmp/tmpht01vccf.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpht01vccf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpht01vccf.jl:17\n\
    \   [2] top-level scope at /tmp/tmpht01vccf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpht01vccf.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpht01vccf.jl:17\n\
    \   [2] top-level scope at /tmp/tmpht01vccf.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpht01vccf.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpht01vccf.jl:17\n\
    \   [2] top-level scope at /tmp/tmpht01vccf.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpht01vccf.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpht01vccf.jl:17\n\
    \   [2] top-level scope at /tmp/tmpht01vccf.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpht01vccf.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpht01vccf.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsv410eki.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpsv410eki.jl:17\n   [2] top-level scope at /tmp/tmpsv410eki.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv410eki.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsv410eki.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsv410eki.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv410eki.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsv410eki.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsv410eki.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv410eki.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsv410eki.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsv410eki.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv410eki.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsv410eki.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsv410eki.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsv410eki.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsv410eki.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsv410eki.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsv410eki.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsv410eki.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsnrcdjid.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpsnrcdjid.jl:17\n   [2] top-level scope at /tmp/tmpsnrcdjid.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnrcdjid.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnrcdjid.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnrcdjid.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnrcdjid.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnrcdjid.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnrcdjid.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnrcdjid.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnrcdjid.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnrcdjid.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnrcdjid.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnrcdjid.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnrcdjid.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsnrcdjid.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsnrcdjid.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsnrcdjid.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsnrcdjid.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsnrcdjid.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2kup18cv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp2kup18cv.jl:17\n   [2] top-level scope at /tmp/tmp2kup18cv.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kup18cv.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2kup18cv.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2kup18cv.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kup18cv.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2kup18cv.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2kup18cv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kup18cv.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2kup18cv.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2kup18cv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kup18cv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2kup18cv.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2kup18cv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kup18cv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp2kup18cv.jl:17\n\
    \   [2] top-level scope at /tmp/tmp2kup18cv.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kup18cv.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kup18cv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected, word)\n\
    \        end\n    end\n    return selected\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpve84msjq.jl:36\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpve84msjq.jl:36\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpve84msjq.jl:34\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph5nx9eg5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmph5nx9eg5.jl:17\n   [2] top-level scope at /tmp/tmph5nx9eg5.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph5nx9eg5.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph5nx9eg5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph5nx9eg5.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph5nx9eg5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph5nx9eg5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph5nx9eg5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph5nx9eg5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph5nx9eg5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph5nx9eg5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph5nx9eg5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph5nx9eg5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph5nx9eg5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmph5nx9eg5.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmph5nx9eg5.jl:17\n\
    \   [2] top-level scope at /tmp/tmph5nx9eg5.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph5nx9eg5.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5nx9eg5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected, word)\n\
    \        end\n    end\n    return selected\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzqbdcixn.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpzqbdcixn.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzqbdcixn.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqbdcixn.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppa49z2fv.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmppa49z2fv.jl:17\n   [2] top-level scope at /tmp/tmppa49z2fv.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppa49z2fv.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppa49z2fv.jl:17\n\
    \   [2] top-level scope at /tmp/tmppa49z2fv.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppa49z2fv.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppa49z2fv.jl:17\n\
    \   [2] top-level scope at /tmp/tmppa49z2fv.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppa49z2fv.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppa49z2fv.jl:17\n\
    \   [2] top-level scope at /tmp/tmppa49z2fv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppa49z2fv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppa49z2fv.jl:17\n\
    \   [2] top-level scope at /tmp/tmppa49z2fv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppa49z2fv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppa49z2fv.jl:17\n\
    \   [2] top-level scope at /tmp/tmppa49z2fv.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppa49z2fv.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppa49z2fv.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   return split(s) |> filter(x -> count_consonants(x) == n)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\"\
    , 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) ==\
    \ Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\
    \t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4)\
    \ == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"\
    c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo04y4gru.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ no method matching filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n\
    \    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: no method\
    \ matching filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any,\
    \ !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: no method matching\
    \ filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: no method matching filter(::var\"\
    #3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpo04y4gru.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: no method matching\
    \ filter(::var\"#3#4\"{Int64})\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple{Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Vararg{Any,N}}\
    \ where N) at tuple.jl:267\n    filter(::Any, !Matched::Tuple) at tuple.jl:264\n\
    \    filter(::Any, !Matched::Array{T,N}) where {T, N} at array.jl:2371\n    ...\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpo04y4gru.jl:14\n\
    \   [2] top-level scope at /tmp/tmpo04y4gru.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo04y4gru.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo04y4gru.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_uw4cj1v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp_uw4cj1v.jl:17\n   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_uw4cj1v.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_uw4cj1v.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_uw4cj1v.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_uw4cj1v.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_uw4cj1v.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_uw4cj1v.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_uw4cj1v.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_uw4cj1v.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_uw4cj1v.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_uw4cj1v.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_uw4cj1v.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_uw4cj1v.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_uw4cj1v.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_s3d8hls.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp_s3d8hls.jl:17\n   [2] top-level scope at /tmp/tmp_s3d8hls.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_s3d8hls.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_s3d8hls.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_s3d8hls.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_s3d8hls.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_s3d8hls.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_s3d8hls.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_s3d8hls.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_s3d8hls.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_s3d8hls.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_s3d8hls.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_s3d8hls.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_s3d8hls.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp_s3d8hls.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp_s3d8hls.jl:17\n\
    \   [2] top-level scope at /tmp/tmp_s3d8hls.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_s3d8hls.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_s3d8hls.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ if count_consonants(word) == n\n            push!(selected_words, word)\n  \
    \      end\n    end\n    return selected_words\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4)\
    \ == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\"\
    , \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsoo4pkik.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpsoo4pkik.jl:17\n   [2] top-level scope at /tmp/tmpsoo4pkik.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsoo4pkik.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsoo4pkik.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsoo4pkik.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsoo4pkik.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsoo4pkik.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsoo4pkik.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsoo4pkik.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsoo4pkik.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsoo4pkik.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsoo4pkik.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsoo4pkik.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsoo4pkik.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpsoo4pkik.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpsoo4pkik.jl:17\n\
    \   [2] top-level scope at /tmp/tmpsoo4pkik.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsoo4pkik.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsoo4pkik.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp58agamwm.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp58agamwm.jl:17\n   [2] top-level scope at /tmp/tmp58agamwm.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp58agamwm.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp58agamwm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp58agamwm.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp58agamwm.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp58agamwm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp58agamwm.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp58agamwm.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp58agamwm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp58agamwm.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp58agamwm.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp58agamwm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp58agamwm.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp58agamwm.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp58agamwm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp58agamwm.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp58agamwm.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp58agamwm.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3y_8if42.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmp3y_8if42.jl:17\\n   [2] top-level scope at /tmp/tmp3y_8if42.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3y_8if42.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3y_8if42.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3y_8if42.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3y_8if42.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3y_8if42.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3y_8if42.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3y_8if42.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3y_8if42.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3y_8if42.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3y_8if42.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3y_8if42.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3y_8if42.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3y_8if42.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmp3y_8if42.jl:17\\\
    n   [2] top-level scope at /tmp/tmp3y_8if42.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3y_8if42.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmwiwyths.jl:22\\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\\n   Evaluated: String[] == [\"little\"\
    ]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmwiwyths.jl:22\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmwiwyths.jl:21\\ntest set: Test Failed at /tmp/tmpmwiwyths.jl:23\\\
    n  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpmwiwyths.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmwiwyths.jl:21\\ntest set: Test Failed at /tmp/tmpmwiwyths.jl:25\\\
    n  Expression: candidate(\"Hello world\", 4) == [\"world\"]\\n   Evaluated: String[]\
    \ == [\"world\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmwiwyths.jl:25\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmwiwyths.jl:21\\ntest set: Test Failed at /tmp/tmpmwiwyths.jl:26\\\
    n  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\\n   Evaluated: String[]\
    \ == [\"Uncle\"]\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmwiwyths.jl:26\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmwiwyths.jl:21\\ntest set: Test Failed at /tmp/tmpmwiwyths.jl:28\\\
    n  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\\
    n   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpmwiwyths.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmwiwyths.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    2     5      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppcjz4boy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmppcjz4boy.jl:17\n   [2] top-level scope at /tmp/tmppcjz4boy.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppcjz4boy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppcjz4boy.jl:17\n\
    \   [2] top-level scope at /tmp/tmppcjz4boy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppcjz4boy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppcjz4boy.jl:17\n\
    \   [2] top-level scope at /tmp/tmppcjz4boy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppcjz4boy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppcjz4boy.jl:17\n\
    \   [2] top-level scope at /tmp/tmppcjz4boy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppcjz4boy.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppcjz4boy.jl:17\n\
    \   [2] top-level scope at /tmp/tmppcjz4boy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmppcjz4boy.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmppcjz4boy.jl:17\n\
    \   [2] top-level scope at /tmp/tmppcjz4boy.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppcjz4boy.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppcjz4boy.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, r\"\\s+\")\n    result = []\n    for word in words\n    \
    \    if count_consonants(word) == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq6uke3ky.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmpq6uke3ky.jl:17\\n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:33\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpq6uke3ky.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmpq6uke3ky.jl:17\\\
    n   [2] top-level scope at /tmp/tmpq6uke3ky.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpq6uke3ky.jl:27\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        consonants\
    \ = 0\n        for letter in word\n            if letter in \"bcdfghjklmnpqrstvwxyz\"\
    \n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphjtyiwdb.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmphjtyiwdb.jl:35\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphjtyiwdb.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphjtyiwdb.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplb2dniwx.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmplb2dniwx.jl:17\n   [2] top-level scope at /tmp/tmplb2dniwx.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplb2dniwx.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplb2dniwx.jl:17\n\
    \   [2] top-level scope at /tmp/tmplb2dniwx.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplb2dniwx.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplb2dniwx.jl:17\n\
    \   [2] top-level scope at /tmp/tmplb2dniwx.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplb2dniwx.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplb2dniwx.jl:17\n\
    \   [2] top-level scope at /tmp/tmplb2dniwx.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplb2dniwx.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplb2dniwx.jl:17\n\
    \   [2] top-level scope at /tmp/tmplb2dniwx.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplb2dniwx.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmplb2dniwx.jl:17\n\
    \   [2] top-level scope at /tmp/tmplb2dniwx.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb2dniwx.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplb2dniwx.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdrzkculw.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpdrzkculw.jl:17\n   [2] top-level scope at /tmp/tmpdrzkculw.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpdrzkculw.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdrzkculw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpdrzkculw.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpdrzkculw.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdrzkculw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpdrzkculw.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpdrzkculw.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdrzkculw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpdrzkculw.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpdrzkculw.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdrzkculw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpdrzkculw.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpdrzkculw.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpdrzkculw.jl:17\n\
    \   [2] top-level scope at /tmp/tmpdrzkculw.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdrzkculw.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdrzkculw.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm26t0uwg.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpm26t0uwg.jl:17\n   [2] top-level scope at /tmp/tmpm26t0uwg.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm26t0uwg.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpm26t0uwg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpm26t0uwg.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm26t0uwg.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm26t0uwg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   s = split(s)\n    words = []\n    for i in s\n        if count_consonants(i)\
    \ == n\n            push!(words, i)\n        end\n    end\n    return words\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpah90euzy.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpah90euzy.jl:17\n   [2] top-level scope at /tmp/tmpah90euzy.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpah90euzy.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpah90euzy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpah90euzy.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpah90euzy.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpah90euzy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpah90euzy.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpah90euzy.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpah90euzy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpah90euzy.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpah90euzy.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpah90euzy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpah90euzy.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpah90euzy.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpah90euzy.jl:17\n\
    \   [2] top-level scope at /tmp/tmpah90euzy.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpah90euzy.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpah90euzy.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    selected_words = []\n    for word in words\n  \
    \      count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaoeha5qt.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmpaoeha5qt.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaoeha5qt.jl:34\ntest set: Test Failed at /tmp/tmpaoeha5qt.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaoeha5qt.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaoeha5qt.jl:34\ntest set: Test Failed at /tmp/tmpaoeha5qt.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpaoeha5qt.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaoeha5qt.jl:34\ntest set: Test Failed at /tmp/tmpaoeha5qt.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpaoeha5qt.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaoeha5qt.jl:34\ntest set: Test Failed at /tmp/tmpaoeha5qt.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaoeha5qt.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaoeha5qt.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaoeha5qt.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp196nkugz.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp196nkugz.jl:17\n   [2] top-level scope at /tmp/tmp196nkugz.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp196nkugz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp196nkugz.jl:17\n\
    \   [2] top-level scope at /tmp/tmp196nkugz.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp196nkugz.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp196nkugz.jl:17\n\
    \   [2] top-level scope at /tmp/tmp196nkugz.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp196nkugz.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp196nkugz.jl:17\n\
    \   [2] top-level scope at /tmp/tmp196nkugz.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp196nkugz.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp196nkugz.jl:17\n\
    \   [2] top-level scope at /tmp/tmp196nkugz.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp196nkugz.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp196nkugz.jl:17\n\
    \   [2] top-level scope at /tmp/tmp196nkugz.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp196nkugz.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp196nkugz.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppcl8b_94.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ]\\n  UndefVarError: count_consonants not defined\\n  Stacktrace:\\n   [1] select_words(::String,\
    \ ::Int64) at /tmp/tmppcl8b_94.jl:17\\n   [2] top-level scope at /tmp/tmppcl8b_94.jl:28\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppcl8b_94.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmppcl8b_94.jl:17\\\
    n   [2] top-level scope at /tmp/tmppcl8b_94.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppcl8b_94.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmppcl8b_94.jl:17\\\
    n   [2] top-level scope at /tmp/tmppcl8b_94.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppcl8b_94.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmppcl8b_94.jl:17\\\
    n   [2] top-level scope at /tmp/tmppcl8b_94.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppcl8b_94.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\\n  UndefVarError: count_consonants not defined\\\
    n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmppcl8b_94.jl:17\\\
    n   [2] top-level scope at /tmp/tmppcl8b_94.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmppcl8b_94.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\\n  UndefVarError: count_consonants\
    \ not defined\\n  Stacktrace:\\n   [1] select_words(::String, ::Int64) at /tmp/tmppcl8b_94.jl:17\\\
    n   [2] top-level scope at /tmp/tmppcl8b_94.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmppcl8b_94.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      6      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf02j8w92.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpf02j8w92.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpf02j8w92.jl:15\n\
    \   [2] top-level scope at /tmp/tmpf02j8w92.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf02j8w92.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf02j8w92.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpae_a8v1c.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpae_a8v1c.jl:17\n   [2] top-level scope at /tmp/tmpae_a8v1c.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpae_a8v1c.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpae_a8v1c.jl:17\n\
    \   [2] top-level scope at /tmp/tmpae_a8v1c.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpae_a8v1c.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpae_a8v1c.jl:17\n\
    \   [2] top-level scope at /tmp/tmpae_a8v1c.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpae_a8v1c.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpae_a8v1c.jl:17\n\
    \   [2] top-level scope at /tmp/tmpae_a8v1c.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpae_a8v1c.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpae_a8v1c.jl:17\n\
    \   [2] top-level scope at /tmp/tmpae_a8v1c.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpae_a8v1c.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpae_a8v1c.jl:17\n\
    \   [2] top-level scope at /tmp/tmpae_a8v1c.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpae_a8v1c.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpae_a8v1c.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjl5_myui.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpjl5_myui.jl:17\n   [2] top-level scope at /tmp/tmpjl5_myui.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjl5_myui.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjl5_myui.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjl5_myui.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjl5_myui.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjl5_myui.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjl5_myui.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjl5_myui.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjl5_myui.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjl5_myui.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjl5_myui.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjl5_myui.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjl5_myui.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjl5_myui.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpjl5_myui.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjl5_myui.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjl5_myui.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjl5_myui.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n   \
    \     count = 0\n        for letter in word\n            if letter in consonants\n\
    \                count += 1\n            end\n        end\n        if count ==\
    \ n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7qb9tkpw.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmp7qb9tkpw.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qb9tkpw.jl:34\ntest set: Test Failed at /tmp/tmp7qb9tkpw.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7qb9tkpw.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qb9tkpw.jl:34\ntest set: Test Failed at /tmp/tmp7qb9tkpw.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7qb9tkpw.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qb9tkpw.jl:34\ntest set: Test Failed at /tmp/tmp7qb9tkpw.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp7qb9tkpw.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qb9tkpw.jl:34\ntest set: Test Failed at /tmp/tmp7qb9tkpw.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7qb9tkpw.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7qb9tkpw.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7qb9tkpw.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code goes here\n    words = split(s, \" \")\n    result = []\n    for\
    \ word in words\n        if count_consonants(word) == n\n            push!(result,\
    \ word)\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmwzaxnks.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpmwzaxnks.jl:18\n   [2] top-level scope at /tmp/tmpmwzaxnks.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwzaxnks.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpmwzaxnks.jl:18\n\
    \   [2] top-level scope at /tmp/tmpmwzaxnks.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwzaxnks.jl:28\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwzaxnks.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    result = []\n    for word in words\n        if count_consonants(word)\
    \ == n\n            push!(result, word)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpugvfbgis.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpugvfbgis.jl:17\n   [2] top-level scope at /tmp/tmpugvfbgis.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpugvfbgis.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpugvfbgis.jl:17\n\
    \   [2] top-level scope at /tmp/tmpugvfbgis.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpugvfbgis.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpugvfbgis.jl:17\n\
    \   [2] top-level scope at /tmp/tmpugvfbgis.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpugvfbgis.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpugvfbgis.jl:17\n\
    \   [2] top-level scope at /tmp/tmpugvfbgis.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpugvfbgis.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpugvfbgis.jl:17\n\
    \   [2] top-level scope at /tmp/tmpugvfbgis.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpugvfbgis.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpugvfbgis.jl:17\n\
    \   [2] top-level scope at /tmp/tmpugvfbgis.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugvfbgis.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugvfbgis.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw9zlecv2.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpw9zlecv2.jl:17\n   [2] top-level scope at /tmp/tmpw9zlecv2.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpw9zlecv2.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpw9zlecv2.jl:17\n\
    \   [2] top-level scope at /tmp/tmpw9zlecv2.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw9zlecv2.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9zlecv2.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5jszidjf.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp5jszidjf.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5jszidjf.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5jszidjf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s, \" \")\n    result = []\n    for word in words\n        if\
    \ count_consonants(word) == n\n            push!(result, word)\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzqp8glrc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmpzqp8glrc.jl:17\n   [2] top-level scope at /tmp/tmpzqp8glrc.jl:28\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpzqp8glrc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmpzqp8glrc.jl:17\n\
    \   [2] top-level scope at /tmp/tmpzqp8glrc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzqp8glrc.jl:27\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqp8glrc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8byvpla5.jl:22\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmp8byvpla5.jl:22\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8byvpla5.jl:21\ntest set: Test Failed at /tmp/tmp8byvpla5.jl:23\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8byvpla5.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8byvpla5.jl:21\ntest set: Test Failed at /tmp/tmp8byvpla5.jl:25\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp8byvpla5.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8byvpla5.jl:21\ntest set: Test Failed at /tmp/tmp8byvpla5.jl:26\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp8byvpla5.jl:26\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8byvpla5.jl:21\ntest set: Test Failed at /tmp/tmp8byvpla5.jl:28\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8byvpla5.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8byvpla5.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8byvpla5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\n    words = split(s)\n    result = []\n    for word in words\n\
    \        if count_consonants(word) == n\n            push!(result, word)\n   \
    \     end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9gyl1pzl.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  UndefVarError:\
    \ count_consonants not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64)\
    \ at /tmp/tmp9gyl1pzl.jl:18\n   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:29\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gyl1pzl.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9gyl1pzl.jl:18\n\
    \   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gyl1pzl.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9gyl1pzl.jl:18\n\
    \   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gyl1pzl.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9gyl1pzl.jl:18\n\
    \   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gyl1pzl.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  UndefVarError: count_consonants not defined\n\
    \  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9gyl1pzl.jl:18\n\
    \   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gyl1pzl.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  UndefVarError: count_consonants\
    \ not defined\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp9gyl1pzl.jl:18\n\
    \   [2] top-level scope at /tmp/tmp9gyl1pzl.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gyl1pzl.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      6      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gyl1pzl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    selected_words = []\n    for word in words\n       \
    \ consonants = 0\n        for letter in word\n            if !(letter in \"aeiou\"\
    )\n                consonants += 1\n            end\n        end\n        if consonants\
    \ == n\n            push!(selected_words, word)\n        end\n    end\n    return\
    \ selected_words\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqnk2hbsn.jl:38\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[] == [\"Uncle\"]\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqnk2hbsn.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqnk2hbsn.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqnk2hbsn.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = select_words;\n\
    \t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple\
    \ white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\"\
    , 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t\
    @test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e\
    \ f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3bejnwn2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Mary had a little lamb\", 4) == [\"little\"]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Array{String,1}\n\
    \  Closest candidates are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    simple white space\", 2) == Vector{String}([])\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Hello world\", 4) == [\"world\"]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Array{String,1}\n  Closest candidates are:\n\
    \    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    Uncle sam\", 3) == [\"Uncle\"]\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    \", 4) == Vector{String}([])\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Array{String,1}\n  Closest candidates are:\n  \
    \  convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct) at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmp3bejnwn2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Array{String,1}\n  Closest candidates\
    \ are:\n    convert(::Type{Array{String,1}}, !Matched::LibGit2.StrArrayStruct)\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/LibGit2/src/strarray.jl:14\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:533\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] select_words(::String, ::Int64) at /tmp/tmp3bejnwn2.jl:15\n\
    \   [2] top-level scope at /tmp/tmp3bejnwn2.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3bejnwn2.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3bejnwn2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    result =\
    \ []\n    for word in words\n        count = 0\n        for letter in word\n \
    \           if letter in consonants\n                count += 1\n            end\n\
    \        end\n        if count == n\n            push!(result, word)\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = select_words;\n\t@test(candidate(\"Mary had a little lamb\", 4) == [\"little\"\
    ])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"])\n\
    \t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\t@test(candidate(\"\
    Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"\
    Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\t@test(candidate(\"\
    a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpql2qql99.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmpql2qql99.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpql2qql99.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpql2qql99.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    selected_words\
    \ = []\n    for word in words\n        count = 0\n        for letter in word\n\
    \            if letter in consonants\n                count += 1\n           \
    \ end\n        end\n        if count == n\n            push!(selected_words, word)\n\
    \        end\n    end\n    return selected_words\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = select_words;\n\t@test(candidate(\"Mary had a little lamb\"\
    , 4) == [\"little\"])\n\t@test(candidate(\"Mary had a little lamb\", 3) == [\"\
    Mary\", \"lamb\"])\n\t@test(candidate(\"simple white space\", 2) == Vector{String}([]))\n\
    \t@test(candidate(\"Hello world\", 4) == [\"world\"])\n\t@test(candidate(\"Uncle\
    \ sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\", 4) == Vector{String}([]))\n\
    \t@test(candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp33o4we9w.jl:36\n  Expression: candidate(\"\
    Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"]\n   Evaluated: [\"lamb\"\
    ] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp33o4we9w.jl:36\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp33o4we9w.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33o4we9w.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a string s and a natural number n, you have been tasked to\
    \ implement \n    a function that returns a list of all words from string s that\
    \ contain exactly \n    n consonants, in order these words appear in the string\
    \ s.\n    If the string s is empty then the function should return an empty list.\n\
    \    Note: you may assume the input string contains only letters and spaces.\n\
    \    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"\
    ]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n\
    \    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello\
    \ world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"\
    ]\n    \"\"\"\nfunction select_words(s::String, n::Int64)::Vector{String} \n \
    \   words = split(s)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"z\"]\n    result = []\n    for word in words\n        count\
    \ = 0\n        for letter in word\n            if letter in consonants\n     \
    \           count += 1\n            end\n        end\n        if count == n\n\
    \            push!(result, word)\n        end\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = select_words;\n\t@test(candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"])\n\t@test(candidate(\"Mary had a\
    \ little lamb\", 3) == [\"Mary\", \"lamb\"])\n\t@test(candidate(\"simple white\
    \ space\", 2) == Vector{String}([]))\n\t@test(candidate(\"Hello world\", 4) ==\
    \ [\"world\"])\n\t@test(candidate(\"Uncle sam\", 3) == [\"Uncle\"])\n\t@test(candidate(\"\
    \", 4) == Vector{String}([]))\n\t@test(candidate(\"a b c d e f\", 1) == [\"b\"\
    , \"c\", \"d\", \"f\"])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ytiosjg.jl:35\n  Expression: candidate(\"\
    Mary had a little lamb\", 4) == [\"little\"]\n   Evaluated: String[] == [\"little\"\
    ]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ytiosjg.jl:35\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ytiosjg.jl:34\ntest set: Test Failed at /tmp/tmp4ytiosjg.jl:36\n\
    \  Expression: candidate(\"Mary had a little lamb\", 3) == [\"Mary\", \"lamb\"\
    ]\n   Evaluated: String[] == [\"Mary\", \"lamb\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ytiosjg.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ytiosjg.jl:34\ntest set: Test Failed at /tmp/tmp4ytiosjg.jl:38\n\
    \  Expression: candidate(\"Hello world\", 4) == [\"world\"]\n   Evaluated: String[]\
    \ == [\"world\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ytiosjg.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ytiosjg.jl:34\ntest set: Test Failed at /tmp/tmp4ytiosjg.jl:39\n\
    \  Expression: candidate(\"Uncle sam\", 3) == [\"Uncle\"]\n   Evaluated: String[]\
    \ == [\"Uncle\"]\nStacktrace:\n [1] top-level scope at /tmp/tmp4ytiosjg.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ytiosjg.jl:34\ntest set: Test Failed at /tmp/tmp4ytiosjg.jl:41\n\
    \  Expression: candidate(\"a b c d e f\", 1) == [\"b\", \"c\", \"d\", \"f\"]\n\
    \   Evaluated: String[] == [\"b\", \"c\", \"d\", \"f\"]\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ytiosjg.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ytiosjg.jl:34\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ytiosjg.jl:32\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_61_correct_bracketing
language: julia
prompt: "\"\"\" brackets is a string of \"(\" and \")\".\n    return True if every\
  \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
  (\")\n    False\n    >>> correct_bracketing(\"()\")\n    True\n    >>> correct_bracketing(\"\
  (()())\")\n    True\n    >>> correct_bracketing(\")(()\")\n    False\n    \"\"\"\
  \nfunction correct_bracketing(brackets::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
  ()\") == true)\n\t@test(candidate(\"(()())\") == true)\n\t@test(candidate(\"()()(()())()\"\
  ) == true)\n\t@test(candidate(\"()()((()()())())(()()(()))\") == true)\n\t@test(candidate(\"\
  ((()())))\") == false)\n\t@test(candidate(\")(()\") == false)\n\t@test(candidate(\"\
  (\") == false)\n\t@test(candidate(\"((((\") == false)\n\t@test(candidate(\")\")\
  \ == false)\n\t@test(candidate(\"(()\") == false)\n\t@test(candidate(\"()()(()())())(()\"\
  ) == false)\n\t@test(candidate(\"()()(()())()))()\") == false)\nend\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

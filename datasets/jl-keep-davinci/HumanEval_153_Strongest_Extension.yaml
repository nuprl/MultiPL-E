name: HumanEval_153_Strongest_Extension
language: julia
prompt: "\"\"\"You will be given the name of a class (a string) and a list of extensions.\n\
  \    The extensions are to be used to load additional classes to the class. The\n\
  \    strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  \    letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n    in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n    You should find the strongest extension and return a string in this \n \
  \   format: ClassName.StrongestExtensionName.\n    If there are two or more extensions\
  \ with the same strength, you should\n    choose the one that comes first in the\
  \ list.\n    For example, if you are given \"Slices\" as the class and a list of\
  \ the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  \    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class',\
  \ ['AA', 'Be', 'CC']) == 'my_class.AA'\n    \"\"\"\nfunction Strongest_Extension(class_name::String,\
  \ extensions::Vector{String})::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = Strongest_Extension;\n\t@test(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\n\t@test(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\"\
  )\n\t@test(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\"\
  , \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\")\n\t@test(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\n\t@test(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\")\n\t@test(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"\
  YameRore.okIWILL123\")\n\t@test(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"\
  Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\n\t@test(candidate(\"_\", [\"Bb\", \"91245\"\
  ]) == \"_.Bb\")\n\t@test(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\"\
  )\nend\n"
completions: ["    strength = 0\n    strongest_extension = \"\"\n    for extension\
    \ in extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest = \"\"\
    \n    for i in 1:length(extensions)\n        CAP = sum(isupper.(extensions[i]))\n\
    \        SM = sum(islower.(extensions[i]))\n        if CAP - SM > strength\n \
    \           strength = CAP - SM\n            strongest = extensions[i]\n     \
    \   end\n    end\n    return class_name * \".\" * strongest\nend", "    strength\
    \ = 0\n    strongest_extension = \"\"\n    for extension in extensions\n     \
    \   cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n  \
    \      if cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\nend", "    strength\
    \ = -Inf\n    strongest_extension = \"\"\n    for extension in extensions\n  \
    \      cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"\"\n\
    end", "    strength = 0\n    strongest = \"\"\n    for i in 1:length(extensions)\n\
    \        ext = extensions[i]\n        CAP = sum(isupper.(ext))\n        SM = sum(islower.(ext))\n\
    \        if CAP - SM > strength\n            strength = CAP - SM\n           \
    \ strongest = ext\n        end\n    end\n    return class_name * \".\" * strongest\n\
    end", "    # your code here\n    return \"\"\nend", "    strength = -Inf\n   \
    \ strongest = \"\"\n    for i in 1:length(extensions)\n        ext = extensions[i]\n\
    \        CAP = sum(isupper.(ext))\n        SM = sum(islower.(ext))\n        if\
    \ CAP - SM > strength\n            strength = CAP - SM\n            strongest\
    \ = ext\n        end\n    end\n    return class_name * \".\" * strongest\nend",
  "    # your code here\nend", "    strength = 0\n    strongest_extension = \"\"\n\
    \    for extension in extensions\n        cap = sum(isupper.(extension))\n   \
    \     sm = sum(islower.(extension))\n        if cap - sm > strength\n        \
    \    strength = cap - sm\n            strongest_extension = extension\n      \
    \  end\n    end\n    return class_name * \".\" * strongest_extension\nend", " \
    \   strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"\"\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap += 1\n     \
    \       elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n                sm += 1\n\
    \            end\n        end\n        if cap - sm > strength\n            strength\
    \ = cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    strength = 0\n\
    \    strongest_extension = \"\"\n    for extension in extensions\n        cap\
    \ = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n        if\
    \ cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    # your code here\n    return \"\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\nend", "    # your code here\n    return class_name * \".\"\
    \ * \"AA\"\nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension\
    \ in extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n             \
    \   sm += 1\n            end\n        end\n        if cap - sm > strength\n  \
    \          strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    strength = 0\n   \
    \ strongest_extension = \"\"\n    for extension in extensions\n        if extension\
    \ == \"\"\n            continue\n        end\n        cap = 0\n        sm = 0\n\
    \        for letter in extension\n            if letter in string(uppercase(letter))\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    strength = 0\n\
    \    strongest_extension = \"\"\n    for extension in extensions\n        cap\
    \ = 0\n        sm = 0\n        for letter in extension\n            if letter\
    \ in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n                cap += 1\n        \
    \    else\n                sm += 1\n            end\n        end\n        if cap\
    \ - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    # your code here\n    return \"\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        extension_strength = sum(isupper.(extension)) - sum(islower.(extension))\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength_list = []\n  \
    \  for i in 1:length(extensions)\n        strength_list = [strength_list; strength(extensions[i])]\n\
    \    end\n    strongest_extension = extensions[findmax(strength_list)[2]]\n  \
    \  return class_name * \".\" * strongest_extension\nend", "    # your code here\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        extension_strength = sum(isupper.(extension)) - sum(islower.(extension))\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    # your code here\n    return\
    \ \"my_class.AA\"\nend", "    # your code here\n    return \"my_class.AA\"\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        CAP = sum(isupper.(extension))\n\
    \        SM = sum(islower.(extension))\n        if CAP - SM > strength\n     \
    \       strength = CAP - SM\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\nend", "    strength = 0\n    strongest_extension = \"\"\n\
    \    for extension in extensions\n        cap = sum(isupper.(extension))\n   \
    \     sm = sum(islower.(extension))\n        if cap - sm > strength\n        \
    \    strength = cap - sm\n            strongest_extension = extension\n      \
    \  end\n    end\n    return class_name * \".\" * strongest_extension\nend", " \
    \   strength = 0\n    strongest_extension = \"\"\n    for i in 1:length(extensions)\n\
    \        extension = extensions[i]\n        CAP = sum(isupper.(extension))\n \
    \       SM = sum(islower.(extension))\n        if CAP - SM > strength\n      \
    \      strength = CAP - SM\n            strongest_extension = extension\n    \
    \    end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    strength = 0\n   \
    \ strongest_extension = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        current_strength = sum(isupper.(extension)) - sum(islower.(extension))\n\
    \        if current_strength > strength\n            strength = current_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # Your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n                cap += 1\n\
    \            else\n                sm += 1\n            end\n        end\n   \
    \     if cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    # your code here\n    return \"my_class.AA\"\nend", "    # your code\
    \ here\n    return \"my_class.AA\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    # your code here\n\
    \    return \"\"\nend", "    strength = 0\n    strongest_extension = \"\"\n  \
    \  for extension in extensions\n        extension_strength = sum(isupper.(extension))\
    \ - sum(islower.(extension))\n        if extension_strength > strength\n     \
    \       strength = extension_strength\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    # Your code here\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in string('A':'Z')\n                cap += 1\n        \
    \    elseif letter in string('a':'z')\n                sm += 1\n            end\n\
    \        end\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    # your code here\n    return\
    \ \"my_class.AA\"\nend", "    strength = 0\n    strongest_extension = \"\"\n \
    \   for extension in extensions\n        strength_extension = 0\n        for letter\
    \ in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                strength_extension += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                strength_extension -= 1\n            end\n        end\n     \
    \   if strength_extension > strength\n            strength = strength_extension\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = count(isupper, extension)\n        sm = count(islower, extension)\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest = \"\"\n    for i in 1:length(extensions)\n\
    \        cap = 0\n        sm = 0\n        for j in 1:length(extensions[i])\n \
    \           if isupper(extensions[i][j])\n                cap += 1\n         \
    \   else\n                sm += 1\n            end\n        end\n        if cap\
    \ - sm > strength\n            strength = cap - sm\n            strongest = extensions[i]\n\
    \        end\n    end\n    return \"$class_name.$strongest\"\nend", "    # your\
    \ code here\nend", "    strength = 0\n    strongest_extension = \"\"\n    for\
    \ extension in extensions\n        cap = 0\n        sm = 0\n        for letter\
    \ in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if isupper(letter)\n                cap += 1\n            elseif\
    \ islower(letter)\n                sm += 1\n            end\n        end\n   \
    \     if cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        ext = extensions[i]\n   \
    \     cap = sum(isupper.(ext))\n        sm = sum(islower.(ext))\n        if cap\
    \ - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = ext\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = -1\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    strength = 0\n   \
    \ strongest_extension = \"\"\n    for extension in extensions\n        extension_strength\
    \ = count(isupper, extension) - count(islower, extension)\n        if extension_strength\
    \ > strength\n            strength = extension_strength\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        extension_strength = count(isupper, extension) - count(islower, extension)\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for i in 1:length(extensions)\n        if strength < (sum(isupper.(extensions[i]))\
    \ - sum(islower.(extensions[i])))\n            strength = sum(isupper.(extensions[i]))\
    \ - sum(islower.(extensions[i]))\n            strongest_extension = extensions[i]\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n                cap +=\
    \ 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\")\n   \
    \             sm += 1\n            end\n        end\n        if cap - sm > strength\n\
    \            strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        extension_strength = count_upper(extension) - count_lower(extension)\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest = \"\"\
    \n    for ext in extensions\n        cap = 0\n        sm = 0\n        for c in\
    \ ext\n            if c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            elseif c in 'abcdefghijklmnopqrstuvwxyz'\n                sm\
    \ += 1\n            end\n        end\n        if cap - sm > strength\n       \
    \     strength = cap - sm\n            strongest = ext\n        end\n    end\n\
    \    return \"$class_name.$strongest\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap += 1\n     \
    \       elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n                sm += 1\n\
    \            end\n        end\n        if cap - sm > strength\n            strength\
    \ = cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    # Your code here\n\
    \    return \"my_class.AA\"\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        if strength < (count_upper(extension) - count_lower(extension))\n\
    \            strength = count_upper(extension) - count_lower(extension)\n    \
    \        strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest = \"\"\
    \n    for i in extensions\n        if count_upper(i) - count_lower(i) > strength\n\
    \            strength = count_upper(i) - count_lower(i)\n            strongest\
    \ = i\n        end\n    end\n    return class_name * \".\" * strongest\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n                cap += 1\n\
    \            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n         \
    \       sm += 1\n            end\n        end\n        if cap - sm > strength\n\
    \            strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend", "    strength = []\n    for i in extensions\n        strength = push!(strength,\
    \ count(isupper, i) - count(islower, i))\n    end\n    return class_name * \"\
    .\" * extensions[argmax(strength)]\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strengths = [sum(isupper.(ext)) - sum(islower.(ext)) for ext in extensions]\n\
    \    strongest_ext = extensions[argmax(strengths)]\n    return \"$class_name.$strongest_ext\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in string('A':'Z')\n                cap += 1\n        \
    \    elseif letter in string('a':'z')\n                sm += 1\n            end\n\
    \        end\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ \"$class_name.$strongest_extension\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    strength = -Inf\n    strongest_extension = \"\"\n    for extension\
    \ in extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # Your code here\n    return \"\"\n\
    end", "    # your code here\n    return \"my_class.AA\"\nend", "    strength =\
    \ 0\n    strongest_extension = \"\"\n    for extension in extensions\n       \
    \ cap = 0\n        sm = 0\n        for letter in extension\n            if letter\
    \ in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n                cap += 1\n        \
    \    elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n                sm\
    \ += 1\n            end\n        end\n        if cap - sm > strength\n       \
    \     strength = cap - sm\n            strongest_extension = extension\n     \
    \   end\n    end\n    return class_name * \".\" * strongest_extension\nend", " \
    \   strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        if extension[1] in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n           \
    \ cap = length(extension)\n        else\n            cap = 0\n        end\n  \
    \      if extension[1] in string('abcdefghijklmnopqrstuvwxyz')\n            sm\
    \ = length(extension)\n        else\n            sm = 0\n        end\n       \
    \ if cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n           \
    \     cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return \"$class_name.$strongest_extension\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        current_strength = sum(isupper.(extension)) - sum(islower.(extension))\n\
    \        if current_strength > strength\n            strength = current_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        extension_strength = count(isupper,\
    \ extension) - count(islower, extension)\n        if extension_strength > strength\n\
    \            strength = extension_strength\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    # your code here\n\
    \    return \"my_class.AA\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = -Inf\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"my_class.AA\"\nend", "    strength = 0\n   \
    \ strongest_extension = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        CAP = sum(isupper.(extension))\n        SM = sum(islower.(extension))\n\
    \        if CAP - SM > strength\n            strength = CAP - SM\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # Your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for i in 1:length(extensions)\n\
    \        extension = extensions[i]\n        cap = 0\n        sm = 0\n        for\
    \ j in 1:length(extension)\n            if extension[j] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    strength = 0\n\
    \    strongest_extension = \"\"\n    for extension in extensions\n        cap\
    \ = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n        if\
    \ cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        extension_strength = count(isupper, extension) - count(islower,\
    \ extension)\n        if extension_strength > strength\n            strength =\
    \ extension_strength\n            strongest_extension = extension\n        end\n\
    \    end\n    return class_name * \".\" * strongest_extension\nend", "    strength\
    \ = 0\n    strongest_extension = \"\"\n    for extension in extensions\n     \
    \   cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n  \
    \      if cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # Your code here\n    return \"\"\nend", "    strength = 0\n    strongest =\
    \ \"\"\n    for i in 1:length(extensions)\n        cap = 0\n        sm = 0\n \
    \       for j in 1:length(extensions[i])\n            if isupper(extensions[i][j])\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest = extensions[i]\n        end\n    end\n    return\
    \ class_name * \".\" * strongest\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = length(filter(isupper, extension))\n        sm = length(filter(islower,\
    \ extension))\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\nend", "    strength = 0\n    strongest_extension = \"\"\n\
    \    for extension in extensions\n        cap = sum(isupper.(extension))\n   \
    \     sm = sum(islower.(extension))\n        if cap - sm > strength\n        \
    \    strength = cap - sm\n            strongest_extension = extension\n      \
    \  end\n    end\n    return class_name * \".\" * strongest_extension\nend", " \
    \   strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if isupper(letter)\n            \
    \    cap += 1\n            else\n                sm += 1\n            end\n  \
    \      end\n        if cap - sm > strength\n            strength = cap - sm\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\nend", "    # your code here\n    return \"my_class.AA\"\n\
    end", "    # your code here\n    return \"my_class.AA\"\nend", "    strength =\
    \ 0\n    strongest = \"\"\n    for i in 1:length(extensions)\n        cap = 0\n\
    \        sm = 0\n        for j in 1:length(extensions[i])\n            if isupper(extensions[i][j])\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest = extensions[i]\n        end\n    end\n    return\
    \ class_name * \".\" * strongest\nend", "    strengths = [sum(isupper.(ext)) -\
    \ sum(islower.(ext)) for ext in extensions]\n    strongest_ext = extensions[argmax(strengths)]\n\
    \    return \"$class_name.$strongest_ext\"\nend", "    strength = 0\n    strongest\
    \ = \"\"\n    for i in 1:length(extensions)\n        if strength < count_uppercase(extensions[i])\
    \ - count_lowercase(extensions[i])\n            strength = count_uppercase(extensions[i])\
    \ - count_lowercase(extensions[i])\n            strongest = extensions[i]\n  \
    \      end\n    end\n    return \"$class_name.$strongest\"\nend", "    strength\
    \ = 0\n    strongest_extension = \"\"\n    for extension in extensions\n     \
    \   cap = 0\n        sm = 0\n        for letter in extension\n            if letter\
    \ in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n                cap += 1\n        \
    \    elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n                sm\
    \ += 1\n            end\n        end\n        if cap - sm > strength\n       \
    \     strength = cap - sm\n            strongest_extension = extension\n     \
    \   end\n    end\n    return class_name * \".\" * strongest_extension\nend", " \
    \   strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # Your code here\n    return \"my_class.AA\"\nend", "    # your code here\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n             \
    \   sm += 1\n            end\n        end\n        if cap - sm > strength\n  \
    \          strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return \"$class_name.$strongest_extension\"\nend",
  "    # your code here\n    return class_name * \".\" * \"AA\"\nend", "    # your\
    \ code here\n    return \"my_class.AA\"\nend", "    strength = -Inf\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        extension_strength = count(isupper, extension) - count(islower, extension)\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        CAP = sum(isupper.(extension))\n\
    \        SM = sum(islower.(extension))\n        if CAP - SM > strength\n     \
    \       strength = CAP - SM\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = 0\n        sm = 0\n        for letter in extension\n          \
    \  if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap += 1\n     \
    \       elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n                sm += 1\n\
    \            end\n        end\n        if cap - sm > strength\n            strength\
    \ = cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    strength = 0\n\
    \    strongest_extension = \"\"\n    for extension in extensions\n        cap\
    \ = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n        if\
    \ cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n                cap +=\
    \ 1\n            elseif letter in 'abcdefghijklmnopqrstuvwxyz'\n             \
    \   sm += 1\n            end\n        end\n        if cap - sm > strength\n  \
    \          strength = cap - sm\n            strongest_extension = extension\n\
    \        end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            else\n                sm += 1\n       \
    \     end\n        end\n        if cap - sm > strength\n            strength =\
    \ cap - sm\n            strongest_extension = extension\n        end\n    end\n\
    \    return class_name * \".\" * strongest_extension\nend", "    strength = 0\n\
    \    strongest_extension = \"\"\n    for extension in extensions\n        cap\
    \ = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n        if\
    \ cap - sm > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = -1\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        extension_strength = count(isupper, extension) - count(islower,\
    \ extension)\n        if extension_strength > strength\n            strength =\
    \ extension_strength\n            strongest_extension = extension\n        end\n\
    \    end\n    return class_name * \".\" * strongest_extension\nend", "    strength\
    \ = 0\n    strongest_extension = \"\"\n    for i in 1:length(extensions)\n   \
    \     cap = sum(isupper.(extensions[i]))\n        sm = sum(islower.(extensions[i]))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extensions[i]\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = 0\n        sm = 0\n \
    \       for letter in extension\n            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n                cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = -1\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        if extension == \"\"\n    \
    \        continue\n        end\n        cap = 0\n        sm = 0\n        for char\
    \ in extension\n            if char in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \                cap += 1\n            elseif char in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = 0\n        sm = 0\n        for letter in extension\n\
    \            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n           \
    \     cap += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                sm += 1\n            end\n        end\n        if cap - sm\
    \ > strength\n            strength = cap - sm\n            strongest_extension\
    \ = extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        extension_strength = 0\n        for letter in extension\n\
    \            if letter in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n           \
    \     extension_strength += 1\n            elseif letter in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n                extension_strength -= 1\n            end\n        end\n   \
    \     if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    # Your code here\n    return\
    \ \"my_class.AA\"\nend", "    strength = 0\n    strongest_extension = \"\"\n \
    \   for extension in extensions\n        cap = 0\n        sm = 0\n        for\
    \ letter in extension\n            if letter in string('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\
    \                cap += 1\n            elseif letter in string('abcdefghijklmnopqrstuvwxyz')\n\
    \                sm += 1\n            end\n        end\n        if cap - sm >\
    \ strength\n            strength = cap - sm\n            strongest_extension =\
    \ extension\n        end\n    end\n    return class_name * \".\" * strongest_extension\n\
    end", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = -1\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        extension_strength = count(isupper, extension) - count(islower, extension)\n\
    \        if extension_strength > strength\n            strength = extension_strength\n\
    \            strongest_extension = extension\n        end\n    end\n    return\
    \ class_name * \".\" * strongest_extension\nend", "    # your code here\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    # your code here\n    return \"\"\nend", "    strength = 0\n    strongest_extension\
    \ = \"\"\n    for extension in extensions\n        cap = sum(isupper.(extension))\n\
    \        sm = sum(islower.(extension))\n        if cap - sm > strength\n     \
    \       strength = cap - sm\n            strongest_extension = extension\n   \
    \     end\n    end\n    return class_name * \".\" * strongest_extension\nend",
  "    strength = 0\n    strongest_extension = \"\"\n    for extension in extensions\n\
    \        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    strength = 0\n    strongest_extension = \"\"\n    for extension in\
    \ extensions\n        cap = sum(isupper.(extension))\n        sm = sum(islower.(extension))\n\
    \        if cap - sm > strength\n            strength = cap - sm\n           \
    \ strongest_extension = extension\n        end\n    end\n    return class_name\
    \ * \".\" * strongest_extension\nend", "    # your code here\n    return \"my_class.AA\"\
    \nend", "    # your code here\n    return \"my_class.AA\"\nend", "    # your code\
    \ here\n    return \"my_class.AA\"\nend", "    # your code here\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

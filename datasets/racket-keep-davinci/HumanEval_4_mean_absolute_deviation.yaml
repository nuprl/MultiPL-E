name: HumanEval_4_mean_absolute_deviation
language: racket
prompt: "#lang racket\n\n;; For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n;; around the mean of this dataset.\n;; Mean Absolute Deviation is\
  \ the average absolute difference between each\n;; element and a centerpoint (mean\
  \ in this case):\n;; MAD = average | x - x_mean |\n;; >>> mean_absolute_deviation([1.0,\
  \ 2.0, 3.0, 4.0])\n;; 1.0\n(define (mean_absolute_deviation numbers)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate mean_absolute_deviation))\n\
  \    (check-equal? (candidate (list 1.0 2.0)) 0.5)\n    (check-equal? (candidate\
  \ (list 1.0 2.0 3.0 4.0)) 1.0)\n    (check-equal? (candidate (list 1.0 2.0 3.0 4.0\
  \ 5.0)) 1.2)\n))\n\n(test-humaneval)"
completions: ["  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n\
    \        x))\n  (define (sum lst)\n    (if (null? lst)\n        0\n        (+\
    \ (car lst) (sum (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length\
    \ lst)))\n  (define (deviations lst)\n    (map (lambda (x) (abs (- x (mean lst))))\
    \ lst))\n  (define (average lst)\n    (/ (sum lst) (length lst)))\n  (average\
    \ (deviations numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference x)\n    (if (&lt; x (mean\
    \ numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/\
    \ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean-of-numbers numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (abs-diff-from-mean number)\n\
    \    (abs (- number (mean-of-numbers numbers))))\n  (define (abs-diffs-from-mean\
    \ numbers)\n    (map abs-diff-from-mean numbers))\n  (/ (apply + (abs-diffs-from-mean\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (let ([numbers-mean (mean numbers)])\n\
    \    (mean (map (lambda (x) (abs (- x numbers-mean))) numbers))))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda\
    \ (x) (abs (- x mean))) numbers)])\n    (mean deviations)))\n", "  (define (abs-diff\
    \ x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n        (-\
    \ x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (abs-diff x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (mean (map abs-diff numbers)))\n", "  (define (deviation x)\n    (abs (- x\
    \ (mean numbers))))\n  (mean (map deviation numbers)))\n", "  (define (mean_absolute_deviation_iter\
    \ numbers sum count)\n    (cond\n      [(empty? numbers) (/ sum count)]\n    \
    \  [else (mean_absolute_deviation_iter (rest numbers) (+ sum (abs (- (first numbers)\
    \ (/ sum count)))) (+ count 1))]))\n  (mean_absolute_deviation_iter numbers 0\
    \ 0))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs (-\
    \ x mean))) numbers))))\n", "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-diff\
    \ numbers)))\n", "  (define (mean-of-numbers numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define mean (mean numbers))\n  (define absolute-differences\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-differences))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (> x (mean numbers))\n        (- x (mean numbers))\n\
    \        (- (mean numbers) x)))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (abs-diff x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (define (abs-diffs numbers)\n    (if (null? numbers)\n      \
    \  '()\n        (cons (abs-diff (car numbers))\n              (abs-diffs (cdr\
    \ numbers)))))\n  (mean (abs-diffs numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference number)\n\
    \    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute_difference\
    \ numbers)) (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n     \
    \   (- x)\n        x))\n  (define (sum-abs-differences numbers)\n    (if (null?\
    \ numbers)\n        0\n        (+ (abs (- (car numbers) (mean numbers)))\n   \
    \        (sum-abs-differences (cdr numbers)))))\n  (/ (sum-abs-differences numbers)\n\
    \     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define mean (mean numbers))\n  (define\
    \ deviations (map (lambda (x) (abs (- x mean))) numbers))\n  (mean deviations))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (abs-deviation number)\n    (abs (- number (mean numbers))))\n  (/\
    \ (apply + (map abs-deviation numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean-of-numbers numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean_absolute_deviation_iter numbers sum count)\n    (if (null? numbers)\n\
    \        (/ sum count)\n        (mean_absolute_deviation_iter (cdr numbers)\n\
    \                                      (+ sum (abs (- (car numbers) (/ sum count))))\n\
    \                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (mad lst)\n    (mean (map (lambda (x) (abs (- x (mean lst)))) lst)))\n  (mad\
    \ numbers))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (define (average numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean-helper numbers sum count)\n\
    \    (if (null? numbers)\n        (/ sum count)\n        (mean-helper (cdr numbers)\
    \ (+ sum (car numbers)) (+ count 1))))\n  (define (mad-helper numbers mean sum\
    \ count)\n    (if (null? numbers)\n        (/ sum count)\n        (mad-helper\
    \ (cdr numbers) mean (+ sum (abs (- (car numbers) mean))) (+ count 1))))\n  (define\
    \ mean (mean-helper numbers 0 0))\n  (mad-helper numbers mean 0 0))\n", "  (define\
    \ (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (mean-of-list\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (mean-absolute-deviation-helper\
    \ numbers mean)\n    (if (null? numbers)\n        0\n        (+ (/ (abs (- (car\
    \ numbers) mean)) (length numbers))\n           (mean-absolute-deviation-helper\
    \ (cdr numbers) mean))))\n  (mean-absolute-deviation-helper numbers (mean-of-list\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean-of-numbers numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (let ([mean\
    \ (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (deviation number)\n    (abs (- number (mean numbers))))\n  (mean (map\
    \ deviation numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-absolute-differences numbers))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean x)\n    (abs (-\
    \ x (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n  \
    \  (map absolute-difference-from-mean numbers))\n  (define (average numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (abs-diff x)\n    (if (< x (mean numbers))\n     \
    \   (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-diff\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (average numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (average numbers))))\n  (define (absolute-differences-from-mean numbers)\n \
    \   (map absolute-difference-from-mean numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-absolute-differences numbers))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (/ (apply + (map absolute_difference numbers)) (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (abs-diff\
    \ x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n        (-\
    \ x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean-of-numbers\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define mean (mean numbers))\n  (define\
    \ absolute-deviations (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-deviations))\n",
  "  (define (absolute x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (deviation-from-mean\
    \ x)\n    (absolute (- x (mean numbers))))\n  (/ (apply + (map deviation-from-mean\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference x)\n    (if (&lt; x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define mean (mean numbers))\n\
    \  (define deviations (map (lambda (x) (abs (- x mean))) numbers))\n  (mean deviations))\n",
  "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (abs-diff x)\n    (if (< x 0)\n        (- x)\n    \
    \    x))\n  (define (average lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (abs-diff-from-mean x)\n    (abs-diff (- x (average numbers))))\n  (average\
    \ (map abs-diff-from-mean numbers)))\n", "  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n  \
    \  (abs (- x (average numbers))))\n  (define (absolute-differences numbers)\n\
    \    (map absolute-difference numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (average (absolute-differences numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (abs-diff x)\n    (abs (- x (mean numbers))))\n  (/ (apply + (map abs-diff\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean-of-numbers numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean-of-numbers\
    \ numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (average-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n\
    \        (- x)\n        x))\n  (define (sum-abs-differences numbers)\n    (if\
    \ (null? numbers)\n        0\n        (+ (abs (- (car numbers) (mean numbers)))\n\
    \           (sum-abs-differences (cdr numbers)))))\n  (/ (sum-abs-differences\
    \ numbers)\n     (length numbers)))\n", "  (let* ([mean (mean numbers)]\n    \
    \     [differences (map (lambda (x) (abs (- x mean))) numbers)])\n    (mean differences)))\n",
  "  (define (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (define (abs-diffs numbers)\n    (if (null?\
    \ numbers)\n        '()\n        (cons (abs-diff (car numbers))\n            \
    \  (abs-diffs (cdr numbers)))))\n  (mean (abs-diffs numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute_difference\
    \ numbers)) (length numbers)))\n", "  (define (absolute-difference a b)\n    (if\
    \ (&gt; a b) (- a b) (- b a)))\n  (define (mean-of-list lst)\n    (/ (apply +\
    \ lst) (length lst)))\n  (define (mean-absolute-deviation-helper lst mean)\n \
    \   (if (null? lst)\n        0\n        (+ (absolute-difference (car lst) mean)\n\
    \           (mean-absolute-deviation-helper (cdr lst) mean))))\n  (define (mean-absolute-deviation-helper2\
    \ lst mean)\n    (if (null? lst)\n        0\n        (let ((difference (absolute-difference\
    \ (car lst) mean)))\n          (+ difference (mean-absolute-deviation-helper2\
    \ (cdr lst) mean)))))\n  (define (mean-absolute-deviation-helper3 lst mean)\n\
    \    (if (null? lst)\n        0\n        (let ((difference (absolute-difference\
    \ (car lst) mean)))\n          (begin\n            (display difference)\n    \
    \        (newline)\n            (+ difference (mean-absolute-deviation-helper3\
    \ (cdr lst) mean))))))\n  (define (mean-absolute-deviation-helper4 lst mean)\n\
    \    (if (null? lst)\n        0\n        (let ((difference (absolute-difference\
    \ (car lst) mean)))\n          (begin\n            (display difference)\n    \
    \        (newline)\n            (let ((result (+ difference (mean-absolute-deviation-helper4\
    \ (cdr lst) mean))))\n              (display result)\n              (newline)\n\
    \              result)))))\n  (define (mean-absolute-deviation-helper5 lst mean)\n\
    \    (if (null? lst)\n        0\n        (let ((difference (absolute-difference\
    \ (car lst) mean)))\n          (begin\n            (display difference)\n    \
    \        (newline)\n            (let ((result (+ difference (mean-absolute-deviation-helper5\
    \ (cdr lst) mean))))\n              (display result)\n              (newline)\n\
    \              (let ((result", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean x)\n    (abs (-\
    \ x (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n  \
    \  (map absolute-difference-from-mean numbers))\n  (define (average numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference number)\n    (abs (- number (mean numbers))))\n  (/ (apply\
    \ + (map absolute-difference numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference x)\n    (if (<\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ mean (mean numbers))\n  (define absolute-differences (map (lambda (x) (abs (-\
    \ x mean))) numbers))\n  (mean absolute-differences))\n", "  (define (mean_absolute_deviation_iter\
    \ numbers sum count)\n    (cond ((null? numbers) (/ sum count))\n          (else\
    \ (mean_absolute_deviation_iter (cdr numbers) (+ sum (car numbers)) (+ count 1)))))\n\
    \  (define (mean_absolute_deviation_iter2 numbers mean sum count)\n    (cond ((null?\
    \ numbers) (/ sum count))\n          (else (mean_absolute_deviation_iter2 (cdr\
    \ numbers) mean (+ sum (abs (- (car numbers) mean))) count))))\n  (define mean\
    \ (/ (mean_absolute_deviation_iter numbers 0 0) (length numbers)))\n  (mean_absolute_deviation_iter2\
    \ numbers mean 0 0))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference number)\n    (abs (- number (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean numbers)\n    (map (lambda (x) (abs (- x (mean\
    \ numbers)))) numbers))\n  (/ (apply + (absolute-difference-from-mean numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean numbers)\n    (map (lambda (x) (abs\
    \ (- x (mean numbers)))) numbers))\n  (/ (apply + (absolute-difference-from-mean\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (absolute_deviations lst)\n    (map (lambda (x) (abs (- x (mean lst)))) lst))\n\
    \  (define (average lst)\n    (/ (sum lst) (length lst)))\n  (average (absolute_deviations\
    \ numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (define (mean-of-numbers numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n\
    \        (- x (mean numbers))))\n  (define (abs-diffs numbers)\n    (if (null?\
    \ numbers)\n        '()\n        (cons (abs-diff (car numbers))\n            \
    \  (abs-diffs (cdr numbers)))))\n  (mean (abs-diffs numbers)))\n", "  (define\
    \ (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum lst)\n\
    \    (if (null? lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n  (define\
    \ (mean lst)\n    (/ (sum lst) (length lst)))\n  (define (diff lst)\n    (map\
    \ (lambda (x) (abs (- x (mean lst)))) lst))\n  (/ (sum (diff numbers)) (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (mean_absolute_deviation_iter numbers sum mean)\n    (cond\n      [(empty?\
    \ numbers) (/ sum (length numbers))]\n      [else (mean_absolute_deviation_iter\
    \ (rest numbers)\n                                          (+ sum (abs (- (first\
    \ numbers) mean)))\n                                          mean)]))\n  (mean_absolute_deviation_iter\
    \ numbers 0 (mean numbers)))\n", "  (define (deviation number)\n    (abs (- number\
    \ (mean numbers))))\n  (mean (map deviation numbers)))\n", "  (define (mean_absolute_deviation_helper\
    \ numbers sum count)\n    (cond\n      [(empty? numbers) (/ sum count)]\n    \
    \  [else (mean_absolute_deviation_helper (rest numbers) (+ sum (abs (- (first\
    \ numbers) (/ sum count)))) (+ count 1))]))\n  (mean_absolute_deviation_helper\
    \ numbers 0 0))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n     \
    \   x))\n  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car\
    \ lst) (sum (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n\
    \  (define (deviation lst)\n    (map (lambda (x) (abs (- x (mean lst)))) lst))\n\
    \  (define (average lst)\n    (/ (sum lst) (length lst)))\n  (average (deviation\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define mean (mean\
    \ numbers))\n  (define deviations (map (lambda (x) (abs (- x mean))) numbers))\n\
    \  (mean deviations))\n", "  (define (abs-difference x)\n    (abs (- x (mean numbers))))\n\
    \  (mean (map abs-difference numbers)))\n", "  (define (sum lst)\n    (if (null?\
    \ lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n  (define (abs x)\n\
    \    (if (< x 0)\n        (- x)\n        x))\n  (define (mean lst)\n    (/ (sum\
    \ lst) (length lst)))\n  (define (deviation lst)\n    (map (lambda (x) (abs (-\
    \ x (mean lst)))) lst))\n  (mean (deviation numbers)))\n", "  (let* ([mean (mean\
    \ numbers)]\n         [deviations (map (lambda (x) (abs (- x mean))) numbers)])\n\
    \    (mean deviations)))\n", "  (let* ([numbers-mean (mean numbers)]\n       \
    \  [numbers-mean-differences (map (lambda (x) (abs (- x numbers-mean))) numbers)])\n\
    \    (mean numbers-mean-differences)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (define (deviation x)\n    (abs (- x (mean numbers))))\n\
    \  (mean (map deviation numbers)))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (abs-diff x)\n    (if (&lt; x (mean\
    \ numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean\
    \ (map abs-diff numbers)))\n", "  (define (mean_absolute_deviation_helper numbers\
    \ mean)\n    (cond\n      [(empty? numbers) 0]\n      [else\n       (+ (/ (abs\
    \ (- (first numbers) mean)) (length numbers))\n          (mean_absolute_deviation_helper\
    \ (rest numbers) mean))]))\n  (mean_absolute_deviation_helper numbers (mean numbers)))\n",
  "  (define mean (mean numbers))\n  (define absolute-differences (map (lambda (x)\
    \ (abs (- x mean))) numbers))\n  (mean absolute-differences))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n     \
    \   (- x)\n        x))\n  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (deviation numbers)\n    (map (lambda (x) (abs (- x (mean\
    \ numbers)))) numbers))\n  (define (average numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (average (deviation numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean-of-numbers numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean-of-numbers\
    \ numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences-from-mean numbers)\n    (/\
    \ (apply + (absolute-differences-from-mean numbers))\n       (length numbers)))\n\
    \  (mean-of-absolute-differences-from-mean numbers))\n", "  (define (abs x)\n\
    \    (if (< x 0)\n        (- x)\n        x))\n  (define (sum-abs-differences numbers)\n\
    \    (if (null? numbers)\n        0\n        (+ (abs (- (car numbers) (mean numbers)))\n\
    \           (sum-abs-differences (cdr numbers)))))\n  (/ (sum-abs-differences\
    \ numbers)\n     (length numbers)))\n", "  (define (abs-diff x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (mean (map abs-diff numbers)))\n", "  (define (average numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x)\
    \ x))\n  (define (deviation x)\n    (absolute (- x (average numbers))))\n  (define\
    \ (deviations numbers)\n    (map deviation numbers))\n  (define (average-deviations\
    \ numbers)\n    (average (deviations numbers)))\n  (average-deviations numbers))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference number)\n    (abs (- number (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (-\
    \ x mean))) numbers)])\n    (mean deviations)))\n", "  (define (abs-diff x)\n\
    \    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-deviation number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-deviation numbers))\
    \ (length numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda\
    \ (x) (abs (- x mean))) numbers))))\n", "  (define (mean lst)\n    (/ (apply +\
    \ lst) (length lst)))\n  (define (absolute-difference x)\n    (if (&lt; x (mean\
    \ numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (define\
    \ (absolute-differences lst)\n    (map absolute-difference lst))\n  (define (average\
    \ lst)\n    (/ (apply + lst) (length lst)))\n  (average (absolute-differences\
    \ numbers)))\n</code>\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n        (-\
    \ x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (define (absolute-difference x)\n    (if (&lt; x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map absolute-difference\
    \ numbers)))\n", "  (define (abs-difference x)\n    (abs (- x (mean numbers))))\n\
    \  (mean (map abs-difference numbers)))\n", "  (define (abs-diff x)\n    (if (&lt;\
    \ x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (mean (map abs-diff numbers)))\n", "  (define (abs-diff x)\n    (abs (- x (mean\
    \ numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference-from-mean\
    \ numbers))\n     (length numbers)))\n", "  (define (mean-of-numbers numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (deviations numbers)\n\
    \    (map (lambda (x) (abs (- x (mean numbers)))) numbers))\n  (/ (apply + (deviations\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference number)\n    (abs (- number (mean numbers))))\n  (/ (apply\
    \ + (map absolute-difference numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (abs-diff x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map abs-diff numbers)) (length numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (average numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (average numbers))))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (abs-diff-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map abs-diff-from-mean numbers)) (length numbers)))\n", "  (define\
    \ (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n \
    \       (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n\
    \        x))\n  (define (sum-abs-differences numbers)\n    (if (null? numbers)\n\
    \        0\n        (+ (abs (- (car numbers) (mean numbers)))\n           (sum-abs-differences\
    \ (cdr numbers)))))\n  (/ (sum-abs-differences numbers)\n     (length numbers)))\n",
  "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (absolute-difference-from-mean x)\n    (abs (- x (mean numbers))))\n\
    \  (mean (map absolute-difference-from-mean numbers)))\n", "  (let* ([numbers-mean\
    \ (mean numbers)]\n         [numbers-deviations (map (lambda (x) (abs (- x numbers-mean)))\
    \ numbers)])\n    (mean numbers-deviations)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (deviation x)\n    (abs (- x (mean numbers))))\n  (define (deviations lst)\n\
    \    (if (null? lst)\n        '()\n        (cons (deviation (car lst)) (deviations\
    \ (cdr lst)))))\n  (/ (sum (deviations numbers)) (length numbers)))\n", "  (define\
    \ (average numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (average numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (abs-diff-from-mean n)\n    (abs (- n\
    \ (mean numbers))))\n  (/ (apply + (map abs-diff-from-mean numbers)) (length numbers)))\n",
  "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum-abs-differences\
    \ numbers)\n    (if (null? numbers)\n        0\n        (+ (abs (- (car numbers)\
    \ (mean numbers)))\n           (sum-abs-differences (cdr numbers)))))\n  (/ (sum-abs-differences\
    \ numbers)\n     (length numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n\
    \        (- x)\n        x))\n  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (deviations numbers)\n    (map (lambda (x) (abs\
    \ (- x (mean numbers)))) numbers))\n  (/ (apply + (deviations numbers)) (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference number)\n    (abs (- number (mean numbers))))\n  (/ (apply\
    \ + (map absolute-difference numbers)) (length numbers)))\n", "  (define (abs\
    \ x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (avg lst)\n    (/\
    \ (apply + lst) (length lst)))\n  (define (diff-from-mean x)\n    (abs (- x (avg\
    \ numbers))))\n  (define (diffs lst)\n    (map diff-from-mean lst))\n  (avg (diffs\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference-from-mean numbers))\n     (length numbers)))\n",
  "  (define (absolute x)\n    (if (&lt; x 0) (- x) x))\n  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (deviation numbers)\n\
    \    (map (lambda (x) (absolute (- x (mean numbers)))) numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (deviation\
    \ numbers)))\n</code>\nI'm not sure if I'm doing this right. I'm trying to write\
    \ this in a functional style. Is this the right way to do it?\n\n\nA:\n\nI think\
    \ you're on the right track.  I would make a few changes:\n\nI would use <code>map</code>\
    \ instead of <code>apply</code> and <code>+</code> to sum the list.  This is a\
    \ little more functional.\nI would use <code>abs</code> instead of <code>absolute</code>.\
    \  <code>abs</code> is built in, so you don't have to define it yourself.\nI would\
    \ use <code>average</code> instead of <code>mean</code>.  This is just a matter\
    \ of preference.\nI would use <code>define</code> instead of <code>define-values</code>\
    \ to define the helper functions.  <code>define-values</code> is a little more\
    \ functional, but I think <code>define</code> is more readable.\n\nHere's what\
    \ I would do:\n<code>(define (mean-absolute-deviation numbers)\n  (define (deviation\
    \ numbers)\n    (map (lambda (x) (abs (- x (average numbers)))) numbers))\n  (average\
    \ (deviation numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (mean-of-numbers\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number mean)\n    (abs (- number mean)))\n  (define (absolute-differences-from-mean\
    \ numbers mean)\n    (map (lambda (number) (absolute-difference-from-mean number\
    \ mean)) numbers))\n  (define (average-absolute-differences numbers mean)\n  \
    \  (/ (apply + (absolute-differences-from-mean numbers mean)) (length numbers)))\n\
    \  (average-absolute-differences numbers (mean-of-numbers numbers)))\n", "  (define\
    \ (mean_absolute_deviation_helper numbers sum count)\n    (if (null? numbers)\n\
    \        (/ sum count)\n        (mean_absolute_deviation_helper (cdr numbers)\
    \ (+ sum (abs (- (car numbers) (/ sum count)))) (+ count 1))))\n  (mean_absolute_deviation_helper\
    \ numbers 0 0))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-deviation numbers)\n    (map (lambda (x) (abs\
    \ (- x (mean numbers)))) numbers))\n  (/ (apply + (absolute-deviation numbers))\
    \ (length numbers)))\n", "  (define mean (mean numbers))\n  (define deviations\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean deviations))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x y)\n    (if (&lt; x y) (- y x) (- x y)))\n  (define (absolute-differences\
    \ numbers)\n    (map (lambda (x) (absolute-difference x (mean numbers))) numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean-of-numbers\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean-of-numbers numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

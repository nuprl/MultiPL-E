name: HumanEval_86_anti_shuffle
language: rust
prompt: "/// Write a function that takes a string and returns an ordered version of\
  \ it.\n/// Ordered version of string, is a string where all words (separated by\
  \ space)\n/// are replaced by a new word where all the characters arranged in\n\
  /// ascending order based on ascii value.\n/// Note: You should keep the order of\
  \ words and blank spaces in the sentence.\n/// For example:\n/// anti_shuffle('Hi')\
  \ returns 'Hi'\n/// anti_shuffle('hello') returns 'ehllo'\n/// anti_shuffle('Hello\
  \ World!!!') returns 'Hello !!!Wdlor'\nfn anti_shuffle(s: String) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!(candidate(String::from(\"\
  Hi\")), String::from(\"Hi\"));\n    assert_eq!(candidate(String::from(\"hello\"\
  )), String::from(\"ehllo\"));\n    assert_eq!(candidate(String::from(\"number\"\
  )), String::from(\"bemnru\"));\n    assert_eq!(candidate(String::from(\"abcd\")),\
  \ String::from(\"abcd\"));\n    assert_eq!(candidate(String::from(\"Hello World!!!\"\
  )), String::from(\"Hello !!!Wdlor\"));\n    assert_eq!(candidate(String::from(\"\
  \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hi. My name\
  \ is Mister Robot. How are you?\")), String::from(\".Hi My aemn is Meirst .Rboot\
  \ How aer ?ouy\"));\n}\n"
completions: []
stop_tokens:
- "\n}"

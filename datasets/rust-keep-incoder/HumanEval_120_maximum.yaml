name: HumanEval_120_maximum
language: rust
prompt: "/// Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n/// of length k with the maximum k numbers in arr.\n/// Example 1:\n///\
  \ Input: arr = [-3, -4, 5], k = 3\n/// Output: [-4, -3, 5]\n/// Example 2:\n///\
  \ Input: arr = [4, -4, 4], k = 2\n/// Output: [4, 4]\n/// Example 3:\n/// Input:\
  \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n/// Output: [2]\n/// Note:\n/// 1. The\
  \ length of the array will be in the range of [1, 1000].\n/// 2. The elements in\
  \ the array will be in the range of [-1000, 1000].\n/// 3. 0 <= k <= len(arr)\n\
  fn maximum(arr: Vec<isize>, k: isize) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(vec![-3,\
  \ -4, 5], 3), vec![-4, -3, 5]);\n    assert_eq!(candidate(vec![4, -4, 4], 2), vec![4,\
  \ 4]);\n    assert_eq!(candidate(vec![-3, 2, 1, 2, -1, -2, 1], 1), vec![2]);\n \
  \   assert_eq!(candidate(vec![123, -123, 20, 0, 1, 2, -3], 3), vec![2, 20, 123]);\n\
  \    assert_eq!(candidate(vec![-123, 20, 0, 1, 2, -3], 4), vec![0, 1, 2, 20]);\n\
  \    assert_eq!(candidate(vec![5, 15, 0, 3, -13, -8, 0], 7), vec![-13, -8, 0, 0,\
  \ 3, 5, 15]);\n    assert_eq!(candidate(vec![-1, 0, 2, 5, 3, -10], 2), vec![3, 5]);\n\
  \    assert_eq!(candidate(vec![1, 0, 5, -7], 1), vec![5]);\n    assert_eq!(candidate(vec![4,\
  \ -4], 2), vec![-4, 4]);\n    assert_eq!(candidate(vec![-10, 10], 2), vec![-10,\
  \ 10]);\n    assert_eq!(candidate(vec![1, 2, 3, -23, 243, -400, 0], 0), Vec::<isize>::new());\n\
  }\n"
completions: ["    let mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n     \
    \   max_arr[i] = vec![];\n    }\n    for i in 0..arr.len() {\n        let mut\
    \ max_i = i;\n        for j in 0..k {\n            if arr[i] > max_arr[j][max_i]\
    \ {\n                max_i = j;\n            }\n        }\n        max_arr[k -\
    \ 1 - i].push(arr[i]);\n    }\n    max_arr", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in\
    \ 0..k {\n        for j in i+1..k {\n            if max_arr[i] > max_arr[j] {\n\
    \                max_arr[i] = max_arr[j];\n            }\n        }\n    }\n \
    \   for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr",
  "    let mut result = vec![];\n    let mut max_value = arr[0];\n    let mut max_index\
    \ = arr.iter().position(|&x| x > max_value);\n    while max_index != k {\n   \
    \     result.push(max_value);\n        max_value = arr[max_index];\n        max_index\
    \ = arr.iter().position(|&x| x > max_value);\n    }\n    result", "    let mut\
    \ result = vec![0; k];\n    let mut max_element = arr[0];\n    for i in 1..k {\n\
    \        if arr[i] > max_element {\n            max_element = arr[i];\n      \
    \  }\n    }\n    for i in 0..k {\n        result[i] = max_element;\n    }\n  \
    \  result", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n    for i in\
    \ 0..arr.len() {\n        let mut max_i = i;\n        for j in 0..k {\n      \
    \      if arr[i] > max_arr[j][max_i] {\n                max_i = j;\n         \
    \   }\n        }\n        max_arr[i][max_i] = arr[i];\n    }\n    max_arr", " \
    \   let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        for j in i+1..k {\n         \
    \   if max_arr[j] < max_arr[i] {\n                max_arr[i] = max_arr[j];\n \
    \           }\n        }\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n\
    \    }\n    arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut\
    \ max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut j\
    \ = i;\n        while j < arr.len() {\n            if arr[j] > max_arr[j][0] {\n\
    \                max_arr[j] = [arr[j], max_arr[j][0]];\n                max_k\
    \ = max_k - 1;\n            }\n            j += 1\n        }\n        i += 1;\n\
    \    }\n    max_arr.sort_by_key(|&x| x.0);\n    max_arr.take(max_k).collect()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![arr[i], -1000, 1000];\n    }\n    for i in 0..k {\n        max_arr[i].sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect();\n \
    \   }", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut max_i\
    \ = arr.len();\n    while max_i < max_k {\n        let mut max_value = arr[0];\n\
    \        for i in 1..arr.len() {\n            if arr[i] > max_value {\n      \
    \          max_value = arr[i];\n            }\n        }\n        max_arr.push(max_value);\n\
    \        max_i -= 1;\n    }\n    max_arr", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].push(arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i].iter().take(k).cloned().collect()\n    }", "    let mut max_arr\
    \ = vec![];\n    let mut max_idx = vec![];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n        max_idx[i] = i;\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if max_arr[j] > max_arr[i] {\n                max_arr[i]\
    \ = max_arr[j];\n                max_idx[i] = max_idx[j];\n            }\n   \
    \     }\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n    }\n   \
    \ return arr;", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].max();\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n\
    \    }\n    arr", "    let mut max_arr = vec![0; k];\n    let mut max_idx = k;\n\
    \    for &i in arr {\n        if i >= 0 {\n            if max_idx < i {\n    \
    \            max_idx = i;\n            }\n        }\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_idx;\n    }\n    max_arr", "    let mut result =\
    \ vec![0; k];\n    let mut max_element = arr[0];\n    let mut max_index = 0;\n\
    \    for i in 0..arr.len() {\n        if arr[i] > max_element {\n            max_element\
    \ = arr[i];\n            max_index = i;\n        }\n    }\n    for i in 0..k {\n\
    \        result[i] = max_element;\n    }\n    result", "    let mut max_arr =\
    \ vec![];\n    let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        if arr[i] > max_arr[k] {\n            max_arr[k] = arr[i];\n    \
    \        max_k--;\n        }\n        i += 1;\n    }\n    max_arr.truncate(max_k);\n\
    \    max_arr", "    let mut max_arr = vec![];\n    let mut max_num = arr[0];\n\
    \    for i in 1..k {\n        if max_num < arr[i] {\n            max_num = arr[i];\n\
    \        }\n    }\n    max_arr.push(max_num);\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k\
    \ {\n        max_arr[i] = vec![arr[i]];\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if max_arr[i][j] > max_arr[i][j+1] {\n            \
    \    max_arr[i][j] = max_arr[i][j+1];\n            }\n        }\n    }\n    for\
    \ i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j]\
    \ {\n                max_arr[i+1][j] = max_arr[i][j];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j-1] {\n                max_arr[i][j] = max_arr[i][j-1];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] > max_arr[i-1][j] {\n                max_arr[i-1][j]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j+1] {\n  \
    \              max_arr[i+1][j+1] = max_arr[i][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i-1][j-1] {\n                max_arr[i-1][j-1] = max_arr[i][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i-1][j+1] {\n                max_arr[i-1][j+1]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j-1] {\n  \
    \              max_arr[i+1][j-1] = max_arr[i][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i+1][j+1] {\n                max_arr[i+1][j+1] = max_arr[i][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i+1][j-1] {\n                max_arr[i+1][j-1]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..k {\n            if max_arr[i][j] > max_arr[i-1][j-1] {\n  \
    \              max_arr[i-1][j-1] = max_arr[i][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i-1][j+1] {\n                max_arr[i-1]", "    let mut max_arr =\
    \ vec![];\n    let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        if max_k == 0 {\n            break;\n        }\n        if arr[i]\
    \ > max_arr[0] {\n            max_arr.push(arr[i]);\n            max_k -= 1;\n\
    \        } else {\n            max_k -= 1;\n        }\n        i += 1;\n    }\n\
    \    max_arr", "    let mut result = vec![0; k];\n    let mut max_idx = k;\n \
    \   let mut max_val = arr[0];\n    for i in 0..arr.len() {\n        if arr[i]\
    \ > max_val {\n            max_val = arr[i];\n            max_idx = i;\n     \
    \   }\n    }\n    for i in 0..k {\n        result[i] = arr[max_idx];\n       \
    \ max_idx--;\n    }\n    result", "    let mut max_arr = vec![];\n    let mut\
    \ max_so_far = vec![];\n    let mut max_k = k;\n    let mut i = 0;\n    while\
    \ i < arr.len() {\n        if max_k == 0 {\n            break;\n        }\n  \
    \      if max_k == 1 {\n            max_arr.push(arr[i]);\n            max_so_far.push(arr[i]);\n\
    \            i += 1;\n            continue;\n        }\n        let mut j = i;\n\
    \        while j < arr.len() {\n            if arr[j] > max_so_far[max_k - 1]\
    \ {\n                max_arr.push(arr[j]);\n                max_so_far.push(arr[j]);\n\
    \                j += 1;\n            } else {\n                break;\n     \
    \       }\n        }\n        max_k -= 1;\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    for i in 0..k {\n        max_arr.push(arr[i]);\n    }\n    for\
    \ i in 0..arr.len() {\n        let mut max_i = i;\n        for j in 0..k {\n \
    \           if arr[i] > max_arr[j] {\n                max_i = j;\n           \
    \ }\n        }\n        max_arr.swap(i, max_i);\n    }\n    max_arr", "    let\
    \ mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![];\n    }\n    for i in 0..arr.len() {\n        max_arr[k - i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort_unstable();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i].iter().cloned().collect();\n    }", "    let\
    \ mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i] = arr\n\
    \            .iter()\n            .take_while(|&x| x < 0)\n            .take_while(|&x|\
    \ x < 0)\n            .max().unwrap();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i] = vec![];\n    }\n\
    \    for i in 0..arr.len() {\n        let mut max_i = i;\n        for j in 0..k\
    \ {\n            if arr[i] > max_arr[j][max_i] {\n                max_i = j;\n\
    \            }\n        }\n        max_arr[k - 1 - i].push(arr[i]);\n    }\n \
    \   max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        let mut max_i\
    \ = i;\n        for j in 0..k {\n            if max_arr[j] < max_arr[j] {\n  \
    \              max_i = j;\n            }\n        }\n        max_arr[i] = max_arr[i].max(max_arr[max_i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max();\n    }\n \
    \   for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut max_idx = 0;\n    for i in 0..arr.len() {\n        let mut max_val = arr[i];\n\
    \        let mut max_idx = i;\n        for j in 0..k {\n            if arr[j]\
    \ > max_val {\n                max_val = arr[j];\n                max_idx = j;\n\
    \            }\n        }\n        max_arr[k - 1 - i].push(max_val);\n       \
    \ max_arr[k - 1 - i].push(max_idx);\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n", "    let mut\
    \ max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![-1000, 1000];\n    }\n    for i in 0..arr.len() {\n        let mut max_val\
    \ = -1000isize;\n        let mut max_idx = -1;\n        for j in 0..k {\n    \
    \        if arr[i] > max_arr[j][0] {\n                max_val = arr[i];\n    \
    \            max_idx = j;\n            }\n        }\n        max_arr[k - 1 - max_idx].push(max_val);\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..arr.len() {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - 1 - i] = max_arr[i][arr.len()\
    \ - 1 - i].iter().cloned().collect();\n    }\n    for i in 0..k {\n        max_arr[i][arr.len()\
    \ - 1 - i] = max_arr[i][arr.len() - 1 - i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i][arr.len() - ", "    let mut max_arr =\
    \ vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n\
    \    for i in 0..k {\n        for j in i+1..k {\n            if max_arr[i] > max_arr[j]\
    \ {\n                max_arr[i] = max_arr[j];\n            }\n        }\n    }\n\
    \    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n        for j in 0..k {\n  \
    \          if max_arr[i][j] > max_arr[i][j + 1] {\n                max_arr[i][j]\
    \ = max_arr[i][j + 1];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > arr[i] {\n          \
    \      max_arr[i][j] = arr[i];\n            }\n        }\n    }\n    for i in\
    \ 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n\
    \    max_arr", "    let mut max_arr = vec![0; k];\n    let mut max_idx = k;\n\
    \    for i in 0..arr.len() {\n        if arr[i] > max_arr[k] {\n            max_arr[k]\
    \ = arr[i];\n            max_idx += 1;\n        }\n    }\n    max_arr.truncate(max_idx);\n\
    \    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k\
    \ = k;\n    let mut max_idx = 0;\n    for ele in arr {\n        if ele > max_arr[0][0]\
    \ { \n            max_arr[0][0] = ele;\n            max_arr[0][1] = ele;\n   \
    \     }\n        if ele > max_arr[1][0] { \n            max_arr[1][0] = ele;\n\
    \            max_arr[1][1] = ele;\n        }\n        if ele > max_arr[2][0] {\
    \ \n            max_arr[2][0] = ele;\n            max_arr[2][1] = ele;\n     \
    \   }\n        if ele > max_arr[3][0] { \n            max_arr[3][0] = ele;\n \
    \           max_arr[3][1] = ele;\n        }\n        if ele > max_arr[4][0] {\
    \ \n            max_arr[4][0] = ele;\n            max_arr[4][1] = ele;\n     \
    \   }\n        if ele > max_arr[5][0] { \n            max_arr[5][0] = ele;\n \
    \           max_arr[5][1] = ele;\n        }\n        if ele > max_arr[6][0] {\
    \ \n            max_arr[6][0] = ele;\n            max_arr[6][1] = ele;\n     \
    \   }\n        if ele > max_arr[7][0] { \n            max_arr[7][0] = ele;\n \
    \           max_arr[7][1] = ele;\n        }\n        if ele > max_arr[8][0] {\
    \ \n            max_arr[8][0] = ele;\n            max_arr[8][1] = ele;\n     \
    \   }\n        if ele > max_arr[9][0] { \n            max_arr[9][0] = ele;\n \
    \           max_arr[9][1] = ele;\n        }\n        if ele > max_arr[10][0] {\
    \ \n            max_arr[10][0]= ele;\n            max_arr[10][1]= ele;\n     \
    \   }\n        if ele > max_arr[11][0] { \n            max_arr[11][0]= ele;\n\
    \            max_arr[11][1]= ele;\n        }\n        if ele > max_arr[12][0]\
    \ { \n            max_arr[12][0]= ele;\n            max_arr[12][1]= ele;\n   \
    \     }\n        if ele > max_arr[13][0] { \n            max_arr[13][0]= ele;\n\
    \            max_arr[13][1]= ele;\n        }\n        if ele > max_arr[14][0]\
    \ { \n            max_arr[14][0]= ele;\n            max_arr[14][1]= ele;\n   \
    \     }\n        if ele > max_arr[15][0] { \n            max_arr[15][0]= ele;\n\
    \            max_arr[15][1]= ele;\n        }\n        if ele > max_arr[16][0]\
    \ { \n            max_arr[16][0]= ele", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        max_arr[i] = vec![];\n    }\n    for i\
    \ in 0..arr.len() {\n        let mut max_num = arr[i];\n        let mut max_pos\
    \ = i;\n        for j in 0..k {\n            if max_arr[j].len() > 0 && max_arr[j][0]\
    \ == max_num {\n                max_num = max_arr[j][0];\n                max_pos\
    \ = j;\n            }\n        }\n        max_arr[max_pos].push(max_num);\n  \
    \  }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = vec![];\n    }\n    for i in 0..arr.len() {\n      \
    \  max_arr[k - 1 - i].push(arr[i]);\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k {\n        if arr[i]\
    \ > max_num {\n            max_num = arr[i];\n        }\n    }\n    for i in 0..k\
    \ {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n     \
    \   }\n        max_arr.push(arr[i]);\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k {\n        if arr[i]\
    \ > max_num {\n            max_num = arr[i];\n        }\n    }\n    for i in 0..k\
    \ {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n     \
    \   }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n           \
    \ max_arr.push(arr[i]);\n        }\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n   \
    \ }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    for i in\
    \ 0..k {\n        arr[i] = max_arr[i];\n    }\n    arr", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut max_i = -1;\n\
    \    let mut max_j = -1;\n    let mut i = 0;\n    let mut j = 0;\n    while i\
    \ < arr.len() && j < max_k {\n        if arr[i] > max_arr[j][0] {\n          \
    \  max_arr[j] = vec![arr[i], arr[i]];\n            max_k = j;\n            max_i\
    \ = i;\n        }\n        if arr[i] < max_arr[j][0] {\n            if arr[i]\
    \ > max_arr[j][0] {\n                max_arr[j] = vec![arr[i], arr[i]];\n    \
    \            max_k = j;\n                max_i = i;\n            }\n        }\n\
    \        i += 1;\n        j += 1;\n    }\n    if max_k == max_k {\n        max_arr[j]\
    \ = vec![arr[i], arr[i]];\n    }\n    if max_k > max_k {\n        max_arr[j] =\
    \ vec![arr[i], arr[i]];\n    }\n    max_arr", "    let mut max_arr = vec![vec![];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in\
    \ 0..k {\n        for j in 0..k {\n            if max_arr[j] < max_arr[i] {\n\
    \                max_arr[j] = max_arr[i];\n            }\n        }\n    }\n \
    \   for i in 0..k {\n        for j in 0..k {\n            if max_arr[j] == max_arr[i]\
    \ {\n                max_arr[j] = max_arr[i];\n            }\n        }\n    }\n\
    \    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j]\
    \ == max_arr[i] {\n                max_arr[j] = max_arr[i];\n            }\n \
    \       }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j]\
    \ == max_arr[i] {\n                max_arr[j] = max_arr[i];\n            }\n \
    \       }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if\
    \ max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n     \
    \       }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n  \
    \          if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] == max_arr[i] {\n                max_arr[j] = max_arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut i = 0;\n    while i < arr.len() {\n        if arr[i] > max_arr[0][i] {\n\
    \            max_arr[0][i] = arr[i];\n            max_arr[1][i] = arr[i];\n  \
    \      } else {\n            max_arr[0][i] = max_arr[0][i] * max_k;\n        \
    \    max_arr[1][i] = max_arr[1][i] * max_k;\n        }\n        i += 1;\n    }\n\
    \    max_arr[0].sort();\n    max_arr[1].sort();\n    max_arr[0].iter().take(max_k).cloned().collect()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut max_idx = 0;\n    for idx in 0..arr.len() {\n        if max_k == 0 {\n \
    \           break;\n        }\n        if max_arr[idx][0] > arr[idx] {\n     \
    \       max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n\
    \        } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n     \
    \   } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n     \
    \   } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n     \
    \   } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n     \
    \   } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;\n     \
    \   } else {\n            max_arr[idx] = [max_arr[idx][0] - arr[idx], max_arr[idx][1]];\n\
    \        }\n    }\n    if max_k == 0 {\n        return max_arr;\n    }\n    for\
    \ idx in 0..arr.len() {\n        if max_arr[idx][0] > arr[idx] {\n           \
    \ max_arr[idx] = [arr[idx], max_arr[idx][1]];\n            max_k -= 1;", "   \
    \ let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        let\
    \ mut max_val = -1000.0;\n        let mut max_idx = -1;\n        for j in 0..arr.len()\
    \ {\n            if arr[j] > max_val {\n                max_val = arr[j];\n  \
    \              max_idx = j;\n            }\n        }\n        max_arr.push(vec![max_idx,\
    \ max_val]);\n    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n\
    \    for i in 0..k {\n        max_arr[i] = vec![arr[i]; 2];\n    }\n    for i\
    \ in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > max_arr[i][j+1]\
    \ {\n                max_arr[i][j] = max_arr[i][j+1];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > arr[i] {\n                max_arr[i][j] = arr[i];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > arr[j] {\n                max_arr[i][j] = arr[j];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i+1][j] {\n                max_arr[i][j] = max_arr[i+1][j];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] > max_arr[i][j-1] {\n                max_arr[i][j]\
    \ = max_arr[i][j-1];\n            }\n        }\n    }\n    for i in 0..k {\n \
    \       for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j+1] {\n\
    \                max_arr[i][j] = max_arr[i+1][j+1];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i-1][j] {\n                max_arr[i][j] = max_arr[i-1][j];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] > max_arr[i-1][j-1] {\n                max_arr[i][j]\
    \ = max_arr[i-1][j-1];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j-1] {\n\
    \                max_arr[i][j] = max_arr[i+1][j-1];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i-1][j+1] {\n                max_arr[i][j] = max_arr[i-1][j+1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i+1][j+1] {\n                max_arr[i][j]\
    \ = max_arr[i+1][j+1];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > max_arr[i+1][j] {\n \
    \               max_arr[i][j] = max_arr[i+1][j];\n            }\n        }\n",
  "    let mut max_arr = vec![];\n    for i in 0..k {\n        max_arr.push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n\
    \    }\n    for i in 0..k {\n        let mut max_i = i;\n        for j in 0..k\
    \ {\n            if max_arr[j] < max_arr[j] && max_arr[j] < max_arr[max_i] {\n\
    \                max_i = j;\n            }\n        }\n        max_arr[max_i]\
    \ = max_arr[i];\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n     \
    \   for j in 0..k {\n            if max_arr[i][j] > max_arr[i][j+1] {\n      \
    \          max_arr[i][j] = max_arr[i][j+1];\n            }\n        }\n    }\n\
    \    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] >\
    \ arr[j] {\n                max_arr[i][j] = arr[j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].iter().cloned().collect::<Vec<_>>()\n    }", "    let\
    \ mut max_arr = vec![vec![0; k]; arr.len()];\n    for i in 0..arr.len() {\n  \
    \      let mut max_i = i;\n        let mut max_j = i;\n        for j in 0..k {\n\
    \            if arr[j] > arr[max_j] {\n                max_j = j;\n          \
    \  }\n        }\n        max_arr[i] = arr[max_i..max_j];\n    }\n    max_arr",
  "    let mut result = vec![];\n    let mut max_element = arr[0];\n    for i in 1..k\
    \ {\n        if arr[i] > max_element {\n            max_element = arr[i];\n  \
    \      }\n    }\n    for i in 0..k {\n        if arr[i] > max_element {\n    \
    \        result.push(max_element);\n        }\n    }\n    result", "    let mut\
    \ max_arr = vec![vec![0]; k];\n    for i in 0..arr.len() {\n        max_arr[i]\
    \ = if arr[i] > max_arr[i].iter().max().unwrap() {\n            max_arr[i].iter().max().unwrap()\n\
    \        } else {\n            max_arr[i].iter().max().unwrap()\n        };\n\
    \    }\n    max_arr", "    let mut result = vec![0; k];\n    let mut max_val =\
    \ arr[0];\n    for i in 1..k {\n        if arr[i] > max_val {\n            max_val\
    \ = arr[i];\n        }\n    }\n    for i in 0..k {\n        result[i] = max_val;\n\
    \    }\n    result", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..arr.len() {\n        max_arr[i][arr.len() - 1 - i].push(*arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].", "    let mut max_arr\
    \ = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i] = arr\n        \
    \    .iter()\n            .enumerate()\n            .filter(|(_, v)| v > arr[i])\n\
    \            .map(|(_, v)| v)\n            .collect::<Vec<_>>();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        let mut max_num = max_arr[i].unwrap();\n\
    \        for j in (i + 1)..k {\n            if max_arr[j] > max_num {\n      \
    \          max_num = max_arr[j].unwrap();\n            }\n        }\n        max_arr[i]\
    \ = max_num;\n    }\n    max_arr", "    let mut max_arr = vec![0; k];\n    let\
    \ mut max_idx = k;\n    let mut max_val = arr[0];\n    for &x in arr {\n     \
    \   if x > max_val {\n            max_val = x;\n            max_idx = k;\n   \
    \     }\n        if x == max_val {\n            max_arr[k - 1] = x;\n        }\n\
    \        if k == max_idx {\n            max_arr[k - 1] = max_val;\n        }\n\
    \        k -= 1;\n    }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n\
    \    for i in 0..k {\n        max_arr[i] = vec![arr[i]; 1];\n    }\n    for i\
    \ in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > max_arr[i][j\
    \ + 1] {\n                max_arr[i][j] = max_arr[i][j + 1];\n            }\n\
    \        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if\
    \ max_arr[i][j] == max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![];\n    for i in 0..k {\n  \
    \      max_arr.push(arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n\
    \        max_arr.push(max_arr[i]);\n    }\n    for i in 0..k {\n        max_arr.push(",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n        while\
    \ j < arr.len() {\n            if arr[j] < max_arr[j][0] {\n                max_arr[j][0]\
    \ = arr[j];\n            }\n            if arr[j] > max_arr[j][1] {\n        \
    \        max_arr[j][1] = arr[j];\n            }\n            j += 1\n        }\n\
    \        if max_k == i {\n            max_arr[i] = vec![max_arr[i][0], max_arr[i][1]];\n\
    \        } else {\n            max_arr[i] = vec![max_arr[i][0], max_arr[i][1]];\n\
    \            max_k -= 1;\n        }\n        i += 1;\n    }\n    max_arr", " \
    \   let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut max_element\
    \ = arr[0];\n    for element in arr.iter() {\n        if element > max_element\
    \ {\n            max_element = element;\n        }\n    }\n    while max_k > 0\
    \ && max_k > max_arr.len() {\n        max_arr.push(max_element);\n        max_k\
    \ -= 1;\n        for element in arr.iter() {\n            if element > max_element\
    \ {\n                max_element = element;\n            }\n        }\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = arr\n            .iter()\n            .enumerate()\n   \
    \         .filter(|(_, elem)| elem > 0)\n            .map(|(_, elem)| elem)\n\
    \            .collect::<Vec<_>>();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        let mut max_val = -1000isize;\n\
    \        for j in 0..arr.len() {\n            if arr[j] > max_val {\n        \
    \        max_val = arr[j];\n            }\n        }\n        max_arr.push(vec![max_val]);\n\
    \    }\n    max_arr.push(vec![-1000, 1000]);\n    max_arr.sort_by_key(|x| x.0);\n\
    \    max_arr.iter().cloned().collect()", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        max_arr[i] = vec![-1000, 1000];\n    }\n\
    \    for i in 0..arr.len() {\n        let mut max_i = i;\n        let mut max_val\
    \ = arr[i];\n        for j in 0..k {\n            if max_arr[j][0] > max_val {\n\
    \                max_i = j;\n                max_val = max_arr[j][1];\n      \
    \      }\n        }\n        max_arr[i][2] = max_val;\n    }\n    max_arr.iter().map(|x|\
    \ x.reverse()).collect()", "    let mut max_arr = vec![vec![-1000, 1000]];\n \
    \   for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut max_arr = vec![vec![-1000]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n        max_arr[i].sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_unstable();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().", "    let mut\
    \ max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n\
    \    }\n    for i in 0..k {\n        for j in (i + 1)..k {\n            if max_arr[j]\
    \ > max_arr[i] {\n                max_arr[j] = max_arr[i];\n            }\n  \
    \      }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..arr.len() {\n        max_arr[k][i] = if arr[i] > max_arr[k][i].iter().max().unwrap()\
    \ {\n            max_arr[k][i]\n        } else {\n            arr[i]\n       \
    \ };\n    }\n    max_arr[k].iter().cloned().collect()", "    let mut max_arr =\
    \ vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n\
    \    for i in 0..k {\n        for j in (i + 1)..k {\n            if max_arr[i]\
    \ > max_arr[j] {\n                max_arr[i] = max_arr[j];\n            }\n  \
    \      }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].max(arr[i]);\n    }\n    max_arr", "    let\
    \ mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i] = vec![arr[i];\
    \ 1];\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j + 1] {\n                max_arr[i][j] = max_arr[i][j + 1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[i] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0.", " \
    \   let mut max_arr = vec![vec![0; k]; arr.len()];\n    for i in 0..arr.len()\
    \ {\n        max_arr[i][arr[i]] = 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]]\
    \ = 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..k {\n        max_arr[i][arr[i]] = max_arr[i][arr[i]]\
    \ + 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][arr[i]] = ", " \
    \   let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..arr.len() {\n\
    \        max_arr[i][arr[i]] = arr[i];\n    }\n    max_arr.iter().cloned().collect::<Vec<_>>()",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].max(arr[i]);\n    }\n    max_arr", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max(arr[i]);\n   \
    \ }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n \
    \   max_arr", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let\
    \ mut max_i = arr.len();\n    while max_i < max_k {\n        let mut max_val =\
    \ arr[0];\n        let mut max_pos = 0;\n        for i in 1..max_i {\n       \
    \     if arr[i] > max_val {\n                max_val = arr[i];\n             \
    \   max_pos = i;\n            }\n        }\n        max_arr.push(max_val);\n \
    \       max_i = max_pos;\n    }\n    max_arr", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        let mut max_val = -1000isize;\n      \
    \  for j in 0..arr.len() {\n            if arr[j] > max_val {\n              \
    \  max_val = arr[j];\n            }\n        }\n        max_arr[i] = vec![max_val];\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    let mut max_idx\
    \ = k;\n    for &i in arr {\n        if i >= 0 {\n            max_arr[k - 1].push(i);\n\
    \            if k == 1 {\n                max_idx = 1;\n            }\n      \
    \      k -= 1;\n        }\n    }\n    for i in 0..max_idx {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    max_arr", "    let mut result\
    \ = vec![vec![0]; k];\n    let mut max_val = arr[0];\n    let mut max_idx = 1;\n\
    \    for i in 1..k {\n        if arr[i] > max_val {\n            max_val = arr[i];\n\
    \            max_idx = i;\n        }\n    }\n    for i in 0..k {\n        result[max_idx].push(arr[i]);\n\
    \    }\n    result", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n    }\n\
    \    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    arr", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n    for\
    \ i in 0..arr.len() {\n        max_arr[i][arr[i]] = 1;\n    }\n    for i in 0..k\
    \ {\n        max_arr[i][max_arr[i].iter().max().unwrap()] += 1;\n    }\n    for\
    \ i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()] -=\
    \ 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ += 1;\n    }\n    for i in 0..arr.len() {\n        max_arr[i][max_arr[i].iter().max().unwrap()]\
    \ -= 1;\n    }\n    for i in 0..k {\n        max_arr[i][", "    let mut max_arr\
    \ = vec![0; k];\n    let mut max_idx = k;\n    for &i in arr {\n        if i >\
    \ max_arr[k] {\n            max_arr[k] = i;\n            max_idx += 1;\n     \
    \   }\n    }\n    max_arr.sort_unstable();\n    max_arr.truncate(max_idx);\n \
    \   max_arr", "    let mut max_arr = vec![];\n    let mut max_num = arr[0];\n\
    \    for i in 0..k {\n        if max_num < arr[i] {\n            max_num = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        if max_num < arr[i] {\n      \
    \      max_arr.push(max_num);\n        }\n    }\n    for i in 0..k {\n       \
    \ if max_num < arr[i] {\n            max_arr.push(arr[i]);\n        }\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n    for i\
    \ in 0..arr.len() {\n        for j in 0..k {\n            if arr[i] > max_arr[j][k]\
    \ {\n                max_arr[j][k] = arr[i];\n            }\n        }\n    }\n\
    \    for i in 0..k {\n        for j in 0..arr.len() {\n            if max_arr[i][j]\
    \ == 0 {\n                max_arr[i][j] = max_arr[j][i];\n            }\n    \
    \    }\n    }\n    for i in 0..k {\n        for j in 0..arr.len() {\n        \
    \    if max_arr[i][j] > max_arr[j][i] {\n                max_arr[j][i] = max_arr[i][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..arr.len()\
    \ {\n            if max_arr[i][j] > max_arr[j][i] {\n                max_arr[j][i]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..arr.len() {\n            if max_arr[i][j] > max_arr[j][i] {\n\
    \                max_arr[j][i] = max_arr[i][j];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..arr.len() {\n            if max_arr[i][j]\
    \ > max_arr[j][i] {\n                max_arr[j][i] = max_arr[i][j];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..arr.len() {\n\
    \            if max_arr[i][j] > max_arr[j][i] {\n                max_arr[j][i]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..arr.len() {\n            if max_arr[i][j] > max_arr[j][i] {\n\
    \                max_arr[j][i] = max_arr[i][j];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..arr.len() {\n            if max_arr[i][j]\
    \ > max_arr[j][i] {\n                max_arr[j][i] = max_arr[i][j];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..arr.len() {\n\
    \            if max_arr[i][j] > max_arr[j][i] {\n                max_arr[j][i]\
    \ = max_arr[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..arr.len() {\n            if max_arr[i][j] > max_arr[j][i] {\n\
    \                max_arr[j][i] = max_arr[i][j];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..arr.len() {\n            if max_arr[i][j]\
    \ > max_arr[j][i] {\n                max_arr[j][i] = max_arr[i][j];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..arr.len() {\n\
    \            if max_arr[i][j] > max_", "    let mut max_arr = vec![0; k];\n  \
    \  for i in 0..arr.len() {\n        if arr[i] > max_arr[k] {\n            max_arr[k]\
    \ = arr[i];\n        }\n    }\n    max_arr", "    let mut result = vec![0; k];\n\
    \    let mut max_so_far = arr[0];\n    for i in 1..k {\n        if arr[i] > max_so_far\
    \ {\n            max_so_far = arr[i];\n        }\n    }\n    for i in 0..k {\n\
    \        result[i] = max_so_far;\n        max_so_far = max_so_far - arr[i];\n\
    \    }\n    result", "    let mut max_so_far = vec![vec![0]; k];\n    let mut\
    \ max_so_far_iter = max_so_far.iter();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v + 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&v|\
    \ v - 1).collect::<Vec<_>>();\n    let mut max_so_far_iter = max_so_far_iter.map(|&",
  "    let mut max_arr = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k\
    \ {\n        if max_num < arr[i] {\n            max_num = arr[i];\n        }\n\
    \    }\n    for i in 0..k {\n        if max_num < arr[i] {\n            max_arr.push(max_num);\n\
    \        }\n        max_arr.push(arr[i]);\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k {\n        if arr[i]\
    \ > max_num {\n            max_num = arr[i];\n        }\n    }\n    for i in 0..k\
    \ {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n     \
    \       max_num = arr[i];\n        }\n    }\n    max_arr.push(max_num);\n    max_arr",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        for j in 0..k {\n           \
    \ if max_arr[j] < max_arr[i] {\n                max_arr[i] = max_arr[j];\n   \
    \         }\n        }\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n\
    \    }\n    arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in\
    \ 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut\
    \ max_idx = 0;\n    let mut min_idx = 0;\n    let mut min_val = arr[0];\n    let\
    \ mut max_val = arr[0];\n    let mut min_idx = 0;\n    let mut max_idx = 0;\n\
    \    let mut min_val = arr[0];\n    let mut max_val = arr[0];\n    for &i in arr\
    \ {\n        if i < min_val {\n            min_val = i;\n            min_idx =\
    \ i;\n        }\n        if i > max_val {\n            max_val = i;\n        \
    \    max_idx = i;\n        }\n    }\n    while max_k > 0 {\n        if max_k ==\
    \ 1 {\n            max_arr.push(max_val);\n            break;\n        }\n   \
    \     if min_idx < max_idx {\n            max_arr.push(max_val);\n           \
    \ max_k -= 1;\n        } else {\n            min_idx += 1;\n            max_arr.push(min_val);\n\
    \            max_k -= 1;\n        }\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..arr.len() {\n        let mut max_i = i;\n        for j\
    \ in 0..k {\n            if arr[i] > max_arr[j][max_i] {\n                max_i\
    \ = j;\n            }\n        }\n        max_arr[k][max_i] = arr[i];\n    }\n\
    \    max_arr[k].iter().cloned().collect()", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    let mut max_k = k;\n    let mut max_pos = 0;\n    let mut max_val\
    \ = -1000isize;\n    for ele in arr {\n        if ele > max_val {\n          \
    \  max_val = ele;\n            max_pos = 0;\n        }\n        if ele > max_arr[max_pos][max_k]\
    \ {\n            max_arr[max_pos][max_k] = ele;\n            max_k -= 1;\n   \
    \     }\n    }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for\
    \ i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n    \
    \    for j in 0..k {\n            if max_arr[j] > max_arr[j + 1] {\n         \
    \       max_arr[j] = max_arr[j + 1];\n            }\n        }\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i].sort_unstable_by(|a, b| a.cmp(b));\n    }\n    for i in 0..k {\n\
    \        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for i\
    \ in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].", "    let mut max_so_far\
    \ = arr[0];\n    let mut max_so_far_index = 0;\n    let mut max_so_far_max = max_so_far;\n\
    \    for &x in arr.iter() {\n        if x > max_so_far {\n            max_so_far\
    \ = x;\n            max_so_far_index = x;\n            max_so_far_max = x;\n \
    \       }\n        if x == max_so_far {\n            if x > max_so_far_max {\n\
    \                max_so_far_max = x;\n            }\n        }\n    }\n    arr.iter().take(k).cloned().collect::<Vec<_>>()\n\
    \        .iter()\n        .enumerate()\n        .map(|(i, x)| (i, x))\n      \
    \  .sort_by(|a, b| b.1.cmp(&a.1))\n        .map(|(i, x)| x.1)\n        .collect::<Vec<_>>()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut result = vec![vec![0]; k];\n    for i in 0..k {\n        result[i] = arr\n\
    \            .iter()\n            .max_by_key(|x| x.clone())\n            .unwrap()\n\
    \            .cloned()\n            .unwrap();\n    }\n    result", "    let mut\
    \ max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j]\
    \ > max_arr[j + i] {\n                max_arr[j] = max_arr[j + i];\n         \
    \   }\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let\
    \ mut max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut\
    \ j = i;\n        while j < arr.len() && arr[j] > max_arr[j].0 {\n           \
    \ max_arr[j].0 = max_arr[j].1;\n            j += 1\n        }\n        if j -\
    \ i > max_k {\n            max_k = j - i;\n        }\n        i += 1;\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n    for i\
    \ in 0..arr.len() {\n        let mut max_num = arr[i];\n        for j in 0..k\
    \ {\n            if max_num < max_arr[i][j] {\n                max_num = max_arr[i][j];\n\
    \            }\n        }\n        max_arr[i][k - 1] = max_num;\n    }\n    max_arr",
  "    let mut max_so_far = arr[0];\n    let mut max_so_far_pos = 0;\n    let mut\
    \ max_so_far_neg = 0;\n    let mut max_so_far_neg_ind = -1;\n    let mut max_so_far_neg_ind_pos\
    \ = -1;\n    let mut max_so_far_neg_ind_neg = -1;\n    for i in 0..arr.len() {\n\
    \        if arr[i] > max_so_far {\n            max_so_far = arr[i];\n        \
    \    max_so_far_pos = i;\n        }\n        if arr[i] < -max_so_far {\n     \
    \       max_so_far_neg = arr[i];\n            max_so_far_neg_ind = i;\n      \
    \  }\n        if arr[i] < -max_so_far {\n            max_so_far_neg_ind_neg =\
    \ i;\n        }\n        if arr[i] > -max_so_far {\n            max_so_far_neg_ind_pos\
    \ = i;\n        }\n    }\n    let mut max_so_far_neg_ind_neg = max_so_far_neg_ind_neg;\n\
    \    let mut max_so_far_neg_ind_pos = max_so_far_neg_ind_pos;\n    let mut max_so_far_pos\
    \ = max_so_far_pos;\n    let mut max_so_far_neg = max_so_far_neg;\n    let mut\
    \ max_so_far = max_so_far;\n    let mut max_so_far_neg_ind = max_so_far_neg_ind;\n\
    \    let mut max_so_far_neg_ind_neg = max_so_far_neg_ind_neg;\n    let mut max_so_far_neg_ind_pos\
    \ = max_so_far_neg_ind_pos;\n    let mut max_so_far_pos = max_so_far_pos;\n  \
    \  let mut max_so_far_neg = max_so_far_neg;\n    let mut max_so_far = max_so_far;\n\
    \    let mut max_so_far_neg_ind = max_so_far_neg_ind;\n    let mut max_so_far_neg_ind_neg\
    \ = max_so_far_neg_ind_neg;\n    let mut max_so_far_neg_ind_pos = max_so_far_neg_ind_pos;\n\
    \    let mut max_so_far_pos = max_so_far_pos;\n    let mut max_so_far_neg = max_so_far_neg;\n\
    \    let mut max_so_far = max_so_far;\n    let mut max_so_far_neg_ind = max_so_far_neg_ind;\n\
    \    let mut max_so_far_neg_ind_neg = max_so_far_neg_ind_neg", "    let mut max_arr\
    \ = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n   \
    \ }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max();\n    }\n    for\
    \ i in 0..k {\n        arr[i] = max_arr[i];\n    }\n    return arr;", "    let\
    \ mut max_arr = vec![vec![-1000]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n        for j in 0..k {\n  \
    \          if max_arr[i][j] > max_arr[i][j+1] {\n                max_arr[i][j]\
    \ = max_arr[i][j+1];\n            }\n        }\n    }\n    for i in 0..k {\n \
    \       for j in 0..k {\n            if max_arr[i][j] > arr[j] {\n           \
    \     max_arr[i][j] = arr[j];\n            }\n        }\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n", "    let mut max_arr = vec![];\n    let mut max_so_far\
    \ = vec![];\n    for i in 0..k {\n        max_so_far.push(arr[i]);\n    }\n  \
    \  for i in 0..arr.len() {\n        let mut max_element = max_so_far[0];\n   \
    \     for j in 0..k {\n            if arr[i] > max_element {\n               \
    \ max_element = arr[i];\n            }\n        }\n        max_arr.push(max_element);\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in\
    \ 0..k {\n            if max_arr[j] > max_arr[j + 1] {\n                max_arr[j]\
    \ = max_arr[j + 1];\n            }\n        }\n    }\n    for i in 0..k {\n  \
    \      max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut max_i = 1;\n\
    \    let mut max_j = 1;\n    let mut i = 0;\n    let mut j = 0;\n    while i <\
    \ arr.len() && j < max_k {\n        if arr[i] > arr[j] {\n            max_arr[j]\
    \ = arr[i];\n            max_k = max_k - 1;\n        } else {\n            max_arr[j]\
    \ = arr[j];\n            max_k = max_k - 1;\n        }\n        i += 1;\n    \
    \    j += 1;\n    }\n    while i < arr.len() {\n        max_arr[j] = arr[i];\n\
    \        j += 1;\n        i += 1;\n    }\n    max_arr", "    let mut max_arr =\
    \ vec![vec![0; k]; arr.len()];\n    for i in 0..arr.len() {\n        for j in\
    \ 0..k {\n            if arr[i] > max_arr[j][k] {\n                max_arr[j][k]\
    \ = arr[i];\n            }\n        }\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n   \
    \ }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j] >\
    \ max_arr[j + 1] {\n                max_arr[j] = max_arr[j + 1];\n           \
    \ }\n        }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n  \
    \  for i in 0..arr.len() {\n        for j in 0..k {\n            if arr[i] > max_arr[j][k]\
    \ {\n                max_arr[j][k] = arr[i];\n            }\n        }\n    }\n\
    \    max_arr", "    let mut max_arr = vec![];\n    let mut max_val = arr[0];\n\
    \    for i in 0..k {\n        if arr[i] > max_val {\n            max_val = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_val {\n      \
    \      max_arr.push(max_val);\n        }\n    }\n    for i in 0..k {\n       \
    \ if arr[i] < max_val {\n            max_arr.push(arr[i]);\n        }\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..arr.len() {\n        max_arr[i][arr.len() - 1 - i].cloned().push(arr[i]);\n\
    \    }\n    max_arr.iter().cloned().collect::<Vec<_>>()", "    let mut max_arr\
    \ = vec![0; k];\n    let mut max_idx = k;\n    for &x in arr {\n        if x >\
    \ max_arr[k] {\n            max_arr[k] = x;\n            max_idx += 1;\n     \
    \   }\n    }\n    max_arr.sort_unstable();\n    max_arr.truncate(max_idx);\n \
    \   max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k\
    \ = k;\n    let mut max_idx = vec![];\n    for i in 0..arr.len() {\n        if\
    \ max_k == 0 {\n            break;\n        }\n        if arr[i] > max_arr[0][i]\
    \ {\n            max_arr[0] = vec![arr[i]];\n            max_k -= 1;\n       \
    \     max_idx = vec![];\n        }\n        if arr[i] > max_arr[1][i] {\n    \
    \        max_arr[1] = vec![arr[i]];\n            max_k -= 1;\n            max_idx\
    \ = vec![];\n        }\n        if arr[i] > max_arr[2][i] {\n            max_arr[2]\
    \ = vec![arr[i]];\n            max_k -= 1;\n            max_idx = vec![];\n  \
    \      }\n        if arr[i] > max_arr[3][i] {\n            max_arr[3] = vec![arr[i]];\n\
    \            max_k -= 1;\n            max_idx = vec![];\n        }\n        if\
    \ arr[i] > max_arr[4][i] {\n            max_arr[4] = vec![arr[i]];\n         \
    \   max_k -= 1;\n            max_idx = vec![];\n        }\n        if arr[i] >\
    \ max_arr[5][i] {\n            max_arr[5] = vec![arr[i]];\n            max_k -=\
    \ 1;\n            max_idx = vec![];\n        }\n        if arr[i] > max_arr[6][i]\
    \ {\n            max_arr[6] = vec![arr[i]];\n            max_k -= 1;\n       \
    \     max_idx = vec![];\n        }\n        if arr[i] > max_arr[7][i] {\n    \
    \        max_arr[7] = vec![arr[i]];\n            max_k -= 1;\n            max_idx\
    \ = vec![];\n        }\n        if arr[i] > max_arr[8][i] {\n            max_arr[8]\
    \ = vec![arr[i]];\n            max_k -= 1;\n            max_idx = vec![];\n  \
    \      }\n        if arr[i] > max_arr[9][i] {\n            max_arr[9] = vec![arr[i]];\n\
    \            max_k -= 1;\n            max_idx = vec![];\n        }\n        if\
    \ arr[i] > max_arr[10][i] {\n            max_arr[10] = vec![arr[i]];\n       \
    \     max_k -= 1;\n            max_idx = vec![];\n        }\n        if arr[i]\
    \ > max_arr[11][i] {\n            max_arr[11] = vec![arr[i]];\n            max_k\
    \ -= 1;\n            max_idx = vec![];\n        }\n        if arr[i] > max_arr[12][i]\
    \ {\n            max_arr[12] = vec![arr[i]];\n            max_k -= 1;\n      \
    \      max_idx = vec![];\n        }\n        if arr[i] > max_arr[13][i] {\n  \
    \          max_arr[13] = vec![arr[i]];\n            max_k -= 1;\n            max_idx\
    \ = ", "    let mut max_arr = vec![];\n    let mut max_k = k;\n    let mut min_arr\
    \ = vec![];\n    let mut min_k = k;\n    let mut max_val = arr[0];\n    let mut\
    \ min_val = arr[0];\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mut max_pos = 0;\n    let mut min_pos = 0;\n    let\
    \ mut max_pos = 0;\n    let mut min_pos = 0;\n    let mut max_pos = 0;\n    let\
    \ mut min_pos = 0;\n    let mu", "    let mut max_arr = vec![vec![0]; k];\n  \
    \  for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n\
    \        for j in i+1..k {\n            if max_arr[i] > max_arr[j] {\n       \
    \         max_arr[i] = max_arr[j];\n            }\n        }\n    }\n    for i\
    \ in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr", " \
    \   let mut max_arr = vec![];\n    let mut max_len = k;\n    for ele in arr {\n\
    \        if max_len < ele {\n            max_len = ele;\n        }\n    }\n  \
    \  for i in 0..max_len {\n        max_arr.push(arr[i]);\n    }\n    max_arr",
  "    let mut max_arr = vec![];\n    let mut max_idx = vec![];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr[i];\n        max_idx[i] = i;\n    }\n    for i in\
    \ 1..arr.len() {\n        let mut max_val = max_arr[max_idx[i - 1]];\n       \
    \ let mut max_idx = max_idx[i - 1];\n        for j in 0..i {\n            if arr[j]\
    \ > max_val {\n                max_val = arr[j];\n                max_idx = j;\n\
    \            }\n        }\n        max_arr[max_idx] = arr[i];\n        max_idx[max_idx]\
    \ = i;\n    }\n    max_arr", "    let mut max_arr = vec![0; k];\n    let mut max_idx\
    \ = k;\n    for &i in arr {\n        if i >= 0 {\n            if i > max_arr[k]\
    \ {\n                max_arr[k] = i;\n                max_idx += 1;\n        \
    \    }\n        }\n    }\n    max_arr.sort_unstable();\n    max_arr.truncate(max_idx);\n\
    \    max_arr", "    let mut max_arr = vec![0; k];\n    let mut max_idx = k;\n\
    \    for i in 0..arr.len() {\n        if arr[i] > max_arr[k] {\n            max_arr[k]\
    \ = arr[i];\n            max_idx = k;\n        }\n        if max_idx > k {\n \
    \           break;\n        }\n        max_idx--;\n    }\n    max_arr", "    let\
    \ mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut\
    \ max_idx = -1;\n    for i in 0..arr.len() {\n        let mut cur_max = arr[i];\n\
    \        let mut cur_idx = i;\n        while cur_idx > 0 && cur_max > max_arr[cur_idx\
    \ - 1] {\n            max_arr[cur_idx - 1] = max_arr[cur_idx];\n            cur_idx\
    \ -= 1;\n        }\n        max_arr[cur_idx - 1] = cur_max;\n        if cur_idx\
    \ > max_k {\n            max_k = cur_idx;\n            max_idx = i;\n        }\n\
    \    }\n    max_arr.sort_by_key(|&x| x);\n    max_arr.to_owned()[0..max_k].to_vec()",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        let mut max_num = max_arr[i];\n\
    \        for j in 0..k {\n            if max_arr[j] > max_num {\n            \
    \    max_num = max_arr[j];\n            }\n        }\n        max_arr[i] = max_num;\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = vec![arr[i]; 2];\n    }\n    for i in 0..k\
    \ {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][0] : max_arr[i][1];\n\
    \    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1]\
    \ ? max_arr[i][1] : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0]\
    \ = max_arr[i][0] > max_arr[i][1] ? max_arr[i][0] : max_arr[i][1];\n    }\n  \
    \  for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1]\
    \ : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0]\
    \ > max_arr[i][1] ? max_arr[i][0] : max_arr[i][1];\n    }\n    for i in 0..k {\n\
    \        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n\
    \    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1]\
    \ ? max_arr[i][1] : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0]\
    \ = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n    }\n  \
    \  for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1]\
    \ : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0]\
    \ > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n    }\n    for i in 0..k {\n\
    \        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n\
    \    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1]\
    \ ? max_arr[i][1] : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0]\
    \ = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n    }\n  \
    \  for i in 0..k {\n        max_arr[i][0] = max_arr[i][0] > max_arr[i][1] ? max_arr[i][1]\
    \ : max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0]\
    \ > max_arr[i][1] ? max_arr[i][1] : max_arr[i][0];\n    }", "    let mut result\
    \ = vec![0; k];\n    let mut max_so_far = arr[0];\n    for i in 1..k {\n     \
    \   if arr[i] > max_so_far {\n            max_so_far = arr[i];\n        }\n  \
    \  }\n    for i in 0..k {\n        result[i] = max_so_far;\n        max_so_far\
    \ = max_so_far.max(arr[i]);\n    }\n    result", "    let mut max_arr = vec![0;\
    \ k];\n    let mut max_idx = k;\n    let mut max_val = arr[0];\n    for &i in\
    \ arr {\n        if i > max_val {\n            max_val = i;\n            max_idx\
    \ = k;\n        }\n        if i == max_val {\n            max_idx += 1;\n    \
    \    }\n        max_arr[k] = max_val;\n        max_arr[k] = i;\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n      \
    \  arr[i] = arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n  \
    \      max_arr[i] = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n    }\n   \
    \ for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        arr[i] = arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n", "    let mut max_arr = vec![];\n    let mut max_k\
    \ = k;\n    let mut max_i = 0;\n    let mut max_j = 0;\n    let mut max_val =\
    \ arr[0];\n    let mut max_pos = 0;\n    let mut max_pos = 0;\n    let mut i =\
    \ 0;\n    let mut j = 0;\n    while i < arr.len() && j < arr.len() {\n       \
    \ if arr[i] > arr[j] {\n            max_val = arr[i];\n            max_pos = i;\n\
    \        } else {\n            max_val = arr[j];\n            max_pos = j;\n \
    \       }\n        if max_val > max_arr[0] {\n            max_arr.push(max_val);\n\
    \            max_k += 1;\n        }\n        i += 1;\n        j += 1;\n    }\n\
    \    if max_k > max_arr.len() {\n        max_k = max_arr.len();\n    }\n    while\
    \ max_k > 0 {\n        max_arr[max_k - 1] = max_arr[max_k - 1] - 1;\n        max_k\
    \ -= 1;\n    }\n    while max_pos > 0 {\n        max_arr[max_pos] = max_arr[max_pos]\
    \ - 1;\n        max_pos -= 1;\n    }\n    while max_arr.len() > k {\n        max_arr.pop();\n\
    \        max_k -= 1;\n    }\n    while max_arr.len() > 0 {\n        max_arr.pop();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let\
    \ mut max_k = k;\n    let mut max_i = -1;\n    let mut max_j = -1;\n    for i\
    \ in 0..arr.len() {\n        if max_arr[0][0] <= arr[i] {\n            max_arr[0][0]\
    \ = arr[i];\n            max_arr[0][1] = i;\n        }\n        if max_arr[1][0]\
    \ > arr[i] {\n            max_arr[1][0] = arr[i];\n            max_arr[1][1] =\
    \ i;\n        }\n        if max_k == 0 {\n            break;\n        }\n    \
    \    if max_k == 1 {\n            max_k = max_arr[1][1] - max_arr[1][0] + 1;\n\
    \            max_i = max_arr[1][1];\n            max_j = max_arr[1][0];\n    \
    \    }\n        if max_arr[1][0] > max_arr[0][0] {\n            max_k = max_k\
    \ - 1;\n        }\n        if max_arr[1][1] < max_arr[0][0] {\n            max_k\
    \ = max_k + 1;\n        }\n    }\n    if max_k == 0 {\n        return vec![];\n\
    \    }\n    let mut max_arr = max_arr[0];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i] + max_arr[i + 1];\n    }\n    max_arr[k - 1]", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k {\n        if arr[i]\
    \ > max_num {\n            max_num = arr[i];\n        }\n    }\n    for i in 0..k\
    \ {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n     \
    \   }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n           \
    \ max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if arr[i]\
    \ > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n    for i\
    \ in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_arr.push(arr[i]);\n        }\n    }\n    for i in 0..k {\n        if\
    \ arr[i] > max_num {\n            max_arr.push(arr[i]);\n        }\n    }\n  \
    \  for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if arr[i] > max_num {\n      \
    \      max_", "    let mut max_so_far = arr[0];\n    let mut max_so_far_pos =\
    \ 0;\n    let mut max_so_far_neg = 0;\n    let mut max_so_far_neg_inner = arr[0];\n\
    \    for i in 1..arr.len() {\n        if arr[i] > max_so_far {\n            max_so_far\
    \ = arr[i];\n            max_so_far_pos = i;\n        }\n        if arr[i] < max_so_far\
    \ {\n            max_so_far_neg = i;\n        }\n        if arr[i] > max_so_far_neg_inner\
    \ {\n            max_so_far_neg_inner = arr[i];\n        }\n    }\n    let mut\
    \ max_so_far_neg_inner_pos = 0;\n    let mut max_so_far_neg_inner_neg = 0;\n \
    \   let mut max_so_far_neg_inner_neg_inner = arr[0];\n    for i in 1..arr.len()\
    \ {\n        if arr[i] > max_so_far_neg_inner {\n            max_so_far_neg_inner\
    \ = arr[i];\n        }\n        if arr[i] < max_so_far_neg_inner {\n         \
    \   max_so_far_neg_inner_neg = i;\n        }\n        if arr[i] > max_so_far_neg_inner_neg_inner\
    \ {\n            max_so_far_neg_inner_neg_inner = arr[i];\n        }\n    }\n\
    \    let mut max_so_far_neg_inner_pos = 0;\n    let mut max_so_far_neg_inner_neg\
    \ = 0;\n    let mut max_so_far_neg_inner_neg_inner = arr[0];\n    for i in 1..arr.len()\
    \ {\n        if arr[i] > max_so_far_neg_inner_neg_inner {\n            max_so_far_neg_inner_neg_inner\
    \ = arr[i];\n        }\n        if arr[i] < max_so_far_neg_inner_neg_inner {\n\
    \            max_so_far_neg_inner_pos = i;\n        }\n        if arr[i] > max_so_far_neg_inner_neg\
    \ {\n            max_so_far_neg_inner_neg = i;\n        }\n    }\n    let mut\
    \ max_so_far_pos = 0;\n    let mut max_so_far_neg = 0;\n    let mut max_so_far_neg_inner\
    \ = arr[0];\n    for i in 1..arr.len() {\n        if arr[i] > max_so_far_neg_inner\
    \ {\n            max_so_far_neg_inner = arr[i];\n        }\n        if arr[i]\
    \ < max_so_far_neg_inner {\n            max_so_far_neg = i;\n        }\n     \
    \   if arr[i] > max_so_far_neg {\n            max_so_far_neg = i;\n        }\n\
    \        if arr[i] > max_so_far_pos {\n            max_so_far_pos = i;\n     \
    \   }", "    let mut result = vec![0; k];\n    let mut max_val = arr[0];\n   \
    \ for i in 0..k {\n        if arr[i] > max_val {\n            max_val = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        result[i] = max_val;\n    }\n\
    \    result", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..arr.len() {\n        max_arr[k - 1 - i].push(arr[i]);\n    }\n    max_arr.iter().cloned().collect()",
  "    let mut max_arr = vec![];\n    for i in 0..k {\n        max_arr.push(arr[i]);\n\
    \    }\n    max_arr.sort();\n    max_arr", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        max_arr[i] = vec![arr[i]; 2];\n    }\n\
    \    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] >\
    \ max_arr[i][j+1] {\n                max_arr[i][j] = max_arr[i][j+1];\n      \
    \      }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n   \
    \         if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        max_arr[i][0] =\
    \ max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][1] = max_arr[i][1];\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > arr[j] {\n                max_arr[i][j] = arr[j];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0];\n    }\n\
    \    for i in 0..k {\n        max_arr[i][1] = max_arr[i][1];\n    }\n    for i\
    \ in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > arr[j] {\n\
    \                max_arr[i][j] = arr[j];\n            }\n        }\n    }\n  \
    \  for i in 0..k {\n        max_arr[i][0] = max_arr[i][0];\n    }\n    for i in\
    \ 0..k {\n        max_arr[i][1] = max_arr[i][1];\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > arr[j] {\n          \
    \      max_arr[i][j] = arr[j];\n            }\n        }\n    }\n    for i in\
    \ 0..k {\n        max_arr[i][0] = max_arr[i][0];\n    }\n    for i in 0..k {\n\
    \        max_arr[i][1] = max_arr[i][1];\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if max_arr[i][j] > arr[j] {\n                max_arr[i][j]\
    \ = arr[j];\n            }\n        }\n    }\n    for i in 0..k {\n        max_arr[i][0]\
    \ = max_arr[i][0];\n    }\n    for i in 0..k {\n        max_arr[i][1] = max_arr[i][1];\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > arr[j] {\n                max_arr[i][j] = arr[j];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        max_arr[i][0] = max_arr[i][0];\n    }\n\
    \    for i in 0..k {\n        max_arr[i][1] = max_arr[i][1];\n    }\n    for i\
    \ in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > arr", " \
    \   let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..arr.len() {\n\
    \        max_arr[i][arr[i]] = arr[i];\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n   \
    \ }\n    for i in 0..k {\n        for j in (i + 1)..k {\n            if max_arr[i]\
    \ > max_arr[j] {\n                max_arr[i] = max_arr[j];\n            }\n  \
    \      }\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n    }\n  \
    \  arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n\
    \        max_arr[i] = vec![arr[i], -1000, 1000];\n    }\n    for i in 0..k {\n\
    \        let mut max_num = -1000.0;\n        for j in 0..k {\n            if max_arr[j][0]\
    \ > max_num {\n                max_num = max_arr[j][0];\n            }\n     \
    \   }\n        max_arr[i][1] = max_num;\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if max_arr[j][1] < max_arr[i][1] {\n              \
    \  max_arr[j][1] = max_arr[i][1];\n            }\n        }\n    }\n    for i\
    \ in 0..k {\n        for j in 0..k {\n            if max_arr[j][1] > max_arr[i][1]\
    \ {\n                max_arr[j][1] = max_arr[i][1];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j][1]\
    \ < max_arr[i][1] {\n                max_arr[j][1] = max_arr[i][1];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n     \
    \       if max_arr[j][1] > max_arr[i][1] {\n                max_arr[j][1] = max_arr[i][1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j][1] < max_arr[i][1] {\n                max_arr[j][1]\
    \ = max_arr[i][1];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..k {\n            if max_arr[j][1] > max_arr[i][1] {\n      \
    \          max_arr[j][1] = max_arr[i][1];\n            }\n        }\n    }\n \
    \   for i in 0..k {\n        for j in 0..k {\n            if max_arr[j][1] < max_arr[i][1]\
    \ {\n                max_arr[j][1] = max_arr[i][1];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[j][1]\
    \ > max_arr[i][1] {\n                max_arr[j][1] = max_arr[i][1];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n     \
    \       if max_arr[j][1] < max_arr[i][1] {\n                max_arr[j][1] = max_arr[i][1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j][1] > max_arr[i][1] {\n                max_arr[j][1]\
    \ = max_arr[i][1];\n            }\n        }\n    }\n    for i in 0..k {\n   \
    \     for j in 0..k {\n            if max_arr[j][1] < max_arr[i][1]", "    let\
    \ mut max_arr = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k {\n\
    \        if arr[i] > max_num {\n            max_num = arr[i];\n        }\n   \
    \ }\n    for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n\
    \        }\n        max_arr.push(arr[i]);\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_num = arr[0];\n    for i in 0..k {\n        if max_num\
    \ < arr[i] {\n            max_num = arr[i];\n        }\n    }\n    for i in 0..k\
    \ {\n        if max_num < arr[i] {\n            max_arr.push(max_num);\n     \
    \   }\n    }\n    max_arr", "    let mut result = vec![vec![0; k]; arr.len()];\n\
    \    let mut max_idx = vec![0; k];\n    let mut max_val = vec![0; k];\n    for\
    \ i in 0..arr.len() {\n        let mut max_idx = 0;\n        let mut max_val =\
    \ 0;\n        for j in 0..k {\n            if arr[i] > max_val[j] {\n        \
    \        max_val = max_val[j];\n                max_idx = j;\n            }\n\
    \        }\n        result[max_idx][max_idx] = arr[max_idx];\n        max_idx[max_idx]\
    \ = i;\n        max_val[max_idx] = arr[i];\n    }\n    result", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i].push(arr[i]);\n    }\n    for\
    \ i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i].iter().cloned().collect();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![];\n    let mut max_len = k;\n    let mut i = 0;\n    while i < arr.len()\
    \ {\n        if max_len < arr.len() {\n            max_len = arr.len();\n    \
    \    }\n        if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n \
    \       }\n        if arr[i] > max_arr[1] {\n            max_arr[1] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[2] {\n            max_arr[2] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[3] {\n            max_arr[3] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[4] {\n            max_arr[4] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[5] {\n            max_arr[5] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[6] {\n            max_arr[6] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[7] {\n            max_arr[7] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[8] {\n            max_arr[8] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[9] {\n            max_arr[9] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[10] {\n            max_arr[10] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[11] {\n            max_arr[11] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[12] {\n            max_arr[12] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[13] {\n            max_arr[13] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[14] {\n            max_arr[14] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[15] {\n            max_arr[15] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[16] {\n            max_arr[16] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[17] {\n            max_arr[17] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[18] {\n            max_arr[18] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[19] {\n            max_arr[19] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[20] {\n            max_arr[20] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[21] {\n            max_arr[21] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[22] {\n            max_arr[22] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[23] {\n            max_arr[23] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[24] {\n            max_arr[24] = arr[i];\n\
    \        }\n        if arr[i] > max_arr[25] {\n            max_arr[25] = arr[i];\n\
    \        }\n        if arr[i] > max_", "    let mut result = vec![0; k];\n   \
    \ let mut max_value = arr[0];\n    let mut max_pos = 0;\n    for &x in arr.iter()\
    \ {\n        if x > max_value {\n            max_value = x;\n            max_pos\
    \ = 0;\n        }\n        if x == max_value {\n            result[max_pos] =\
    \ x;\n            max_pos++;\n        }\n    }\n    result", "    let mut max_arr\
    \ = vec![vec![0; k]; arr.len()];\n    for i in 0..arr.len() {\n        let mut\
    \ max_val = arr[i];\n        for j in 0..k {\n            if max_val < arr[j]\
    \ {\n                max_val = arr[j];\n            }\n        }\n        max_arr[i]\
    \ = vec![max_val; k];\n    }\n    max_arr", "    let mut max_so_far = vec![0;\
    \ k];\n    let mut max_so_far_len = k;\n    let mut max_so_far_pos = 0;\n    let\
    \ mut max_so_far_neg = 0;\n    let mut max_so_far_zero = 0;\n    let mut max_so_far_neg_inv\
    \ = vec![0; k];\n    let mut max_so_far_neg_inv_len = k;\n    let mut max_so_far_neg_inv_pos\
    \ = 0;\n    let mut max_so_far_neg_inv_zero = 0;\n    let mut max_so_far_neg_inv_neg\
    \ = 0;\n    let mut max_so_far_neg_inv_zero_inv = vec![0; k];\n    let mut max_so_far_neg_inv_zero_inv_len\
    \ = k;\n    let mut max_so_far_neg_inv_zero_inv_pos = 0;\n    let mut max_so_far_neg_inv_zero_inv_neg\
    \ = 0;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv = vec![0; k];\n    let\
    \ mut max_so_far_neg_inv_zero_inv_neg_inv_len = k;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_pos\
    \ = 0;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg = 0;\n    let mut\
    \ max_so_far_neg_inv_zero_inv_neg_inv_neg_inv = vec![0; k];\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_len\
    \ = k;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_pos = 0;\n   \
    \ let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_neg = 0;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_neg_inv\
    \ = vec![0; k];\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_len =\
    \ k;\n    let mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_pos = 0;\n    let\
    \ mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_neg_inv = vec![0; k];\n    let\
    \ mut max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_neg_inv_len = k;\n    let mut\
    \ max_so_far_neg_inv_zero_inv_neg_inv_neg_inv_neg_inv_pos = 0;\n    let mut ",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        let mut max_val = max_arr[i].unwrap();\n\
    \        for j in 0..k {\n            if max_arr[j] > max_val {\n            \
    \    max_val = max_arr[j].unwrap();\n            }\n        }\n        max_arr[i]\
    \ = max_val;\n    }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n \
    \   for i in 0..k {\n        max_arr[i] = arr\n            .iter()\n         \
    \   .take_while(|&x| x < 0)\n            .take_while(|&x| x < 0)\n           \
    \ .take_while(|&x| x < 0)\n            .max();\n    }\n    max_arr", "    let\
    \ mut max_arr = vec![0; k];\n    let mut max_idx = k;\n    for &i in arr {\n \
    \       if i > max_arr[k] {\n            max_arr[k] = i;\n            max_idx\
    \ += 1;\n        }\n    }\n    max_arr.sort_unstable();\n    max_arr.truncate(max_idx);\n\
    \    return max_arr", "    let mut max_arr = vec![];\n    let mut max_so_far =\
    \ vec![];\n    for i in 0..k {\n        max_arr.push(arr[i]);\n        max_so_far.push(arr[i]);\n\
    \    }\n    for i in 1..arr.len() {\n        if max_arr[i] > max_so_far[i] {\n\
    \            max_arr.swap(i, max_arr.len() - 1);\n            max_so_far.swap(i,\
    \ max_so_far.len() - 1);\n        }\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i] = vec![arr[i];\
    \ 2];\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j + 1] {\n                max_arr[i][j] = max_arr[i][j + 1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[i] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > arr[j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i][j + 1] {\n                max_arr[i][j]\
    \ = max_arr[i][j + 1];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > max_arr[i + 1][j] {\n\
    \                max_arr[i][j] = max_arr[i + 1][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j + 1] {\n                max_arr[i][j] = max_arr[i][j + 1];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i + 1][j] {\n                max_arr[i][j]\
    \ = max_arr[i + 1][j];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > max_arr[i + 1][j] {\n\
    \                max_arr[i][j] = max_arr[i + 1][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i + 1][j] {\n                max_arr[i][j] = max_arr[i + 1][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[i][j] > max_arr[i + 1][j] {\n                max_arr[i][j]\
    \ = max_arr[i + 1][j];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] > max_arr[i + 1][j] {\n\
    \                max_arr[i][j] = max_arr[i + 1][j];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i + 1][j] {\n                max_arr[i][j] = max_arr[i + 1][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in ", " \
    \   let mut max_arr = vec![];\n    let mut max_num = arr[0];\n    for i in 1..k\
    \ {\n        if arr[i] > max_num {\n            max_num = arr[i];\n        }\n\
    \    }\n    for i in 0..k {\n        if arr[i] > max_num {\n            max_arr.push(max_num);\n\
    \            max_num = arr[i];\n        }\n    }\n    max_arr.push(max_num);\n\
    \    return max_arr;", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = vec![arr[i], -1000, 1000];\n    }\n    for\
    \ i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j] > max_arr[i][j+1]\
    \ {\n                max_arr[i][j] = max_arr[i][j+1];\n            }\n       \
    \ }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ < max_arr[i+1][j] {\n                max_arr[i][j] = max_arr[i+1][j];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] > max_arr[i][j+1] {\n                max_arr[i][j]\
    \ = max_arr[i][j+1];\n            }\n        }\n    }\n    for i in 0..k {\n \
    \       for j in 0..k {\n            if max_arr[i][j] < max_arr[i+1][j] {\n  \
    \              max_arr[i][j] = max_arr[i+1][j];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j+1] {\n                max_arr[i][j] = max_arr[i][j+1];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] < max_arr[i+1][j] {\n                max_arr[i][j]\
    \ = max_arr[i+1][j];\n            }\n        }\n    }\n    for i in 0..k {\n \
    \       for j in 0..k {\n            if max_arr[i][j] > max_arr[i][j+1] {\n  \
    \              max_arr[i][j] = max_arr[i][j+1];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ < max_arr[i+1][j] {\n                max_arr[i][j] = max_arr[i+1][j];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] > max_arr[i][j+1] {\n                max_arr[i][j]\
    \ = max_arr[i][j+1];\n            }\n        }\n    }\n    for i in 0..k {\n \
    \       for j in 0..k {\n            if max_arr[i][j] < max_arr[i+1][j] {\n  \
    \              max_arr[i][j] = max_arr[i+1][j];\n            }\n        }\n  \
    \  }\n    for i in 0..k {\n        for j in 0..k {\n            if max_arr[i][j]\
    \ > max_arr[i][j+1] {\n                max_arr[i][j] = max_arr[i][j+1];\n    \
    \        }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n \
    \           if max_arr[i][j] < max_arr[i+1][j] {\n                max_arr[i][j]\
    \ = max_arr[i+1][j];\n            }\n", "    let mut max_arr = vec![];\n    let\
    \ mut max_num = arr[0];\n    for i in 1..k {\n        if arr[i] > max_num {\n\
    \            max_num = arr[i];\n        }\n    }\n    for i in 0..k {\n      \
    \  if arr[i] > max_num {\n            max_arr.push(max_num);\n        }\n    }\n\
    \    max_arr.push(max_num);\n    max_arr", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max(arr[i]);\n   \
    \ }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in\
    \ 0..k {\n            if max_arr[j] > max_arr[j + 1] {\n                max_arr[j]\
    \ = max_arr[j + 1];\n            }\n        }\n    }\n    for i in 0..k {\n  \
    \      max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr", "    let mut max_arr\
    \ = vec![vec![-1000]; k];\n    for i in 0..k {\n        max_arr[i] = vec![];\n\
    \    }\n    for i in 0..arr.len() {\n        max_arr[k - 1 - i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort_unstable();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n    for i in 0..k {\n        for\
    \ j in 0..k {\n            if arr[i] > max_arr[j] {\n                max_arr[j]\
    \ = arr[i];\n            }\n        }\n    }\n", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in\
    \ 0..k {\n        for j in 0..k {\n            if max_arr[j] > max_arr[i] {\n\
    \                max_arr[i] = max_arr[j];\n            }\n        }\n    }\n \
    \   for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![0]; k];\n    let mut max_idx = k;\n    for i in\
    \ 0..arr.len() {\n        if max_idx < k {\n            max_arr[k] = arr[i];\n\
    \            max_idx += 1;\n        } else {\n            if arr[i] > max_arr[k]\
    \ {\n                max_arr[k] = arr[i];\n            }\n        }\n    }\n \
    \   max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        let mut max_i\
    \ = i;\n        for j in i..k {\n            if max_arr[j] > max_arr[j+1] {\n\
    \                max_i = j;\n            }\n        }\n        max_arr[i] = max_arr[i];\n\
    \        max_arr[i] = max_arr[i] + max_arr[i] - max_arr[max_i];\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![0; k]; arr.len()];\n    for i in 0..arr.len() {\n\
    \        let mut max_val = arr[i];\n        for j in 0..k {\n            if max_val\
    \ < arr[j] {\n                max_val = arr[j];\n            }\n        }\n  \
    \      max_arr[i] = max_val;\n    }\n    max_arr", "    let mut max_arr = vec![];\n\
    \    let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n     \
    \   if arr[i] > max_arr[0] {\n            max_arr[0] = arr[i];\n            max_k\
    \ = 0;\n        }\n        if arr[i] > max_arr[1] {\n            max_arr[1] =\
    \ arr[i];\n            max_k = 1;\n        }\n        if arr[i] > max_arr[2] {\n\
    \            max_arr[2] = arr[i];\n            max_k = 2;\n        }\n       \
    \ i += 1;\n    }\n    max_arr.drain(..max_k);\n    max_arr", "    let mut result\
    \ = vec![vec![0]; k];\n    for i in 0..k {\n        result[i] = vec![arr[i]; 1];\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if result[i][j]\
    \ > result[i][j+1] {\n                result[i][j] = result[i][j];\n         \
    \   }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n      \
    \      if result[i][j] > result[i+1][j] {\n                result[i+1][j] = result[i][j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if result[i][j] > result[i+1][j+1] {\n                result[i+1][j+1]\
    \ = result[i][j];\n            }\n        }\n    }\n    for i in 0..k {\n    \
    \    result[i].pop();\n    }\n    for i in 0..k {\n        result[i].sort();\n\
    \    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n    }\n    for i\
    \ in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k\
    \ {\n        result[i].push(arr[i]);\n    }\n    for i in 0..k {\n        result[i].sort();\n\
    \    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n    }\n    for i\
    \ in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k\
    \ {\n        result[i].push(arr[i]);\n    }\n    for i in 0..k {\n        result[i].sort();\n\
    \    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n    }\n    for i\
    \ in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k\
    \ {\n        result[i].push(arr[i]);\n    }\n    for i in 0..k {\n        result[i].sort();\n\
    \    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n    }\n    for i\
    \ in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        result[i].sort();\n    }\n    for i in 0..k\
    \ {\n        result[i].push(arr[i]);\n    }\n    for i in 0..k {\n        result[i].sort();\n\
    \    }\n    for i in 0..k {\n        result[i].push(arr[i]);\n    }\n    for i\
    \ in 0..k {\n        result[i].sort();", "    let mut result = vec![vec![0; k];\
    \ arr.len()];\n    for i in 0..arr.len() {\n        let mut max = 0;\n       \
    \ for j in 0..k {\n            if arr[i] > arr[j] {\n                max = arr[i];\n\
    \            } else {\n                max = arr[j];\n            }\n        }\n\
    \        result[i] = vec![max; k];\n    }\n    result", "    let mut max_arr =\
    \ vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut max_idx = 1;\n\
    \    let mut min_idx = 1;\n    let mut min_val = arr[0];\n    let mut max_val\
    \ = arr[0];\n    for &i in arr {\n        if i > max_val {\n            max_val\
    \ = i;\n            max_idx = max_idx + 1;\n        }\n        if i < min_val\
    \ {\n            min_val = i;\n            min_idx = min_idx + 1;\n        }\n\
    \        if max_idx > max_k {\n            max_arr = max_arr.push(vec![max_val]);\n\
    \            max_idx = 1;\n        }\n        if min_idx > max_k {\n         \
    \   max_arr = max_arr.push(vec![min_val]);\n            min_idx = 1;\n       \
    \ }\n        if max_idx < min_k {\n            max_arr = max_arr.push(vec![min_val]);\n\
    \            min_idx = 1;\n        }\n        if max_idx < min_k {\n         \
    \   max_arr = max_arr.push(vec![max_val]);\n            min_idx = 1;\n       \
    \ }\n    }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n    for i in\
    \ 0..k {\n        max_arr[i] = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n\
    \        max_arr[i].sort_unstable();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0; k]; arr.len()];\n  \
    \  for i in 0..arr.len() {\n        for j in 0..k {\n            if arr[i] > max_arr[j][k]\
    \ {\n                max_arr[j][k] = arr[i];\n            }\n        }\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    let mut max_idx =\
    \ k;\n    for i in 0..arr.len() {\n        if max_idx > 0 && arr[i] > max_arr[0][k]\
    \ {\n            max_arr[0] = vec![arr[i]; max_idx];\n            max_idx = 0;\n\
    \        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k]\
    \ = arr[i];\n        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n \
    \           max_arr[0][k] = arr[i];\n        }\n        if max_idx > 0 && arr[i]\
    \ > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n        }\n        if\
    \ max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n\
    \        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k]\
    \ = arr[i];\n        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n \
    \           max_arr[0][k] = arr[i];\n        }\n        if max_idx > 0 && arr[i]\
    \ > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n        }\n        if\
    \ max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n\
    \        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k]\
    \ = arr[i];\n        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n \
    \           max_arr[0][k] = arr[i];\n        }\n        if max_idx > 0 && arr[i]\
    \ > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n        }\n        if\
    \ max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n\
    \        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k]\
    \ = arr[i];\n        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n \
    \           max_arr[0][k] = arr[i];\n        }\n        if max_idx > 0 && arr[i]\
    \ > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n        }\n        if\
    \ max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n\
    \        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_arr[0][k]\
    \ = arr[i];\n        }\n        if max_idx > 0 && arr[i] > max_arr[0][k] {\n \
    \           max_arr[0][k] = arr[i];\n        }\n        if max_idx > 0 && arr[i]\
    \ > max_arr[0][k] {\n            max_arr[0][k] = arr[i];\n        }\n        if\
    \ max_idx > 0 && arr[i] > max_arr[0][k] {\n            max_", "    let mut max_arr\
    \ = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_>>();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect::<Vec<_",
  "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = arr[i];\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max();\n\
    \    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n    }\n    return arr;",
  "    let mut max_arr = vec![vec![-1000]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![-1000];\n    }\n    for i in 0..arr.len() {\n        max_arr[k - 1 -\
    \ i].push(arr[i]);\n    }\n    for i in 0..k {\n        max_arr[i].sort();\n \
    \   }\n    for i in 0..k {\n        max_arr[i].push(max_arr[i].iter().max().unwrap());\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k", "    let mut max_arr = vec![vec![0]; k];\n    for\
    \ i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n    \
    \    for j in i+1..k {\n            if max_arr[i] > max_arr[j] {\n           \
    \     max_arr[i] = max_arr[j];\n            }\n        }\n    }\n    for i in\
    \ 0..k {\n        if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr\n            .iter()\n            .max_by(|a, b|\
    \ a.partial_cmp(&b).unwrap())\n            .unwrap();\n    }\n    max_arr", " \
    \   let mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![arr[i]; 1];\n    }\n    for i in 0..k {\n        for j in 0..k {\n  \
    \          if max_arr[i][j] > max_arr[i][j + 1] {\n                max_arr[i][j]\
    \ = max_arr[i][j + 1];\n            }\n        }\n    }\n    for i in 0..k {\n\
    \        for j in 0..k {\n            if max_arr[i][j] == max_arr[i][j] {\n  \
    \              max_arr[i][j] = arr[i];\n            }\n        }\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut\
    \ max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        if max_arr[0].0\
    \ > arr[i] {\n            max_arr[0] = vec![arr[i], -1000, 1000];\n          \
    \  max_k = 1;\n        } else {\n            if max_arr[0].1 > arr[i] {\n    \
    \            max_arr[1] = vec![arr[i], -1000, 1000];\n                max_k =\
    \ 2;\n            } else {\n                max_arr[2] = vec![arr[i], -1000, 1000];\n\
    \                max_k = 3;\n            }\n        }\n        i += 1;\n    }\n\
    \    max_arr.sort_unstable_by_key(|&x| x.0);\n    if max_k == 1 {\n        max_arr.iter().cloned().take(max_k).collect()\n\
    \    } else if max_k == 2 {\n        max_arr.iter().cloned().take(max_k).collect::<Vec<_>>()\n\
    \    } else {\n        max_arr.iter().cloned().take(max_k).collect::<Vec<_>>()\n\
    \    }", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n     \
    \   max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if max_arr[j] > max_arr[j + 1] {\n                max_arr[j] = max_arr[j\
    \ + 1];\n            }\n        }\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].unwrap();\n    }\n    max_arr", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in\
    \ 0..k {\n        for j in 0..k {\n            if max_arr[j] > max_arr[j + 1]\
    \ {\n                max_arr[j] = max_arr[j + 1];\n            }\n        }\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].unwrap();\n    }\n\
    \    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n    }\n    for i\
    \ in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n\
    \    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].max(arr[i]);\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    let\
    \ mut max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        let mut\
    \ j = i;\n        while j < arr.len() && arr[j] < max_arr[0][j] {\n          \
    \  j += 1\n        }\n        max_arr[i] = arr[j..j + max_k].iter().cloned().collect();\n\
    \        i += 1;\n    }\n    max_arr", "    let mut result = vec![0; k];\n   \
    \ let mut max_element = arr[0];\n    for i in 1..k {\n        if arr[i] > max_element\
    \ {\n            max_element = arr[i];\n        }\n    }\n    for i in 0..k {\n\
    \        result[i] = max_element;\n    }\n    result", "    let mut max_so_far\
    \ = arr[0];\n    let mut max_so_far_index = arr.len();\n    for i in 1..k {\n\
    \        if arr[i] > max_so_far {\n            max_so_far = arr[i];\n        \
    \    max_so_far_index = i;\n        }\n    }\n    arr.iter().take(max_so_far_index).collect()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..arr.len() {\n\
    \        max_arr[k][i] = max(arr[i], max_arr[k][i]);\n    }\n    max_arr.iter().cloned().collect()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        max_arr[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i].sort();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i].iter().cloned().collect();\n    }", "    let mut result\
    \ = vec![0; k];\n    let mut max_val = arr[0];\n    for i in 0..k {\n        if\
    \ arr[i] > max_val {\n            max_val = arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        result[i] = max_val;\n    }\n    result", "    let mut\
    \ max_arr = vec![vec![]; k];\n    for i in 0..k {\n        max_arr[i] = vec![arr[i];\
    \ 1];\n    }\n    for i in 0..k {\n        max_arr[i].sort_by_key(|&x| x);\n \
    \   }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec<_>>().sort_by_key(|&x|\
    \ x).collect();\n    }\n    for i in 0..k {\n        max_arr[i].iter().cloned().collect::<Vec",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut max_i = -1;\n    for i in 0..arr.len() {\n        let mut cur_max = -1000\
    \ + 1000;\n        let mut cur_max_i = -1;\n        for j in 0..k {\n        \
    \    if arr[i] > cur_max {\n                cur_max = arr[i];\n              \
    \  cur_max_i = j;\n            }\n        }\n        max_arr[i] = vec![cur_max,\
    \ cur_max_i];\n        if cur_max_i == k {\n            max_k = cur_max_i;\n \
    \       }\n    }\n    max_arr.sort_by_key(|x| x.0);\n    max_arr.iter().take(max_k).collect()",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let\
    \ mut i = 0;\n    while i < arr.len() {\n        let mut j = i;\n        while\
    \ j < arr.len() && arr[j] < max_arr[0][j] {\n            j += 1\n        }\n \
    \       if j - i > max_k {\n            max_k = j - i;\n            max_arr[0]\
    \ = max_arr[0].clone();\n            max_arr[1] = max_arr[1].clone();\n      \
    \  }\n        max_arr[0][i] = arr[i];\n        max_arr[1][i] = arr[j];\n     \
    \   i += 1;\n    }\n    max_arr[0].swap(0, max_k);\n    max_arr[1].swap(0, max_k);\n\
    \    max_arr", "    let mut max_arr = vec![0; k];\n    let mut max_idx = k;\n\
    \    let mut max_value = arr[0];\n    for &i in arr {\n        if i > max_value\
    \ {\n            max_value = i;\n        }\n        if i == max_value {\n    \
    \        max_arr[k - 1] = i;\n        }\n        if max_idx > k - 1 {\n      \
    \      break;\n        }\n        max_arr[k - 1] = i;\n        max_idx -= 1;\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![-1000, 1000]];\n    for\
    \ i in 0..k {\n        max_arr[i] = vec![arr[i], arr[i]];\n    }\n    for i in\
    \ 0..k {\n        let mut max_num = max_arr[i][0];\n        let mut max_pos =\
    \ 0;\n        for j in 0..k {\n            if max_arr[j][0] > max_num {\n    \
    \            max_num = max_arr[j][0];\n                max_pos = j;\n        \
    \    }\n        }\n        max_arr[i][2] = max_pos;\n    }\n    for i in 0..k\
    \ {\n        let mut max_num = max_arr[i][0];\n        let mut max_pos = 0;\n\
    \        for j in 0..k {\n            if max_arr[j][0] > max_num {\n         \
    \       max_num = max_arr[j][0];\n                max_pos = j;\n            }\n\
    \        }\n        max_arr[i][2] = max_pos;\n    }\n    for i in 0..k {\n   \
    \     let mut max_num = max_arr[i][0];\n        let mut max_pos = 0;\n       \
    \ for j in 0..k {\n            if max_arr[j][0] > max_num {\n                max_num\
    \ = max_arr[j][0];\n                max_pos = j;\n            }\n        }\n \
    \       max_arr[i][2] = max_pos;\n    }\n    for i in 0..k {\n        let mut\
    \ max_num = max_arr[i][0];\n        let mut max_pos = 0;\n        for j in 0..k\
    \ {\n            if max_arr[j][0] > max_num {\n                max_num = max_arr[j][0];\n\
    \                max_pos = j;\n            }\n        }\n        max_arr[i][2]\
    \ = max_pos;\n    }\n    for i in 0..k {\n        let mut max_num = max_arr[i][0];\n\
    \        let mut max_pos = 0;\n        for j in 0..k {\n            if max_arr[j][0]\
    \ > max_num {\n                max_num = max_arr[j][0];\n                max_pos\
    \ = j;\n            }\n        }\n        max_arr[i][2] = max_pos;\n    }\n  \
    \  for i in 0..k {\n        let mut max_num = max_arr[i][0];\n        let mut\
    \ max_pos = 0;\n        for j in 0..k {\n            if max_arr[j][0] > max_num\
    \ {\n                max_num = max_arr[j][0];\n                max_pos = j;\n\
    \            }\n        }\n        max_arr[i][2] = max_pos;\n    }\n    for i\
    \ in 0..k {\n        let mut max_num = max_arr[i][0];\n        let mut max_pos\
    \ = 0;\n        for j in 0..k {\n            if max_arr[j][0] > max_num {\n  \
    \              max_num = max_arr[j][0];\n                max_pos = j;\n      \
    \      }\n        }\n        max_arr[i][2] = max_pos;\n    }\n    for i in 0..k\
    \ {\n        let mut max_num = max_arr[i][0];\n", "    let mut max_arr = vec![vec![-1000,\
    \ 1000]];\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().max().unwrap();\n\
    \    }\n    for i in 0..k {\n        for j in 0..k {\n            if arr[j] >\
    \ max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n            }\n  \
    \      }\n    }\n    for i in 0..k {\n        for j in 0..k {\n            if\
    \ arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n        \
    \    }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n     \
    \       if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[j] > max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[j] > max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[j] > max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[j] > max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[j] > max_arr[i][j] {\n                max_arr[i][j] = arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr[i] > max_arr[i][j] {\n                max_arr[i][j] = arr[i];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        for j in 0..k {\n\
    \            if arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in\
    \ i+1..k {\n            if max_arr[i] > max_arr[j] {\n                max_arr[i]\
    \ = max_arr[j];\n            }\n        }\n    }\n    for i in 0..k {\n      \
    \  if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n        }\n  \
    \  }\n    for i in 0..k {\n        if max_arr[i] == arr[i] {\n            max_arr[i]\
    \ = arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i]\
    \ {\n            max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n\
    \        if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n       \
    \ }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n         \
    \   max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i]\
    \ != arr[i] {\n            max_arr[i] = arr[i];\n        }\n    }\n    for i in\
    \ 0..k {\n        if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n  \
    \          max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n     \
    \   if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n        }\n \
    \   }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n            max_arr[i]\
    \ = arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i]\
    \ {\n            max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n\
    \        if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n       \
    \ }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n         \
    \   max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i]\
    \ != arr[i] {\n            max_arr[i] = arr[i];\n        }\n    }\n    for i in\
    \ 0..k {\n        if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n\
    \        }\n    }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n  \
    \          max_arr[i] = arr[i];\n        }\n    }\n    for i in 0..k {\n     \
    \   if max_arr[i] != arr[i] {\n            max_arr[i] = arr[i];\n        }\n \
    \   }\n    for i in 0..k {\n        if max_arr[i] != arr[i] {\n            max_arr[i]\
    \ = arr[i];\n        }", "    let mut max_arr = vec![vec![-1000, 1000]];\n   \
    \ let mut max_k = k;\n    let mut i = 0;\n    while i < arr.len() {\n        if\
    \ arr[i] > max_arr[0][0] || (arr[i] > max_arr[0][1] &&\n            arr[i] > max_arr[1][0])\
    \ {\n            max_arr[0] = vec![arr[i], max_arr[0]];\n            max_k = 1;\n\
    \        } else if arr[i] > max_arr[1][0] || (arr[i] > max_arr[1][1] &&\n    \
    \        arr[i] > max_arr[2][0]) {\n            max_arr[1] = vec![arr[i], max_arr[1]];\n\
    \            max_k = 2;\n        } else {\n            max_arr[2] = vec![arr[i],\
    \ max_arr[2]];\n        }\n        i += 1;\n    }\n    max_arr.sort_by_key(|x|\
    \ x.0);\n    vec![max_arr[0][0..max_k]]", "    let mut max_arr = vec![vec![0];\
    \ k];\n    for i in 0..k {\n        max_arr[i] = arr[i];\n    }\n    for i in\
    \ 0..k {\n        for j in i+1..k {\n            if max_arr[i] > max_arr[j] {\n\
    \                max_arr[i] = max_arr[j];\n            }\n        }\n    }\n \
    \   for i in 0..k {\n        arr[i] = max_arr[i];\n    }\n    arr", "    let mut\
    \ max_arr = vec![vec![-1000, 1000]];\n    let mut max_k = k;\n    let mut max_idx\
    \ = -1;\n    for i in 0..arr.len() {\n        if max_k == 0 {\n            break;\n\
    \        }\n        if arr[i] > max_arr[0][k] {\n            max_arr[0] = vec![arr[i]];\n\
    \            max_k--;\n        } else {\n            max_arr[0].push(arr[i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if max_k == 0 {\n            break;\n\
    \        }\n        if max_arr[0][i] > max_arr[1][k] {\n            max_arr[1]\
    \ = vec![max_arr[0][i]];\n            max_k--;\n        } else {\n           \
    \ max_arr[1].push(max_arr[0][i]);\n        }\n    }\n    for i in 0..k {\n   \
    \     if max_k == 0 {\n            break;\n        }\n        if max_arr[0][i]\
    \ > max_arr[1][k] {\n            max_arr[1] = vec![max_arr[0][i]];\n         \
    \   max_k--;\n        } else {\n            max_arr[1].push(max_arr[0][i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if max_k == 0 {\n            break;\n\
    \        }\n        if max_arr[0][i] > max_arr[1][k] {\n            max_arr[1]\
    \ = vec![max_arr[0][i]];\n            max_k--;\n        } else {\n           \
    \ max_arr[1].push(max_arr[0][i]);\n        }\n    }\n    for i in 0..k {\n   \
    \     if max_k == 0 {\n            break;\n        }\n        if max_arr[0][i]\
    \ > max_arr[1][k] {\n            max_arr[1] = vec![max_arr[0][i]];\n         \
    \   max_k--;\n        } else {\n            max_arr[1].push(max_arr[0][i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if max_k == 0 {\n            break;\n\
    \        }\n        if max_arr[0][i] > max_arr[1][k] {\n            max_arr[1]\
    \ = vec![max_arr[0][i]];\n            max_k--;\n        } else {\n           \
    \ max_arr[1].push(max_arr[0][i]);\n        }\n    }\n    for i in 0..k {\n   \
    \     if max_k == 0 {\n            break;\n        }\n        if max_arr[0][i]\
    \ > max_arr[1][k] {\n            max_arr[1] = vec![max_arr[0][i]];\n         \
    \   max_k--;\n        } else {\n            max_arr[1].push(max_arr[0][i]);\n\
    \        }\n    }\n    for i in 0..k {\n        if max_k == 0 {\n            break;\n\
    \        }\n        if max_arr[0][i] > max_arr[1][k] {\n            max_arr[1]\
    \ = vec![max_arr[0][i]];\n            max_k--;\n        } else {\n           \
    \ max_arr[1].push(max_arr[0][i]);\n        }\n    }\n    for i in 0..k {\n   \
    \     if max_k == 0 {\n            break;\n        }\n        if max_arr[0][i]\
    \ > max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in i+1..k\
    \ {\n            if max_arr[i] > max_arr[j] {\n                max_arr[i] = max_arr[j];\n\
    \            }\n        }\n    }\n    for i in 0..k {\n        arr[i] = max_arr[i];\n\
    \    }\n    arr", "    let mut max_arr = vec![vec![]; k];\n    for i in 0..k {\n\
    \        max_arr[i] = vec![];\n    }\n    for i in 0..arr.len() {\n        let\
    \ mut max_i = i;\n        for j in 0..k {\n            if arr[i] > max_arr[j][max_i]\
    \ {\n                max_i = j;\n            }\n        }\n        max_arr[k -\
    \ 1].push(arr[i]);\n    }\n    max_arr", "    let mut max_arr = vec![vec![0];\
    \ k]\n    for i in 0..k {\n        max_arr[i] = arr[i]\n    }\n    for i in 0..k\
    \ {\n        let mut max_val = max_arr[i]\n        let mut max_pos = i\n     \
    \   for j in i+1..k {\n            if max_arr[j] > max_val {\n               \
    \ max_val = max_arr[j]\n                max_pos = j\n            }\n        }\n\
    \        max_arr[i] = max_val\n        max_arr[i] = max_pos\n    }\n    max_arr",
  "    let mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().max().unwrap();\n    }\n    for i in 0..k {\n        max_arr[i]\
    \ = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k {\n      \
    \  max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for i in 0..k\
    \ {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n    }\n    for\
    \ i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n  \
    \  }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().", "    let\
    \ mut max_arr = vec![vec![-1000, 1000]];\n    for i in 0..k {\n        max_arr[i]\
    \ = vec![];\n    }\n    for i in 0..arr.len() {\n        let mut max_i = i;\n\
    \        for j in 0..k {\n            if max_arr[j].len() > 0 && arr[i] > max_arr[j][0]\
    \ {\n                max_i = j;\n            }\n        }\n        max_arr[i].push(arr[i]);\n\
    \    }\n    for i in 0..k {\n        max_arr[i] = max_arr[i].iter().cloned().collect();\n\
    \    }\n    max_arr", "    let mut max_arr = vec![vec![0]; k];\n    for i in 0..k\
    \ {\n        max_arr[i] = arr[i];\n    }\n    for i in 0..k {\n        for j in\
    \ i+1..k {\n            if max_arr[i] > max_arr[j] {\n                max_arr[i]\
    \ = max_arr[j];\n            }\n        }\n    }\n    for i in 0..k {\n      \
    \  if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i] * -1;\n        }\n\
    \    }\n    for i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i]\
    \ = max_arr[i] + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i]\
    \ != 0 {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n  \
    \  for i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr[i] = max_arr[i] + arr[i];\n        }\n    }\n    for\
    \ i in 0..k {\n        if max_arr[i] != 0 {\n            max_arr[i] = max_arr[i]\
    \ + arr[i];\n        }\n    }\n    for i in 0..k {\n        if max_arr[i] != 0\
    \ {\n            max_arr"]
stop_tokens:
- "\n}"

name: HumanEval_141_file_name_check
language: rust
prompt: "/// Create a function which takes a string representing a file's name, and\
  \ returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// file_name_check(\"\
  example.txt\") # => 'Yes'\n/// file_name_check(\"1example.dll\") # => 'No' (the\
  \ name should start with a latin alphapet letter)\nfn file_name_check(file_name:\
  \ String) -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = file_name_check;\n    assert_eq!(candidate(String::from(\"\
  example.txt\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"\
  1example.dll\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  s1sdf3.asd\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  K.dll\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"MY16FILE3.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"His12FILE94.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_Y.txt\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"?aREYA.exe\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"/this_is_valid.dll\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.wow\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txtexe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"#this2_i4s_5valid.ten\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"@this1_is6_valid.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_12valid.6exe4.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"all.exe.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_No.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"Is3youfault.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"no_one#knows.dll\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"1I563_Yes3.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_Yes3.txtt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final..txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final132\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_f4indsartal132.\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\".txt\")), String::from(\"\
  No\"));\n    assert_eq!(candidate(String::from(\"s.\")), String::from(\"No\"));\n\
  }\n"
completions: ["    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] == '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] == '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' || c != 'z' ||\
    \ c != 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase() || c != 'a' || c != 'z' ||\
    \ c != 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A' || c != 'Z') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z' || c != 'A' || c != 'Z') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase() || c != 'A' || c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase() || c !=\
    \ 'a' || c != 'z' || c != 'A' || c != 'Z') {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A'\
    \ || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z' || c != 'A' || c != 'Z') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| ",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    while dot_pos_start != dot_pos_end {\n        if dot_pos_start == 0 {\n \
    \           dot_pos_start_letter = true;\n        }\n        if dot_pos_end ==\
    \ file_name.len() {\n            dot_pos_end_letter = true;\n        }\n     \
    \   if dot_pos_start_letter && dot_pos_end_letter {\n            break;\n    \
    \    }\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start++;\n            dot_pos_start_letter = true;\n\
    \        }\n        if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' {\n            dot_pos_end--;\n            dot_pos_end_letter = true;\n\
    \        }\n        dot_pos_start++;\n        dot_pos_end--;\n    }\n    if dot_pos_start_letter\
    \ && dot_pos_end_letter {\n        return \"No\";\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return \"No\";\n    }\n    if dot_pos_start == 0 ||\
    \ dot_pos_end == file_name.len() {\n        return \"No\";\n    }\n    if dot_pos_start\
    \ > dot_pos_end {\n        return \"No\";\n    }\n    if dot_pos_start < 3 ||\
    \ dot_pos_end > file_name.len() {\n        return \"No\";\n    }\n    if file_name[dot_pos_start\
    \ - 1] >= '0' && file_name[dot_pos_start - 1] <= '9' {\n        return \"No\"\
    ;\n    }\n    if file_name[dot_pos_end - 1] >= '0' && file_name[dot_pos_end -\
    \ 1] <= '9' {\n        return \"No\";\n    }\n    if file_name[dot_pos_start -\
    \ 1] != '.' || file_name[dot_pos_end - 1] != '.' {\n        return \"No\";\n \
    \   }\n    if file_name[dot_pos_start - 1] != '.' {\n        return \"No\";\n\
    \    }\n    if file_name[dot_pos_end - 1] != '.' {\n        return \"No\";\n \
    \   }\n    if file_name[dot_pos_start - 1] != file_name[dot_pos_end - 1] {\n \
    \       return \"No\";\n    }\n    return \"Yes\";", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return \"No\";\n    }\n    \n    if file_name.len()\
    \ < 3 {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 1] !=\
    \ char::from_u32(97).unwrap() {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos\
    \ - 2] != char::from_u32(65).unwrap() {\n        return \"No\";\n    }\n    \n\
    \    if file_name[dot_pos - 3] != char::from_u32(97).unwrap() {\n        return\
    \ \"No\";\n    }\n    \n    if file_name[dot_pos - 4] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 5] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 6] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 7] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 8] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 9] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 10] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 11] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 12] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 13] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 14] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 15] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 16] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 17] != char::from_u32(97).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 18] != char::from_u32(65).unwrap()\
    \ {\n        return \"No\";\n    }\n    \n    if file_name[dot_pos - 19] != char",
  "    let mut file_name = file_name.to_string();\n    if file_name.len() > 3 {\n\
    \        file_name.truncate(3);\n    }\n    if file_name.contains(\".\") {\n \
    \       file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        file_name.truncate(0);\n    }\n\
    \    if file_name.ends_with(\"txt\") || file_name.ends_with(\"exe\") || file_name.ends_with(\"\
    dll\") {\n        file_name.truncate(file_name.len());\n    }\n    file_name",
  "    let mut file_name_chars = file_name.chars();\n    let mut dot_pos = file_name_chars.find_first_of('.');\n\
    \    let mut dot_pos_end = file_name_chars.find_first_not_of('.', dot_pos);\n\
    \    let mut dot_pos_start = dot_pos;\n    let mut dot_pos_start_end = dot_pos_end;\n\
    \    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_invalid\
    \ = false;\n    let mut dot_pos_start_valid = false;\n    let mut dot_pos_start_invalid\
    \ = false;\n    let mut dot_pos_end_valid = false;\n    let mut dot_pos_end_invalid\
    \ = false;\n    let mut dot_pos_valid = false;\n    let mut dot_pos_invalid =\
    \ false;\n    let mut dot_pos_start_end_valid = false;\n    let mu", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ \n    if file_name.len() < 3 {\n        return String::from(\"No\");\n    }\n\
    \    \n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != 'a' && c != 'z') {\n        return String::from(\"No\");\n    }\n  \
    \  \n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'A' && c !=\
    \ 'Z') {\n        return String::from(\"No\");\n    }\n    \n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0' && c != '9') {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.chars().any(|c| !c.is_ascii_letter() ||\
    \ c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9') {\n  \
    \      return String::from(\"No\");\n    }\n    \n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.') {\n        return String::from(\"No\");\n    }\n\
    \    \n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c\
    \ != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt'\
    \ || c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n\
    \    \n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c\
    \ != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt'\
    \ || c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n\
    \    \n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c\
    \ != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt'\
    \ || c != 'exe' || c != 'dll') {\n        return String::from(\"No\");", "   \
    \ let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8\
    \ = file_name.find('.')\n    if dot_pos_8 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 ==\
    \ String::npos {\n        return String::from(\"", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if\
    \ dot_pos_4 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n    if\
    \ dot_pos_9 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_10\
    \ = file_name.find('.')\n    if dot_pos_10 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11\
    \ == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_14 = file_name.find('.')\n   \
    \ if dot_pos_14 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_16 = file_name.find('.')\n   \
    \ if dot_pos_16 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_17 = file_name.find('.')\n    if dot_pos_17 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_18 = file_name.find('.')\n   \
    \ if dot_pos_18 == String::npos {\n        return \"No\";", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut dot_index = file_name_chars.find_first_of(\"\
    .\");\n    let mut dot_chars = file_name_chars.substring_from(dot_index);\n  \
    \  let mut dot_chars_len = dot_chars.len();\n    let mut dot_chars_char = dot_chars.chars();\n\
    \    let mut dot_chars_char_len = dot_chars_char.len();\n    let mut dot_chars_char_char\
    \ = dot_chars_char.chars();\n    let mut dot_chars_char_char_len = dot_chars_char_char.len();\n\
    \    let mut dot_chars_char_char_char = dot_chars_char_char.chars();\n    let\
    \ mut dot_chars_char_char_char_len = dot_chars_char_char_char.len();\n    let\
    \ mut dot_chars_char_char_char_char = dot_chars_char_char_char.chars();\n    let\
    \ mut dot_chars_char_char_char_char_len = dot_chars_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char = dot_chars_char_char_char_char.chars();\n\
    \    let mut dot_chars_char_char_char_char_char_len = dot_chars_char_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char_char = dot_chars_char_char_char_char_char.chars();\n\
    \    let mut dot_chars_char_char_char_char_char_char_len = dot_chars_char_char_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char = dot_chars_char_char_char_char_char_char_char.chars();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_len = dot_chars_char_char_char_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_char = dot_chars_char_char_char_char_char_char_char_char.chars();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_char_len = dot_chars_char_char_char_char_char_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_char_char = dot_chars_char_char_char_char_char_char_char_char_char_char.chars();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_char_char_len = dot_chars_char_char_char_char_char_char_char_char_char_char.len();\n\
    \    let mut dot_chars_char_char_char_char_char_char_char_char_char_char = dot_chars_char_char_char_char_char_char_char_char_char_char_char.chars();\n\
    \    let mut ", "    let mut file_name_chars = file_name.chars();\n    let mut\
    \ dot_pos = file_name_chars.next().unwrap().unwrap();\n    let mut dot_pos_next\
    \ = dot_pos.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n   \
    \ let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = dot_pos_next.unwrap();\n    let mut dot_pos_next =\
    \ dot_pos_next.unwrap();\n    let mut dot_pos_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next = ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_start_letter\
    \ = dot_pos_start;\n        if file_name[dot_pos_start_letter] >= 'a' && file_name[dot_pos_start_letter]\
    \ <= 'z' {\n            dot_pos_start_letter += 1;\n        }\n        if file_name[dot_pos_start_letter]\
    \ >= 'A' && file_name[dot_pos_start_letter] <= 'Z' {\n            dot_pos_start_letter\
    \ += 1;\n        }\n        if dot_pos_start_letter > dot_pos_end {\n        \
    \    return String::from(\"No\");\n        }\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ == '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '1' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] == '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] == '1' {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_index == 0 {\n        return String::from(\"No\");\n    }\n \
    \   if dot_index > 0 {\n        let mut first_letter = file_name[dot_index - 1\
    \ as usize].to_string();\n        if first_letter != \"a\" && first_letter !=\
    \ \"A\" && first_letter != \"b\" && first_letter != \"B\" && first_letter != \"\
    c\" && first_letter != \"C\" && first_letter != \"d\" && first_letter != \"D\"\
    \ && first_letter != \"e\" && first_letter != \"E\" && first_letter != \"f\" &&\
    \ first_letter != \"F\" && first_letter != \"g\" && first_letter != \"G\" && first_letter\
    \ != \"h\" && first_letter != \"H\" && first_letter != \"i\" && first_letter !=\
    \ \"I\" && first_letter != \"j\" && first_letter != \"J\" && first_letter != \"\
    k\" && first_letter != \"K\" && first_letter != \"l\" && first_letter != \"L\"\
    \ && first_letter != \"m\" && first_letter != \"M\" && first_letter != \"n\" &&\
    \ first_letter != \"N\" && first_letter != \"o\" && first_letter != \"O\" && first_letter\
    \ != \"p\" && first_letter != \"P\" && first_letter != \"q\" && first_letter !=\
    \ \"Q\" && first_letter != \"r\" && first_letter != \"R\" && first_letter != \"\
    s\" && first_letter != \"S\" && first_letter != \"t\" && first_letter != \"T\"\
    \ && first_letter != \"u\" && first_letter != \"U\" && first_letter != \"v\" &&\
    \ first_letter != \"V\" && first_letter != \"w\" && first_letter != \"W\" && first_letter\
    \ != \"x\" && first_letter != \"X\" && first_letter != \"y\" && first_letter !=\
    \ \"Y\" && first_letter != \"z\" && first_letter != \"Z\" {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    return String::from(\"Yes\");",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = true;\n    let mut dot_pos_end_letter = true;\n \
    \   while dot_pos_start < dot_pos_end {\n        let mut dot_pos_start_letter\
    \ = dot_pos_start.is_ascii_letter();\n        let mut dot_pos_end_letter = dot_pos_end.is_ascii_letter();\n\
    \        if dot_pos_start_letter && dot_pos_end_letter {\n            if dot_pos_start\
    \ == dot_pos_end {\n                return \"No\";\n            }\n          \
    \  if dot_pos_start == dot_pos_start + 1 {\n                return \"No\";\n \
    \           }\n            if dot_pos_start == dot_pos_end - 1 {\n           \
    \     return \"No\";\n            }\n            if dot_pos_start == dot_pos_start\
    \ + 2 {\n                return \"No\";\n            }\n            if dot_pos_start\
    \ == dot_pos_end - 2 {\n                return \"No\";\n            }\n      \
    \      if dot_pos_start == dot_pos_start + 3 {\n                return \"No\"\
    ;\n            }\n            if dot_pos_start == dot_pos_end - 3 {\n        \
    \        return \"No\";\n            }\n            if dot_pos_start == dot_pos_start\
    \ + 4 {\n                return \"No\";\n            }\n            if dot_pos_start\
    \ == dot_pos_end - 4 {\n                return \"No\";\n            }\n      \
    \      if dot_pos_start == dot_pos_start + 5 {\n                return \"No\"\
    ;\n            }\n            if dot_pos_start == dot_pos_end - 5 {\n        \
    \        return \"No\";\n            }\n            if dot_pos_start == dot_pos_start\
    \ + 6 {\n                return \"No\";\n            }\n            if dot_pos_start\
    \ == dot_pos_end - 6 {\n                return \"No\";\n            }\n      \
    \      if dot_pos_start == dot_pos_start + 7 {\n                return \"No\"\
    ;\n            }\n            if dot_pos_start == dot_pos_end - 7 {\n        \
    \        return \"No\";\n            }\n            if dot_pos_start == dot_pos_start\
    \ + 8 {\n                return \"No\";\n            }\n            if dot_pos_start\
    \ == dot_pos_end - 8 {\n                return \"No\";\n            }\n      \
    \      if dot_pos_start == dot_pos_start + 9 {\n                return \"No\"\
    ;\n            }\n            if dot_pos_start == dot_pos_end - 9 {\n        \
    \        return \"No\";\n            }\n            if dot_pos_start == dot_pos_start\
    \ + 10 {\n                return \"No\";\n            }\n            if dot_pos_start\
    \ == dot_pos_end - 10 {\n                return \"No\";\n            }\n     \
    \       if dot_pos_start == dot_pos_start + 11 {\n                return \"No\"\
    ;", "    let mut counter = 0;\n    let mut is_valid = true;\n    let mut first_letter:\
    \ char;\n    let mut dot_index: usize;\n    let mut dot_count: usize;\n    let\
    \ mut dot_after_dot: String;\n    for c in file_name.chars() {\n        if counter\
    \ > 3 {\n            is_valid = false;\n            break;\n        }\n      \
    \  if c < 'a' || c > 'z' {\n            is_valid = false;\n            break;\n\
    \        }\n        if c != first_letter {\n            is_valid = false;\n  \
    \          break;\n        }\n        counter += 1;\n    }\n    if !is_valid {\n\
    \        return \"No\";\n    }\n    dot_index = file_name.find('.')\n    if dot_index\
    \ == -1 {\n        return \"No\";\n    }\n    dot_count = file_name.len();\n \
    \   dot_after_dot = file_name[dot_index..];\n    if dot_count != 3 {\n       \
    \ return \"No\";\n    }\n    if dot_after_dot != \"txt\" && dot_after_dot != \"\
    exe\" && dot_after_dot != \"dll\" {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";", "    let mut file_name = file_name.to_string();\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.len() < 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_whitespace()) {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_control()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graph()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_newline())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_horizontal_tab()) {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_vertical_tab()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_tab())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_formfeed()) {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.chars().any(|c| !c.is_ascii_return()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_newline()) {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_horizontal_tab())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|",
  "    let mut counter = 0;\n    let mut is_valid = false;\n    for c in file_name.chars()\
    \ {\n        if c < '0' || c > '9' {\n            counter = counter + 1;\n   \
    \     } else {\n            counter = 0;\n        }\n        if counter > 3 {\n\
    \            is_valid = false;\n            break;\n        }\n        if c !=\
    \ '.' {\n            is_valid = false;\n            break;\n        }\n      \
    \  if file_name.chars().nth(1).unwrap() != c {\n            is_valid = false;\n\
    \            break;\n        }\n        if file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'a' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'b' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'c' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'd' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'e' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'f' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'g' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'h' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'i' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'j' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'k' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'l' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'm' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'n' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'o' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'p' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'q' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'r' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 's' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 't' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'u' &&\n            file_name.chars().nth(1).unwrap().to_ascii_lowercase()\
    \ != 'v' &&", "    let mut file_name : String = \"\";\n    let mut dot_count :\
    \ usize = 0;\n    let mut first_letter : char;\n    let mut dot_letter : char;\n\
    \    let mut dot_dot_letter : char;\n    let mut dot_dot_dot_letter : char;\n\
    \    let mut dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n   \
    \ let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    while dot_pos_2 != String::npos {\n        if dot_pos_2 > dot_pos {\n   \
    \         return String::from(\"No\");\n        }\n        if file_name[dot_pos_2]\
    \ != 'a' && file_name[dot_pos_2] != 'A' && file_name[dot_pos_2] != 'b' && file_name[dot_pos_2]\
    \ != 'B' && file_name[dot_pos_2] != 'c' && file_name[dot_pos_2] != 'C' && file_name[dot_pos_2]\
    \ != 'd' && file_name[dot_pos_2] != 'D' && file_name[dot_pos_2] != 'e' && file_name[dot_pos_2]\
    \ != 'E' && file_name[dot_pos_2] != 'f' && file_name[dot_pos_2] != 'F' && file_name[dot_pos_2]\
    \ != 'g' && file_name[dot_pos_2] != 'G' && file_name[dot_pos_2] != 'h' && file_name[dot_pos_2]\
    \ != 'H' && file_name[dot_pos_2] != 'i' && file_name[dot_pos_2] != 'I' && file_name[dot_pos_2]\
    \ != 'j' && file_name[dot_pos_2] != 'J' && file_name[dot_pos_2] != 'k' && file_name[dot_pos_2]\
    \ != 'K' && file_name[dot_pos_2] != 'l' && file_name[dot_pos_2] != 'L' && file_name[dot_pos_2]\
    \ != 'm' && file_name[dot_pos_2] != 'M' && file_name[dot_pos_2] != 'n' && file_name[dot_pos_2]\
    \ != 'N' && file_name[dot_pos_2] != 'o' && file_name[dot_pos_2] != 'O' && file_name[dot_pos_2]\
    \ != 'p' && file_name[dot_pos_2] != 'P' && file_name[dot_pos_2] != 'q' && file_name[dot_pos_2]\
    \ != 'Q' && file_name[dot_pos_2] != 'r' && file_name[dot_pos_2] != 'R' && file_name[dot_pos_2]\
    \ != 's' && file_name[dot_pos_2] != 'S' && file_name[dot_pos_2] != 't' && file_name[dot_pos_2]\
    \ != 'T' && file_name[dot_pos_2] != 'u' && file_name[dot_pos_2] != 'U' && file_name[dot_pos_2]\
    \ != 'v' && file_name[dot_pos_2] != 'V' && file_name[dot_pos_2] != 'w' && file_name[dot_pos_2]\
    \ != 'W' && file_name[dot_pos_2] != 'x' && file_name[dot_pos_2] != 'X' && file_name[dot_pos_2]\
    \ != 'y' && file_name[dot_pos_2] != 'Y' && file_name[dot_pos_2] != 'z' && file_name[dot_pos_2]\
    \ != 'Z' {\n            return String::", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\"\n    }\n    if file_name[dot_index - 1] != '.' {\n\
    \        return \"No\"\n    }\n    let mut first_letter = file_name[dot_index\
    \ - 2];\n    if first_letter != 'a' && first_letter != 'A' {\n        return \"\
    No\"\n    }\n    if file_name[dot_index - 3] != '.' {\n        return \"No\"\n\
    \    }\n    if file_name[dot_index - 4] != 'txt' && file_name[dot_index - 4] !=\
    \ 'exe' && file_name[dot_index - 4] != 'dll' {\n        return \"No\"\n    }\n\
    \    return \"Yes\"", "    if file_name.len() > 3 {\n        return \"No\";\n\
    \    }\n    if file_name.len() == 0 {\n        return \"No\";\n    }\n    if file_name.len()\
    \ == 1 {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_ascii_digit()) {\n\
    \        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_ascii_digit() ||\
    \ c == '.') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_ascii_digit() || c == '.' || c == '_') {\n        return \"No\";\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_ascii_digit() || c == '.' || c == '_' || c\
    \ == '-') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_ascii_digit() ||\
    \ c == '.' || c == '_' || c == '-' || c == '.' || c == '-') {\n        return\
    \ \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_ascii_digit() || c == '.' || c == '_' || c\
    \ == '-' || c == '.' || c == '-' || c == '-') {\n        return \"No\";\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_ascii_digit() || c == '.' || c == '_' || c\
    \ == '-' || c == '.' || c == '-' || c == '-' || c == '-') {\n        return \"\
    No\";\n    }\n    if file_name.", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.len() == 3 {\n \
    \       if file_name[0] < 'a' || file_name[0] > 'z' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != 'txt' && file_name[dot_pos - 1] != 'exe' && file_name[dot_pos - 1] !=\
    \ 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n   \
    \ while dot_pos_end < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n\
    \        dot_pos_start += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] == '.' {\n            break;\n\
    \        }\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start < dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_str = file_name.chars().take(dot_pos).collect::<Vec<_>>();\n\
    \    let mut dot_pos_str = dot_pos_str.iter().filter(|&x| x >= 'a' && x <= 'z').collect::<Vec<_>>();\n\
    \    let mut dot_pos_str = dot_pos_str.iter().filter(|&x| x >= 'A' && x <= 'Z').collect::<Vec<_>>();\n\
    \    if dot_pos_str.len() != 1 || dot_pos_str[0] != 'a' || dot_pos_str[0] != 'A'\
    \ {\n        return \"No\";\n    }\n    \n    let mut dot_pos_str = file_name.chars().take(dot_pos).collect::<Vec<_>>();\n\
    \    let mut dot_pos_str = dot_pos_str.iter().filter(|&x| x >= '0' && x <= '9').collect::<Vec<_>>();\n\
    \    if dot_pos_str.len() != 1 || dot_pos_str[0] != '0' || dot_pos_str[0] != '9'\
    \ {\n        return \"No\";\n    }\n    \n    if dot_pos_str[0] == dot_pos_str[1]\
    \ {\n        return \"No\";\n    }\n    \n    if dot_pos_str[0] < dot_pos_str[1]\
    \ {\n        return \"No\";\n    }\n    \n    if dot_pos_str[0] > dot_pos_str[1]\
    \ {\n        return \"Yes\";\n    }\n    \n    return \"Yes\";", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if\
    \ dot_pos_3 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_2\
    \ > dot_pos_3 {\n        return \"No\";\n    }\n    if dot_pos > dot_pos_2 {\n\
    \        return \"No\";\n    }\n    if file_name[dot_pos - 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos - 2] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos - 3] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_2 - 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_2 - 2] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_2 - 3] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 - 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::from_char('0').unwrap()\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_pos_3 + 1] != String::",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8\
    \ = file_name.find('.')\n    if dot_pos_8 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 ==\
    \ String::npos {\n        return String::from(\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() < 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2] != String::from('0')\
    \ && file_name[dot_pos - 2] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 3] != String::from('0') && file_name[dot_pos\
    \ - 3] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 4] != String::from('0') && file_name[dot_pos - 4] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 5] != String::from('0') && file_name[dot_pos - 5] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 6] !=\
    \ String::from('0') && file_name[dot_pos - 6] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 7] != String::from('0')\
    \ && file_name[dot_pos - 7] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 8] != String::from('0') && file_name[dot_pos\
    \ - 8] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 9] != String::from('0') && file_name[dot_pos - 9] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 10] != String::from('0') && file_name[dot_pos - 10] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 11] !=\
    \ String::from('0') && file_name[dot_pos - 11] != String::from('9') {\n      \
    \  return String::from(\"No\");\n    }\n    if file_name[dot_pos - 12] != String::from('0')\
    \ && file_name[dot_pos - 12] != String::from('", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\";\n    }\n    if file_name.len() > 3 {\n        return \"\
    No\";\n    }\n    if file_name.len() == 3 {\n        if file_name[0] < 'a' ||\
    \ file_name[0] > 'z' {\n            return \"No\";\n        }\n        if file_name[1]\
    \ < 'a' || file_name[1] > 'z' {\n            return \"No\";\n        }\n    }\n\
    \    if dot_pos == 0 {\n        return \"No\";\n    }\n    if dot_pos == file_name.len()\
    \ - 1 {\n        if file_name[dot_pos] != 'txt' || file_name[dot_pos] != 'exe'\
    \ || file_name[dot_pos] != 'dll' {\n            return \"No\";\n        }\n  \
    \  }\n    return \"Yes\";", "    let mut file_name_chars = file_name.to_chars();\n\
    \    let mut dot_index = file_name_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = file_name_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).collect::<Vec<_>>();\n\
    \    let mut dot_index = dot_chars.iter().position(|&c| c == '.').unwrap();\n\
    \    let mut dot_chars = dot_chars.iter().take(dot_index).", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos_end != String::npos && dot_pos_end > dot_pos {\n        dot_pos_end\
    \ = dot_pos_end - 1;\n    }\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos;\n    let\
    \ mut dot_pos_end = dot_pos_end;\n    while dot_pos_end != String::npos && dot_pos_end\
    \ > dot_pos_start {\n        dot_pos_end = dot_pos_end - 1;\n    }\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    while dot_pos_end != String::npos && dot_pos_end > dot_pos_start {\n    \
    \    dot_pos_end = dot_pos_end - 1;\n    }\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end;\n    while dot_pos_end\
    \ != String::npos && dot_pos_end > dot_pos_start {\n        dot_pos_end = dot_pos_end\
    \ - 1;\n    }\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    while dot_pos_end != String::npos && dot_pos_end > dot_pos_start\
    \ {\n        dot_pos_end = dot_pos_end - 1;\n    }\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_end;\n    while dot_pos_end\
    \ != String::npos && dot_pos_end > dot_pos_start {\n        dot_pos_end = dot_pos_end\
    \ - 1;\n    }\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    while dot_pos_end != String::npos && dot_pos_end > dot_pos_start\
    \ {\n        dot_pos_", "    let mut file_name_chars = file_name.chars();\n  \
    \  let mut dot_pos = file_name_chars.next().unwrap().unwrap();\n    let mut dot_pos_end\
    \ = dot_pos.unwrap();\n    let mut dot_pos_start = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = ", " \
    \   let mut counter = 0;\n    let mut dot_counter = 0;\n    let mut first_letter_counter\
    \ = 0;\n    let mut last_letter_counter = 0;\n    let mut first_letter_counter2\
    \ = 0;\n    let mut last_letter_counter2 = 0;\n    let mut first_letter_counter3\
    \ = 0;\n    let mut last_letter_counter3 = 0;\n    let mut first_letter_counter4\
    \ = 0;\n    let mut last_letter_counter4 = 0;\n    let mut first_letter_counter5\
    \ = 0;\n    let mut last_letter_counter5 = 0;\n    let mut first_letter_counter6\
    \ = 0;\n    let mut last_letter_counter6 = 0;\n    let mut first_letter_counter7\
    \ = 0;\n    let mut last_letter_counter7 = 0;\n    let mut first_letter_counter8\
    \ = 0;\n    let mut last_letter_counter8 = 0;\n    let mut first_letter_counter9\
    \ = 0;\n    let mut last_letter_counter9 = 0;\n    let mut first_letter_counter10\
    \ = 0;\n    let mut last_letter_counter10 = 0;\n    let mut first_letter_counter11\
    \ = 0;\n    let mut last_letter_counter11 = 0;\n    let mut first_letter_counter12\
    \ = 0;\n    let mut last_letter_counter12 = 0;\n    let mut first_letter_counter13\
    \ = 0;\n    let mut last_letter_counter13 = 0;\n    let mut first_letter_counter14\
    \ = 0;\n    let mut last_letter_counter14 = 0;\n    let mut first_letter_counter15\
    \ = 0;\n    let mut last_letter_counter15 = 0;\n    let mut first_letter_counter16\
    \ = 0;\n    let mut last_letter_counter16 = 0;\n    let mut first_letter_counter17\
    \ = 0;\n    let mut last_letter_counter17 = 0;\n    let mut first_letter_counter18\
    \ = 0;\n    let mut last_letter_counter18 = 0;\n    let mut first_letter_counter19\
    \ = 0;\n    let mut last_letter_counter19 = 0;\n    let mut first_letter_counter20\
    \ = 0;\n    let mut last_letter_counter20 = 0;\n    let mut first_letter_counter21\
    \ = 0;\n    let mut last_letter_counter21 = 0;\n    let mut first_letter_counter22\
    \ = 0;\n    let mut last_letter_counter22 = 0;\n    let mut first_letter_counter23\
    \ = 0;\n    let mut last_letter_counter23 = 0;\n    let mut first_letter_counter24\
    \ = 0;\n    let mut last_letter_counter24 = 0;\n    let mut first_letter_counter25\
    \ = 0;\n    let mut last_letter_counter25 = 0;\n    let mut first_letter_counter26\
    \ = 0;\n    let mut last_letter_counter26 = 0;\n    let mut first_letter_counter27\
    \ = 0;\n    let mut last_letter_counter27 = 0;\n    let mut first_letter_counter28\
    \ = 0;\n    let mut last_letter_counter28 = 0;\n    let mut first_letter_", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n    \n    let mut dot_pos = file_name.find('.')\n \
    \   if dot_pos == String::npos { \n        return \"No\";\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return \"No\";\n    }\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != String::from('0')\
    \ && file_name[dot_pos - 1] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos == file_name.len() - 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] != String::from('.') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos - 2] != String::from('a'..'z')\
    \ && file_name[dot_pos - 2] != String::from('A'..'Z') {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos == 0 {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos - 2] != String::from('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] != String::from('a'..'z') && file_name[dot_pos\
    \ - 1] != String::from('A'..'Z') {\n        return String::from(\"No\");\n   \
    \ }\n    if dot_pos == file_name.len() - 1 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] != String::from('.') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != String::from('a'..'z')\
    \ && file_name[dot_pos - 1] != String::from('A'..'Z') {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos == file_name.len() - 2 {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos - 2] != String::from('txt'..'exe'..'dll')\
    \ {\n        return String::from(\"No\");\n    }\n    return String::from(\"Yes\"\
    );", "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.len() == 3 {\n        if file_name[0] < 'a' || file_name[0] >\
    \ 'z' {\n            return String::from(\"No\");\n        }\n        if file_name[1]\
    \ < 'a' || file_name[1] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n    }\n    if dot_pos == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos] != 'txt'\
    \ && file_name[dot_pos] != 'exe' && file_name[dot_pos] != 'dll' {\n        return\
    \ String::from(\"No\");\n    }\n    return String::from(\"Yes\");", "    let mut\
    \ file_name = file_name.to_string();\n    if file_name.len() > 3 {\n        file_name.truncate(3);\n\
    \    }\n    if file_name.contains('.') {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_digit()) {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_digit()) {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_digit() || c == '.') {\n        file_name.truncate(0);\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_digit() || c == '.' || c == '_') {\n     \
    \   file_name.truncate(0);\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_digit() || c ==\
    \ '.' || c == '_' || c == '-') {\n        file_name.truncate(0);\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase() ||\
    \ c.is_ascii_uppercase() || c.is_digit() || c == '.' || c == '_' || c == '-' ||\
    \ c == '.' || c == '-') {\n        file_name.truncate(0);\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_digit() || c == '.' || c == '_' || c == '-' || c == '.' || c == '-' ||\
    \ c == '-' || c == '-') {\n        file_name.truncate(0);\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_digit() || c == '.' || c == '_' || c == '-' || c", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n", "    let mut first_char: char;\n    let mut last_char: char;\n    let\
    \ mut dot_count: usize;\n    let mut dot_pos: usize;\n    let mut dot_pos_2: usize;\n\
    \    let mut dot_pos_3: usize;\n    let mut dot_pos_4: usize;\n    let mut dot_pos_5:\
    \ usize;\n    let mut dot_pos_6: usize;\n    let mut dot_pos_7: usize;\n    let\
    \ mut dot_pos_8: usize;\n    let mut dot_pos_9: usize;\n    let mut dot_pos_10:\
    \ usize;\n    let mut dot_pos_11: usize;\n    let mut dot_pos_12: usize;\n   \
    \ let mut dot_pos_13: usize;\n    let mut dot_pos_14: usize;\n    let mut dot_pos_15:\
    \ usize;\n    let mut dot_pos_16: usize;\n    let mut dot_pos_17: usize;\n   \
    \ let mut dot_pos_18: usize;\n    let mut dot_pos_19: usize;\n    let mut dot_pos_20:\
    \ usize;\n    let mut dot_pos_21: usize;\n    let mut dot_pos_22: usize;\n   \
    \ let mut dot_pos_23: usize;\n    let mut dot_pos_24: usize;\n    let mut dot_pos_25:\
    \ usize;\n    let mut dot_pos_26: usize;\n    let mut dot_pos_27: usize;\n   \
    \ let mut dot_pos_28: usize;\n    let mut dot_pos_29: usize;\n    let mut dot_pos_30:\
    \ usize;\n    let mut dot_pos_31: usize;\n    let mut dot_pos_32: usize;\n   \
    \ let mut dot_pos_33: usize;\n    let mut dot_pos_34: usize;\n    let mut dot_pos_35:\
    \ usize;\n    let mut dot_pos_36: usize;\n    let mut dot_pos_37: usize;\n   \
    \ let mut dot_pos_38: usize;\n    let mut dot_pos_39: usize;\n    let mut dot_pos_40:\
    \ usize;\n    let mut dot_pos_41: usize;\n    let mut dot_pos_42: usize;\n   \
    \ let mut dot_pos_43: usize;\n    let mut dot_pos_44: usize;\n    let mut dot_pos_45:\
    \ usize;\n    let mut dot_pos_46: usize;\n    let mut dot_pos_47: usize;\n   \
    \ let mut dot_pos_48: usize;\n    let mut dot_pos_49: usize;\n    let ", "   \
    \ let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.len() < 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos - 1] !=\
    \ String::from('1') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 2] != String::from('a') && file_name[dot_pos - 2] != String::from('A') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 3] !=\
    \ String::from('t') && file_name[dot_pos - 3] != String::from('T') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 4] != String::from('e')\
    \ && file_name[dot_pos - 4] != String::from('E') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 5] != String::from('s') && file_name[dot_pos\
    \ - 5] != String::from('S') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 6] != String::from('d') && file_name[dot_pos - 6] !=\
    \ String::from('D') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 7] != String::from('l') && file_name[dot_pos - 7] != String::from('L') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 8] !=\
    \ String::from('h') && file_name[dot_pos - 8] != String::from('H') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 9] != String::from('o')\
    \ && file_name[dot_pos - 9] != String::from('O') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 10] != String::from('x') && file_name[dot_pos\
    \ - 10] != String::from('X') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos - 11] != String::from('r') && file_name[dot_pos - 11]\
    \ != String::from('R') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name[dot_pos - 12] != String::from('u') && file_name[dot_pos - 12] != String::from('U')\
    \ {\n", "    let mut file_name = file_name.to_string();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c !=\
    \ 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_digit() || c != '0' || c != '9') {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' ||\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase() || c != 'a' || c != 'z') ||\
    \ file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A' || c != 'Z') ||\
    \ file_name.chars().any(|c| !c.is_digit() || c != '0' || c != '9')) {\n      \
    \  return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != '.' || file_name.chars().any(|c| !c.is_ascii_lowercase() || c != 'a'\
    \ || c != 'z') || file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A'\
    \ || c != 'Z') || file_name.chars().any(|c| !c.is_digit() || c != '0' || c !=\
    \ '9') || file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || file_name.chars().any(|c|\
    \ !c.is_", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    while\
    \ dot_pos_start != dot_pos_end {\n        let mut dot_pos_start_letter = dot_pos_start;\n\
    \        let mut dot_pos_end_letter = dot_pos_end;\n        while dot_pos_start_letter\
    \ != dot_pos_end_letter {\n            let mut dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n            let mut dot_pos_end_letter = dot_pos_end_letter + 1;\n   \
    \         if dot_pos_start_letter > dot_pos_end_letter {\n                return\
    \ \"No\";\n            }\n            if dot_pos_start_letter < 'a' || dot_pos_start_letter\
    \ > 'z' {\n                return \"No\";\n            }\n            if dot_pos_end_letter\
    \ > 'z' {\n                return \"No\";\n            }\n            if dot_pos_end_letter\
    \ < 'a' || dot_pos_end_letter > 'z' {\n                return \"No\";\n      \
    \      }\n        }\n        dot_pos_start = dot_pos_start + 1;\n        dot_pos_end_letter\
    \ = dot_pos_start + 1;\n    }\n    if dot_pos_start == dot_pos_end {\n       \
    \ return \"No\";\n    }\n    if dot_pos_start < 'a' || dot_pos_start > 'z' {\n\
    \        return \"No\";\n    }\n    if dot_pos_end > 'z' {\n        return \"\
    No\";\n    }\n    if dot_pos_end < 'a' || dot_pos_end > 'z' {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_index > 0 {\n   \
    \     dot_index -= 1;\n    }\n    if file_name.len() < 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut first_letter = String::from(\"a\");\n    let mut last_letter\
    \ = String::from(\"z\");\n    let mut first_letter_found = false;\n    let mut\
    \ last_letter_found = false;\n    for letter in file_name.chars() {\n        if\
    \ letter == first_letter {\n            if !first_letter_found {\n           \
    \     first_letter_found = true;\n            }\n        } else {\n          \
    \  if !last_letter_found {\n                last_letter_found = true;\n      \
    \      }\n        }\n    }\n    if first_letter_found && last_letter_found {\n\
    \        return String::from(\"Yes\");\n    }\n    return String::from(\"No\"\
    );", "    let mut file_name_check: String = \"No\";\n    let mut dot_check: usize\
    \ = 0;\n    let mut first_letter: usize = 0;\n    let mut dot_found: usize = 0;\n\
    \    let mut dot_before_dot: usize = 0;\n    let mut dot_after_dot: usize = 0;\n\
    \    let mut dot_after_dot_check: usize = 0;\n    let mut dot_after_dot_found:\
    \ usize = 0;\n    let mut dot_after_dot_before_dot: usize = 0;\n    let mut dot_after_dot_after_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_check: usize = 0;\n    let mut\
    \ dot_after_dot_after_dot_found: usize = 0;\n    let mut dot_after_dot_after_dot_before_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot: usize = 0;\n    let\
    \ mut dot_after_dot_after_dot_after_dot_check: usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_found:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_before_dot: usize\
    \ = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot: usize = 0;\n\
    \    let mut dot_after_dot_after_dot_after_dot_after_dot_check: usize = 0;\n \
    \   let mut dot_after_dot_after_dot_after_dot_after_dot_found: usize = 0;\n  \
    \  let mut dot_after_dot_after_dot_after_dot_after_dot_before_dot: usize = 0;\n\
    \    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot: usize = 0;\n\
    \    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_check: usize\
    \ = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_found:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_before_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_check:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_found:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_before_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot:\
    \ usize = 0;\n    let mut dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_after_dot_check:\
    \ usize = 0;\n    let mut dot_after_", "    let mut first_char: char;\n    let\
    \ mut second_char: char;\n    let mut third_char: char;\n    let mut fourth_char:\
    \ char;\n    let mut fifth_char: char;\n    let mut sixth_char: char;\n    let\
    \ mut seventh_char: char;\n    let mut eighth_char: char;\n    let mut ninth_char:\
    \ char;\n    let mut tenth_char: char;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let ", "    let mut first_char: char;\n\
    \    let mut second_char: char;\n    let mut third_char: char;\n    let mut fourth_char:\
    \ char;\n    let mut fifth_char: char;\n    let mut sixth_char: char;\n    let\
    \ mut seventh_char: char;\n    let mut eighth_char: char;\n    let mut ninth_char:\
    \ char;\n    let mut tenth_char: char;\n    let mut first_char_valid: String;\n\
    \    let mut second_char_valid: String;\n    let mut third_char_valid: String;\n\
    \    let mut fourth_char_valid: String;\n    let mut fifth_char_valid: String;\n\
    \    let mut sixth_char_valid: String;\n    let mut seventh_char_valid: String;\n\
    \    let mut eighth_char_valid: String;\n    let mut ninth_char_valid: String;\n\
    \    let mut tenth_char_valid: String;\n    let mut first_char_valid: String;\n\
    \    let mut second_char_valid: String;\n    let mut third_char_valid: String;\n\
    \    let mut fourth_char_valid: String;\n    let mut fifth_char_valid: String;\n\
    \    let mut sixth_char_valid: String;\n    let mut seventh_char_valid: String;\n\
    \    let mut eighth_char_valid: String;\n    let mut ninth_char_valid: String;\n\
    \    let mut tenth_char_valid: String;\n    let mut first_char_valid: String;\n\
    \    let mut second_char_valid: String;\n    let mut third_char_valid: String;\n\
    \    let mut fourth_char_valid: String;\n    let mut fifth_char_valid: String;\n\
    \    let mut sixth_char_valid: String;\n    let mut seventh_char_valid: String;\n\
    \    let mut eighth_char_valid: String;\n    let mut ninth_char_valid: String;\n\
    \    let mut tenth_char_valid: String;\n    let mut first_char_valid: String;\n\
    \    let mut second_char_valid: String;\n    let mut third_char_valid: String;\n\
    \    let mut fourth_char_valid: String;\n    let mut fifth_char_valid: String;\n\
    \    let mut sixth_char_valid: String;\n    let mut seventh_char_valid: String;\n\
    \    let mut eighth_char_valid: String;\n    let mut ninth_char_valid: String;\n\
    \    let mut tenth_char_valid: String;\n    let mut first_char_valid: String;\n\
    \    let mut ", "    let mut file_name_checker = String::new();\n    let mut dot_count\
    \ = 0;\n    let mut first_letter = String::new();\n    let mut last_letter = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();\n    let mut last_dot_index = String::new();\n\
    \    let mut last_dot_index = String::new();", "    if file_name.len() > 3 {\n\
    \        return \"No\";\n    }\n    if file_name.len() == 0 {\n        return\
    \ \"No\";\n    }\n    if file_name.len() == 1 {\n        return \"No\";\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return \"No\"\
    ;\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n      \
    \  return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_digit())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != '.') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z') {\n        return \"No\";\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A' ||\
    \ c != 'Z') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_digit() || c != '0' || c != '9') {\n        return \"No\";\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || c != 'txt'\
    \ || c != 'exe' || c != 'dll') {\n        return \"No\";\n    }\n    return \"\
    Yes\";", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_5 = file_name.find('.')\n    if\
    \ dot_pos_5 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_6\
    \ = file_name.find('.')\n    if dot_pos_6 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if\
    \ dot_pos_10 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_11\
    \ = file_name.find('.')\n    if dot_pos_11 == String::npos { \n        return\
    \ \"No\";\n    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_13 =\
    \ file_name.find('.')\n    if dot_pos_13 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_15 =\
    \ file_name.find('.')\n    if dot_pos_15 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_17 =\
    \ file_name.find('.')\n    if dot_pos_17 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_18 = file_name.find('.')\n    if dot_pos_18\
    \ == String::npos { \n        return \"No", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No", "   \
    \ let mut first_char = file_name[0];\n    let mut second_char = file_name[1];\n\
    \    let mut third_char = file_name[2];\n    if first_char == '0' {\n        first_char\
    \ = '1';\n    }\n    if second_char == '.' {\n        second_char = '0';\n   \
    \ }\n    if third_char == '.' {\n        third_char = '0';\n    }\n    if first_char\
    \ == '0' {\n        first_char = '1';\n    }\n    if second_char == '.' {\n  \
    \      second_char = '0';\n    }\n    if third_char == '.' {\n        third_char\
    \ = '0';\n    }\n    if first_char == 'a' || first_char == 'A' {\n        first_char\
    \ = 'a';\n    }\n    if second_char == '.' {\n        second_char = '0';\n   \
    \ }\n    if third_char == '.' {\n        third_char = '0';\n    }\n    if first_char\
    \ == 'a' || first_char == 'A' {\n        first_char = 'a';\n    }\n    if second_char\
    \ == '.' {\n        second_char = '0';\n    }\n    if third_char == '.' {\n  \
    \      third_char = '0';\n    }\n    if first_char == 'a' || first_char == 'A'\
    \ {\n        first_char = 'a';\n    }\n    if second_char == '.' {\n        second_char\
    \ = '0';\n    }\n    if third_char == '.' {\n        third_char = '0';\n    }\n\
    \    if first_char == 'a' || first_char == 'A' {\n        first_char = 'a';\n\
    \    }\n    if second_char == '.' {\n        second_char = '0';\n    }\n    if\
    \ third_char == '.' {\n        third_char = '0';\n    }\n    if first_char ==\
    \ 'a' || first_char == 'A' {\n        first_char = 'a';\n    }\n    if second_char\
    \ == '.' {\n        second_char = '0';\n    }\n    if third_char == '.' {\n  \
    \      third_char = '0';\n    }\n    if first_char == 'a' || first_char == 'A'\
    \ {\n        first_char = 'a';\n    }\n    if second_char == '.' {\n        second_char\
    \ = '0';\n    }\n    if third_char == '.' {\n        third_char = '0';\n    }\n\
    \    if first_char == 'a' || first_char == 'A' {\n        first_char = 'a';\n\
    \    }\n    if second_char == '.' {\n        second_char = '0';\n    }\n    if\
    \ third_char == '.' {\n        third_char = '0';\n    }\n    if first_char ==\
    \ 'a", "    let mut file_name = file_name.to_string();\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    if file_name[dot_index - 1] == ' ' {\n        return \"No\"\
    ;\n    }\n    if file_name[dot_index - 2] != 'a' && file_name[dot_index - 2] !=\
    \ 'A' {\n        return \"No\";\n    }\n    if file_name[dot_index - 3] != '.'\
    \ {\n        return \"No\";\n    }\n    if file_name[dot_index - 4] != 'txt' &&\
    \ file_name[dot_index - 4] != 'exe' && file_name[dot_index - 4] != 'dll' {\n \
    \       return \"No\";\n    }\n    return \"Yes\";", "    let mut file_name =\
    \ file_name.to_string();\n    if file_name.len() > 3 {\n        file_name.truncate(3);\n\
    \    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    if file_name[0] != 'a' || file_name[0] != 'A' || file_name[1] != 'z'\
    \ || file_name[1] != 'Z' {\n        file_name.truncate(0);\n    }\n    if !file_name.contains(\"\
    txt\") && !file_name.contains(\"exe\") && !file_name.contains(\"dll\") {\n   \
    \     file_name.truncate(0);\n    }\n    file_name", "    let mut first_char:\
    \ char;\n    let mut second_char: char;\n    let mut third_char: char;\n    let\
    \ mut fourth_char: char;\n    let mut fifth_char: char;\n    let mut sixth_char:\
    \ char;\n    let mut seventh_char: char;\n    let mut eighth_char: char;\n   \
    \ let mut ninth_char: char;\n    let mut tenth_char: char;\n    let mut first_char_valid\
    \ = false;\n    let mut second_char_valid = false;\n    let mut third_char_valid\
    \ = false;\n    let mut fourth_char_valid = false;\n    let mut fifth_char_valid\
    \ = false;\n    let mut sixth_char_valid = false;\n    let mut seventh_char_valid\
    \ = false;\n    let mut eighth_char_valid = false;\n    let mut ninth_char_valid\
    \ = false;\n    let mut tenth_char_valid = false;\n    let mut first_char_valid\
    \ = false;\n    let mut second_char_valid = false;\n    let mut third_char_valid\
    \ = false;\n    let mut fourth_char_valid = false;\n    let mut fifth_char_valid\
    \ = false;\n    let mut sixth_char_valid = false;\n    let mut seventh_char_valid\
    \ = false;\n    let mut eighth_char_valid = false;\n    let mut ninth_char_valid\
    \ = false;\n    let mut tenth_char_valid = false;\n    let mut first_char_valid\
    \ = false;\n    let mut second_char_valid = false;\n    let mut third_char_valid\
    \ = false;\n    let mut fourth_char_valid = false;\n    let mut fifth_char_valid\
    \ = false;\n    let mut sixth_char_valid = false;\n    let mut seventh_char_valid\
    \ = false;\n    let mut eighth_char_valid = false;\n    let mut ninth_char_valid\
    \ = false;\n    let mut tenth_char_valid = false;\n    let mut first_char_valid\
    \ = false;\n    let mut second_char_valid = false;\n    let mut third_char_valid\
    \ = false;\n    let mut fourth_char_valid = false;\n    let mut fifth_char_valid\
    \ = false;\n    let mut sixth_char_valid = false;\n    let mut seventh_char_valid\
    \ = false;\n    let mut eighth_char_valid = false;\n    let mut ninth_char_valid\
    \ = false;\n    let mut tenth_char_valid = false;\n    let mut first_char_valid\
    \ = false;\n    let mut second_char_valid = false;\n    let mut third_char_valid\
    \ = false;\n    let mut fourth_char_valid = false;\n    let mut fifth_char_valid\
    \ = false;\n    let mut sixth_char_valid = false;\n    let ", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut dot_pos = file_name_chars.find_first_of(\"\
    .\");\n    let mut dot_pos_end = file_name_chars.find_first_not_of(\".\", dot_pos);\n\
    \    let mut dot_pos_start = dot_pos_end;\n    let mut dot_pos_start_letter =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_name = file_name.clone();\n  \
    \  dot_name.truncate(dot_pos);\n    let mut dot_name_pos = dot_name.find('.')\n\
    \    if dot_name_pos == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_name_char = dot_name[dot_name_pos];\n    if dot_name_char\
    \ == '.' {\n        dot_name_pos = dot_name.find('.')\n        if dot_name_pos\
    \ == String::npos {\n            return String::from(\"No\");\n        }\n   \
    \     dot_name_char = dot_name[dot_name_pos];\n    }\n    if dot_name_char !=\
    \ 'a' && dot_name_char != 'A' && dot_name_char != 'b' && dot_name_char != 'B'\
    \ && dot_name_char != 'c' && dot_name_char != 'C' && dot_name_char != 'd' && dot_name_char\
    \ != 'D' && dot_name_char != 'e' && dot_name_char != 'E' && dot_name_char != 'f'\
    \ && dot_name_char != 'F' && dot_name_char != 'g' && dot_name_char != 'G' && dot_name_char\
    \ != 'h' && dot_name_char != 'H' && dot_name_char != 'i' && dot_name_char != 'I'\
    \ && dot_name_char != 'j' && dot_name_char != 'J' && dot_name_char != 'k' && dot_name_char\
    \ != 'K' && dot_name_char != 'l' && dot_name_char != 'L' && dot_name_char != 'm'\
    \ && dot_name_char != 'M' && dot_name_char != 'n' && dot_name_char != 'N' && dot_name_char\
    \ != 'o' && dot_name_char != 'O' && dot_name_char != 'p' && dot_name_char != 'P'\
    \ && dot_name_char != 'q' && dot_name_char != 'Q' && dot_name_char != 'r' && dot_name_char\
    \ != 'R' && dot_name_char != 's' && dot_name_char != 'S' && dot_name_char != 't'\
    \ && dot_name_char != 'T' && dot_name_char != 'u' && dot_name_char != 'U' && dot_name_char\
    \ != 'v' && dot_name_char != 'V' && dot_name_char != 'w' && dot_name_char != 'W'\
    \ && dot_name_char != 'x' && dot_name_char != 'X' && dot_name_char != 'y' && dot_name_char\
    \ != 'Y' && dot_name_char != 'z' && dot_name_char != 'Z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_name_pos = dot_name.find('.')\n    if dot_name_pos\
    \ == String::npos {\n        return String::from(\"No\");\n", "    let mut file_name\
    \ = file_name.to_string();\n    if file_name.len() > 3 {\n        file_name.truncate(3);\n\
    \    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"A\") {\n\
    \        file_name.truncate(0);\n    }\n    if file_name.contains(\".\") {\n \
    \       let dot_index = file_name.rfind('.')\n        if dot_index == 0 {\n  \
    \          file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.')\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.')\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.')\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.')\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.')\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.')\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.')\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.')\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.')\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8\
    \ = file_name.find('.')\n    if dot_pos_8 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 ==\
    \ String::npos {\n        return String::from(\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_next = dot_pos\
    \ + 1;\n    let mut dot_pos_prev = dot_pos_next;\n    let mut dot_pos_len = dot_pos\
    \ - dot_pos_next;\n    let mut dot_pos_len_prev = dot_pos_len;\n    let mut dot_pos_len_next\
    \ = dot_pos_len;\n    let mut dot_pos_len_len = dot_pos_len - dot_pos_len_prev;\n\
    \    let mut dot_pos_len_len_prev = dot_pos_len_len;\n    let mut dot_pos_len_len_next\
    \ = dot_pos_len_len;\n    let mut dot_pos_len_len_len = dot_pos_len_len - dot_pos_len_len_prev;\n\
    \    let mut dot_pos_len_len_len_prev = dot_pos_len_len_len;\n    let mut dot_pos_len_len_len_next\
    \ = dot_pos_len_len_len;\n    let mut dot_pos_len_len_len_len = dot_pos_len_len_len\
    \ - dot_pos_len_len_len_prev;\n    let mut dot_pos_len_len_len_len_prev = dot_pos_len_len_len_len;\n\
    \    let mut dot_pos_len_len_len_len_next = dot_pos_len_len_len_len;\n    let\
    \ mut dot_pos_len_len_len_len_prev = dot_pos_len_len_len_len_next;\n    let mut\
    \ dot_pos_len_len_len_len_next = dot_pos_len_len_len_len_len;\n    let mut dot_pos_len_len_len_len_len_prev\
    \ = dot_pos_len_len_len_len_len_next;\n    let mut dot_pos_len_len_len_len_len_next\
    \ = dot_pos_len_len_len_len_len_len;\n    let mut dot_pos_len_len_len_len_len_prev\
    \ = dot_pos_len_len_len_len_len_len_next;\n    let mut dot_pos_len_len_len_len_len_next\
    \ = dot_pos_len_len_len_len_len_len_len;\n    let mut dot_pos_len_len_len_len_len_len_prev\
    \ = dot_pos_len_len_len_len_len_len_len_next;\n    let mut dot_pos_len_len_len_len_len_len_next\
    \ = dot_pos_len_len_len_len_len_len_len_len;\n    let mut dot_pos_len_len_len_len_len_len_len_prev\
    \ = dot_pos_len_len_len_len_len_len_len_len_len_next;\n    let mut dot_pos_len_len_len_len_len_len_len_next\
    \ = dot_pos_len_len_len_len_len_len_len_len_len_len;\n    let mut dot_pos_len_len_len_len_len_len_len_len_prev\
    \ = dot_pos_len_len_len_len_len_len_len_len_len_len_len_len_next;\n    let mut\
    \ dot_pos_len_len_len_len_len_len_len_len_next = dot_pos_len_len_len_len_len_len_len_len_",
  "    let mut file_name : String = file_name;\n    let mut dot_pos : usize = 0;\n\
    \    let mut dot_pos_2 : usize = 0;\n    let mut dot_pos_3 : usize = 0;\n    let\
    \ mut dot_pos_4 : usize = 0;\n    let mut dot_pos_5 : usize = 0;\n    let mut\
    \ dot_pos_6 : usize = 0;\n    let mut dot_pos_7 : usize = 0;\n    let mut dot_pos_8\
    \ : usize = 0;\n    let mut dot_pos_9 : usize = 0;\n    let mut dot_pos_10 : usize\
    \ = 0;\n    let mut dot_pos_11 : usize = 0;\n    let mut dot_pos_12 : usize =\
    \ 0;\n    let mut dot_pos_13 : usize = 0;\n    let mut dot_pos_14 : usize = 0;\n\
    \    let mut dot_pos_15 : usize = 0;\n    let mut dot_pos_16 : usize = 0;\n  \
    \  let mut dot_pos_17 : usize = 0;\n    let mut dot_pos_18 : usize = 0;\n    let\
    \ mut dot_pos_19 : usize = 0;\n    let mut dot_pos_20 : usize = 0;\n    let mut\
    \ dot_pos_21 : usize = 0;\n    let mut dot_pos_22 : usize = 0;\n    let mut dot_pos_23\
    \ : usize = 0;\n    let mut dot_pos_24 : usize = 0;\n    let mut dot_pos_25 :\
    \ usize = 0;\n    let mut dot_pos_26 : usize = 0;\n    let mut dot_pos_27 : usize\
    \ = 0;\n    let mut dot_pos_28 : usize = 0;\n    let mut dot_pos_29 : usize =\
    \ 0;\n    let mut dot_pos_30 : usize = 0;\n    let mut dot_pos_31 : usize = 0;\n\
    \    let mut dot_pos_32 : usize = 0;\n    let mut dot_pos_33 : usize = 0;\n  \
    \  let mut dot_pos_34 : usize = 0;\n    let mut dot_pos_35 : usize = 0;\n    let\
    \ mut dot_pos_36 : usize = 0;\n    let mut dot_pos_37 : usize = 0;\n    let mut\
    \ dot_pos_38 : usize = 0;\n    let mut dot_pos_39 : usize = 0;\n    let mut dot_pos_40\
    \ : usize = 0;\n    let mut dot_pos_41 : usize = 0;\n    let mut dot_pos_42 :\
    \ usize = 0;\n    let mut dot_pos_43 : usize = 0;\n    let mut dot_pos_44 : usize\
    \ = 0;\n    let mut dot_pos_45 : usize = 0;\n    let mut dot_pos_46 : usize",
  "    let mut first_char: char;\n    let mut second_char: char;\n    let mut third_char:\
    \ char;\n    let mut fourth_char: char;\n    let mut fifth_char: char;\n    let\
    \ mut sixth_char: char;\n    let mut seventh_char: char;\n    let mut eighth_char:\
    \ char;\n    let mut ninth_char: char;\n    let mut tenth_char: char;\n    let\
    \ mut first_char_valid = false;\n    let mut second_char_valid = false;\n    let\
    \ mut third_char_valid = false;\n    let mut fourth_char_valid = false;\n    let\
    \ mut fifth_char_valid = false;\n    let mut sixth_char_valid = false;\n    let\
    \ mut seventh_char_valid = false;\n    let mut eighth_char_valid = false;\n  \
    \  let mut ninth_char_valid = false;\n    let mut tenth_char_valid = false;\n\
    \    let mut first_char_valid = false;\n    let mut second_char_valid = false;\n\
    \    let mut third_char_valid = false;\n    let mut fourth_char_valid = false;\n\
    \    let mut fifth_char_valid = false;\n    let mut sixth_char_valid = false;\n\
    \    let mut seventh_char_valid = false;\n    let mut eighth_char_valid = false;\n\
    \    let mut ninth_char_valid = false;\n    let mut tenth_char_valid = false;\n\
    \    let mut first_char_valid = false;\n    let mut second_char_valid = false;\n\
    \    let mut third_char_valid = false;\n    let mut fourth_char_valid = false;\n\
    \    let mut fifth_char_valid = false;\n    let mut sixth_char_valid = false;\n\
    \    let mut seventh_char_valid = false;\n    let mut eighth_char_valid = false;\n\
    \    let mut ninth_char_valid = false;\n    let mut tenth_char_valid = false;\n\
    \    let mut first_char_valid = false;\n    let mut second_char_valid = false;\n\
    \    let mut third_char_valid = false;\n    let mut fourth_char_valid = false;\n\
    \    let mut fifth_char_valid = false;\n    let mut sixth_char_valid = false;\n\
    \    let mut seventh_char_valid = false;\n    let mut eighth_char_valid = false;\n\
    \    let mut ninth_char_valid = false;\n    let mut tenth_char_valid = false;\n\
    \    let mut first_char_valid = false;\n    let mut second_char_valid = false;\n\
    \    let mut third_char_valid = false;\n    let mut fourth_char_valid = false;\n\
    \    let mut fifth_char_valid = false;\n    let mut sixth_char_valid = false;\n\
    \    let ", "    let mut file_name = file_name.to_string();\n    if file_name.len()\
    \ > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains(\".\"\
    ) {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        file_name.truncate(0);\n    }\n\
    \    if file_name.ends_with(\"txt\") || file_name.ends_with(\"exe\") || file_name.ends_with(\"\
    dll\") {\n        return file_name;\n    }\n    return \"No\";", "    let mut\
    \ first_letter = file_name[0];\n    let mut last_letter = file_name[file_name.len()\
    \ - 1];\n    if first_letter != 'a' && first_letter != 'A' {\n        first_letter\
    \ = 'a';\n    }\n    if last_letter != 'z' && last_letter != 'Z' {\n        last_letter\
    \ = 'z';\n    }\n    if file_name.len() < 3 {\n        return \"No\";\n    }\n\
    \    if file_name.contains(\".\") {\n        return \"No\";\n    }\n    if file_name.starts_with(first_letter)\
    \ && file_name.ends_with(last_letter) && \n        file_name.len() == 3 {\n  \
    \      return \"Yes\";\n    }\n    return \"No\";", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.contains(\".\") {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        if dot_pos == 0 {\n            return String::from(\"No\"\
    );\n        }\n        if file_name[dot_pos - 1] != char::from_u32(97).unwrap()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_2\
    \ = file_name.find('.')\n        if dot_pos_2 == String::npos {\n            return\
    \ String::from(\"No\");\n        }\n        if dot_pos_2 == 0 {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_2 - 1] != char::from_u32(122).unwrap()\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    if file_name[0]\
    \ < 'a' || file_name[0] > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[1] < 'a' || file_name[1] > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[2] < 'a' || file_name[2] > 'z' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[0] >= 'a' && file_name[0] <=\
    \ 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[1] >= 'a'\
    \ && file_name[1] <= 'z' {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name[2] >= 'a' && file_name[2] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[0] >= 'A' && file_name[0] <= 'Z' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[1] >= 'A' && file_name[1] <=\
    \ 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[2] >= 'A'\
    \ && file_name[2] <= 'Z' {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name[0] >= '0' && file_name[0] <= '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[1] >= '0' && file_name[1] <= '9' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[2] >= '0' && file_name[2] <=\
    \ '9' {\n        return String::from(\"No\");\n    }\n    if file_name[0] >= 'a'\
    \ && file_name[0] <= 'z' {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name[1]", "    let mut res = String::new();\n    let mut i = 0;\n    while\
    \ i < file_name.len() {\n        if file_name[i] == '.' {\n            if i !=\
    \ 0 && i != file_name.len() - 1 {\n                res.push_str(\"No\");\n   \
    \             break;\n            }\n        }\n        if file_name[i] >= 'a'\
    \ && file_name[i] <= 'z' {\n            if i != 0 && i != file_name.len() - 1\
    \ {\n                res.push_str(\"No\");\n                break;\n         \
    \   }\n        }\n        if file_name[i] >= 'A' && file_name[i] <= 'Z' {\n  \
    \          if i != 0 && i != file_name.len() - 1 {\n                res.push_str(\"\
    No\");\n                break;\n            }\n        }\n        if file_name[i]\
    \ >= '0' && file_name[i] <= '9' {\n            if i != 0 && i != file_name.len()\
    \ - 1 {\n                res.push_str(\"No\");\n                break;\n     \
    \       }\n        }\n        i += 1;\n    }\n    res.push_str(\"Yes\");\n   \
    \ return res;", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n\
    \    let mut dot_pos_start = dot_pos;\n    dot_pos_start += 1;\n    \n    while\
    \ dot_pos_start < dot_pos_end {\n        let mut dot_pos_end = dot_pos_end;\n\
    \        dot_pos_end += 1;\n        let mut dot_pos_start = dot_pos_start;\n \
    \       dot_pos_start += 1;\n        \n        if dot_pos_start == dot_pos_end\
    \ {\n            if dot_pos_start == 0 {\n                return String::from(\"\
    No\");\n            }\n            \n            if file_name[dot_pos_start -\
    \ 1] < 'a' || file_name[dot_pos_start - 1] > 'z' {\n                return String::from(\"\
    No\");\n            }\n            \n            if dot_pos_start == file_name.len()\
    \ - 1 {\n                return String::from(\"Yes\");\n            }\n      \
    \      \n            if file_name[dot_pos_start] != 'a' && file_name[dot_pos_start]\
    \ != 'z' {\n                return String::from(\"No\");\n            }\n    \
    \        \n            if dot_pos_start == 0 {\n                return String::from(\"\
    No\");\n            }\n            \n            if file_name[dot_pos_start -\
    \ 1] < 'A' || file_name[dot_pos_start - 1] > 'Z' {\n                return String::from(\"\
    No\");\n            }\n            \n            if dot_pos_start == file_name.len()\
    \ - 1 {\n                return String::from(\"Yes\");\n            }\n      \
    \      \n            if file_name[dot_pos_start] != 'A' && file_name[dot_pos_start]\
    \ != 'Z' {\n                return String::from(\"No\");\n            }\n    \
    \    }\n    }\n    \n    return String::from(\"Yes\");", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ >= 'a' && file_name[dot_pos_end] <= 'z' ||\n            file_name[dot_pos_end]\
    \ >= 'A' && file_name[dot_pos_end] <= 'Z' ||\n            file_name[dot_pos_end]\
    \ >= '0' && file_name[dot_pos_end] <= '9' {\n            break;\n        }\n \
    \       dot_pos_end += 1;\n    }\n    if dot_pos_end == file_name.len() {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    while dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' ||\n            file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' ||\n            file_name[dot_pos_start]\
    \ >= '0' && file_name[dot_pos_start] <= '9' {\n            break;\n        }\n\
    \        dot_pos_start += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n \
    \       return String::from(\"No\");\n    }\n    if file_name[dot_pos_start] ==\
    \ '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != file_name[dot_pos_end] {\n        return String::from(\"No\");\n    }\n \
    \   if dot_pos_start == dot_pos_end {\n        return String::from(\"Yes\");\n\
    \    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] == '.' {\n        return String::from(\"",
  "    if file_name.len() > 3 {\n        String::from(\"\")\n    } else {\n      \
    \  let mut first_letter = file_name.chars().nth(1).unwrap();\n        if first_letter\
    \ < 'a' || first_letter > 'z' {\n            String::from(\"\")\n        } else\
    \ {\n            let mut dot_pos = file_name.find('.')\n            if dot_pos\
    \ == String::npos {\n                String::from(\"\")\n            } else {\n\
    \                let mut dot_string = file_name.chars().nth(dot_pos).unwrap();\n\
    \                if dot_string != 'txt' && dot_string != 'exe' && dot_string !=\
    \ 'dll' {\n                    String::from(\"\")\n                } else {\n\
    \                    String::from(\"\")\n                }\n            }\n  \
    \      }\n    }", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let\
    \ mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter = String::from(\"\
    a\");\n    let mut dot_pos_end_letter = String::from(\"z\");\n    let mut dot_pos_start_letter2\
    \ = String::from(\"A\");\n    let mut dot_pos_end_letter2 = String::from(\"Z\"\
    );\n    let mut dot_pos_start_letter3 = String::from(\"0\");\n    let mut dot_pos_end_letter3\
    \ = String::from(\"9\");\n    let mut dot_pos_start_letter4 = String::from(\"\
    a\");\n    let mut dot_pos_end_letter4 = String::from(\"z\");\n    let mut dot_pos_start_letter5\
    \ = String::from(\"A\");\n    let mut dot_pos_end_letter5 = String::from(\"Z\"\
    );\n    let mut dot_pos_start_letter6 = String::from(\"0\");\n    let mut dot_pos_end_letter6\
    \ = String::from(\"9\");\n    let mut dot_pos_start_letter7 = String::from(\"\
    a\");\n    let mut dot_pos_end_letter7 = String::from(\"z\");\n    let mut dot_pos_start_letter8\
    \ = String::from(\"A\");\n    let mut dot_pos_end_letter8 = String::from(\"Z\"\
    );\n    let mut dot_pos_start_letter9 = String::from(\"0\");\n    let mut dot_pos_end_letter9\
    \ = String::from(\"9\");\n    let mut dot_pos_start_letter10 = String::from(\"\
    a\");\n    let mut dot_pos_end_letter10 = String::from(\"z\");\n    let mut dot_pos_start_letter11\
    \ = String::from(\"A\");\n    let mut dot_pos_end_letter11 = String::from(\"Z\"\
    );\n    let mut dot_pos_start_letter12 = String::from(\"0\");\n    let mut dot_pos_end_letter12\
    \ = String::from(\"9\");\n    let mut dot_pos_start_letter13 = String::from(\"\
    a\");\n    let mut dot_pos_end_letter13 = String::from(\"z\");\n    let mut dot_pos_start_letter14\
    \ = String::from(\"A\");\n    let mut dot_pos_end_letter14 = String::from(\"Z\"\
    );\n    let mut dot_pos_start_letter15 = String::from(\"0\");\n    let mut dot_pos_end_letter15\
    \ = String::from", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_str = String::from(\"\");\n\
    \    let mut dot_pos_str_len = String::from(\"\");\n    let mut dot_pos_str_len\
    \ = 0;\n    let mut dot_pos_str_len_max = String::from(\"\");\n    let mut dot_pos_str_len_max\
    \ = 0;\n    let mut dot_pos_str_len_min = String::from(\"\");\n    let mut dot_pos_str_len_min\
    \ = 0;\n    let mut dot_pos_str_len_min_max = String::from(\"\");\n    let mut\
    \ dot_pos_str_len_min_max = 0;\n    let mut dot_pos_str_len_min_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max = 0;\n    let mut dot_pos_str_len_min_max_max_max\
    \ = String::from(\"\");\n    let mut dot_pos_str_len_min_max_max_max = 0;\n  \
    \  let mut dot_pos_str_len_min_max_max_max_max = String::from(\"\");\n    let\
    \ mut dot_pos_str_len_min_max_max_max_max = String::from(\"\");\n    let mut dot_pos_str_len_min_max_max_max_max\
    \ = String::from(\"\");\n    let mut dot_pos_str_len_min_max_max_max_max_max =\
    \ String::from(\"\");\n    let mut dot_pos_str_len_min_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max = String::from(\"\"\
    );\n    let mut dot_pos_str_len_min_max_max_max_max_max_max = String::from(\"\"\
    );\n    let mut dot_pos_str_len_min_max_max_max_max_max_max = String::from(\"\"\
    );\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max_max = String::from(\"\
    \");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max_max_max\
    \ = String::from(\"\");\n    let mut dot_pos_str_len_min_max_max_max_max_max_max_max_max_max_max\
    \ = String::from(", "    let mut first_char: u8 = 0;\n    let mut second_char:\
    \ u8 = 0;\n    let mut third_char: u8 = 0;\n    let mut fourth_char: u8 = 0;\n\
    \    let mut fifth_char: u8 = 0;\n    let mut sixth_char: u8 = 0;\n    let mut\
    \ seventh_char: u8 = 0;\n    let mut eighth_char: u8 = 0;\n    let mut ninth_char:\
    \ u8 = 0;\n    let mut tenth_char: u8 = 0;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = true;\n\
    \    let mut second_char_valid = true;\n    let mut third_char_valid = true;\n\
    \    let mut fourth_char_valid = true;\n    let mut fifth_char_valid = true;\n\
    \    let mut sixth_char_valid = true;\n    let mut seventh_char_valid = true;\n\
    \    let mut eighth_char_valid = true;\n    let mut ninth_char_valid = true;\n\
    \    let mut tenth_char_valid = true;\n    let mut first_char_valid = file_name.chars().any(|c|\
    \ c >= '0' && c <= '9');\n    let mut second_char_valid = file_name.chars().any(|c|\
    \ c >= 'a' && c <= 'z');\n    let mut third_char_valid = file_name.chars().any(|c|\
    \ c >= 'A' && c <= 'Z');\n    let mut fourth_char_valid = file_name.chars().any(|c|\
    \ c >= 'a' && c <= 'z');\n    let mut fifth_char_valid = file_name.chars().any(|c|\
    \ c >= 'A' && c <= 'Z');\n    let mut sixth_char_valid = file_name.chars().any(|c|\
    \ c >= 'a' && c <= 'z');\n    let mut seventh_char_valid = file_name.chars().any(|c|\
    \ c >= 'A' && c <= 'Z');\n    let mut eighth_char_valid = file_name.chars().any(|c|\
    \ c >= 'a' && c <= 'z');\n    let mut ninth_char_valid = file_name.chars().any(|c| ",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    while dot_pos_start\
    \ != dot_pos_end {\n        let mut dot_pos_start_letter = dot_pos_start;\n  \
    \      if dot_pos_start == dot_pos_end {\n            break;\n        }\n    \
    \    let mut dot_pos_end_letter = dot_pos_end;\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end_letter += 1;\n        }\n        let mut dot_pos_start_letter\
    \ = dot_pos_start;\n        let mut dot_pos_end_letter = dot_pos_end;\n      \
    \  if dot_pos_start == dot_pos_end {\n            break;\n        }\n        let\
    \ mut dot_pos_start_letter = dot_pos_start;\n        let mut dot_pos_end_letter\
    \ = dot_pos_end;\n        if dot_pos_start == dot_pos_end {\n            break;\n\
    \        }\n        let mut dot_pos_start_letter = dot_pos_start;\n        let\
    \ mut dot_pos_end_letter = dot_pos_end;\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        let mut dot_pos_start_letter = dot_pos_start;\n\
    \        let mut dot_pos_end_letter = dot_pos_end;\n        if dot_pos_start ==\
    \ dot_pos_end {\n            break;\n        }\n        let mut dot_pos_start_letter\
    \ = dot_pos_start;\n        let mut dot_pos_end_letter = dot_pos_end;\n      \
    \  if dot_pos_start == dot_pos_end {\n            break;\n        }\n        let\
    \ mut dot_pos_start_letter = dot_pos_start;\n        let mut dot_pos_end_letter\
    \ = dot_pos_end;\n        if dot_pos_start == dot_pos_end {\n            break;\n\
    \        }\n        let mut dot_pos_start_letter = dot_pos_start;\n        let\
    \ mut dot_pos_end_letter = dot_pos_end;\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        let mut dot_pos_start_letter = dot_pos_start;\n\
    \        let mut dot_pos_end_letter = dot_pos_end;\n        if dot_pos_start ==\
    \ dot_pos_end {\n            break;\n        }\n        let mut dot_pos_start_letter\
    \ = dot_pos_start;\n        let mut dot_pos_end_letter = dot_pos_end;\n      \
    \  if dot_pos_start == dot_pos_end {\n            break;\n        }\n        let\
    \ mut dot_pos_start_letter = dot_pos_start;\n        let mut dot_pos_end_letter\
    \ = dot_pos_end;\n        if dot_pos_start == dot_", "    let mut file_name :\
    \ String = \"\";\n    let mut dot_count : usize = 0;\n    let mut first_letter\
    \ : char;\n    let mut dot_letter : char;\n    let mut dot_dot_letter : char;\n\
    \    let mut dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_letter :\
    \ char;\n    let mut dot_dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_letter\
    \ : char;\n    let mut dot_dot_dot_dot_dot_dot_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\";\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if\
    \ dot_pos_4 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n    if\
    \ dot_pos_9 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_10\
    \ = file_name.find('.')\n    if dot_pos_10 == String::npos { \n        return\
    \ \"No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_12 =\
    \ file_name.find('.')\n    if dot_pos_12 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_14 =\
    \ file_name.find('.')\n    if dot_pos_14 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_16 =\
    \ file_name.find('.')\n    if dot_pos_16 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_17 = file_name.find('.')\n    if dot_pos_17\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_18 =\
    \ file_name.find('.')\n    if dot_pos_18 == String::npos { \n        return \"\
    No", "    let mut counter = 0;\n    let mut dot_count = 0;\n    let mut first_letter\
    \ = false;\n    let mut dot_found = false;\n    let mut dot_before_first_letter\
    \ = false;\n    let mut dot_after_first_letter = false;\n    for c in file_name.chars()\
    \ {\n        if c == '.' {\n            dot_found = true;\n            dot_before_first_letter\
    \ = true;\n            dot_after_first_letter = true;\n            dot_count +=\
    \ 1;\n        } else if !dot_found {\n            if c == '0' || c == '9' {\n\
    \                counter += 1;\n            } else {\n                dot_found\
    \ = false;\n            }\n        }\n        if dot_count == 3 {\n          \
    \  dot_found = false;\n            dot_before_first_letter = false;\n        \
    \    dot_after_first_letter = false;\n            dot_count = 0;\n        }\n\
    \        if dot_count == 2 && dot_before_first_letter && dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_after_first_letter\
    \ = false;\n            dot_count = 0;\n        }\n        if dot_count == 2 &&\
    \ dot_before_first_letter && !dot_after_first_letter {\n            dot_before_first_letter\
    \ = false;\n            dot_count = 0;\n        }\n        if dot_count == 2 &&\
    \ dot_after_first_letter && !dot_before_first_letter {\n            dot_after_first_letter\
    \ = false;\n            dot_count = 0;\n        }\n        if dot_count == 1 &&\
    \ !dot_before_first_letter && !dot_after_first_letter {\n            dot_before_first_letter\
    \ = false;\n            dot_after_first_letter = false;\n            dot_count\
    \ = 0;\n        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !dot_before_first_letter && !dot_after_first_letter\
    \ {\n            dot_before_first_letter = false;\n            dot_count = 0;\n\
    \        }\n        if dot_count == 1 && !", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.len() == 1 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name[0] < 'a' || file_name[0]\
    \ > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos] != 'txt' && file_name[dot_pos] != 'exe'\
    \ && file_name[dot_pos] != 'dll' {\n        return String::from(\"No\");\n   \
    \ }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 2] != String::from('0')\
    \ && file_name[dot_pos - 2] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 3] != String::from('0') && file_name[dot_pos\
    \ - 3] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 4] != String::from('0') && file_name[dot_pos - 4] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 5] != String::from('0') && file_name[dot_pos - 5] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 6] !=\
    \ String::from('0') && file_name[dot_pos - 6] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos - 7] != String::from('0')\
    \ && file_name[dot_pos - 7] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 8] != String::from('0') && file_name[dot_pos\
    \ - 8] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos - 9] != String::from('0') && file_name[dot_pos - 9] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 10] != String::from('0') && file_name[dot_pos - 10] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 11] !=\
    \ String::from('0') && file_name[dot_pos - 11] != String::from('9') {\n      \
    \  return String::from(\"No\");\n    }\n    if file_name[dot_pos - 12] != String::from('0')\
    \ && file_name[dot_pos - 12] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_", "    let mut first_char: char;\n    let\
    \ mut second_char: char;\n    let mut third_char: char;\n    let mut fourth_char:\
    \ char;\n    let mut fifth_char: char;\n    let mut sixth_char: char;\n    let\
    \ mut seventh_char: char;\n    let mut eighth_char: char;\n    let mut ninth_char:\
    \ char;\n    let mut tenth_char: char;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = true;\n\
    \    let mut second_char_valid = true;\n    let mut third_char_valid = true;\n\
    \    let mut fourth_char_valid = true;\n    let mut fifth_char_valid = true;\n\
    \    let mut sixth_char_valid = true;\n    let mut seventh_char_valid = true;\n\
    \    let mut eighth_char_valid = true;\n    let mut ninth_char_valid = true;\n\
    \    let mut tenth_char_valid = true;\n    let mut first_char_index = 0;\n   \
    \ let mut second_char_index = 0;\n    let mut third_char_index = 0;\n    let mut\
    \ fourth_char_index = 0;\n    let mut fifth_char_index = 0;\n    let mut sixth_char_index\
    \ = 0;\n    let mut seventh_char_index = 0;\n    let mut eighth_char_index = 0;\n\
    \    let mut ninth_char_index = 0;\n    let mut tenth_char_index = 0;\n    let\
    \ mut first_char_string = String::new();\n    let mut second_char_string = String::new();\n\
    \    let mut third_char_string = String::new();\n    let mut fourth_char_string\
    \ = String::new();\n    let mut fifth_char_string = String::new();\n    let mut\
    \ sixth_char_string = String::new();\n    let mut seventh_char_string = String::new();\n\
    \    let mut eighth_char_string = String::new();\n    let mut ninth_char_string\
    \ = String::new();\n    let mut tenth_char_string = String::new();\n    let mut\
    \ first_char_string = String::new();\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos = 0;\n   \
    \ let mut dot_pos_start_letter_pos_end = 0;\n    let mut dot_pos_end_letter_pos_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ \"No\"; }\n    \n    let mut dot_pos_1 = dot_pos;\n    let mut dot_pos_2 = dot_pos;\n\
    \    \n    while dot_pos_2 != String::npos {\n        if dot_pos_2 != dot_pos_1\
    \ + 1 {\n            if dot_pos_2 != dot_pos_1 + 2 {\n                if dot_pos_2\
    \ != dot_pos_1 + 3 {\n                    dot_pos_2 = String::npos;\n        \
    \        } else {\n                    dot_pos_2 = dot_pos_2 + 1;\n          \
    \      }\n            } else {\n                dot_pos_2 = dot_pos_2 + 1;\n \
    \           }\n        } else {\n            dot_pos_2 = dot_pos_2 + 1;\n    \
    \    }\n        dot_pos_1 = dot_pos_2;\n    }\n    \n    if dot_pos_1 != dot_pos\
    \ {\n        return \"No\";\n    } else {\n        return \"Yes\";\n    }", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return \"No\";\n    }\n    if dot_pos_2 > dot_pos + 1 {\n        return \"\
    No\";\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos { \n        return \"No\";\n    }\n    if dot_pos_3 > dot_pos_2\
    \ + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_4\
    \ > dot_pos_3 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_5\
    \ > dot_pos_4 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_6\
    \ > dot_pos_5 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_7\
    \ > dot_pos_6 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_8\
    \ > dot_pos_7 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_9\
    \ > dot_pos_8 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_10\
    \ > dot_pos_9 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return \"No\";\n    }\n    if dot_pos_11\
    \ > dot_pos_10 + 1 {\n        return \"No\";\n    }\n    let mut dot_pos_12 =\
    \ file_name.find('.')\n    if dot_pos_12 == String::npos { \n        return \"\
    No\";\n    }\n    if dot_pos_12 > ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n", "    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter >= 'a' && first_letter <= 'z' {\n        first_letter = first_letter\
    \ - 'a' + 1;\n    }\n    if first_letter >= 'A' && first_letter <= 'Z' {\n   \
    \     first_letter = first_letter - 'A' + 1;\n    }\n    if file_name.chars().count()\
    \ > 3 {\n        return \"No\";\n    }\n    if file_name.chars().count() == 1\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().next().unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().next().unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('", "    let mut first_char:\
    \ char;\n    let mut last_char: char;\n    let mut dot_index: usize;\n    let\
    \ mut dot_count: usize;\n    let mut dot_dot_index: usize;\n    let mut dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_index: usize;\n    let mut dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    while dot_pos < file_name.len() {\n        let mut\
    \ dot_pos = file_name.find('.', dot_pos);\n        if dot_pos == String::npos\
    \ { \n            return \"No\";\n        }\n        let mut dot_pos = dot_pos\
    \ + 1;\n        let mut dot_pos = file_name.find('.', dot_pos);\n        if dot_pos\
    \ == String::npos { \n            return \"No\";\n        }\n        let mut dot_pos\
    \ = dot_pos + 1;\n        let mut dot_pos = file_name.find('.', dot_pos);\n  \
    \      if dot_pos == String::npos { \n            return \"No\";\n        }\n\
    \        let mut dot_pos = dot_pos + 1;\n        let mut dot_pos = file_name.find('.',\
    \ dot_pos);\n        if dot_pos == String::npos { \n            return \"No\"\
    ;\n        }\n        let mut dot_pos = dot_pos + 1;\n        let mut dot_pos\
    \ = file_name.find('.', dot_pos);\n        if dot_pos == String::npos { \n   \
    \         return \"No\";\n        }\n        let mut dot_pos = dot_pos + 1;\n\
    \        let mut dot_pos = file_name.find('.', dot_pos);\n        if dot_pos ==\
    \ String::npos { \n            return \"No\";\n        }\n        let mut dot_pos\
    \ = dot_pos + 1;\n        let mut dot_pos = file_name.find('.', dot_pos);\n  \
    \      if dot_pos == String::npos { \n            return \"No\";\n        }\n\
    \        let mut dot_pos = dot_pos + 1;\n        let mut dot_pos = file_name.find('.',\
    \ dot_pos);\n        if dot_pos == String::npos { \n            return \"No\"\
    ;\n        }\n        let mut dot_pos = dot_pos + 1;\n        let mut dot_pos\
    \ = file_name.find('.', dot_pos);\n        if dot_pos == String::npos { \n   \
    \         return \"No\";\n        }\n        let mut dot_pos = dot_pos + 1;\n\
    \        let mut dot_pos = file_name.find('.', dot_pos);\n        if dot_pos ==\
    \ String::npos { \n            return \"No\";\n        }\n        let mut dot_pos\
    \ = dot_pos + 1;\n        let mut dot_pos = file_name.find('.', dot_pos);\n  \
    \      if dot_pos == String::npos { \n            return \"No\";\n        }\n\
    \        let mut dot_pos = dot_pos + 1;\n        let mut dot_pos = file_name.find('.',\
    \ dot_pos);\n        if dot_pos == String::npos { \n            return \"No\"\
    ;\n        }", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_pos_end = dot_pos;\n    let mut dot_pos_start = dot_pos;\n\
    \    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end.next_char();\n\
    \        if dot_pos_end == String::npos { \n            dot_pos_end = file_name.len();\n\
    \        }\n        if dot_pos_end < dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        if dot_pos_end < 3 {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start {\n      \
    \      dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end\
    \ < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n        }\n     \
    \   if dot_pos_end < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_end < dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start {\n      \
    \      dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end\
    \ < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n        }\n     \
    \   if dot_pos_end < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_end < dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start {\n      \
    \      dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end\
    \ < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n        }\n     \
    \   if dot_pos_end < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_end < dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start {\n      \
    \      dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end < dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_end\
    \ < dot_pos_start {\n            dot_pos_end = ", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut dot_pos = file_name_chars.next().unwrap().unwrap();\n\
    \    let mut dot_pos_is_empty = true;\n    let mut dot_pos_is_first_letter = true;\n\
    \    let mut dot_pos_is_last_letter = true;\n    let mut dot_pos_is_last_letter_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range = true;\n    let\
    \ mut dot_pos_is_last_letter_in_range_in_range_in_range = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range_in_range\
    \ = true;\n    let mut dot_pos_is_last_letter", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\";\n    }\n    if file_name.len() > 3 {\n        return \"\
    No\";\n    }\n    if file_name.len() == 3 {\n        if file_name[0] < 'a' ||\
    \ file_name[0] > 'z' {\n            return \"No\";\n        }\n    }\n    if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n        return \"No\";\n    }\n\
    \    if file_name[dot_pos + 1] < 'a' || file_name[dot_pos + 1] > 'z' {\n     \
    \   return \"No\";\n    }\n    if file_name[dot_pos + 2] != \"txt\" && file_name[dot_pos\
    \ + 2] != \"exe\" && file_name[dot_pos + 2] != \"dll\" {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ \"No\" }\n    else if dot_pos == 0 { return \"No\" }\n    else if file_name[dot_pos\
    \ - 1] == '.' { return \"No\" }\n    else if file_name[dot_pos - 1] < 'a' || file_name[dot_pos\
    \ - 1] > 'z' { return \"No\" }\n    else if file_name[dot_pos - 1] == '.' {\n\
    \        let dot_pos_2 = file_name.find('.')\n        if dot_pos_2 == String::npos\
    \ { return \"No\" }\n        else if dot_pos_2 == 0 { return \"No\" }\n      \
    \  else if file_name[dot_pos_2 - 1] < 'a' || file_name[dot_pos_2 - 1] > 'z' {\
    \ return \"No\" }\n        else if file_name[dot_pos_2 - 1] == '.' {\n       \
    \     let dot_pos_3 = file_name.find('.')\n            if dot_pos_3 == String::npos\
    \ { return \"No\" }\n            else if dot_pos_3 == 0 { return \"No\" }\n  \
    \          else if file_name[dot_pos_3 - 1] < 'a' || file_name[dot_pos_3 - 1]\
    \ > 'z' { return \"No\" }\n            else if file_name[dot_pos_3 - 1] == '.'\
    \ {\n                let dot_pos_4 = file_name.find('.')\n                if dot_pos_4\
    \ == String::npos { return \"No\" }\n                else if dot_pos_4 == 0 {\
    \ return \"No\" }\n                else if file_name[dot_pos_4 - 1] < 'a' || file_name[dot_pos_4\
    \ - 1] > 'z' { return \"No\" }\n                else if file_name[dot_pos_4 -\
    \ 1] == '.' {\n                    let dot_pos_5 = file_name.find('.')\n     \
    \               if dot_pos_5 == String::npos { return \"No\" }\n             \
    \       else if dot_pos_5 == 0 { return \"No\" }\n                    else if\
    \ file_name[dot_pos_5 - 1] < 'a' || file_name[dot_pos_5 - 1] > 'z' { return \"\
    No\" }\n                    else if file_name[dot_pos_5 - 1] == '.' {\n      \
    \                  let dot_pos_6 = file_name.find('.')\n                     \
    \   if dot_pos_6 == String::npos { return \"No\" }\n                        else\
    \ if dot_pos_6 == 0 { return \"No\" }\n                        else if file_name[dot_pos_6\
    \ - 1] < 'a' || file_name[dot_pos_6 - 1] > 'z' { return \"No\" }\n           \
    \             else if file_name[dot_pos_6 - 1] == '.' {\n                    \
    \        let dot_pos_7 = file_name.find('.')\n                            if dot_pos_7\
    \ == String::npos { return \"No\" }\n                            else if dot_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    \n    if\
    \ file_name[dot_pos - 1] == '0' {\n        return \"No\";\n    }\n    \n    if\
    \ file_name[dot_pos - 1] == '9' {\n        return \"No\";\n    }\n    \n    if\
    \ file_name[dot_pos - 1] != '.' {\n        return \"No\";\n    }\n    \n    if\
    \ file_name[dot_pos - 1] != file_name[dot_pos - 1].chars().filter(|c| c >= 'a'\
    \ && c <= 'z' || c >= 'A' && c <= 'Z').count() > 0 {\n        return \"No\";\n\
    \    }\n    \n    if file_name[dot_pos - 1] != file_name[dot_pos - 1].chars().filter(|c|\
    \ c == '.' || c == '_').count() > 0 {\n        return \"No\";\n    }\n    \n \
    \   if file_name[dot_pos - 1] != file_name[dot_pos - 1].chars().filter(|c| c ==\
    \ '_' || c == '.').count() > 0 {\n        return \"No\";\n    }\n    \n    if\
    \ file_name[dot_pos - 1] != file_name[dot_pos - 1].chars().filter(|c| c >= 'a'\
    \ && c <= 'z' || c >= 'A' && c <= 'Z' || c == '_' || c == '.').count() > 0 {\n\
    \        return \"No\";\n    }\n    \n    return \"Yes\";", "    let mut first_letter\
    \ = file_name[0];\n    if first_letter >= 'a' && first_letter <= 'z' {\n     \
    \   first_letter += 'A' - 'a';\n    }\n    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.len() == 0 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.len() == 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.len() == 2 && file_name[1] !=\
    \ '.' {\n        return String::from(\"No\");\n    }\n    if file_name.len() ==\
    \ 2 && file_name[1] == '.' {\n        if file_name[0] >= 'a' && file_name[0] <=\
    \ 'z' {\n            first_letter += 'A' - 'a';\n        }\n        if file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z' {\n            first_letter += 'a' - 'A';\n  \
    \      }\n        if file_name[0] >= '0' && file_name[0] <= '9' {\n          \
    \  return String::from(\"No\");\n        }\n    }\n    if file_name.len() == 2\
    \ && file_name[1] == '.' && file_name[0] >= 'a' && file_name[0] <= 'z' {\n   \
    \     first_letter += 'A' - 'a';\n    }\n    if file_name.len() == 2 && file_name[1]\
    \ == '.' && file_name[0] >= 'A' && file_name[0] <= 'Z' {\n        first_letter\
    \ += 'a' - 'A';\n    }\n    if file_name.len() == 2 && file_name[1] == '.' &&\
    \ file_name[0] >= '0' && file_name[0] <= '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() == 2 && file_name[1] == '.' && file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' && file_name[0] >= 'A' && file_name[0] <= 'Z'\
    \ {\n        first_letter += 'A' - 'a';\n    }\n    if file_name.len() == 2 &&\
    \ file_name[1] == '.' && file_name[0] >= 'A' && file_name[0] <= 'Z' && file_name[0]\
    \ >= 'a' && file_name[0] <= 'z' {\n        first_letter += 'a' - 'A';\n    }\n\
    \    if file_name.len() == 2 && file_name[1] == '.' && file_name[0] >= '0' &&\
    \ file_name[0] <= '9' && file_name[0] >= 'a' && file_name[0] <= 'z' && file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z' {\n        first_letter += 'A' - 'a';\n    }\n\
    \    if file_name.len() == 2 && file_name[1] == '.' && file_name[0] >= 'A' &&\
    \ file_name[0] <= 'Z' && file_name[0] >= 'a' && file_name[0] <= 'z' && file_name[0]\
    \ >= '0' && file_name[0] <= '9", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start < dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start ==\
    \ dot_pos_end + 2 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 3 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 4 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 5 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 6 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 7 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 8 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 9 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 10 {\n        return String::from(\"Yes\");\n    }\n    if\
    \ dot_pos_start == dot_pos_end + 11 {\n        return String::from(\"Yes\");\n\
    \    }\n    if dot_pos_start == dot_pos_end + 12 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 13 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains('.')\
    \ {\n        file_name.truncate(file_name.find('.'));\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        file_name.truncate(0);\n    }\n\
    \    if file_name.ends_with(\"txt\") || file_name.ends_with(\"exe\") || file_name.ends_with(\"\
    dll\") {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = false;\n    while dot_pos_start\
    \ != dot_pos_end {\n        let mut dot_pos_letter = dot_pos_start.chars().next().unwrap();\n\
    \        if dot_pos_letter == 'a' || dot_pos_letter == 'A' {\n            dot_pos_start_letter\
    \ = true;\n        }\n        if dot_pos_letter == '0' || dot_pos_letter == '9'\
    \ {\n            break;\n        }\n        dot_pos_start = dot_pos_start + 1;\n\
    \        dot_pos_letter = dot_pos_start.chars().next().unwrap();\n    }\n    if\
    \ dot_pos_start_letter == false {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos_start == dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n", "    let mut file_name\
    \ : String = file_name;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mu", "    let mut file_name\
    \ = file_name.to_string();\n    if file_name.len() > 3 {\n        file_name.truncate(3);\n\
    \    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\"));\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") {\n        file_name.truncate(1);\n    }\n    if file_name.contains(\".\"\
    ) {\n        file_name.truncate(file_name.rfind(\".\"));\n    }\n    if file_name.ends_with(\"\
    txt\") || file_name.ends_with(\"exe\") || file_name.ends_with(\"dll\") {\n   \
    \     return \"Yes\";\n    }\n    return \"No\";", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos as\
    \ usize;\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = dot_pos_2\
    \ as usize;\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3\
    \ = dot_pos_3 as usize;\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_4 = dot_pos_4 as usize;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = dot_pos_5 as usize;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = dot_pos_6 as usize;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = dot_pos_7 as usize;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = dot_pos_8 as usize;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = dot_pos_9 as usize;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = dot_pos_10 as usize;\n    let mut dot_pos_11 =\
    \ file_name.find('.')\n    if dot_pos_11 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_11 = dot_pos_11 as usize;\n    let mut dot_pos_12\
    \ = file_name.find('.')\n    if dot_pos_", "    let mut file_name_chars = file_name.to_chars();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_chars.next();\n\
    \    file_name_chars.next();\n    file_name_chars.next();\n    file_name_", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    let mut dot_len2 = dot_len;\n    while dot_len2 > dot_pos {\n        dot_len2\
    \ -= 1;\n        if file_name[dot_len2] != '0' && file_name[dot_len2] != '1' &&\n\
    \            file_name[dot_len2] != '2' && file_name[dot_len2] != '3' &&\n   \
    \         file_name[dot_len2] != '4' && file_name[dot_len2] != '5' &&\n      \
    \      file_name[dot_len2] != '6' && file_name[dot_len2] != '7' &&\n         \
    \   file_name[dot_len2] != '8' && file_name[dot_len2] != '9' &&\n            file_name[dot_len2]\
    \ != 'A' && file_name[dot_len2] != 'B' &&\n            file_name[dot_len2] !=\
    \ 'C' && file_name[dot_len2] != 'D' &&\n            file_name[dot_len2] != 'E'\
    \ && file_name[dot_len2] != 'F' &&\n            file_name[dot_len2] != 'G' &&\
    \ file_name[dot_len2] != 'H' &&\n            file_name[dot_len2] != 'I' && file_name[dot_len2]\
    \ != 'J' &&\n            file_name[dot_len2] != 'K' && file_name[dot_len2] !=\
    \ 'L' &&\n            file_name[dot_len2] != 'M' && file_name[dot_len2] != 'N'\
    \ &&\n            file_name[dot_len2] != 'O' && file_name[dot_len2] != 'P' &&\n\
    \            file_name[dot_len2] != 'Q' && file_name[dot_len2] != 'R' &&\n   \
    \         file_name[dot_len2] != 'S' && file_name[dot_len2] != 'T' &&\n      \
    \      file_name[dot_len2] != 'U' && file_name[dot_len2] != 'V' &&\n         \
    \   file_name[dot_len2] != 'W' && file_name[dot_len2] != 'X' &&\n            file_name[dot_len2]\
    \ != 'Y' && file_name[dot_len2] != 'Z' &&\n            file_name[dot_len2] !=\
    \ 'a' && file_name[dot_len2] != 'b' &&\n            file_name[dot_len2] != 'c'\
    \ && file_name[dot_len2] != 'd' &&\n            file_name[dot_len2] != 'e' &&\
    \ file_name[dot_len2] != 'f' &&\n            file_name[dot_len2] != 'g' && file_name[dot_len2]\
    \ != 'h' &&\n            file_name[dot_len2] != 'i' && file_name[", "    let mut\
    \ counter = 0;\n    for c in file_name.chars() {\n        if !c.is_ascii_letter()\
    \ || c.is_ascii_digit() {\n            counter = counter + 1;\n        }\n   \
    \     if c.is_ascii_dot() {\n            if counter > 3 {\n                return\
    \ \"No\";\n            }\n            counter = counter + 1;\n        }\n    \
    \    if counter > 1 {\n            return \"No\";\n        }\n    }\n    return\
    \ \"Yes\";", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7\
    \ = file_name.find('.')\n    if dot_pos_7 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_len = dot_pos_end\
    \ - dot_pos_start;\n    let mut dot_pos_len2 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len3 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len4\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len5 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len6 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len7\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len8 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len9 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len10\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len11 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len12 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len13\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len14 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len15 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len16\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len17 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len18 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len19\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len20 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len21 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len22\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len23 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len24 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len25\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len26 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len27 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len28\
    \ = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len29 = dot_pos_end - dot_pos_start;\n\
    \    let mut dot_pos_len30 = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len31\
    \ = dot_pos_end - dot_pos_start;\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ \"No\" }\n    else if dot_pos == 0 { file_name.insert(0, '.') }\n    else if\
    \ file_name[dot_pos-1] != '.' { return \"No\" }\n    let mut first_letter = file_name[0];\n\
    \    if first_letter != 'a' && first_letter != 'A' { return \"No\" }\n    else\
    \ if file_name.len() != 2 { return \"No\" }\n    else if file_name[1] != '.' {\
    \ return \"No\" }\n    else if file_name[0] < 'a' || file_name[0] > 'z' { return\
    \ \"No\" }\n    else if file_name[0] < 'A' || file_name[0] > 'Z' { return \"No\"\
    \ }\n    else if file_name[1] < 'a' || file_name[1] > 'z' { return \"No\" }\n\
    \    else if file_name[1] < 'A' || file_name[1] > 'Z' { return \"No\" }\n    else\
    \ if file_name[0] > '9' || file_name[0] < '0' { return \"No\" }\n    else if file_name[1]\
    \ > '9' || file_name[1] < '0' { return \"No\" }\n    else if file_name[0] > '9'\
    \ || file_name[0] < '0' { return \"No\" }\n    else if file_name[1] > '9' || file_name[1]\
    \ < '0' { return \"No\" }\n    else if file_name[0] > '9' || file_name[0] < '0'\
    \ { return \"No\" }\n    else if file_name[1] > '9' || file_name[1] < '0' { return\
    \ \"No\" }\n    else if file_name[0] > '9' || file_name[0] < '0' { return \"No\"\
    \ }\n    else if file_name[1] > '9' || file_name[1] < '0' { return \"No\" }\n\
    \    else if file_name[0] > '9' || file_name[0] < '0' { return \"No\" }\n    else\
    \ if file_name[1] > '9' || file_name[1] < '0' { return \"No\" }\n    else if file_name[0]\
    \ > '9' || file_name[0] < '0' { return \"No\" }\n    else if file_name[1] > '9'\
    \ || file_name[1] < '0' { return \"No\" }\n    else if file_name[0] > '9' || file_name[0]\
    \ < '0' { return \"No\" }\n    else if file_name[1] > '9' || file_name[1] < '0'\
    \ { return \"No\" }\n    else if file_name[0] > '9' || file_name[0] < '0' { return\
    \ \"No\" }\n    else if file_name[1] > '9' || file_name[1] < '0' { return \"No\"\
    \ }\n    else if file_name[0] > '9' || file_name[0] < ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos {\n        return String::from(\"No\");\n    }\n \
    \   if dot_index == 0 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        if file_name[0] < 'a' || file_name[0] > 'z' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[1] < 'a' || file_name[1]\
    \ > 'z' {\n            return String::from(\"No\");\n        }\n        if file_name[2]\
    \ < 'a' || file_name[2] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n    }\n    if file_name.chars().count() == 1 {\n        if file_name[0]\
    \ < 'a' || file_name[0] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 {\n        if file_name[0]\
    \ < 'a' || file_name[0] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n        if file_name[1] < 'a' || file_name[1] > 'z' {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    if file_name.chars().count() ==\
    \ 3 {\n        if file_name[0] < 'a' || file_name[0] > 'z' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[1] < 'a' || file_name[1]\
    \ > 'z' {\n            return String::from(\"No\");\n        }\n        if file_name[2]\
    \ < 'a' || file_name[2] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n    }\n    if file_name.chars().count() == 4 {\n        if file_name[0]\
    \ < 'a' || file_name[0] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n        if file_name[1] < 'a' || file_name[1] > 'z' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[2] < 'a' || file_name[2]\
    \ > 'z' {\n            return String::from(\"No\");\n        }\n        if file_name[3]\
    \ < 'a' || file_name[3] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n    }\n    if file_name.chars().count() == 5 {\n        if file_name[0]\
    \ < 'a' || file_name[0] > 'z' {\n            return String::from(\"No\");\n  \
    \      }\n        if file_name[1]", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if\
    \ dot_pos_4 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n    if\
    \ dot_pos_9 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_10\
    \ = file_name.find('.')\n    if dot_pos_10 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11\
    \ == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_14 = file_name.find('.')\n   \
    \ if dot_pos_14 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_16 = file_name.find('.')\n   \
    \ if dot_pos_16 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_17 = file_name.find('.')\n    if dot_pos_17 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_18 = file_name.find('.')\n   \
    \ if dot_pos_18 == String::npos {\n        return \"No", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_letter = String::new();\n    let mut dot_pos_letter_end\
    \ = String::new();\n    let mut dot_pos_letter_start = String::new();\n    let\
    \ mut dot_pos_letter_start_letter = String::new();\n    let mut dot_pos_letter_end_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter = String::new();\n    let\
    \ mut dot_pos_letter_letter_end = String::new();\n    let mut dot_pos_letter_letter_start\
    \ = String::new();\n    let mut dot_pos_letter_letter_start_letter = String::new();\n\
    \    let mut dot_pos_letter_letter_end_letter = String::new();\n    let mut dot_pos_letter_letter_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_end = String::new();\n\
    \    let mut dot_pos_letter_letter_letter_start = String::new();\n    let mut\
    \ dot_pos_letter_letter_letter_start_letter = String::new();\n    let mut dot_pos_letter_letter_letter_end_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter = String::new();\n\
    \    let mut dot_pos_letter_letter_letter_letter_end = String::new();\n    let\
    \ mut dot_pos_letter_letter_letter_letter_start = String::new();\n    let mut\
    \ dot_pos_letter_letter_letter_letter_start_letter = String::new();\n    let mut\
    \ dot_pos_letter_letter_letter_letter_end_letter = String::new();\n    let mut\
    \ dot_pos_letter_letter_letter_letter_letter = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_end\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_start\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_start_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_end_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_end\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_start\
    \ = String::new();\n    let mut dot_pos_letter_letter_letter_letter_letter_start_letter\
    \ = String::new();\n    let mut dot_pos_letter_letter_", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos_2 > dot_pos {\n        return String::from(\"No\");\n   \
    \ }\n    if dot_pos_3 > dot_pos_2 {\n        return String::from(\"No\");\n  \
    \  }\n    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2 - 1]\
    \ < 'a' || file_name[dot_pos_2 - 1] > 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos_3 - 1] < 'a' || file_name[dot_pos_3 - 1] >\
    \ 'z' {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 2 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 2 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 3 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 3 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 4 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 4 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 5 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 5 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ + 6 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_3\
    \ + 6 {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.len() > 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a'\
    \ && c != 'z' || c != 'A' && c != 'Z') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0' && c\
    \ != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'\
    \ && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '.') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0' && c != '9' || c != 'a' && c != 'z' || c !=\
    \ 'A' && c != 'Z' || c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n \
    \       return String::from(\"No\");\n    }\n    String::from(\"Yes\")", "   \
    \ let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if\
    \ dot_pos_3 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if\
    \ dot_pos_8 == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_11 =\
    \ file_name.find('.')\n    if dot_pos_11 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_13 =\
    \ file_name.find('.')\n    if dot_pos_13 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_15 =\
    \ file_name.find('.')\n    if dot_pos_15 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16\
    \ == String::npos { \n        return \"No\";\n    }\n    let mut dot_pos_17 =\
    \ file_name.find('.')\n    if dot_pos_17 == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_pos_18 = file_name.find('.')\n    if dot_pos_18\
    \ == String::npos { \n        return \"No", "    let mut first_char: char;\n \
    \   let mut second_char: char;\n    let mut third_char: char;\n    let mut fourth_char:\
    \ char;\n    let mut fifth_char: char;\n    let mut sixth_char: char;\n    let\
    \ mut seventh_char: char;\n    let mut eighth_char: char;\n    let mut ninth_char:\
    \ char;\n    let mut tenth_char: char;\n    let mut first_char_valid: char;\n\
    \    let mut second_char_valid: char;\n    let mut third_char_valid: char;\n \
    \   let mut fourth_char_valid: char;\n    let mut fifth_char_valid: char;\n  \
    \  let mut sixth_char_valid: char;\n    let mut seventh_char_valid: char;\n  \
    \  let mut eighth_char_valid: char;\n    let mut ninth_char_valid: char;\n   \
    \ let mut tenth_char_valid: char;\n    let mut first_char_valid: char;\n    let\
    \ mut second_char_valid: char;\n    let mut third_char_valid: char;\n    let mut\
    \ fourth_char_valid: char;\n    let mut fifth_char_valid: char;\n    let mut sixth_char_valid:\
    \ char;\n    let mut seventh_char_valid: char;\n    let mut eighth_char_valid:\
    \ char;\n    let mut ninth_char_valid: char;\n    let mut tenth_char_valid: char;\n\
    \    let mut first_char_valid: char;\n    let mut second_char_valid: char;\n \
    \   let mut third_char_valid: char;\n    let mut fourth_char_valid: char;\n  \
    \  let mut fifth_char_valid: char;\n    let mut sixth_char_valid: char;\n    let\
    \ mut seventh_char_valid: char;\n    let mut eighth_char_valid: char;\n    let\
    \ mut ninth_char_valid: char;\n    let mut tenth_char_valid: char;\n    let mut\
    \ first_char_valid: char;\n    let mut second_char_valid: char;\n    let mut third_char_valid:\
    \ char;\n    let mut fourth_char_valid: char;\n    let mut fifth_char_valid: char;\n\
    \    let mut sixth_char_valid: char;\n    let mut seventh_char_valid: char;\n\
    \    let mut eighth_char_", "    let mut file_name : String = file_name;\n   \
    \ let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize\
    \ = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n \
    \   let mut dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut\
    \ dot_pos : usize = 0;\n    let mut dot_pos : usize = 0;\n    let mut dot_pos\
    \ : usize = 0;\n    let mu", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.len() == 3 {\n \
    \       if file_name[0] < 'a' || file_name[0] > 'z' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos\
    \ - 1] > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 1] < 'a' || file_name[dot_pos + 1] > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 2] != 'txt' && file_name[dot_pos + 2]\
    \ != 'exe' && file_name[dot_pos + 2] != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_index = file_name.find('.')\n    if dot_index == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_index = file_name.find('.')\n    if dot_index == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_index = file_name.find('.')\n    if dot_index == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_index = file_name.find('.')\n    if dot_index == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_index = file_name.find('.')\n    if dot_index == String::npos { \n \
    \       return String", "    let mut first_char: u8 = 0;\n    let mut second_char:\
    \ u8 = 0;\n    let mut third_char: u8 = 0;\n    let mut fourth_char: u8 = 0;\n\
    \    let mut fifth_char: u8 = 0;\n    let mut sixth_char: u8 = 0;\n    let mut\
    \ seventh_char: u8 = 0;\n    let mut eighth_char: u8 = 0;\n    let mut ninth_char:\
    \ u8 = 0;\n    let mut tenth_char: u8 = 0;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let mut seventh_char_valid = false;\n\
    \    let mut eighth_char_valid = false;\n    let mut ninth_char_valid = false;\n\
    \    let mut tenth_char_valid = false;\n    let mut first_char_valid = false;\n\
    \    let mut second_char_valid = false;\n    let mut third_char_valid = false;\n\
    \    let mut fourth_char_valid = false;\n    let mut fifth_char_valid = false;\n\
    \    let mut sixth_char_valid = false;\n    let ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_start..dot_pos_end.find(|&x|\
    \ x == char::from_u32(95).unwrap());\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end + 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end + 1;\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n \
    \           dot_pos_end = dot_pos_end + 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end + 1;\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n \
    \           dot_pos_end = dot_pos_end + 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end + 1;\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n \
    \           dot_pos_end = dot_pos_end + 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end + 1;\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end + 1;\n        }\n        if dot_pos_end == dot_pos_start {\n \
    \           dot_pos_end = dot_pos_end + 1;\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end + 1;\n", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    \n    let\
    \ mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n \
    \       return \"No\"\n    }\n    \n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return \"No\"\n    }\n    \n  \
    \  let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return \"No\"\n    }\n    \n  \
    \  let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return \"No\"\n    }\n    \n  \
    \  let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_pos_17 = file_name.find('.')\n\
    \    if dot_pos_17 == String::npos { ", "    if file_name.len() > 3 {\n      \
    \  String::from(\"\")\n    } else {\n        let mut dot_index = file_name.rfind('.')\n\
    \        if dot_index == String::npos {\n            String::from(\"\")\n    \
    \    } else {\n            let mut dot_string = file_name[dot_index..].to_string();\n\
    \            if dot_string.len() != 1 || dot_string[0] != 'a' || dot_string[0]\
    \ != 'A' || dot_string[0] != 'z' || dot_string[0] != 'Z' {\n                String::from(\"\
    \")\n            } else {\n                dot_string = dot_string[1..].to_string();\n\
    \                if dot_string.len() != 1 || dot_string[0] != '0' || dot_string[0]\
    \ != '9' {\n                    String::from(\"\")\n                } else {\n\
    \                    String::from(\"Yes\")\n                }\n            }\n\
    \        }\n    }", "    let mut file_name = file_name.to_string();\n    if file_name.len()\
    \ > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains('.')\
    \ {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"\
    9\") {\n        file_name.truncate(0);\n    }\n    if file_name.contains(\".\"\
    ) {\n        file_name.truncate(file_name.rfind(\".\") + 1);\n    }\n    if file_name.contains(\"\
    .\") {\n        file_name.truncate(file_name.rfind(\".\") + 1);\n    }\n    if\
    \ file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\".\"\
    ) + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind(\"\
    .\") + 1);\n    }\n    if file_name.contains(\"", "    let mut file_name_len =\
    \ file_name.len();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_len = dot_pos - file_name.len() - 1;\n    while dot_len > 0 {\n        if\
    \ file_name[dot_len] != '0' && file_name[dot_len] != '9' {\n            return\
    \ String::from(\"No\");\n        }\n        dot_len -= 1;\n    }\n    let mut\
    \ first_letter = file_name[0];\n    if first_letter != 'a' && first_letter !=\
    \ 'A' {\n        return String::from(\"No\");\n    }\n    let mut last_letter\
    \ = file_name[file_name_len - 1];\n    if last_letter != 'z' && last_letter !=\
    \ 'Z' {\n        return String::from(\"No\");\n    }\n    String::from(\"\")",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n", "    let mut file_name = file_name.to_string();\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\"\n    }\n    \n    let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return \"No\"\n  \
    \  }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_name = file_name[dot_index..].chars().next().unwrap();\n\
    \    if dot_name.is_empty() {\n        return \"No\"\n    }\n    \n    if dot_name.len()\
    \ != 3 {\n        return \"No\"\n    }\n    \n    if dot_name[0] < 'a' || dot_name[0]\
    \ > 'z' {\n        return \"No\"\n    }\n    \n    if dot_name[1] < 'a' || dot_name[1]\
    \ > 'z' {\n        return \"No\"\n    }\n    \n    if dot_name[2] < 'a' || dot_name[2]\
    \ > 'z' {\n        return \"No\"\n    }\n    \n    return \"Yes\"", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n \
    \       if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z'\
    \ {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] != '0' && file_name[dot_pos_start]\
    \ != '9' {\n            return \"No\";\n        }\n        if dot_pos_start ==\
    \ dot_pos_end {\n            break;\n        }\n    }\n    return \"Yes\";", " \
    \   let mut first_char: u8 = 0;\n    let mut second_char: u8 = 0;\n    let mut\
    \ third_char: u8 = 0;\n    let mut fourth_char: u8 = 0;\n    let mut fifth_char:\
    \ u8 = 0;\n    let mut sixth_char: u8 = 0;\n    let mut seventh_char: u8 = 0;\n\
    \    let mut eighth_char: u8 = 0;\n    let mut ninth_char: u8 = 0;\n    let mut\
    \ tenth_char: u8 = 0;\n    let mut first_char_str: String = String::new();\n \
    \   let mut second_char_str: String = String::new();\n    let mut third_char_str:\
    \ String = String::new();\n    let mut fourth_char_str: String = String::new();\n\
    \    let mut fifth_char_str: String = String::new();\n    let mut sixth_char_str:\
    \ String = String::new();\n    let mut seventh_char_str: String = String::new();\n\
    \    let mut eighth_char_str: String = String::new();\n    let mut ninth_char_str:\
    \ String = String::new();\n    let mut tenth_char_str: String = String::new();\n\
    \    let mut first_char_str_index: usize = 0;\n    let mut second_char_str_index:\
    \ usize = 0;\n    let mut third_char_str_index: usize = 0;\n    let mut fourth_char_str_index:\
    \ usize = 0;\n    let mut fifth_char_str_index: usize = 0;\n    let mut sixth_char_str_index:\
    \ usize = 0;\n    let mut seventh_char_str_index: usize = 0;\n    let mut eighth_char_str_index:\
    \ usize = 0;\n    let mut ninth_char_str_index: usize = 0;\n    let mut tenth_char_str_index:\
    \ usize = 0;\n    let mut first_char_str_index2: usize = 0;\n    let mut second_char_str_index2:\
    \ usize = 0;\n    let mut third_char_str_index2: usize = 0;\n    let mut fourth_char_str_index2:\
    \ usize = 0;\n    let mut fifth_char_str_index2: usize = 0;\n    let mut sixth_char_str_index2:\
    \ usize = 0;\n    let mut seventh_char_str_index2: usize = 0;\n    let mut eighth_char_str_index2:\
    \ usize = 0;\n    let mut ninth_char_str_index2: usize = 0;\n    let mut tenth_char_str_index2:\
    \ usize = 0;\n    let mut first_char_str_index3: usize = 0;\n", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ \n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    \n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        \n        if dot_pos_end == dot_pos_start {\n      \
    \      dot_pos_end += 1;\n        }\n        \n        let mut dot_pos_start =\
    \ dot_pos_start;\n        \n        if dot_pos_start < dot_pos_end {\n       \
    \     let mut dot_pos_start = dot_pos_start;\n            \n            if dot_pos_start\
    \ < dot_pos_end {\n                let mut dot_pos_start = dot_pos_start;\n  \
    \              \n                if dot_pos_start < dot_pos_end {\n          \
    \          let mut dot_pos_start = dot_pos_start;\n                    \n    \
    \                if dot_pos_start < dot_pos_end {\n                        let\
    \ mut dot_pos_start = dot_pos_start;\n                        \n             \
    \           if dot_pos_start < dot_pos_end {\n                            let\
    \ mut dot_pos_start = dot_pos_start;\n                            \n         \
    \                   if dot_pos_start < dot_pos_end {\n                       \
    \         let mut dot_pos_start = dot_pos_start;\n                           \
    \     \n                                if dot_pos_start < dot_pos_end {\n   \
    \                                 let mut dot_pos_start = dot_pos_start;\n   \
    \                                 \n                                    if dot_pos_start\
    \ < dot_pos_end {\n                                        let mut dot_pos_start\
    \ = dot_pos_start;\n                                        \n               \
    \                         if dot_pos_start < dot_pos_end {\n                 \
    \                           let mut dot_pos_start = dot_pos_start;\n         \
    \                                   \n                                       \
    \     if dot_pos_start < dot_pos_end {\n                                     \
    \           let mut dot_pos_start = dot_pos_start;\n                         \
    \                       \n                                                if dot_pos_start\
    \ < dot_pos_end {\n                                                    let mut\
    \ dot_pos_start = dot_pos_start;\n                                           \
    \         \n                                                    if dot_pos_start\
    \ < dot_pos_end {\n                                                        let\
    \ mut dot_pos_start = dot_pos_start;\n                                       \
    \                 \n                                                        if\
    \ dot_pos_start < dot_pos_end {\n                                            \
    \                let mut dot_pos_start = dot_pos_start;\n                    \
    \                                        \n                                  \
    \                          if dot_pos_start < dot_pos_end {\n                \
    \                                                let mut dot_pos_start = dot_pos_start;\n\
    \                                                                \n          \
    \                                                      if dot_pos_start < dot_pos_end\
    \ {\n                                                                    let mut\
    \ dot_pos_start = dot_pos_start;\n                                           \
    \                         \n                                                 \
    \                   if dot_pos_start < dot_pos_end {\n                       \
    \                                                 let mut dot_pos_start = dot_pos_start;\n\
    \                                                                        \n  \
    \                                                                      if dot_pos_start\
    \ < dot_pos_end {\n", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15\
    \ == String::npos { \n        return String::from(\"", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end = dot_pos_end;\n    let mut ",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\"\n    }\n    if file_name.len()\
    \ > 3 {\n        return \"No\"\n    }\n    if file_name.starts_with(\"0\") ||\
    \ file_name.starts_with(\"1\") || file_name.starts_with(\"2\") || file_name.starts_with(\"\
    3\") || file_name.starts_with(\"4\") || file_name.starts_with(\"5\") || file_name.starts_with(\"\
    6\") || file_name.starts_with(\"7\") || file_name.starts_with(\"8\") || file_name.starts_with(\"\
    9\") {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_whitespace())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_control())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_newline())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_formfeed())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_return())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_tab())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_vertical_tab())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_horizontal_tab())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|c| !c.is_ascii_backspace())\
    \ {\n        return \"No\"\n    }\n    if file_name.chars().any(|", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { return \"No\" }\n    if file_name[dot_pos - 1] !=\
    \ '.' { return \"No\" }\n    if file_name[dot_pos - 2] != '0' && file_name[dot_pos\
    \ - 2] != '9' { return \"No\" }\n    if file_name[dot_pos - 1] == file_name[dot_pos\
    \ - 2] {\n        file_name.truncate(dot_pos - 1);\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) { return \"No\" }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ { return \"No\" }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ { return \"No\" }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation())\
    \ { return \"No\" }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) { return\
    \ \"No\" }\n    return \"Yes\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let\
    \ mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < dot_pos_end {\n\
    \        let mut dot_pos_end = dot_pos_end;\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }", "    let mut counter = 0;\n  \
    \  for c in file_name.chars() {\n        if !c.is_ascii_letter() {\n         \
    \   return format!(\"No\");\n        }\n        if c.is_ascii_letter() && counter\
    \ < 3 {\n            counter = counter + 1;\n        }\n        if c.is_ascii_letter()\
    \ && counter == 3 && c != '.' {\n            return format!(\"No\");\n       \
    \ }\n        if c.is_ascii_letter() && counter == 3 && c == '.' {\n          \
    \  if !file_name.chars().next().unwrap().is_ascii_letter() {\n               \
    \ return format!(\"No\");\n            }\n        }\n    }\n    return \"Yes\"\
    ;", "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n", "    if file_name.len() > 3 {\n        return \"No\";\n    }\n    if file_name.contains(\"\
    .\") {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_whitespace())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_control())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graph())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_print())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphical())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphic())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_printable())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphical())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphic())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_printable())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphical())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphic())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_printable())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphical())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graphic())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_print",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_2\
    \ = file_name.find('.')\n    if dot_pos_2 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if\
    \ dot_pos_6 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_7\
    \ = file_name.find('.')\n    if dot_pos_7 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 ==\
    \ String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n   \
    \ if dot_pos_11 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_13 = file_name.find('.')\n   \
    \ if dot_pos_13 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_15 = file_name.find('.')\n   \
    \ if dot_pos_15 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_17 = file_name.find('.')\n   \
    \ if dot_pos_17 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_18 = file_name.find('.')\n    if dot_pos_18 == String::npos {\n    \
    \    return \"No", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String", "    let mut first_letter = file_name[0];\n    let\
    \ mut last_letter = file_name[file_name.len() - 1];\n    if first_letter != 'a'\
    \ && first_letter != 'A' {\n        first_letter = 'a';\n    }\n    if last_letter\
    \ != 'z' && last_letter != 'Z' {\n        last_letter = 'z';\n    }\n    if file_name.len()\
    \ != 3 || file_name.contains('.') != true || file_name.starts_with(first_letter)\
    \ != true || file_name.ends_with(last_letter) != true {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name_len > 3 {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != String::from('0')\
    \ && file_name[dot_pos - 1] != String::from('1') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 2] != String::from('a') && file_name[dot_pos\
    \ - 2] != String::from('z') && file_name[dot_pos - 2] != String::from('A') &&\
    \ file_name[dot_pos - 2] != String::from('Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 3] != String::from('txt') && file_name[dot_pos\
    \ - 3] != String::from('exe') && file_name[dot_pos - 3] != String::from('dll')\
    \ {\n        return String::from(\"No\");\n    }\n    return String::from(\"Yes\"\
    );", "    let mut file_name_chars = file_name.chars();\n    let mut file_name_chars_iter\
    \ = file_name_chars.iter();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n\
    \    let mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let\
    \ mut file_name_chars_iter = file_name_chars_iter.peekable();\n    let mut file_name_chars_iter\
    \ = file_name_chars_iter.peekable();\n    let mut file_name_chars_", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_next = dot_pos + 1;\n    while dot_pos_next < file_name.len()\
    \ {\n        let mut dot_pos_next = dot_pos_next;\n        let mut dot_pos_prev\
    \ = dot_pos_prev + 1;\n        if dot_pos_prev == dot_pos {\n            if file_name[dot_pos_prev]\
    \ == '0' {\n                return String::from(\"No\");\n            }\n    \
    \    }\n        if dot_pos_prev == dot_pos_next {\n            if file_name[dot_pos_prev]\
    \ == '9' {\n                return String::from(\"No\");\n            }\n    \
    \    }\n        if dot_pos_prev == dot_pos_next - 1 && dot_pos_prev != dot_pos\
    \ {\n            if file_name[dot_pos_prev] != 'a' && file_name[dot_pos_prev]\
    \ != 'A' && file_name[dot_pos_prev] != 'z' && file_name[dot_pos_prev] != 'Z' {\n\
    \                return String::from(\"No\");\n            }\n        }\n    }\n\
    \    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\"\n    }\n    if file_name[dot_index - 1] == '0' {\n\
    \        return \"No\"\n    }\n    if file_name[dot_index - 1] == '9' {\n    \
    \    return \"No\"\n    }\n    if file_name[dot_index - 2] != ' ' {\n        return\
    \ \"No\"\n    }\n    if file_name[dot_index - 3] != 'a' {\n        return \"No\"\
    \n    }\n    if file_name[dot_index - 4] != 'z' {\n        return \"No\"\n   \
    \ }\n    if file_name[dot_index - 5] != 'A' {\n        return \"No\"\n    }\n\
    \    if file_name[dot_index - 6] != 'Z' {\n        return \"No\"\n    }\n    return\
    \ \"Yes\"", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = true;\n    while dot_pos_start\
    \ != dot_pos_end {\n        if dot_pos_start < dot_pos_end {\n            if dot_pos_start[0]\
    \ >= 'a' && dot_pos_start[0] <= 'z' {\n                dot_pos_start_letter =\
    \ true;\n            }\n            if dot_pos_start[0] >= 'A' && dot_pos_start[0]\
    \ <= 'Z' {\n                dot_pos_start_letter = false;\n            }\n   \
    \     }\n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start_letter\
    \ {\n                return String::from(\"No\");\n            }\n        }\n\
    \        if dot_pos_start == dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_start = dot_pos_end + 1;\n    }\n    String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_2 = dot_pos_2 + 1;\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = dot_pos_3 + 1;\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = dot_pos_4 + 1;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = dot_pos_5 + 1;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = dot_pos_6 + 1;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = dot_pos_7 + 1;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = dot_pos_8 + 1;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = dot_pos_9 + 1;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = dot_pos_10 + 1;\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = dot_pos_11 + 1;\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut ", "    if file_name.len() > 3 {\n        String::from(\"\"\
    )\n    } else {\n        let mut first_char = file_name[0];\n        let mut last_char\
    \ = file_name[file_name.len() - 1];\n        if first_char.chars().any(|c| !c.is_ascii_letter())\
    \ {\n            String::from(\"\")\n        } else {\n            if first_char\
    \ != first_char.chars().nth(0) {\n                String::from(\"\")\n       \
    \     } else {\n                if last_char != last_char.chars().nth(0) {\n \
    \                   String::from(\"\")\n                } else {\n           \
    \         if file_name.chars().any(|c| !c.is_ascii_letter()) {\n             \
    \           String::from(\"\")\n                    } else {\n               \
    \         if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.') {\n \
    \                           String::from(\"\")\n                        } else\
    \ {\n                            if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n                 \
    \               String::from(\"\")\n                            } else {\n   \
    \                             String::from(\"Yes\")\n                        \
    \    }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut counter = 0;\n    let mut i =\
    \ 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = file_name.len();\n\
    \    let mut valid = false;\n    \n    while i < l {\n        if file_name[i]\
    \ == \".\" {\n            i += 1;\n            if i < l {\n                if\
    \ file_name[i] == '.' {\n                    i += 1;\n                    if i\
    \ < l {\n                        if file_name[i] == '.' {\n                  \
    \          i += 1;\n                            if i < l {\n                 \
    \               if file_name[i] == '.' {\n                                   \
    \ i += 1;\n                                    if i < l {\n                  \
    \                      if file_name[i] == '.' {\n                            \
    \                i += 1;\n                                            if i < l\
    \ {\n                                                if file_name[i] == '.' {\n\
    \                                                    i += 1;\n               \
    \                                     if i < l {\n                           \
    \                             if file_name[i] == '.' {\n                     \
    \                                       i += 1;\n                            \
    \                                if i < l {\n                                \
    \                                if file_name[i] == '.' {\n                  \
    \                                                  i += 1;\n                 \
    \                                                   if i < l {\n             \
    \                                                           if file_name[i] ==\
    \ '.' {\n                                                                    \
    \        i += 1;\n                                                           \
    \                 if i < l {\n                                               \
    \                                 if file_name[i] == '.' {\n                 \
    \                                                                   i += 1;\n\
    \                                                                            \
    \        if i < l {\n                                                        \
    \                                if file_name[i] == '.' {\n                  \
    \                                                                          i +=\
    \ 1;\n                                                                       \
    \                     if i < l {\n                                           \
    \                                                     if file_name[i] == '.' {\n\
    \                                                                            \
    \                        i += 1;\n                                           \
    \                                                         if i < l {\n       \
    \                                                                            \
    \                     if file_name[i] == '.' {\n                             \
    \                                                                            \
    \   i += 1;\n                                                                \
    \                                            if i < l {\n                    \
    \                                                                            \
    \                if file_name[i] == '.' {\n                                  \
    \                                                                            \
    \      i += 1;\n                                                             \
    \                                                       if i < l {\n         \
    \                                                                            \
    \                                   if file_name[i] == '.' {\n               \
    \                                                                            \
    \                                 i += 1;\n                                  \
    \                                                                            \
    \              if i < l {\n                                                  \
    \                                                                            \
    \  if file_name[i] == '.' {\n                                                \
    \                                                                            \
    \        i += 1;\n                                                           \
    \                                                                         if i\
    \ < l {\n                                                                    \
    \                                                                    if file_name[i]\
    \ == '.' {\n                                                                 \
    \                                                                           i\
    \ += 1;\n                                                                    \
    \                                                                        if i\
    \ < l {\n                                                                    \
    \                                                                            if\
    \ file_name[i] == '.' {\n                                                    \
    \                                                                            \
    \                    i += 1;\n                                               \
    \                                                                            \
    \                         if i < l {\n                                       \
    \                                                                            \
    \                                     if file_name[i] == '.' {\n             \
    \                                                                            \
    \                                                                   i += 1;\n\
    \                                                                            \
    \                                                                            \
    \    if i < l {\n                                                            \
    \                                                                            \
    \                        if file_name[i] == '.' {\n                          \
    \                                                                            \
    \                                                              i += 1;\n     \
    \                                                                            \
    \                                                                            \
    \       if i < l {\n                                                         \
    \                                                                            \
    \                                   if file_name[i] == '.' {\n               \
    \                                                                            \
    \                                                                            \
    \     i += 1;\n                                                              \
    \                                                                            \
    \                                  if i < l {\n                              \
    \                                                                            \
    \                                                                      if file_name[i]\
    \ == '.' {\n                                                                 \
    \                                                                            \
    \                                       i += 1;\n                            \
    \                                                                            \
    \                                                                            if\
    \ i < l {\n                                                                  \
    \                                                                            \
    \                                          if file_name", "    let mut first_letter\
    \ = file_name.chars().nth(1).unwrap();\n    if first_letter < 'a' || first_letter\
    \ > 'z' {\n        return \"No\";\n    }\n    if file_name.chars().count() > 3\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().count() == 1 {\n\
    \        return \"No\";\n    }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth(1).unwrap()\
    \ == '.' {\n        return \"No\";\n    }\n    if file_name.chars().count() ==\
    \ 2 && file_name.chars().nth(1).unwrap() == '.' {\n        return \"No\";\n  \
    \  }\n    if file_name.chars().count() == 2 && file_name.chars().nth", "    if\
    \ file_name.len() > 3 {\n        String::from(\"\")\n    } else {\n        let\
    \ mut first_letter = file_name[0];\n        if first_letter != 'a' && first_letter\
    \ != 'A' {\n            first_letter = 'a';\n        }\n        let mut dot_index\
    \ = file_name.find('.')\n        if dot_index == String::npos {\n            String::from(\"\
    \")\n        } else {\n            let mut dot_string = file_name[dot_index..];\n\
    \            if dot_string.len() > 3 {\n                String::from(\"\")\n \
    \           } else {\n                let mut dot_string = dot_string.to_string();\n\
    \                if dot_string.len() == 0 {\n                    dot_string =\
    \ \".\".to_string();\n                }\n                if dot_string.len() >\
    \ 3 {\n                    String::from(\"\")\n                } else {\n    \
    \                let mut dot_string = dot_string.to_string();\n              \
    \      if dot_string.len() == 0 {\n                        dot_string = \".\"\
    .to_string();\n                    }\n                    if dot_string.len()\
    \ > 3 {\n                        String::from(\"\")\n                    } else\
    \ {\n                        let mut dot_string = dot_string.to_string();\n  \
    \                      if dot_string.len() == 0 {\n                          \
    \  dot_string = \".\".to_string();\n                        }\n              \
    \          if dot_string.len() > 3 {\n                            String::from(\"\
    \")\n                        } else {\n                            let mut dot_string\
    \ = dot_string.to_string();\n                            if dot_string.len() ==\
    \ 0 {\n                                dot_string = \".\".to_string();\n     \
    \                       }\n                            if dot_string.len() > 3\
    \ {\n                                String::from(\"\")\n                    \
    \        } else {\n                                let mut dot_string = dot_string.to_string();\n\
    \                                if dot_string.len() == 0 {\n                \
    \                    dot_string = \".\".to_string();\n                       \
    \         }\n                                if dot_string.len() > 3 {\n     \
    \                               String::from(\"\")\n                         \
    \       } else {\n                                    let mut dot_string = dot_string.to_string();\n\
    \                                    if dot_string.len() == 0 {\n            \
    \                            dot_string = \".\".to_string();\n               \
    \                     }\n                                    if dot_string.len()\
    \ > 3 {\n                                        String::from(\"\")\n        \
    \                            } else {\n                                      \
    \  let mut dot_string = dot_string.to_string();\n                            \
    \            if dot_string.len() == 0 {\n                                    \
    \        dot_string = \".\".to_string();\n                                   \
    \     }\n                                        if dot_string.len() > 3 {\n \
    \                                           String::from(\"\")\n             \
    \                           } else {\n                                       \
    \     return String::from(\"Yes\");\n                                        }\n\
    \                                    }\n                                }\n  \
    \                          }\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }", "    let mut file_name =\
    \ file_name.to_string();\n    if file_name.len() > 3 {\n        file_name.truncate(3);\n\
    \    }\n    if file_name.contains('.') {\n        file_name.truncate(file_name.find('.'));\n\
    \    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"A\") {\n\
    \        file_name.truncate(0);\n    }\n    if file_name.contains(\".\") {\n \
    \       let dot_index = file_name.rfind('.');\n        if dot_index == 0 {\n \
    \           file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.');\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.');\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.');\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.');\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.');\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.');\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n    }\n    if file_name.contains(\".\") {\n        let dot_index =\
    \ file_name.rfind('.');\n        if dot_index == 0 {\n            file_name.truncate(0);\n\
    \        } else {\n            file_name.truncate(dot_index);\n        }\n   \
    \ }\n    if file_name.contains(\".\") {\n        let dot_index = file_name.rfind('.');\n\
    \        if dot_index == 0 {\n            file_name.truncate(0);\n        } else\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    .\") {\n        let dot_index = file_name.rfind('.');\n        if dot_index ==\
    \ 0 {\n            file_name.truncate(0);\n        } else {\n            file_name.truncate(dot_index);\n\
    \        }\n", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    let mut counter = 0;\n    let mut is_valid = false;\n\
    \    for c in file_name.chars() {\n        if c >= '0' && c <= '9' {\n       \
    \     counter += 1;\n        }\n        if c == '.' {\n            if counter\
    \ > 3 {\n                is_valid = false;\n                break;\n         \
    \   }\n            counter += 1;\n        }\n        if !c.is_latin_letter() {\n\
    \            is_valid = false;\n            break;\n        }\n        if c.is_latin_letter()\
    \ && c != 'a' && c != 'z' && c != 'A' && c != 'Z' {\n            is_valid = false;\n\
    \            break;\n        }\n    }\n    if is_valid {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";", "    if file_name.len() > 3 {\n        String::from(\"\
    \")\n    } else {\n        let mut first_char = file_name[0];\n        let mut\
    \ second_char = file_name[1];\n        let mut third_char = file_name[2];\n  \
    \      if first_char == '.' {\n            if second_char == '.' {\n         \
    \       if third_char == '.' {\n                    String::from(\"\")\n     \
    \           } else {\n                    String::from(\"No\")\n             \
    \   }\n            } else {\n                String::from(\"No\")\n          \
    \  }\n        } else {\n            String::from(\"No\")\n        }\n    }", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    while dot_pos_start < dot_pos_end\
    \ {\n        let mut dot_pos_start_letter = dot_pos_start;\n        while dot_pos_start_letter\
    \ < dot_pos_end && file_name[dot_pos_start_letter] >= 'a' && file_name[dot_pos_start_letter]\
    \ <= 'z' {\n            dot_pos_start_letter += 1;\n        }\n        if dot_pos_start_letter\
    \ < dot_pos_end && file_name[dot_pos_start_letter] >= 'A' && file_name[dot_pos_start_letter]\
    \ <= 'Z' {\n            dot_pos_start_letter += 1;\n        }\n        if dot_pos_start_letter\
    \ < dot_pos_end && file_name[dot_pos_start_letter] != '0' && file_name[dot_pos_start_letter]\
    \ != '9' {\n            return \"No\";\n        }\n        dot_pos_start += 1;\n\
    \    }\n    return \"Yes\";", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\";\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\";\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\";\n    }\n    let mut dot_index\
    \ = file_name.find('", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos == dot_pos_2 {\n        return String::from(\"No\");\n  \
    \  }\n    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n   \
    \ if dot_pos == file_name.len() - 1 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos + 1] <\
    \ 'a' || file_name[dot_pos + 1] > 'z' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2 - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2] != \"txt\" && file_name[dot_pos_2]\
    \ != \"exe\" && file_name[dot_pos_2] != \"dll\" {\n        return String::from(\"\
    No\");\n    }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::from(\"a\");\n    while dot_pos_start < dot_pos_end {\n        if\
    \ file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z' {\n     \
    \       dot_pos_start_letter = String::from(file_name[dot_pos_start]);\n     \
    \   }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter != String::from(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_letter\
    \ = String::from(\"z\");\n    while dot_pos_end_letter < dot_pos_end {\n     \
    \   if file_name[dot_pos_end_letter] >= 'A' && file_name[dot_pos_end_letter] <=\
    \ 'Z' {\n            dot_pos_end_letter = String::from(file_name[dot_pos_end_letter]);\n\
    \        }\n        dot_pos_end_letter += 1;\n    }\n    if dot_pos_end_letter\
    \ != String::from(\"z\") {\n        return String::from(\"No\");\n    }\n    let\
    \ mut dot_pos_end_letter = String::from(\"z\");\n    while dot_pos_end_letter\
    \ < dot_pos_end {\n        if file_name[dot_pos_end_letter] >= '0' && file_name[dot_pos_end_letter]\
    \ <= '9' {\n            dot_pos_end_letter = String::from(file_name[dot_pos_end_letter]);\n\
    \        }\n        dot_pos_end_letter += 1;\n    }\n    if dot_pos_end_letter\
    \ != String::from(\"z\") {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_end != file_name.len() {\n        return String::from(\"No\");\n   \
    \ }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\";\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return \"No\";\n    }\n    \n  \
    \  let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos {\
    \ \n        return \"No\";\n    }\n    \n    if dot_pos == dot_pos_2 {\n     \
    \   return \"No\";\n    }\n    \n    if dot_pos == dot_pos_3 {\n        return\
    \ \"No\";\n    }\n    \n    if dot_pos_2 == dot_pos_3 {\n        return \"No\"\
    ;\n    }\n    \n    if dot_pos_2 > dot_pos {\n        return \"No\";\n    }\n\
    \    \n    if dot_pos_3 > dot_pos {\n        return \"No\";\n    }\n    \n   \
    \ if dot_pos_3 > dot_pos_2 {\n        return \"No\";\n    }\n    \n    if dot_pos_2\
    \ < dot_pos {\n        return \"No\";\n    }\n    \n    if dot_pos_2 < dot_pos_3\
    \ {\n        return \"No\";\n    }\n    \n    if dot_pos_2 < dot_pos_2 {\n   \
    \     return \"No\";\n    }\n    \n    if dot_pos_3 < dot_pos {\n        return\
    \ \"No\";\n    }\n    \n    if dot_pos_3 < dot_pos_2 {\n        return \"No\"\
    ;\n    }\n    \n    if dot_pos_3 < dot_pos_3 {\n        return \"No\";\n    }\n\
    \    \n    if dot_pos_3 > dot_pos_2 {\n        return \"No\";\n    }\n    \n \
    \   if dot_pos_2 > dot_pos_3 {\n        return \"No\";\n    }\n    \n    if dot_pos\
    \ > dot_pos_2 {\n        return \"No\";\n    }\n    \n    if dot_pos > dot_pos_3\
    \ {\n        return \"No\";\n    }\n    \n    if dot_pos > dot_pos_2 {\n     \
    \   return \"No\";\n    }\n    \n    if dot_pos < dot_pos_3 {\n        return\
    \ \"No\";\n    }\n    \n    if dot_pos < dot_pos_2 {\n        return \"No\";\n\
    \    }\n    \n    if dot_pos < dot_pos {\n        return \"No\";\n    }\n    \n\
    \    return \"Yes\";", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start != dot_pos_end {\n        let mut\
    \ dot_pos_start_letter = dot_pos_start;\n        if file_name[dot_pos_start_letter]\
    \ >= 'a' && file_name[dot_pos_start_letter] <= 'z' {\n            dot_pos_start_letter\
    \ += 1;\n        }\n        if file_name[dot_pos_start_letter] >= 'A' && file_name[dot_pos_start_letter]\
    \ <= 'Z' {\n            dot_pos_start_letter += 1;\n        }\n        if file_name[dot_pos_start_letter]\
    \ == '.' {\n            break;\n        }\n        dot_pos_start += 1;\n    }\n\
    \    if dot_pos_start == dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_start == dot_pos_start_letter {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_start_letter + 1 {\n        return\
    \ String::from(\"No\");\n    }\n    return String::from(\"Yes\");", "    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ \"No\"\n    }\n    let mut dot_pos_end = dot_pos + 1\n    if dot_pos_end > file_name.len()\
    \ {\n        return \"No\"\n    }\n    let mut dot_pos_start = dot_pos\n    while\
    \ dot_pos_start < dot_pos_end {\n        let mut char_pos = file_name.chars().position(|c|\
    \ c == dot_pos).unwrap();\n        if char_pos == dot_pos_end {\n            return\
    \ \"No\"\n        }\n        let mut char_pos_end = file_name.chars().position(|c|\
    \ c == dot_pos_end).unwrap();\n        if char_pos_end == dot_pos_end {\n    \
    \        return \"No\"\n        }\n        let mut char_pos_start = file_name.chars().position(|c|\
    \ c == dot_pos_start).unwrap();\n        if char_pos_start < char_pos_end {\n\
    \            return \"No\"\n        }\n        dot_pos_start += 1;\n        dot_pos_end\
    \ += 1;\n    }\n    return \"Yes\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_end =\
    \ dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    \n    while dot_pos_start\
    \ < dot_pos_end {\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_start = dot_pos_start;\n        \n        if dot_pos_end == dot_pos_start\
    \ {\n            dot_pos_end += 1;\n        }\n        \n        if dot_pos_start\
    \ < dot_pos_end {\n            let mut dot_pos_end = dot_pos_end;\n          \
    \  let mut dot_pos_start = dot_pos_start;\n            \n            if dot_pos_end\
    \ == dot_pos_start {\n                dot_pos_end += 1;\n            }\n     \
    \       \n            if dot_pos_start < dot_pos_end {\n                let mut\
    \ dot_pos_end = dot_pos_end;\n                let mut dot_pos_start = dot_pos_start;\n\
    \                \n                if dot_pos_end == dot_pos_start {\n       \
    \             dot_pos_end += 1;\n                }\n                \n       \
    \         if dot_pos_start < dot_pos_end {\n                    let mut dot_pos_end\
    \ = dot_pos_end;\n                    let mut dot_pos_start = dot_pos_start;\n\
    \                    \n                    if dot_pos_end == dot_pos_start {\n\
    \                        dot_pos_end += 1;\n                    }\n          \
    \          \n                    if dot_pos_start < dot_pos_end {\n          \
    \              let mut dot_pos_end = dot_pos_end;\n                        let\
    \ mut dot_pos_start = dot_pos_start;\n                        \n             \
    \           if dot_pos_end == dot_pos_start {\n                            dot_pos_end\
    \ += 1;\n                        }\n                        \n               \
    \         if dot_pos_start < dot_pos_end {\n                            let mut\
    \ dot_pos_end = dot_pos_end;\n                            let mut dot_pos_start\
    \ = dot_pos_start;\n                            \n                           \
    \ if dot_pos_end == dot_pos_start {\n                                dot_pos_end\
    \ += 1;\n                            }\n                            \n       \
    \                     if dot_pos_start < dot_pos_end {\n                     \
    \           let mut dot_pos_end = dot_pos_end;\n                             \
    \   let mut dot_pos_start = dot_pos_start;\n                                \n\
    \                                if dot_pos_end == dot_pos_start {\n         \
    \                           dot_pos_end += 1;\n                              \
    \  }\n                                \n                                if dot_pos_start\
    \ < dot_pos_end {\n                                    let mut dot_pos_end = dot_pos_end;\n\
    \                                    let mut dot_pos_start = dot_pos_start;\n\
    \                                    \n                                    if\
    \ dot_pos_end == dot_pos_start {\n                                        dot_pos_end\
    \ += 1;\n                                    }\n                             \
    \       \n                                    if dot_pos_start < dot_pos_end ",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end = 0;\n    let mut dot_pos_end_letter_pos_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_start_letter_pos_end_end_end_end_end_end = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end = 0;\n\
    \    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end = 0;\n    let\
    \ mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut\
    \ dot_pos_end_letter_pos_end_end_end_end_end_end_end_end = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let mut dot_pos_start_letter_pos_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    if file_name.len() > 3 {\n        return \"\
    No\";\n    }\n    if file_name[0..dot_pos].is_empty() {\n        return \"No\"\
    ;\n    }\n    if file_name[dot_pos] != 'a' && file_name[dot_pos] != 'b' && file_name[dot_pos]\
    \ != 'c' && file_name[dot_pos] != 'd' && file_name[dot_pos] != 'e' && file_name[dot_pos]\
    \ != 'f' && file_name[dot_pos] != 'g' && file_name[dot_pos] != 'h' && file_name[dot_pos]\
    \ != 'i' && file_name[dot_pos] != 'j' && file_name[dot_pos] != 'k' && file_name[dot_pos]\
    \ != 'l' && file_name[dot_pos] != 'm' && file_name[dot_pos] != 'n' && file_name[dot_pos]\
    \ != 'o' && file_name[dot_pos] != 'p' && file_name[dot_pos] != 'q' && file_name[dot_pos]\
    \ != 'r' && file_name[dot_pos] != 's' && file_name[dot_pos] != 't' && file_name[dot_pos]\
    \ != 'u' && file_name[dot_pos] != 'v' && file_name[dot_pos] != 'w' && file_name[dot_pos]\
    \ != 'x' && file_name[dot_pos] != 'y' && file_name[dot_pos] != 'z' {\n       \
    \ return \"No\";\n    }\n    if file_name[dot_pos] == '.' {\n        let dot_pos_2\
    \ = file_name.find('.')\n        if dot_pos_2 == String::npos {\n            return\
    \ \"No\";\n        }\n        if dot_pos_2 > dot_pos + 1 {\n            return\
    \ \"No\";\n        }\n    }\n    return \"Yes\";", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains(\"\
    .\") {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"\
    9\") {\n        file_name.truncate(0);\n    }\n    if file_name.contains(\".\"\
    ) {\n        let dot_index = file_name.rfind('.');\n        if dot_index == 0\
    \ {\n            file_name.truncate(dot_index);\n        }\n    }\n    if file_name.contains(\"\
    txt\") || file_name.contains(\"exe\") || file_name.contains(\"dll\") {\n     \
    \   file_name.truncate(0);\n    }\n    file_name", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return \"No\"\n  \
    \  }\n    \n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\"\n    }\n    if file_name[dot_pos - 1] == '0' {\n      \
    \  return \"No\"\n    }\n    if file_name[dot_pos - 1] == '9' {\n        return\
    \ \"No\"\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return \"No\"\
    \n    }\n    if file_name[0..dot_pos - 1].is_empty() {\n        return \"No\"\n\
    \    }\n    if file_name[0..dot_pos - 1] != \"a\" && file_name[0..dot_pos - 1]\
    \ != \"A\" {\n        return \"No\"\n    }\n    if file_name[dot_pos + 1..].is_empty()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos + 1..] != \"txt\"\
    \ && file_name[dot_pos + 1..] != \"exe\" && file_name[dot_pos + 1..] != \"dll\"\
    \ {\n        return \"No\"\n    }\n    return \"Yes\"", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos - 1] !=\
    \ String::from('9') {\n        return String::from(\"No\");\n    }\n    if dot_pos\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_2 =\
    \ file_name.find('.')\n    if dot_pos_2 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_2 == 0 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos_2 - 1] != String::from('a') && file_name[dot_pos_2\
    \ - 1] != String::from('z') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos_2] != String::from('txt') && file_name[dot_pos_2] !=\
    \ String::from('exe') && file_name[dot_pos_2] != String::from('dll') {\n     \
    \   return String::from(\"No\");\n    }\n    return String::from(\"Yes\");", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if\
    \ dot_pos_3 == String::npos { \n        return \"No\"\n    }\n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if\
    \ dot_pos_8 == String::npos { \n        return \"No\"\n    }\n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos { \n   \
    \     return \"No\"\n    }\n    let mut dot_pos_13 = file_name.find('.')\n   \
    \ if dot_pos_13 == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos { \n   \
    \     return \"No\"\n    }\n    let mut dot_pos_15 = file_name.find('.')\n   \
    \ if dot_pos_15 == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos { \n   \
    \     return \"No\"\n    }\n    let mut dot_pos_17 = file_name.find('.')\n   \
    \ if dot_pos_17 == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos_18 = file_name.find('.')\n    if dot_pos_18 == String::npos { \n   \
    \     return \"No", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ \"No\"\n    }\n    let mut dot_pos = file_name.find('", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return \"No\"\n    }\n    let mut dot_pos_end\
    \ = dot_pos;\n    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n  \
    \  dot_pos_start -= 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n  \
    \  dot_pos_start_letter -= 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    dot_pos_end_letter2 += 1;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n\
    \    dot_pos_end_letter3 += 1;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    dot_pos_end_letter4 += 1;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n\
    \    dot_pos_end_letter5 += 1;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    dot_pos_end_letter6 += 1;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n\
    \    dot_pos_end_letter7 += 1;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    dot_pos_end_letter8 += 1;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n\
    \    dot_pos_end_letter9 += 1;\n    let mut dot_pos_end_letter10 = dot_pos_end;\n\
    \    dot_pos_end_letter10 += 1;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n\
    \    dot_pos_end_letter11 += 1;\n    let mut dot_pos_end_letter12 = dot_pos_end;\n\
    \    dot_pos_end_letter12 += 1;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n\
    \    dot_pos_end_letter13 += 1;\n    let mut dot_pos_end_letter14 = dot_pos_end;\n\
    \    dot_pos_end_letter14 += 1;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n\
    \    dot_pos_end_letter15 += 1;\n    let mut dot_pos_end_letter16 = dot_pos_end;\n\
    \    dot_pos_end_letter16 += 1;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n\
    \    dot_pos_end_letter17 += 1;\n    let mut dot_pos_end_letter18 = dot_pos_end;\n\
    \    dot_pos_end_letter18 += 1;\n    let mut dot_pos_end_letter19 = dot_pos_end;\n\
    \    dot_pos_end_letter19 += 1;\n    let mut dot_pos_end_letter20 = dot_pos_end;\n\
    \    dot_pos_end_", "    let mut first_char: char;\n    let mut second_char: char;\n\
    \    let mut third_char: char;\n    let mut fourth_char: char;\n    let mut fifth_char:\
    \ char;\n    let mut sixth_char: char;\n    let mut seventh_char: char;\n    let\
    \ mut eighth_char: char;\n    let mut ninth_char: char;\n    let mut tenth_char:\
    \ char;\n    let mut first_char_valid = false;\n    let mut second_char_valid\
    \ = false;\n    let mut third_char_valid = false;\n    let mut fourth_char_valid\
    \ = false;\n    let mut fifth_char_valid = false;\n    let mut sixth_char_valid\
    \ = false;\n    let mut seventh_char_valid = false;\n    let mut eighth_char_valid\
    \ = false;\n    let mut ninth_char_valid = false;\n    let mut tenth_char_valid\
    \ = false;\n    let mut first_char_valid = false;\n    let mut second_char_valid\
    \ = false;\n    let mut third_char_valid = false;\n    let mut fourth_char_valid\
    \ = false;\n    let mut fifth_char_valid = false;\n    let mut sixth_char_valid\
    \ = false;\n    let mut seventh_char_valid = false;\n    let mut eighth_char_valid\
    \ = false;\n    let mut ninth_char_valid = false;\n    let mut tenth_char_valid\
    \ = false;\n    let mut first_char_valid = false;\n    let mut second_char_valid\
    \ = false;\n    let mut third_char_valid = false;\n    let mut fourth_char_valid\
    \ = false;\n    let mut fifth_char_valid = false;\n    let mut sixth_char_valid\
    \ = false;\n    let mut seventh_char_valid = false;\n    let mut eighth_char_valid\
    \ = false;\n    let mut ninth_char_valid = false;\n    let mut tenth_char_valid\
    \ = false;\n    let mut first_char_valid = false;\n    let mut second_char_valid\
    \ = false;\n    let mut third_char_valid = false;\n    let mut fourth_char_valid\
    \ = false;\n    let mut fifth_char_valid = false;\n    let mut sixth_char_valid\
    \ = false;\n    let mut seventh_char_valid = false;\n    let mut eighth_char_valid\
    \ = false;\n    let mut ninth_char_valid = false;\n    let mut tenth_char_valid\
    \ = false;\n    let mut first_char_valid = false;\n    let mut second_char_valid\
    \ = false;\n    let mut third_char_valid = false;\n    let mut fourth_char_valid\
    \ = false;\n    let mut fifth_char_valid = false;\n    let mut sixth_char_valid\
    \ = false;\n    let ", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    if dot_pos_2 > dot_pos {\n        return String::from(\"No\"\
    );\n    }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    if\
    \ dot_pos_3 > dot_pos_2 {\n        return String::from(\"No\");\n    }\n    \n\
    \    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    if dot_pos_4 > dot_pos_3\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_5 > dot_pos_4 {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    if\
    \ dot_pos_6 > dot_pos_5 {\n        return String::from(\"No\");\n    }\n    \n\
    \    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    if dot_pos_7 > dot_pos_6\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8\
    \ = file_name.find('.')\n    if dot_pos_8 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_8 > dot_pos_7 {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    if\
    \ dot_pos_9 > dot_pos_8 {\n        return String::from(\"No\");\n    }\n    \n\
    \    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_letter\
    \ = dot_pos_start;\n        while dot_pos_letter < dot_pos_end {\n           \
    \ let mut dot_pos_letter = dot_pos_letter + 1;\n            if dot_pos_letter\
    \ > dot_pos_end {\n                dot_pos_letter = dot_pos_end;\n           \
    \ }\n            if file_name[dot_pos_letter] >= 'a' && file_name[dot_pos_letter]\
    \ <= 'z' {\n                dot_pos_start_letter = dot_pos_letter;\n         \
    \   }\n            dot_pos_letter = dot_pos_letter + 1;\n        }\n        if\
    \ dot_pos_start_letter > dot_pos_end {\n            dot_pos_start_letter = dot_pos_end;\n\
    \        }\n        if file_name[dot_pos_start_letter] >= 'a' && file_name[dot_pos_start_letter]\
    \ <= 'z' {\n            break;\n        }\n        dot_pos_start_letter = dot_pos_start_letter\
    \ + 1;\n    }\n    if dot_pos_start_letter > dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] != file_name[dot_pos + 1] {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != file_name[dot_pos\
    \ - 1] {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != file_name[dot_pos - 1] {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name[dot_pos - 1] != file_name[dot_pos - 1] {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != file_name[dot_pos\
    \ - 1] {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != file_name[dot_pos - 1] {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name[dot_pos - 1] != file_name[dot_pos - 1] {\n        return\
    \ String::from(\"No\");\n    }", "    let mut counter = 0;\n    let mut i = 0;\n\
    \    let mut dot_count = 0;\n    let mut dot_pos = 0;\n    let mut dot_pos_prev\
    \ = 0;\n    let mut dot_pos_next = 0;\n    let mut dot_pos_next2 = 0;\n    let\
    \ mut dot_pos_next3 = 0;\n    let mut dot_pos_next4 = 0;\n    let mut dot_pos_next5\
    \ = 0;\n    let mut dot_pos_next6 = 0;\n    let mut dot_pos_next7 = 0;\n    let\
    \ mut dot_pos_next8 = 0;\n    let mut dot_pos_next9 = 0;\n    let mut dot_pos_next10\
    \ = 0;\n    let mut dot_pos_next11 = 0;\n    let mut dot_pos_next12 = 0;\n   \
    \ let mut dot_pos_next13 = 0;\n    let mut dot_pos_next14 = 0;\n    let mut dot_pos_next15\
    \ = 0;\n    let mut dot_pos_next16 = 0;\n    let mut dot_pos_next17 = 0;\n   \
    \ let mut dot_pos_next18 = 0;\n    let mut dot_pos_next19 = 0;\n    let mut dot_pos_next20\
    \ = 0;\n    let mut dot_pos_next21 = 0;\n    let mut dot_pos_next22 = 0;\n   \
    \ let mut dot_pos_next23 = 0;\n    let mut dot_pos_next24 = 0;\n    let mut dot_pos_next25\
    \ = 0;\n    let mut dot_pos_next26 = 0;\n    let mut dot_pos_next27 = 0;\n   \
    \ let mut dot_pos_next28 = 0;\n    let mut dot_pos_next29 = 0;\n    let mut dot_pos_next30\
    \ = 0;\n    let mut dot_pos_next31 = 0;\n    let mut dot_pos_next32 = 0;\n   \
    \ let mut dot_pos_next33 = 0;\n    let mut dot_pos_next34 = 0;\n    let mut dot_pos_next35\
    \ = 0;\n    let mut dot_pos_next36 = 0;\n    let mut dot_pos_next37 = 0;\n   \
    \ let mut dot_pos_next38 = 0;\n    let mut dot_pos_next39 = 0;\n    let mut dot_pos_next40\
    \ = 0;\n    let mut dot_pos_next41 = 0;\n    let mut dot_pos_next42 = 0;\n   \
    \ let mut dot_pos_next43 = 0;\n    let mut dot_pos_next44 = 0;\n    let mut dot_pos_next45\
    \ = 0;\n    let mut dot_pos_next46 = 0;\n    let mut dot_pos_next47 = 0;\n   \
    \ let mut dot_pos_next48 = 0;\n    let mut dot_pos_next49 = 0;\n    let mut dot_pos_next50\
    \ = 0;\n    let mut dot_pos_next51 = 0;\n    let mut dot_pos_next52 = 0;\n   \
    \ let mut dot_pos_next53 = 0;\n    let mut dot_pos_next54 = 0;", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return \"No\";\n    }\n    if file_name.len()\
    \ < 3 {\n        return \"No\";\n    }\n    if file_name[0..1] != \"a\" && file_name[0..1]\
    \ != \"A\" {\n        return \"No\";\n    }\n    if file_name[dot_pos+1..dot_pos+4]\
    \ != \"txt\" && file_name[dot_pos+1..dot_pos+4] != \"exe\" && file_name[dot_pos+1..dot_pos+4]\
    \ != \"dll\" {\n        return \"No\";\n    }\n    return \"Yes\";", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos - 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_2 = dot_pos_2 - 1;\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = dot_pos_3 - 1;\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = dot_pos_4 - 1;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = dot_pos_5 - 1;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = dot_pos_6 - 1;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = dot_pos_7 - 1;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = dot_pos_8 - 1;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = dot_pos_9 - 1;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_10 = dot_pos_10 - 1;\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = dot_pos_11 - 1;\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n    \n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    \n   \
    \ let mut dot_index = file_name.find('.')\n    if dot_index == String::npos {\
    \ \n        return \"No\"\n    }\n", "    let mut first_char: char;\n    let mut\
    \ last_char: char;\n    let mut dot_index: usize;\n    let mut dot_count: usize;\n\
    \    let mut dot_dot_index: usize;\n    let mut dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_index: usize;\n    let mut dot_dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_count: usize;\n\
    \    let mut dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n\
    \    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let\
    \ mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index: usize;\n    let mut\
    \ dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count: usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_count:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_index:\
    \ usize;\n    let mut dot_dot_dot_dot_dot_dot_dot_dot_dot_dot_", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\"\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\"\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\"\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos { \n        return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { \n        return \"No\"\n    }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { \n     \
    \   return \"No\"\n    }\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos { \n        return \"No\"\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos { \n        return \"\
    No\"\n    }\n    let mut dot_index = file_name.find('", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut dot_pos = file_name_chars.next().unwrap().unwrap();\n\
    \    let mut dot_pos_index = dot_pos.unwrap();\n    let mut dot_pos_index2 = dot_pos_index.clone();\n\
    \    let mut dot_pos_index3 = dot_pos_index2.clone();\n    let mut dot_pos_index4\
    \ = dot_pos_index3.clone();\n    let mut dot_pos_index5 = dot_pos_index4.clone();\n\
    \    let mut dot_pos_index6 = dot_pos_index5.clone();\n    let mut dot_pos_index7\
    \ = dot_pos_index6.clone();\n    let mut dot_pos_index8 = dot_pos_index7.clone();\n\
    \    let mut dot_pos_index9 = dot_pos_index8.clone();\n    let mut dot_pos_index10\
    \ = dot_pos_index9.clone();\n    let mut dot_pos_index11 = dot_pos_index10.clone();\n\
    \    let mut dot_pos_index12 = dot_pos_index11.clone();\n    let mut dot_pos_index13\
    \ = dot_pos_index12.clone();\n    let mut dot_pos_index14 = dot_pos_index13.clone();\n\
    \    let mut dot_pos_index15 = dot_pos_index14.clone();\n    let mut dot_pos_index16\
    \ = dot_pos_index15.clone();\n    let mut dot_pos_index17 = dot_pos_index16.clone();\n\
    \    let mut dot_pos_index18 = dot_pos_index17.clone();\n    let mut dot_pos_index19\
    \ = dot_pos_index18.clone();\n    let mut dot_pos_index20 = dot_pos_index19.clone();\n\
    \    let mut dot_pos_index21 = dot_pos_index20.clone();\n    let mut dot_pos_index22\
    \ = dot_pos_index21.clone();\n    let mut dot_pos_index23 = dot_pos_index22.clone();\n\
    \    let mut dot_pos_index24 = dot_pos_index23.clone();\n    let mut dot_pos_index25\
    \ = dot_pos_index24.clone();\n    let mut dot_pos_index26 = dot_pos_index25.clone();\n\
    \    let mut dot_pos_index27 = dot_pos_index26.clone();\n    let mut dot_pos_index28\
    \ = dot_pos_index27.clone();\n    let mut dot_pos_index29 = dot_pos_index28.clone();\n\
    \    let mut dot_pos_index30 = dot_pos_index29.clone();\n    let mut dot_pos_index31\
    \ = dot_pos_index30.clone();\n    let mut dot_pos_index32 = dot_pos_index31.clone();\n\
    \    let mut dot_pos_index33 = dot_pos_index32.clone();\n    let mut dot_pos_index34\
    \ = dot_pos_index33.clone();\n    let mut dot_pos_index35 = dot_pos_index34.clone();\n\
    \    let mut dot_pos_index36 = dot_pos_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end\
    \ = file_name.len();\n        }\n        if file_name[dot_pos_start] != '0' {\n\
    \            return String::from(\"No\");\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = file_name.len();\n        }\n  \
    \      if file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end\
    \ = file_name.len();\n        }\n        if file_name[dot_pos_start] != 'a' {\n\
    \            return String::from(\"No\");\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = file_name.len();\n        }\n  \
    \      if file_name[dot_pos_start] != 'z' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end\
    \ = file_name.len();\n        }\n        if file_name[dot_pos_start] != 'A' {\n\
    \            return String::from(\"No\");\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = file_name.len();\n        }\n  \
    \      if file_name[dot_pos_start] != 'Z' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end\
    \ = file_name.len();\n        }\n        if dot_pos_start != dot_pos_end {\n \
    \           return String::from(\"No\");\n        }\n        dot_pos_start++;\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains('.')\
    \ {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.') {\n\
    \        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c !=\
    \ 'Z') {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c !=\
    \ 'Z' || c != '0' || c != '9') {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || c\
    \ != 'a' || c != 'z' || c != 'A' || c != 'Z' || c != '0' || c != '9' || c != 'x'\
    \ || c != 't' || c != 'e' || c != 'r' || c != 'l' || c != 'd' || c != 'l' || c\
    \ != 'l' || c != 'e' || c != 's' || c != 'e' || c != 's' || c != 't' || c != 't'\
    \ || c != 'x' || c != 't' || c != 'e' || c != 'r' || c != 'l' || c != 'd' || c\
    \ != 'l' || c != 'l' || c != 'e' || c != 's' || c != 'e' || c != 's' || c != 't'\
    \ || c != 't' || c != 'x' || c != 't' || c != 'e' || c != 'r' || c != 'l' || c\
    \ != 'd' || c != 'l' || c != 'l' || c != 'e' || c != 's' || c != 'e' || c != 's'\
    \ || c != 't' || c != 't' || c != 'x' || c != 't' || c != 'e' || c != 'r' || c\
    \ != 'l' || c != 'd' || c != 'l' || c != 'l' || c != 'e' || c != 's' || c != 'e'\
    \ || c != 's' || c != 't' || c != 't' || c != 'x' || c != 't' || c != 'e' || c\
    \ != 'r' || c != 'l' || c ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if\
    \ dot_pos_4 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos {\n      \
    \  return \"No\";\n    }\n    let mut dot_pos_9 = file_name.find('.')\n    if\
    \ dot_pos_9 == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_10\
    \ = file_name.find('.')\n    if dot_pos_10 == String::npos {\n        return \"\
    No\";\n    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11\
    \ == String::npos {\n        return \"No\";\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_14 = file_name.find('.')\n   \
    \ if dot_pos_14 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_16 = file_name.find('.')\n   \
    \ if dot_pos_16 == String::npos {\n        return \"No\";\n    }\n    let mut\
    \ dot_pos_17 = file_name.find('.')\n    if dot_pos_17 == String::npos {\n    \
    \    return \"No\";\n    }\n    let mut dot_pos_18 = file_name.find('.')\n   \
    \ if dot_pos_18 == String::npos {\n        return \"No", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { return \"No\"; }\n    if dot_pos == 0 { return \"\
    No\"; }\n    if file_name[dot_pos - 1] == '.' { return \"No\"; }\n    if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' { return \"No\"; }\n    if file_name[dot_pos\
    \ - 1] == '.' && file_name[dot_pos - 2] != 'd' && file_name[dot_pos - 2] != 'l'\
    \ { return \"No\"; }\n    if file_name[dot_pos - 1] == '.' && file_name[dot_pos\
    \ - 2] == 'd' && file_name[dot_pos - 3] != 'l' { return \"No\"; }\n    if file_name[dot_pos\
    \ - 1] == '.' && file_name[dot_pos - 2] == 'l' && file_name[dot_pos - 3] != 'd'\
    \ { return \"No\"; }\n    if file_name[dot_pos - 1] == '.' && file_name[dot_pos\
    \ - 2] == 'd' && file_name[dot_pos - 3] == 'l' { return \"Yes\"; }\n    return\
    \ \"Yes\"", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return \"No\" }\n  \
    \  if file_name.len() > 3 { return \"No\" }\n    if file_name.len() < 3 { return\
    \ \"No\" }\n    if file_name[0] < 'a' || file_name[0] > 'z' { return \"No\" }\n\
    \    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' { return\
    \ \"No\" }\n    if file_name[dot_pos] != 'txt' && file_name[dot_pos] != 'exe'\
    \ && file_name[dot_pos] != 'dll' { return \"No\" }\n    return \"Yes\"", "   \
    \ let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return \"No\"\n    }\n    if file_name[dot_pos\
    \ - 1] != String::from_char('0').unwrap() {\n        return \"No\"\n    }\n  \
    \  if file_name[dot_pos - 2] != String::from_char('0').unwrap() {\n        return\
    \ \"No\"\n    }\n    if file_name[dot_pos - 3] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 4] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 5] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 6] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 7] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 8] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 9] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 10] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 11] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 12] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 13] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 14] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 15] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 16] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 17] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 18] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 19] != String::from_char('0').unwrap()\
    \ {\n        return \"No\"\n    }\n    if file_name[dot_pos - 20] != String::from_char('0').unwrap()\
    \ {\n        return \"No", "    let mut file_name = file_name.to_string();\n \
    \   let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    let mut dot_pos_start = dot_pos;\n    let mut dot_pos_start2 = dot_pos;\n\
    \    let mut dot_pos_start3 = dot_pos;\n    let mut dot_pos_start4 = dot_pos;\n\
    \    let mut dot_pos_start5 = dot_pos;\n    let mut dot_pos_start6 = dot_pos;\n\
    \    let mut dot_pos_start7 = dot_pos;\n    let mut dot_pos_start8 = dot_pos;\n\
    \    let mut dot_pos_start9 = dot_pos;\n    let mut dot_pos_start10 = dot_pos;\n\
    \    let mut dot_pos_start11 = dot_pos;\n    let mut dot_pos_start12 = dot_pos;\n\
    \    let mut dot_pos_start13 = dot_pos;\n    let mut dot_pos_start14 = dot_pos;\n\
    \    let mut dot_pos_start15 = dot_pos;\n    let mut dot_pos_start16 = dot_pos;\n\
    \    let mut dot_pos_start17 = dot_pos;\n    let mut dot_pos_start18 = dot_pos;\n\
    \    let mut dot_pos_start19 = dot_pos;\n    let mut dot_pos_start20 = dot_pos;\n\
    \    let mut dot_pos_start21 = dot_pos;\n    let mut dot_pos_start22 = dot_pos;\n\
    \    let mut dot_pos_start23 = dot_pos;\n    let mut dot_pos_start24 = dot_pos;\n\
    \    let mut dot_pos_start25 = dot_pos;\n    let mut dot_pos_start26 = dot_pos;\n\
    \    let mut dot_pos_start27 = dot_pos;\n    let mut dot_pos_start28 = dot_pos;\n\
    \    let mut dot_pos_start29 = dot_pos;\n    let mut dot_pos_start30 = dot_pos;\n\
    \    let mut dot_pos_start31 = dot_pos;\n    let mut dot_pos_start32 = dot_pos;\n\
    \    let mut dot_pos_start33 = dot_pos;\n    let mut dot_pos_start34 = dot_pos;\n\
    \    let mut dot_pos_start35 = dot_pos;\n    let mut dot_pos_start36 = dot_pos;\n\
    \    let mut dot_pos_start37 = dot_pos;\n    let mut dot_pos_start38 = dot_pos;\n\
    \    let mut dot_pos_start39 = dot_pos;\n    let mut dot_pos_start40", "    let\
    \ mut file_name_len = file_name.len();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if dot_pos == file_name_len - 1\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ < 'a' || file_name[dot_pos - 1] > 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos + 1] < 'a' || file_name[dot_pos + 1] > 'z'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos + 2]\
    \ < '0' || file_name[dot_pos + 2] > '9' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 2] < 'a' || file_name[dot_pos - 2] > 'z'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2 -\
    \ 2] < '0' || file_name[dot_pos_2 - 2] > '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2 - 1] < 'a' || file_name[dot_pos_2 -\
    \ 1] > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 2] < '0' || file_name[dot_pos_2 - 2] > '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2 - 3] < 'a' || file_name[dot_pos_2 -\
    \ 3] > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 4] < '0' || file_name[dot_pos_2 - 4] > '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2 - 5] < 'a' || file_name[dot_pos_2 -\
    \ 5] > 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 6] < '0' || file_name[dot_pos_2 - 6] > '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2 - 7] < 'a' || file_name[dot_pos_2 -\
    \ 7] > 'z' {\n        return String::from(\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return \"No\";\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ != 'a' && file_name[dot_pos_start] != 'A' && file_name[dot_pos_start] != 'b'\
    \ && file_name[dot_pos_start] != 'B' && file_name[dot_pos_start] != 'c' && file_name[dot_pos_start]\
    \ != 'C' && file_name[dot_pos_start] != 'd' && file_name[dot_pos_start] != 'D'\
    \ && file_name[dot_pos_start] != 'e' && file_name[dot_pos_start] != 'E' && file_name[dot_pos_start]\
    \ != 'f' && file_name[dot_pos_start] != 'F' && file_name[dot_pos_start] != 'g'\
    \ && file_name[dot_pos_start] != 'G' && file_name[dot_pos_start] != 'h' && file_name[dot_pos_start]\
    \ != 'H' && file_name[dot_pos_start] != 'i' && file_name[dot_pos_start] != 'I'\
    \ && file_name[dot_pos_start] != 'j' && file_name[dot_pos_start] != 'J' && file_name[dot_pos_start]\
    \ != 'k' && file_name[dot_pos_start] != 'K' && file_name[dot_pos_start] != 'l'\
    \ && file_name[dot_pos_start] != 'L' && file_name[dot_pos_start] != 'm' && file_name[dot_pos_start]\
    \ != 'M' && file_name[dot_pos_start] != 'n' && file_name[dot_pos_start] != 'N'\
    \ && file_name[dot_pos_start] != 'o' && file_name[dot_pos_start] != 'O' && file_name[dot_pos_start]\
    \ != 'p' && file_name[dot_pos_start] != 'P' && file_name[dot_pos_start] != 'q'\
    \ && file_name[dot_pos_start] != 'Q' && file_name[dot_pos_start] != 'r' && file_name[dot_pos_start]\
    \ != 'R' && file_name[dot_pos_start] != 's' && file_name[dot_pos_start] != 'S'\
    \ && file_name[dot_pos_start] != 't' && file_name[dot_pos_start] != 'T' && file_name[dot_pos_start]\
    \ != 'u' && file_name[dot_pos_start] != 'U' && file_name[dot_pos_start] != 'v'\
    \ && file_name[dot_pos_start] != 'V' && file_name[dot_pos_start] != 'w' && file_name[dot_pos_start]\
    \ != 'W' && file_name[dot_pos_start] != 'x' && file_name[dot_pos_start] != 'X",
  "    let mut file_name = file_name.to_string();\n    if file_name.len() > 3 {\n\
    \        return \"No\";\n    }\n    if file_name.contains(\".\") {\n        return\
    \ \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n \
    \       return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_digit())\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_digit()) {\n   \
    \     return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_digit() || c ==\
    \ '.') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_digit() || c ==\
    \ '.' || c == '_') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_digit() || c == '.' || c == '_' || c == '-') {\n        return \"No\";\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_lowercase()\
    \ || c.is_ascii_uppercase() || c.is_digit() || c == '.' || c == '_' || c == '-'\
    \ || c == '/') {\n        return \"No\";\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c.is_ascii_lowercase() || c.is_ascii_uppercase() ||\
    \ c.is_digit() || c == '.' || c == '_' || c == '-' || c == '/' || c == '\\\\')\
    \ {\n        return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_uppercase() || c.is_digit() || c ==\
    \ '.' || c == '_' || c == '-' || c == '/' || c == '\\\\' || c == ':') {\n    \
    \    return \"No\";\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c.is_ascii_lowercase() || c.is_ascii_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_index == 0 {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.chars().count() >\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name[0..dot_index].chars().count()\
    \ > 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_index..].chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name[dot_index..].chars().any(|c| !c.is_ascii_letter() || c != 'a' && c\
    \ != 'z') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_index..].chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_index..].chars().any(|c| !c.is_ascii_letter()\
    \ || c != '0' && c != '9') {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name[dot_index..].chars().any(|c| !c.is_ascii_letter() || c != 'a'\
    \ && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_index..].chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0'\
    \ && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_index..].chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0'\
    \ && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c\
    \ != '9') {\n        return String::from(\"No\");\n    }\n    if file_name[dot_index..].chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != '", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_index = file_name.find('.')\n    if\
    \ dot_index == String::npos {\n        return String::from(\"No\");\n    }\n \
    \   if dot_index > 0 {\n        dot_index -= 1;\n    }\n    let mut first_letter\
    \ = file_name[0];\n    if first_letter < 'a' || first_letter > 'z' {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[..dot_index].count() != 1 ||\
    \ file_name[dot_index..].count() != 3 {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[0..dot_pos - 1].is_empty() {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] ==\
    \ '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] >= 'a' && file_name[dot_pos - 1] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] >= 'A' && file_name[dot_pos - 1]\
    \ <= 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] >= '0' && file_name[dot_pos - 1] <= '9' {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return \"No\";\n    }\n    if file_name.len() > 3 {\n        return \"\
    No\";\n    }\n    if file_name.len() == 3 {\n        if file_name[0] < 'a' ||\
    \ file_name[0] > 'z' {\n            return \"No\";\n        }\n    }\n    if file_name[dot_pos\
    \ - 1] != '.' {\n        return \"No\";\n    }\n    if file_name[dot_pos - 1]\
    \ != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' {\n\
    \        return \"No\";\n    }\n    if file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.'\
    \ && file_name[dot_pos - 1] != '.' {\n        return \"No\";\n    }\n    if file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.'\
    \ && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' {\n        return \"No\";\n   \
    \ }\n    if file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' &&\
    \ file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.'\
    \ && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' {\n      \
    \  return \"No\";\n    }\n    if file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.'\
    \ && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.'\
    \ && file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' && file_name[dot_pos\
    \ - 1] != '.' && file_name[dot_pos - 1] != '.' {\n        return \"No\";\n   \
    \ }\n    if file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' &&\
    \ file_name[dot_pos - 1] != '.' && file_name[dot_pos - 1] != '.' && "]
stop_tokens:
- "\n}"

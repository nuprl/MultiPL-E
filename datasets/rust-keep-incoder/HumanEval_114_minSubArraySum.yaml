name: HumanEval_114_minSubArraySum
language: rust
prompt: "/// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n/// of nums.\n/// Example\n/// minSubArraySum([2, 3, 4, 1, 2, 4]) ==\
  \ 1\n/// minSubArraySum([-1, -2, -3]) == -6\nfn minSubArraySum(nums: Vec<isize>)\
  \ -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = minSubArraySum;\n    assert_eq!(candidate(vec![2,\
  \ 3, 4, 1, 2, 4]), 1);\n    assert_eq!(candidate(vec![-1, -2, -3]), -6);\n    assert_eq!(candidate(vec![-1,\
  \ -2, -3, 2, -10]), -14);\n    assert_eq!(candidate(vec![-9999999999999999]), -9999999999999999);\n\
  \    assert_eq!(candidate(vec![0, 10, 20, 1000000]), 0);\n    assert_eq!(candidate(vec![-1,\
  \ -2, -3, 10, -5]), -6);\n    assert_eq!(candidate(vec![100, -1, -2, -3, 10, -5]),\
  \ -6);\n    assert_eq!(candidate(vec![10, 11, 13, 8, 3, 4]), 3);\n    assert_eq!(candidate(vec![100,\
  \ -33, 32, -1, 0, -2]), -33);\n    assert_eq!(candidate(vec![-10]), -10);\n    assert_eq!(candidate(vec![7]),\
  \ 7);\n    assert_eq!(candidate(vec![1, -1]), -1);\n}\n"
completions: ["    let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            break;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n \
    \   for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n       \
    \ if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums[0] as isize;\n    for i in 1..nums.len() {\n        min_sum = min(min_sum\
    \ + nums[i], nums[i]);\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        if num < 0 {\n\
    \            return min_sum;\n        }\n        min_sum = min_sum - num;\n  \
    \  }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for &n in nums.iter().rev() {\n      \
    \  min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum -\
    \ i;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for &n in nums.iter().rev()\
    \ {\n        min_sum = min_sum + n;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n    for\
    \ i in 1..nums.len() {\n        min_sum = min_sum + nums[i];\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().min().unwrap();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n\
    \    for num in nums.iter() {\n        min_sum = min_sum.min(num);\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for &n in nums.iter().rev() {\n        min_sum = min_sum\
    \ - n;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n    for i in\
    \ nums.iter() {\n        if min_sum < i {\n            min_sum = i;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum <\
    \ 0 {\n            break;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for &n in &nums[1..]\
    \ {\n        min_sum = min_sum + n;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter().rev()\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n   \
    \ for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums[0] as isize;\n    for num in nums.iter().rev() {\n \
    \       min_sum = min_sum.min(num);\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum + num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n \
    \   for num in nums.iter() {\n        min_sum = min(min_sum, num + nums.iter().filter(|&x|\
    \ x > num).sum());\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n   \
    \ for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n        if\
    \ min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    let mut min_sub_array = vec![];\n    for num in nums {\n        if min_sum\
    \ < num {\n            min_sum = num;\n            min_sub_array = [num];\n  \
    \      } else {\n            min_sub_array.push(num);\n        }\n    }\n    min_sub_array.iter().sum().unwrap()",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter().rev() {\n \
    \       min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum + num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for &n in nums.iter().rev()\
    \ {\n        min_sum = min_sum + n;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut\
    \ sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum -\
    \ num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter().rev() {\n        min_sum = min_sum -\
    \ i;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n \
    \   min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n\
    \    for i in 1..nums.len() {\n        min_sum = min(min_sum, nums[i] + min_sum);\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for &n in\
    \ nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().rev() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        if num < min_sum\
    \ {\n            min_sum = num;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums[0] as isize;\n    for num in nums.iter().rev() {\n        min_sum\
    \ = min_sum + num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for &i in nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n\
    \    for &n in nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n     \
    \   min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum =\
    \ 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum + num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums[0] as isize;\n    for &n in nums.iter().rev()\
    \ {\n        min_sum = min_sum.min(n as isize);\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter()\
    \ {\n        min_sum = min_sum.min(|a, b| a.partial_cmp(&b).unwrap());\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num\
    \ in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", " \
    \   let mut min_sum = isize::MAX;\n    for num in nums {\n        min_sum = min(min_sum,\
    \ num);\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut\
    \ sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum -\
    \ i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    let\
    \ mut min_sub_array: Vec<isize> = vec![];\n    for num in nums {\n        if min_sum\
    \ > num {\n            min_sum = num;\n            min_sub_array.clear();\n  \
    \      }\n        if min_sum < num {\n            min_sub_array.push(num);\n \
    \       }\n    }\n    min_sub_array.iter().sum().min(|a, b| a.partial_cmp(&b).unwrap()).unwrap()",
  "    let mut min_sum = nums[0] as isize;\n    for num in nums.iter().rev() {\n \
    \       min_sum = min_sum.min(num);\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum + num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n\
    \    for &i in nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter()\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n    for &n\
    \ in nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    let mut min_sub_array = Vec::new();\n  \
    \  for num in nums.iter() {\n        if min_sum > num {\n            min_sum =\
    \ num;\n            min_sub_array.clear();\n        }\n        if min_sum == num\
    \ {\n            min_sub_array.push(num);\n        }\n    }\n    min_sub_array\n\
    \        .iter()\n        .fold(isize::MAX, |acc, x| acc + x)", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum.min(num);\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n  \
    \  for num in nums.iter() {\n        min_sum = min_sum.min(num);\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ i| sum + i);\n    for num in nums.iter().rev() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            break;\n        }\n  \
    \  }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum\
    \ + i);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n\
    \    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n    for &n in\
    \ nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num\
    \ in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum - num;\n\
    \        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n   \
    \ for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum.min(num + min_sum);\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n    for\
    \ num in nums.iter().rev() {\n        min_sum = min_sum.min(num + min_sum);\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum <\
    \ 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter().rev() {\n        min_sum =\
    \ min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for\
    \ &n in nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum.min(num\
    \ + min_sum);\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter().rev() {\n        min_sum = min_sum - i;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum.min(num + min_sum);\n    }\n    min_sum", "   \
    \ let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for num in nums.iter() {\n        min_sum\
    \ = min(min_sum, num + min_sum);\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n   \
    \ for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n        if\
    \ min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().min().unwrap();\n    for num in nums.iter() {\n        min_sum =\
    \ min_sum + num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum - i;\n\
    \    }\n    min_sum", "    let mut min_sum = nums[0];\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().rev() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    let mut min_sub_array = nums.clone();\n    let mut min_sub_array_size = nums.len();\n\
    \    let mut min_sub_array_sum = 0;\n    while min_sub_array_sum < min_sum {\n\
    \        min_sub_array_sum += min_sub_array.pop();\n        min_sub_array_size\
    \ -= 1;\n        if min_sub_array_size == 0 {\n            min_sub_array_sum +=\
    \ min_sub_array.pop();\n            min_sub_array_size -= 1;\n        }\n    }\n\
    \    min_sub_array_sum", "    let mut min_sum = isize::MAX;\n    for num in nums.iter()\
    \ {\n        min_sum = min(min_sum, num + minSubArraySum(vec![num] + nums));\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums[0] as isize;\n    let mut min_sub_array = Vec::new();\n \
    \   for num in nums.iter() {\n        if min_sum > num {\n            min_sum\
    \ = num;\n        }\n        if min_sum == num {\n            min_sub_array.push(num);\n\
    \        }\n    }\n    min_sub_array\n        .iter()\n        .fold(0, |acc,\
    \ x| acc + x)", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n\
    \    for &i in nums.iter() {\n        min_sum = min_sum - i;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum\
    \ = min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n     \
    \   }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num|\
    \ sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut\
    \ sum, i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut\
    \ sum, i| sum + i);\n    for &i in nums.iter() {\n        if min_sum > i {\n \
    \           min_sum = i;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            break;\n\
    \        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n \
    \   for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n       \
    \ if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ isize::MAX;\n    for num in nums.iter() {\n        min_sum = min(min_sum, num\
    \ + nums.iter().min().unwrap());\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for &n in nums.iter().rev() {\n        min_sum = min_sum\
    \ - n;\n    }\n    min_sum", "    let mut min_sum = nums[0];\n    for &n in nums.iter().rev()\
    \ {\n        min_sum = min_sum + n;\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::MAX;\n    for num in nums.iter() {\n        if num < 0 {\n        \
    \    continue;\n        }\n        let mut cur = num;\n        while cur > 0 {\n\
    \            cur_sum = cur % 10;\n            if cur_sum < min_sum {\n       \
    \         min_sum = cur_sum;\n            }\n            cur /= 10;\n        }\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i|\
    \ sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum.min(|a, b|\
    \ {\n            a + i\n        });\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter() {\n\
    \        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = isize::MAX;\n    for num in nums.iter()\
    \ {\n        min_sum = min(min_sum, num + min_sum);\n    }\n    min_sum", "  \
    \  let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter().rev() {\n        min_sum = min_sum -\
    \ i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum + num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums[0]\
    \ as isize;\n    for &n in nums.iter().rev() {\n        min_sum = min_sum.min(&n);\n\
    \    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n    for &n in\
    \ nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, i| sum + i);\n    for num in nums.iter() {\n   \
    \     min_sum = min_sum.min(num + min_sum);\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums[0] as isize;\n\
    \    for &n in nums.iter().rev() {\n        min_sum = min_sum + n;\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for &i in nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n     \
    \   min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum =\
    \ 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for &n in nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n \
    \   for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n       \
    \ if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter().rev() {\n        min_sum = min_sum - i;\n    }\n    min_sum", " \
    \   let mut min_sum = isize::MAX;\n    for i in nums.iter() {\n        if min_sum\
    \ > i {\n            min_sum = i;\n        }\n    }\n    min_sum"]
stop_tokens:
- "\n}"

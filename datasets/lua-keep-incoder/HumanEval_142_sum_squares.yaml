name: HumanEval_142_sum_squares
language: lua
prompt: "-- \"\n-- This function will take a list of integers. For all entries in\
  \ the list, the function shall square the integer entry if its index is a \n-- multiple\
  \ of 3 and will cube the integer entry if its index is a multiple of 4 and not a\
  \ multiple of 3. The function will not \n-- change the entries in the list whose\
  \ indexes are not a multiple of 3 or 4. The function shall then return the sum of\
  \ all entries. \n-- Examples:\n-- For lst = [1,2,3] the output should be 6\n-- For\
  \ lst = []  the output should be 0\n-- For lst = [-1,-5,2,-1,-5]  the output should\
  \ be -126\nlocal function sum_squares(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_squares\n\
  \    lu.assertEquals(candidate({1, 2, 3}), 6)\n    lu.assertEquals(candidate({1,\
  \ 4, 9}), 14)\n    lu.assertEquals(candidate({}), 0)\n    lu.assertEquals(candidate({1,\
  \ 1, 1, 1, 1, 1, 1, 1, 1}), 9)\n    lu.assertEquals(candidate({-1, -1, -1, -1, -1,\
  \ -1, -1, -1, -1}), -3)\n    lu.assertEquals(candidate({0}), 0)\n    lu.assertEquals(candidate({-1,\
  \ -5, 2, -1, -5}), -126)\n    lu.assertEquals(candidate({-56, -99, 1, 0, -2}), 3030)\n\
  \    lu.assertEquals(candidate({-1, 0, 0, 0, 0, 0, 0, 0, -1}), 0)\n    lu.assertEquals(candidate({-16,\
  \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37}), -14196)\n    lu.assertEquals(candidate({-1,\
  \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10}),\
  \ -1448)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: []
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

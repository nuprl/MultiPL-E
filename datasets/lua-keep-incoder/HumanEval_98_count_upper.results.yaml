name: HumanEval_98_count_upper
language: lua
results:
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptrkg0fjy.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmptrkg0fjy.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv9vgp9su.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpv9vgp9su.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqeene9_4.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpqeene9_4.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp88oo9hxt.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp88oo9hxt.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7wzxaaf9.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp7wzxaaf9.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj10s36i_.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpj10s36i_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_e0hso9f.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp_e0hso9f.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then n = n + 1 end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpci62u5vi.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpci62u5vi.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lrdtqm4.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp5lrdtqm4.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd2ayfsd7.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpd2ayfsd7.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdepkgr.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp5wdepkgr.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd68b3a1c.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpd68b3a1c.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8ecx7sz.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmps8ecx7sz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxh27t0d.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpoxh27t0d.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5n5z9pka.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp5n5z9pka.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqmsxtbrj.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpqmsxtbrj.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmfbewkzh.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpmfbewkzh.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3k30g5qo.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp3k30g5qo.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvr6lkv_5.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpvr6lkv_5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptffpgq50.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmptffpgq50.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa8g6z_2g.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpa8g6z_2g.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwk0q8bw9.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpwk0q8bw9.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiuis4hj4.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpiuis4hj4.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw9ap8k9j.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpw9ap8k9j.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvdzp37jt.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpvdzp37jt.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppeweswv_.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmppeweswv_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqq212ryc.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpqq212ryc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph110vtv3.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmph110vtv3.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkyal9ob_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpkyal9ob_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbku8pck1.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpbku8pck1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps_rhu4vf.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmps_rhu4vf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv7jt9ntn.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpv7jt9ntn.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx6jvp7kc.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpx6jvp7kc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0lq_y46l.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp0lq_y46l.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9q3jc5q0.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp9q3jc5q0.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx8k4l_ho.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpx8k4l_ho.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9xzgz_k1.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp9xzgz_k1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdug7in5_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpdug7in5_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppyyf99od.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmppyyf99od.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7xx238ax.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp7xx238ax.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphe36h_x5.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmphe36h_x5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpee0gp60o.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpee0gp60o.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu2s2lak1.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpu2s2lak1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3esjboe1.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp3esjboe1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25gqp8sc.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp25gqp8sc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyvwevrai.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpyvwevrai.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz5oyf36z.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpz5oyf36z.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpas6_mcyw.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpas6_mcyw.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmpo2b_ta.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpmpo2b_ta.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppc85ckfa.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmppc85ckfa.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgv1lm26w.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpgv1lm26w.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v0nl92x.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp5v0nl92x.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxnv6bf5n.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpxnv6bf5n.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvhquicqc.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpvhquicqc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp54n1453c.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp54n1453c.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptqdra3m_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmptqdra3m_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgpchj5x8.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpgpchj5x8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpos87mpr1.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpos87mpr1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaca7mm6y.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpaca7mm6y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8nkvuwpz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp8nkvuwpz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqwb4cpmr.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpqwb4cpmr.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf41yst3a.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpf41yst3a.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpncbj0o8g.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpncbj0o8g.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps344i_am.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmps344i_am.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxu2xaatd.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpxu2xaatd.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgcx_syp6.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgcx_syp6.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxe0qi014.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpxe0qi014.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmzlagizb.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpmzlagizb.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8uzksv9_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp8uzksv9_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_6z1wzat.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp_6z1wzat.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp284fzdba.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp284fzdba.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18s8zw14.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp18s8zw14.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm1it7c20.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpm1it7c20.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4emkt42y.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp4emkt42y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiiyqdl5s.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpiiyqdl5s.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1_9vb7c7.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp1_9vb7c7.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppz238d27.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmppz238d27.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmploblxgz5.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmploblxgz5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ikbhy99.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp_ikbhy99.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8nmvy3z.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmps8nmvy3z.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3h08ah9n.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp3h08ah9n.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsnbbzzl5.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpsnbbzzl5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkjnp8e8b.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpkjnp8e8b.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmponbnwd8z.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmponbnwd8z.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput_z5izt.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmput_z5izt.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm6o05go1.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpm6o05go1.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgmix99q7.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgmix99q7.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then n = n+1 end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjsys8qbm.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpjsys8qbm.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwf7bnpog.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpwf7bnpog.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1u1oufqg.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp1u1oufqg.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpseakgo1a.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpseakgo1a.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa13azjiu.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpa13azjiu.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6l5wqcui.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp6l5wqcui.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxvs6gmxz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpxvs6gmxz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp192yspfx.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp192yspfx.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4c8uhm9d.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp4c8uhm9d.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8v1__kv3.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp8v1__kv3.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvstjqu2f.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpvstjqu2f.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphn08hxz8.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmphn08hxz8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoywfsjzt.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpoywfsjzt.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0qhg1vj7.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp0qhg1vj7.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf8f6_cxj.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpf8f6_cxj.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3u6uuutb.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp3u6uuutb.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv_vd0c7x.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpv_vd0c7x.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu5k9lfpc.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpu5k9lfpc.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp965cuxsg.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp965cuxsg.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0a35yxhv.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp0a35yxhv.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2wx7vtu8.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp2wx7vtu8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpit3nph48.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpit3nph48.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6v_e751g.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp6v_e751g.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg5q5zkp.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpmg5q5zkp.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv5haah_8.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpv5haah_8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm4pznlcm.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpm4pznlcm.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_k1qx1jb.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp_k1qx1jb.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpql2vk753.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpql2vk753.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and string.sub(s,\
    \ i, i) ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd0dzi3f2.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpd0dzi3f2.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpja6l3kdo.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpja6l3kdo.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and string.sub(s,\
    \ i, i) ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcl9mocls.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpcl9mocls.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj93gd90c.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpj93gd90c.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc_kyxsr8.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpc_kyxsr8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg16c1p37.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpg16c1p37.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl1r515ur.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpl1r515ur.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and string.sub(s,\
    \ i, i) ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4ro290ee.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp4ro290ee.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprb6bgc1l.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmprb6bgc1l.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppskahfq8.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmppskahfq8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp870nk6r4.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp870nk6r4.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt7tnef7y.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpt7tnef7y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfr79so7r.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpfr79so7r.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_a6rwh1n.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp_a6rwh1n.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppyihysl7.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmppyihysl7.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphcac6hwz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmphcac6hwz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3vwzc_r6.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp3vwzc_r6.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0jd0o9vf.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp0jd0o9vf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9shw2hle.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp9shw2hle.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp05tga7c6.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp05tga7c6.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7l4usu4y.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp7l4usu4y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2lhkqi1r.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp2lhkqi1r.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsl646pu0.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpsl646pu0.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp052_ym0y.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp052_ym0y.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1zxcmb5x.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp1zxcmb5x.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2pc0fwkz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp2pc0fwkz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp39hsb61g.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp39hsb61g.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprzekcp63.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmprzekcp63.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt5lbs8cd.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpt5lbs8cd.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2nd50nst.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp2nd50nst.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx4dkup8t.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpx4dkup8t.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6am02vxg.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp6am02vxg.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7l0e1fnr.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp7l0e1fnr.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgdxz4izf.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgdxz4izf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr2yfyw14.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpr2yfyw14.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsu6jocq0.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpsu6jocq0.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and string.sub(s,\
    \ i, i) ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpljna1vr5.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpljna1vr5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpflh33myo.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpflh33myo.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpktb0w6u9.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpktb0w6u9.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphir9r8cp.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmphir9r8cp.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpumf1qxzz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpumf1qxzz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then n = n+1 end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuztk2obx.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpuztk2obx.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph7tdu707.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmph7tdu707.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' or string.sub(s,i,i)\
    \ == 'a' then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppypc5ksj.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppypc5ksj.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zu1oycu.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp5zu1oycu.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsjx3hzej.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpsjx3hzej.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9esnbgff.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp9esnbgff.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsvogili3.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpsvogili3.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplyvdii_f.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmplyvdii_f.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8bduip17.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp8bduip17.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2x1pfy7r.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp2x1pfy7r.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd8jjsbgw.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpd8jjsbgw.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgzpg5esz.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgzpg5esz.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphb8grs4y.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmphb8grs4y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnaw7jida.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpnaw7jida.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7fda9p8y.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp7fda9p8y.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaurmrcz_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpaurmrcz_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd8txt4ju.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpd8txt4ju.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyle55kz8.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpyle55kz8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0f60t1t.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp_0f60t1t.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmw6aogfv.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpmw6aogfv.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' and string.sub(s,i,i)\
    \ ~= 'a' then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel9phbvv.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpel9phbvv.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9nkrk9to.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp9nkrk9to.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfxvfug.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpdhfxvfug.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv89c8k1q.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpv89c8k1q.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpougndshm.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpougndshm.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpea4yj4j4.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpea4yj4j4.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpearhqv7s.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpearhqv7s.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgrs_6giv.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgrs_6giv.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwreo8qel.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpwreo8qel.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbygpxa02.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpbygpxa02.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ygnv1x_.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp8ygnv1x_.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgxtnlvo5.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgxtnlvo5.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= 'A' then\n   \
    \   n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv_j6akzx.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpv_j6akzx.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' and\
    \ string.sub(s, i, i) ~= 'a' then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp37kg_07c.lua:19:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmp37kg_07c.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp406gs10e.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp406gs10e.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpogy8k97r.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpogy8k97r.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3t4c47zi.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp3t4c47zi.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphsyodc5d.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmphsyodc5d.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp81plsxpf.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp81plsxpf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptc3gro1l.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmptc3gro1l.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local n = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n \
    \     n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbq3650zo.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpbq3650zo.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i) ~= 'A' then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4rzfuhux.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp4rzfuhux.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi3esforx.lua:17:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpi3esforx.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\n-- count_upper('aBCdEf') returns 1\n-- count_upper('abcdefg')\
    \ returns 0\n-- count_upper('dBBE') returns 0\nlocal function count_upper(s)\n\
    \  local count = 0\n  for i = 1, #s do\n    if string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmpdjft8g.lua:19:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpmpdjft8g.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
